
LEDTileApplication.elf:     file format elf32-littlenios2
LEDTileApplication.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x020001b8

Program Header:
    LOAD off    0x00001000 vaddr 0x02000000 paddr 0x02000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x02000020 paddr 0x02000020 align 2**12
         filesz 0x00087244 memsz 0x00087244 flags r-x
    LOAD off    0x00088264 vaddr 0x02087264 paddr 0x02088f20 align 2**12
         filesz 0x00001cbc memsz 0x00001cbc flags rw-
    LOAD off    0x0008abdc vaddr 0x0208abdc paddr 0x0208abdc align 2**12
         filesz 0x00000000 memsz 0x00000410 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  02000000  02000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000198  02000020  02000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00013c90  020001b8  020001b8  000011b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0007341c  02013e48  02013e48  00014e48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001cbc  02087264  02088f20  00088264  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000410  0208abdc  0208abdc  0008abdc  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000023  00000000  00000000  00089f20  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00001150  00000000  00000000  00089f48  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00030b14  00000000  00000000  0008b098  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 0000c465  00000000  00000000  000bbbac  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   0000df46  00000000  00000000  000c8011  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  000020f0  00000000  00000000  000d5f58  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00003d00  00000000  00000000  000d8048  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    0001858f  00000000  00000000  000dbd48  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_alt_sim_info 00000010  00000000  00000000  000f42d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000dd0  00000000  00000000  000f42e8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .thread_model 00000003  00000000  00000000  000f91b8  2**0
                  CONTENTS, READONLY
 17 .cpu          00000003  00000000  00000000  000f91bb  2**0
                  CONTENTS, READONLY
 18 .qsys         00000001  00000000  00000000  000f91be  2**0
                  CONTENTS, READONLY
 19 .simulation_enabled 00000001  00000000  00000000  000f91bf  2**0
                  CONTENTS, READONLY
 20 .sysid_hash   00000004  00000000  00000000  000f91c0  2**0
                  CONTENTS, READONLY
 21 .sysid_base   00000004  00000000  00000000  000f91c4  2**0
                  CONTENTS, READONLY
 22 .sysid_time   00000004  00000000  00000000  000f91c8  2**0
                  CONTENTS, READONLY
 23 .stderr_dev   00000009  00000000  00000000  000f91cc  2**0
                  CONTENTS, READONLY
 24 .stdin_dev    00000009  00000000  00000000  000f91d5  2**0
                  CONTENTS, READONLY
 25 .stdout_dev   00000009  00000000  00000000  000f91de  2**0
                  CONTENTS, READONLY
 26 .sopc_system_name 00000004  00000000  00000000  000f91e7  2**0
                  CONTENTS, READONLY
 27 .quartus_project_dir 00000022  00000000  00000000  000f91eb  2**0
                  CONTENTS, READONLY
 28 .sopcinfo     000721c2  00000000  00000000  000f920d  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
02000000 l    d  .entry	00000000 .entry
02000020 l    d  .exceptions	00000000 .exceptions
020001b8 l    d  .text	00000000 .text
02013e48 l    d  .rodata	00000000 .rodata
02087264 l    d  .rwdata	00000000 .rwdata
0208abdc l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../LEDTileApplication_bsp//obj/HAL/src/crt0.o
020001f0 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
02000094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 hello_world.c
0208ac18 l     O .bss	00000004 i.2923
0208ac1c l     O .bss	00000018 alarm
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
02001e20 l     F .text	00000074 udivmodsi4
00000000 l    df *ABS*	00000000 lib2-divtable.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
020026fc l     F .text	00000008 __fp_lock
02002704 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
020873cc l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
02003744 l     F .text	00000034 __sprint_r
02086d86 l     O .rodata	00000010 blanks.3546
02086d96 l     O .rodata	00000010 zeroes.3547
00000000 l    df *ABS*	00000000 vfscanf.c
02086dae l     O .rodata	00000022 basefix.3458
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
02086ed1 l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
02006fe4 l     F .text	0000023c quorem
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
02087074 l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
020871bc l     O .rodata	0000000c p05.2466
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
0200b384 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strtod.c
02087be0 l     O .rwdata	00000014 fpi.2046
020871d8 l     O .rodata	00000028 tinytens
02087bf4 l     O .rwdata	00000014 fpinan.2082
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
0200de98 l     F .text	00000110 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
0200f8a0 l     F .text	00000354 _fpadd_parts
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_close.c
02010548 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
02010664 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
02010690 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
02010790 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
02010884 l     F .text	0000006c alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
02010970 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
02010b4c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
02088f08 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_write.c
02010f5c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0201109c l     F .text	00000038 alt_dev_reg
02087db0 l     O .rwdata	000000c8 epcs_flash_controller
02087e78 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_epcs_flash_controller.c
02011174 l     F .text	00000038 alt_flash_device_register
02011200 l     F .text	0000028c alt_epcs_flash_query
0201148c l     F .text	000000e8 alt_epcs_flash_memcmp
02011860 l     F .text	00000094 alt_epcs_test_address
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
02011d28 l     F .text	00000204 altera_avalon_jtag_uart_irq
02011f2c l     F .text	000000a4 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
02012564 l     F .text	00000074 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 epcs_commands.c
020126bc l     F .text	00000038 epcs_test_wip
020126f4 l     F .text	00000038 epcs_await_wip_released
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
02012ca0 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_flash_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
020131e4 l     F .text	000000e0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0201333c l     F .text	00000050 alt_get_errno
0201338c l     F .text	000000f0 alt_file_locked
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 altera_avalon_spi.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 
0200aba8 g     F .text	00000074 _mprec_log10
0206ab2c g     O .rodata	0000000c Edgar
020117d4 g     F .text	0000008c alt_epcs_flash_get_info
0200ac98 g     F .text	00000084 __any_on
0200ea3c g     F .text	00000064 _isatty_r
020870a4 g     O .rodata	00000028 __mprec_tinytens
02010a94 g     F .text	00000078 alt_main
020024a0 g     F .text	00000044 __ashldi3
02003410 g     F .text	00000084 _puts_r
0208ad5c g     O .bss	00000100 alt_irq
0200960c g     F .text	0000006c _lseek_r
02088f20 g       *ABS*	00000000 __flash_rwdata_start
02072b8c g     O .rodata	0000000c Coin
0200fca8 g     F .text	0000005c __eqdf2
0208afec g       *ABS*	00000000 __alt_heap_start
02000354 g     F .text	00000048 blank
020033d4 g     F .text	0000003c printf
02003654 g     F .text	0000005c __sseek
020027a0 g     F .text	0000010c __sinit
02009530 g     F .text	0000009c _setlocale_r
02002718 g     F .text	00000078 __sfmoreglue
0200dd48 g     F .text	0000001c ungetc
02010b2c g     F .text	00000020 __malloc_unlock
0200b824 g     F .text	00001548 _strtod_r
020140ec g     O .rodata	00000200 gamma46half
02009b40 g     F .text	0000018c memmove
02002790 g     F .text	00000010 _cleanup
02073b98 g     O .rodata	0000000c Bowser
02009ccc g     F .text	000000a8 _Balloc
0206db50 g     O .rodata	0000000c RedSlime
0200fd60 g     F .text	00000064 __gtdf2
00000000  w      *UND*	00000000 __errno
0201272c g     F .text	000000f8 epcs_sector_erase
02000000 g     F .entry	0000000c __reset
02000020 g       *ABS*	00000000 __flash_exceptions_start
0200de30 g     F .text	00000068 _fstat_r
0208abec g     O .bss	00000004 errno
02006d0c g     F .text	00000024 __svfscanf
020001f4 g     F .text	00000158 animation_callback
02000000 g       *ABS*	00000000 __alt_mem_sdram_controller
020101e0 g     F .text	0000002c __make_fp
0208abdc g     O .bss	00000004 currentAnimation
0208ac00 g     O .bss	00000004 alt_argv
02090ed8 g       *ABS*	00000000 _gp
02014af0 g     O .rodata	0000000c ie
02087c30 g     O .rwdata	00000180 alt_fd_list
02012968 g     F .text	00000068 epcs_write_status_register
020137fc g     F .text	00000090 alt_find_dev
02009a00 g     F .text	00000140 memcpy
0200e7b0 g     F .text	0000028c __hexnan
0200270c g     F .text	0000000c _cleanup_r
02001c88 g     F .text	000000d4 __floatsidf
02087264 g     O .rwdata	00000068 animations
020146ec g     O .rodata	00000200 cie1931
020132c4 g     F .text	00000078 alt_io_redirect
0200fe28 g     F .text	0000005c __ltdf2
02013e48 g       *ABS*	00000000 __DTOR_END__
02003494 g     F .text	00000014 puts
02009884 g     F .text	00000040 mbrtowc
0207dbf8 g     O .rodata	0000000c RedPotionZelda1
02011968 g     F .text	00000104 alt_epcs_flash_write_block
02006cc0 g     F .text	0000004c _vfscanf_r
0200ab04 g     F .text	000000a4 __ratio
0201212c g     F .text	00000218 altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
020033a8 g     F .text	0000002c _printf_r
02001f40 g     F .text	00000008 __udivsi3
020107e0 g     F .text	000000a4 isatty
020094f8 g     F .text	00000038 iswspace
020870f4 g     O .rodata	000000c8 __mprec_tens
02070b74 g     O .rodata	0000000c Link
020095cc g     F .text	0000000c __locale_charset
0200eaa0 g     F .text	00000084 __fixunsdfsi
0208abe8 g     O .bss	00000004 __malloc_top_pad
0200d704 g     F .text	00000024 strtoul
02088eec g     O .rwdata	00000004 __mb_cur_max
020095d8 g     F .text	0000000c _localeconv_r
0200d728 g     F .text	00000394 _strtoull_r
02071b80 g     O .rodata	0000000c MegaMan
0200a0fc g     F .text	0000003c __i2b
02009014 g     F .text	000004e4 __sfvwrite_r
020034a8 g     F .text	00000064 _sbrk_r
0207ec04 g     O .rodata	0000000c Rupee
0200ad1c g     F .text	0000006c _read_r
02087bd4 g     O .rwdata	0000000c __lc_ctype
02088f00 g     O .rwdata	00000004 alt_max_fd
02076bbc g     O .rodata	0000000c Goomba
02002358 g     F .text	00000104 __unpack_d
0200883c g     F .text	0000013c _fclose_r
02082c1c g     O .rodata	0000000c question
020026cc g     F .text	00000030 fflush
0208abe4 g     O .bss	00000004 __malloc_max_sbrked_mem
0200fbf4 g     F .text	00000054 __adddf3
0200f79c g     F .text	00000054 __nesf2
020118f4 g     F .text	00000074 alt_epcs_flash_erase_block
0200a878 g     F .text	00000148 __b2d
0207abe0 g     O .rodata	0000000c FF4Chest
0200f174 g     F .text	00000628 __umoddi3
020109c0 g     F .text	000000d4 lseek
02088ed8 g     O .rwdata	00000004 _global_impure_ptr
02012c2c g     F .text	00000058 epcs_exit_4_bytes_mode
0200ad88 g     F .text	000005fc _realloc_r
0208afec g       *ABS*	00000000 __bss_end
020130f4 g     F .text	000000f0 alt_iic_isr_register
0206cb44 g     O .rodata	0000000c BlueGhost
02010e58 g     F .text	00000104 alt_tick
020140e8 g     O .rodata	00000004 numBitmaps
0208ac5c g     O .bss	00000100 __hexdig
0200eb24 g     F .text	00000650 __udivdi3
020870cc g     O .rodata	00000028 __mprec_bigtens
02009ee0 g     F .text	00000104 __s2b
0200ff40 g     F .text	0000011c __floatunsidf
0200a618 g     F .text	00000058 __mcmp
020144ec g     O .rodata	00000200 gamma149half
02088ee8 g     O .rwdata	00000004 __ctype_ptr
020029b8 g     F .text	00000018 __fp_lock_all
020130a8 g     F .text	0000004c alt_ic_irq_enabled
0208ac14 g     O .bss	00000004 state
02010dc0 g     F .text	00000098 alt_alarm_stop
0200d10c g     F .text	00000024 strtol
02080c10 g     O .rodata	0000000c Cid_Walk_Front
0208ac10 g     O .bss	00000004 alt_irq_active
020000ec g     F .exceptions	000000cc alt_irq_handler
02087c08 g     O .rwdata	00000028 alt_dev_null
0201005c g     F .text	000000c8 __unpack_f
02050b08 g     O .rodata	0000000c mosaic
02012c84 g     F .text	0000001c alt_dcache_flush_all
02009fe4 g     F .text	00000068 __hi0bits
02001d5c g     F .text	000000c4 __fixdfsi
0207cbec g     O .rodata	0000000c BombZelda1
0200cd6c g     F .text	0000001c strtod
02088f20 g       *ABS*	00000000 __ram_rwdata_end
02088ef8 g     O .rwdata	00000008 alt_dev_list
02068b14 g     O .rodata	0000000c ns6icon
02010fac g     F .text	000000f0 write
0200f7f0 g     F .text	0000005c __gtsf2
02087264 g       *ABS*	00000000 __ram_rodata_end
020106e0 g     F .text	000000b0 fstat
02001120 g     F .text	00000334 displayGamma46ColourBars
0200245c g     F .text	00000044 __lshrdi3
0200fe84 g     F .text	0000005c __ledf2
0200a390 g     F .text	0000012c __pow5mult
0208abf8 g     O .bss	00000004 __nlocale_changed
02001f48 g     F .text	00000008 __umodsi3
0200354c g     F .text	0000002c _scanf_r
02012aec g     F .text	00000068 epcs_read_electronic_signature
02075bb0 g     O .rodata	0000000c CheepCheep
0208afec g       *ABS*	00000000 end
020102dc g     F .text	0000012c __pack_f
02011c68 g     F .text	000000c0 altera_avalon_jtag_uart_init
0206fb68 g     O .rodata	0000000c Kain
02013e48 g       *ABS*	00000000 __CTOR_LIST__
04000000 g       *ABS*	00000000 __alt_stack_pointer
020125d8 g     F .text	00000088 alt_avalon_timer_sc_init
02002088 g     F .text	000000ac __clzsi2
02012344 g     F .text	00000220 altera_avalon_jtag_uart_write
020029a8 g     F .text	00000004 __sfp_lock_acquire
02009908 g     F .text	000000f8 memchr
02003778 g     F .text	00001e7c ___vfprintf_internal_r
0200b6bc g     F .text	00000058 _sprintf_r
02008d44 g     F .text	000002d0 _free_r
02013c6c g     F .text	000001a0 __call_exitprocs
0208abf4 g     O .bss	00000004 __mlocale_changed
02088ee0 g     O .rwdata	00000004 __malloc_sbrk_base
020001b8 g     F .text	0000003c _start
0208ac08 g     O .bss	00000004 _alt_tick_rate
0200d130 g     F .text	00000330 _strtoll_r
0200a4bc g     F .text	0000015c __lshift
020135f4 g     F .text	00000208 alt_avalon_spi_command
0208ac0c g     O .bss	00000004 _alt_nticks
02010b9c g     F .text	000000f4 read
02011108 g     F .text	0000006c alt_sys_init
02013b3c g     F .text	00000130 __register_exitproc
0200a138 g     F .text	00000258 __multiply
02011fd0 g     F .text	00000068 altera_avalon_jtag_uart_close
02001f50 g     F .text	00000028 __mulsi3
02087264 g       *ABS*	00000000 __ram_rwdata_start
02013e48 g       *ABS*	00000000 __ram_rodata_start
0208ac34 g     O .bss	00000028 __malloc_current_mallinfo
0200a9c0 g     F .text	00000144 __d2b
02000ab8 g     F .text	00000334 displayGamma149ColourBars
02012660 g     F .text	0000005c epcs_read_status_register
02011b04 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0200d460 g     F .text	000002a4 _strtoul_r
020139a0 g     F .text	000000d4 alt_get_fd
0201020c g     F .text	000000d0 __fpcmp_parts_d
02006f80 g     F .text	00000064 _close_r
02012b54 g     F .text	00000080 epcs_read_device_id
02013ac0 g     F .text	0000007c memcmp
02011bc4 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0208afec g       *ABS*	00000000 __alt_stack_base
02011c14 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0206bb38 g     O .rodata	0000000c CecilHead
02006e0c g     F .text	00000174 __swsetup_r
02001ad4 g     F .text	000001b4 __divdf3
020028ac g     F .text	000000fc __sfp
0200ac1c g     F .text	0000007c __copybits
020877cc g     O .rwdata	00000408 __malloc_av_
020029b4 g     F .text	00000004 __sinit_lock_release
020017f0 g     F .text	000002e4 __muldf3
04009000 g       *ABS*	00000000 __alt_mem_epcs_flash_controller
02003578 g     F .text	00000054 __sread
02008bc8 g     F .text	00000040 fread
0201388c g     F .text	00000114 alt_find_file
02012cf0 g     F .text	000000a0 alt_dev_llist_insert
02010b0c g     F .text	00000020 __malloc_lock
02010d10 g     F .text	000000b0 sbrk
0200039c g     F .text	000000b4 displayBitmap
020024e4 g     F .text	000001e8 _fflush_r
0200dd64 g     F .text	000000cc _calloc_r
02088f14 g     O .rwdata	00000008 alt_flash_dev_list
02000dec g     F .text	00000334 displayGamma98ColourBars
02074ba4 g     O .rodata	0000000c KoopaTroopa
0206eb5c g     O .rodata	0000000c BlueVirus
020872cc g     O .rwdata	00000100 __divsi3_table
0208abdc g       *ABS*	00000000 __bss_start
02000450 g     F .text	00000334 displayColourBars
020032cc g     F .text	000000dc memset
02001590 g     F .text	00000260 main
0208ac04 g     O .bss	00000004 alt_envp
0208abe0 g     O .bss	00000004 __malloc_max_total_mem
02079bd4 g     O .rodata	0000000c Mushroom
02011b64 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0200f84c g     F .text	00000054 __ltsf2
0200898c g     F .text	0000023c _fread_r
020036b0 g     F .text	00000008 __sclose
04000000 g       *ABS*	00000000 __alt_heap_limit
02008978 g     F .text	00000014 fclose
0200cea8 g     F .text	00000264 _strtol_r
0200fee0 g     F .text	00000060 __truncdfsf2
02077bc8 g     O .rodata	0000000c Kain_Walk_Left
0208ae5c g     O .bss	00000190 _atexit0
02007220 g     F .text	0000161c _dtoa_r
02002b48 g     F .text	00000784 _malloc_r
02088f04 g     O .rwdata	00000004 alt_errno
0200dabc g     F .text	000000f0 __submore
020029e8 g     F .text	000000a8 _fwalk
020098c4 g     F .text	00000044 _mbtowc_r
02001e94 g     F .text	00000050 __divsi3
02086c28 g     O .rodata	00000014 __thenan_df
02008c08 g     F .text	0000013c _malloc_trim_r
02013e48 g       *ABS*	00000000 __CTOR_END__
02011574 g     F .text	00000260 alt_epcs_flash_write
0200b780 g     F .text	000000a4 strcmp
02013e48 g       *ABS*	00000000 __flash_rodata_start
02013e48 g       *ABS*	00000000 __DTOR_LIST__
020014dc g     F .text	000000b4 animationsMenu
0200034c g     F .text	00000004 delay
0200fd04 g     F .text	0000005c __nedf2
020110d4 g     F .text	00000034 alt_irq_init
02010c90 g     F .text	00000080 alt_release_fd
0200b714 g     F .text	0000006c sprintf
02086c3c g     O .rodata	00000100 __clz_tab
0208abf0 g     O .bss	00000004 _PathLocale
0200cd88 g     F .text	00000120 strtof
02013a74 g     F .text	00000014 atexit
02006da0 g     F .text	0000006c _write_r
020095e4 g     F .text	0000001c setlocale
0200350c g     F .text	00000040 scanf
0200b6b4 g     F .text	00000008 nanf
02088edc g     O .rwdata	00000004 _impure_ptr
0208abfc g     O .bss	00000004 alt_argc
02028afc g     O .rodata	0000000c Netscapethrobber
02009820 g     F .text	00000064 _mbrtowc_r
02012dec g     F .text	0000005c _do_dtors
0200b3a0 g     F .text	000001ec __srefill_r
02000020 g       .exceptions	00000000 alt_irq_entry
0200a818 g     F .text	00000060 __ulp
0200b58c g     F .text	00000038 __isinfd
020029d0 g     F .text	00000018 __fp_unlock_all
02088ef0 g     O .rwdata	00000008 alt_fs_list
02000020 g       *ABS*	00000000 __ram_exceptions_start
02009600 g     F .text	0000000c localeconv
02012824 g     F .text	000000f4 epcs_read_buffer
04000000 g       *ABS*	00000000 __alt_mem_onchip_memory2
020111ac g     F .text	00000054 alt_epcs_flash_init
02012f1c g     F .text	00000050 alt_ic_isr_register
02001454 g     F .text	00000088 printMenu
0200dfa8 g     F .text	00000090 __hexdig_init
02088f20 g       *ABS*	00000000 _edata
0208afec g       *ABS*	00000000 _end
02012e48 g     F .text	00000068 alt_flash_open_dev
020001b8 g       *ABS*	00000000 __ram_exceptions_end
02006d30 g     F .text	00000070 vfscanf
02012038 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
02013008 g     F .text	000000a0 alt_ic_irq_disable
02012bd4 g     F .text	00000058 epcs_enter_4_bytes_mode
020035cc g     F .text	00000088 __swrite
02088ee4 g     O .rwdata	00000004 __malloc_trim_threshold
020135d4 g     F .text	00000020 altera_nios2_qsys_irq_init
02013a88 g     F .text	00000038 exit
02002a90 g     F .text	000000b8 _fwalk_reent
0200a670 g     F .text	000001a8 __mdiff
02012eb0 g     F .text	00000050 alt_flash_close_dev
02001ee4 g     F .text	0000005c __modsi3
04000000 g       *ABS*	00000000 __alt_data_end
02000020 g     F .exceptions	00000000 alt_exception
020029ac g     F .text	00000004 __sfp_lock_release
0200b5f0 g     F .text	000000c4 __sccl
02086dd0 g     O .rodata	00000101 _ctype_
02010124 g     F .text	000000bc __fpcmp_parts_f
02013e0c g     F .text	0000003c _exit
0200b5c4 g     F .text	0000002c __isnand
02010408 g     F .text	00000140 alt_alarm_start
02014aec g     O .rodata	00000004 numAnimations
02001f78 g     F .text	00000110 __muldi3
02009678 g     F .text	000001a8 __smakebuf_r
020036b8 g     F .text	0000008c strlen
02012918 g     F .text	00000050 epcs_write_enable
0201347c g     F .text	00000158 open
02069b20 g     O .rodata	0000000c MacTCP
0200fdc4 g     F .text	00000064 __gedf2
0200e038 g     F .text	00000778 __gethex
02000784 g     F .text	00000334 displayCIEColourBars
02012f00 g     F .text	0000001c alt_icache_flush_all
02088f1c g     O .rwdata	00000004 alt_priority_mask
02012f6c g     F .text	0000009c alt_ic_irq_enable
020055f4 g     F .text	00000024 __vfprintf_internal
0200fc48 g     F .text	00000060 __subdf3
020142ec g     O .rodata	00000200 gamma98half
02011a6c g     F .text	00000098 alt_epcs_flash_read
0200a04c g     F .text	000000b0 __lo0bits
02005618 g     F .text	000016a8 __svfscanf_r
02088f0c g     O .rwdata	00000008 alt_alarm_list
0200dbac g     F .text	0000019c _ungetc_r
02012d90 g     F .text	0000005c _do_ctors
020148ec g     O .rodata	00000200 linearRGB
02010598 g     F .text	000000cc close
02000350 g     F .text	00000004 longDelay
020108f0 g     F .text	00000080 alt_load
02002134 g     F .text	00000224 __pack_d
00000000  w      *UND*	00000000 free
020029b0 g     F .text	00000004 __sinit_lock_acquire
020129d0 g     F .text	0000011c epcs_write_buffer
02009d9c g     F .text	00000144 __multadd
02009d74 g     F .text	00000028 _Bfree



Disassembly of section .entry:

02000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 2000000:	00408034 	movhi	at,512
    ori r1, r1, %lo(_start)
 2000004:	08406e14 	ori	at,at,440
    jmp r1
 2000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

02000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 2000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 2000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 2000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 200002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 2000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 2000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 2000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 200003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 2000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 2000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 2000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 200004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 2000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 2000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 2000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 200005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 2000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 2000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 2000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 200006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 2000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 2000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 2000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 200007c:	10000326 	beq	r2,zero,200008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 2000080:	20000226 	beq	r4,zero,200008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 2000084:	20000ec0 	call	20000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 2000088:	00000306 	br	2000098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
 200008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
 2000090:	e8bfff17 	ldw	r2,-4(ea)

02000094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
 2000094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 2000098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 200009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 20000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 20000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 20000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 20000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 20000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 20000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 20000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 20000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 20000c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 20000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 20000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 20000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 20000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 20000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 20000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 20000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 20000e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 20000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 20000e8:	ef80083a 	eret

020000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 20000ec:	defff904 	addi	sp,sp,-28
 20000f0:	dfc00615 	stw	ra,24(sp)
 20000f4:	df000515 	stw	fp,20(sp)
 20000f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 20000fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 2000100:	0005313a 	rdctl	r2,ipending
 2000104:	e0bffe15 	stw	r2,-8(fp)

  return active;
 2000108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 200010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 2000110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 2000114:	00800044 	movi	r2,1
 2000118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 200011c:	e0fffb17 	ldw	r3,-20(fp)
 2000120:	e0bffc17 	ldw	r2,-16(fp)
 2000124:	1884703a 	and	r2,r3,r2
 2000128:	10001726 	beq	r2,zero,2000188 <alt_irq_handler+0x9c>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 200012c:	00c08274 	movhi	r3,521
 2000130:	18eb5704 	addi	r3,r3,-21156
 2000134:	e0bffd17 	ldw	r2,-12(fp)
 2000138:	100490fa 	slli	r2,r2,3
 200013c:	1885883a 	add	r2,r3,r2
 2000140:	10c00017 	ldw	r3,0(r2)
 2000144:	01008274 	movhi	r4,521
 2000148:	212b5704 	addi	r4,r4,-21156
 200014c:	e0bffd17 	ldw	r2,-12(fp)
 2000150:	100490fa 	slli	r2,r2,3
 2000154:	2085883a 	add	r2,r4,r2
 2000158:	10800104 	addi	r2,r2,4
 200015c:	10800017 	ldw	r2,0(r2)
 2000160:	1009883a 	mov	r4,r2
 2000164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 2000168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 200016c:	0005313a 	rdctl	r2,ipending
 2000170:	e0bfff15 	stw	r2,-4(fp)

  return active;
 2000174:	e0bfff17 	ldw	r2,-4(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
 2000178:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 200017c:	e0bffb17 	ldw	r2,-20(fp)
 2000180:	103fe31e 	bne	r2,zero,2000110 <__alt_mem_epcs_flash_controller+0xfdff7110>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 2000184:	00000706 	br	20001a4 <alt_irq_handler+0xb8>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
 2000188:	e0bffc17 	ldw	r2,-16(fp)
 200018c:	1085883a 	add	r2,r2,r2
 2000190:	e0bffc15 	stw	r2,-16(fp)
      i++;
 2000194:	e0bffd17 	ldw	r2,-12(fp)
 2000198:	10800044 	addi	r2,r2,1
 200019c:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 20001a0:	003fde06 	br	200011c <__alt_mem_epcs_flash_controller+0xfdff711c>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
 20001a4:	e037883a 	mov	sp,fp
 20001a8:	dfc00117 	ldw	ra,4(sp)
 20001ac:	df000017 	ldw	fp,0(sp)
 20001b0:	dec00204 	addi	sp,sp,8
 20001b4:	f800283a 	ret

Disassembly of section .text:

020001b8 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 20001b8:	06c10034 	movhi	sp,1024
    ori sp, sp, %lo(__alt_stack_pointer)
 20001bc:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 20001c0:	06808274 	movhi	gp,521
    ori gp, gp, %lo(_gp)
 20001c4:	d683b614 	ori	gp,gp,3800
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 20001c8:	00808234 	movhi	r2,520
    ori r2, r2, %lo(__bss_start)
 20001cc:	10aaf714 	ori	r2,r2,43996

    movhi r3, %hi(__bss_end)
 20001d0:	00c08234 	movhi	r3,520
    ori r3, r3, %lo(__bss_end)
 20001d4:	18ebfb14 	ori	r3,r3,45036

    beq r2, r3, 1f
 20001d8:	10c00326 	beq	r2,r3,20001e8 <_start+0x30>

0:
    stw zero, (r2)
 20001dc:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 20001e0:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 20001e4:	10fffd36 	bltu	r2,r3,20001dc <__alt_mem_epcs_flash_controller+0xfdff71dc>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 20001e8:	20108f00 	call	20108f0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 20001ec:	2010a940 	call	2010a94 <alt_main>

020001f0 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 20001f0:	003fff06 	br	20001f0 <__alt_mem_epcs_flash_controller+0xfdff71f0>

020001f4 <animation_callback>:
 20001f4:	00808274 	movhi	r2,521
 20001f8:	10ab0504 	addi	r2,r2,-21484
 20001fc:	10800017 	ldw	r2,0(r2)
 2000200:	defffd04 	addi	sp,sp,-12
 2000204:	dc400115 	stw	r17,4(sp)
 2000208:	dc000015 	stw	r16,0(sp)
 200020c:	03c08274 	movhi	r15,521
 2000210:	7beb0604 	addi	r15,r15,-21480
 2000214:	00c08274 	movhi	r3,521
 2000218:	18eaf704 	addi	r3,r3,-21540
 200021c:	dfc00215 	stw	ra,8(sp)
 2000220:	1c000017 	ldw	r16,0(r3)
 2000224:	7c400017 	ldw	r17,0(r15)
 2000228:	10002d1e 	bne	r2,zero,20002e0 <animation_callback+0xec>
 200022c:	881c933a 	slli	r14,r17,12
 2000230:	01010004 	movi	r4,1024
 2000234:	00c08074 	movhi	r3,513
 2000238:	18d03b04 	addi	r3,r3,16620
 200023c:	73800304 	addi	r14,r14,12
 2000240:	839d883a 	add	r14,r16,r14
 2000244:	03400434 	movhi	r13,16
 2000248:	6b7f0004 	addi	r13,r13,-1024
 200024c:	03010074 	movhi	r12,1025
 2000250:	63281804 	addi	r12,r12,-24480
 2000254:	02c10074 	movhi	r11,1025
 2000258:	5ae81404 	addi	r11,r11,-24496
 200025c:	02800044 	movi	r10,1
 2000260:	01c10074 	movhi	r7,1025
 2000264:	39e81004 	addi	r7,r7,-24512
 2000268:	02440004 	movi	r9,4096
 200026c:	708b883a 	add	r5,r14,r2
 2000270:	29800017 	ldw	r6,0(r5)
 2000274:	29400083 	ldbu	r5,2(r5)
 2000278:	3022d1fa 	srli	r17,r6,7
 200027c:	31803fcc 	andi	r6,r6,255
 2000280:	318d883a 	add	r6,r6,r6
 2000284:	1991883a 	add	r8,r3,r6
 2000288:	89807f8c 	andi	r6,r17,510
 200028c:	198d883a 	add	r6,r3,r6
 2000290:	4440000b 	ldhu	r17,0(r8)
 2000294:	3180000b 	ldhu	r6,0(r6)
 2000298:	294b883a 	add	r5,r5,r5
 200029c:	194b883a 	add	r5,r3,r5
 20002a0:	2a00000b 	ldhu	r8,0(r5)
 20002a4:	880a953a 	slli	r5,r17,20
 20002a8:	300c92ba 	slli	r6,r6,10
 20002ac:	4200ffcc 	andi	r8,r8,1023
 20002b0:	294ffc2c 	andhi	r5,r5,16368
 20002b4:	414ab03a 	or	r5,r8,r5
 20002b8:	334c703a 	and	r6,r6,r13
 20002bc:	298ab03a 	or	r5,r5,r6
 20002c0:	61000035 	stwio	r4,0(r12)
 20002c4:	59400035 	stwio	r5,0(r11)
 20002c8:	3a800035 	stwio	r10,0(r7)
 20002cc:	38000035 	stwio	zero,0(r7)
 20002d0:	10800104 	addi	r2,r2,4
 20002d4:	21000044 	addi	r4,r4,1
 20002d8:	127fe41e 	bne	r2,r9,200026c <__alt_mem_epcs_flash_controller+0xfdff726c>
 20002dc:	7c400017 	ldw	r17,0(r15)
 20002e0:	81400217 	ldw	r5,8(r16)
 20002e4:	8c400044 	addi	r17,r17,1
 20002e8:	00c003c4 	movi	r3,15
 20002ec:	8944b03a 	or	r2,r17,r5
 20002f0:	18801236 	bltu	r3,r2,200033c <animation_callback+0x148>
 20002f4:	8804913a 	slli	r2,r17,4
 20002f8:	114ab03a 	or	r5,r2,r5
 20002fc:	00808234 	movhi	r2,520
 2000300:	109cb304 	addi	r2,r2,29388
 2000304:	2885883a 	add	r2,r5,r2
 2000308:	11000003 	ldbu	r4,0(r2)
 200030c:	81400217 	ldw	r5,8(r16)
 2000310:	2001f500 	call	2001f50 <__mulsi3>
 2000314:	8885c83a 	sub	r2,r17,r2
 2000318:	00c08274 	movhi	r3,521
 200031c:	18eb0604 	addi	r3,r3,-21480
 2000320:	18800015 	stw	r2,0(r3)
 2000324:	80800117 	ldw	r2,4(r16)
 2000328:	dfc00217 	ldw	ra,8(sp)
 200032c:	dc400117 	ldw	r17,4(sp)
 2000330:	dc000017 	ldw	r16,0(sp)
 2000334:	dec00304 	addi	sp,sp,12
 2000338:	f800283a 	ret
 200033c:	8809883a 	mov	r4,r17
 2000340:	2001e940 	call	2001e94 <__divsi3>
 2000344:	1009883a 	mov	r4,r2
 2000348:	003ff006 	br	200030c <__alt_mem_epcs_flash_controller+0xfdff730c>

0200034c <delay>:
 200034c:	f800283a 	ret

02000350 <longDelay>:
 2000350:	f800283a 	ret

02000354 <blank>:
 2000354:	00810004 	movi	r2,1024
 2000358:	01c10074 	movhi	r7,1025
 200035c:	39e81804 	addi	r7,r7,-24480
 2000360:	01810074 	movhi	r6,1025
 2000364:	31a81404 	addi	r6,r6,-24496
 2000368:	01400044 	movi	r5,1
 200036c:	00c10074 	movhi	r3,1025
 2000370:	18e81004 	addi	r3,r3,-24512
 2000374:	02020004 	movi	r8,2048
 2000378:	11000804 	addi	r4,r2,32
 200037c:	38800035 	stwio	r2,0(r7)
 2000380:	30000035 	stwio	zero,0(r6)
 2000384:	19400035 	stwio	r5,0(r3)
 2000388:	18000035 	stwio	zero,0(r3)
 200038c:	10800044 	addi	r2,r2,1
 2000390:	113ffa1e 	bne	r2,r4,200037c <__alt_mem_epcs_flash_controller+0xfdff737c>
 2000394:	123ff81e 	bne	r2,r8,2000378 <__alt_mem_epcs_flash_controller+0xfdff7378>
 2000398:	f800283a 	ret

0200039c <displayBitmap>:
 200039c:	00808274 	movhi	r2,521
 20003a0:	10ab0504 	addi	r2,r2,-21484
 20003a4:	10800017 	ldw	r2,0(r2)
 20003a8:	1000281e 	bne	r2,zero,200044c <displayBitmap+0xb0>
 20003ac:	00810004 	movi	r2,1024
 20003b0:	00c08074 	movhi	r3,513
 20003b4:	18d03b04 	addi	r3,r3,16620
 20003b8:	03800434 	movhi	r14,16
 20003bc:	73bf0004 	addi	r14,r14,-1024
 20003c0:	03410074 	movhi	r13,1025
 20003c4:	6b681804 	addi	r13,r13,-24480
 20003c8:	03010074 	movhi	r12,1025
 20003cc:	63281404 	addi	r12,r12,-24496
 20003d0:	02c00044 	movi	r11,1
 20003d4:	01c10074 	movhi	r7,1025
 20003d8:	39e81004 	addi	r7,r7,-24512
 20003dc:	02820004 	movi	r10,2048
 20003e0:	21800017 	ldw	r6,0(r4)
 20003e4:	21400083 	ldbu	r5,2(r4)
 20003e8:	3012d1fa 	srli	r9,r6,7
 20003ec:	31803fcc 	andi	r6,r6,255
 20003f0:	318d883a 	add	r6,r6,r6
 20003f4:	1991883a 	add	r8,r3,r6
 20003f8:	49807f8c 	andi	r6,r9,510
 20003fc:	198d883a 	add	r6,r3,r6
 2000400:	4240000b 	ldhu	r9,0(r8)
 2000404:	3180000b 	ldhu	r6,0(r6)
 2000408:	294b883a 	add	r5,r5,r5
 200040c:	194b883a 	add	r5,r3,r5
 2000410:	2a00000b 	ldhu	r8,0(r5)
 2000414:	480a953a 	slli	r5,r9,20
 2000418:	300c92ba 	slli	r6,r6,10
 200041c:	4200ffcc 	andi	r8,r8,1023
 2000420:	294ffc2c 	andhi	r5,r5,16368
 2000424:	414ab03a 	or	r5,r8,r5
 2000428:	338c703a 	and	r6,r6,r14
 200042c:	298ab03a 	or	r5,r5,r6
 2000430:	68800035 	stwio	r2,0(r13)
 2000434:	61400035 	stwio	r5,0(r12)
 2000438:	3ac00035 	stwio	r11,0(r7)
 200043c:	38000035 	stwio	zero,0(r7)
 2000440:	10800044 	addi	r2,r2,1
 2000444:	21000104 	addi	r4,r4,4
 2000448:	12bfe51e 	bne	r2,r10,20003e0 <__alt_mem_epcs_flash_controller+0xfdff73e0>
 200044c:	f800283a 	ret

02000450 <displayColourBars>:
 2000450:	defff404 	addi	sp,sp,-48
 2000454:	df000a15 	stw	fp,40(sp)
 2000458:	dd800815 	stw	r22,32(sp)
 200045c:	dd400715 	stw	r21,28(sp)
 2000460:	dd000615 	stw	r20,24(sp)
 2000464:	dcc00515 	stw	r19,20(sp)
 2000468:	dc800415 	stw	r18,16(sp)
 200046c:	dc000215 	stw	r16,8(sp)
 2000470:	dfc00b15 	stw	ra,44(sp)
 2000474:	ddc00915 	stw	r23,36(sp)
 2000478:	dc400315 	stw	r17,12(sp)
 200047c:	d8000115 	stw	zero,4(sp)
 2000480:	d8000015 	stw	zero,0(sp)
 2000484:	05408074 	movhi	r21,513
 2000488:	ad523b04 	addi	r21,r21,18668
 200048c:	05010074 	movhi	r20,1025
 2000490:	a5281804 	addi	r20,r20,-24480
 2000494:	05800434 	movhi	r22,16
 2000498:	b5bf0004 	addi	r22,r22,-1024
 200049c:	04c10074 	movhi	r19,1025
 20004a0:	9ce81404 	addi	r19,r19,-24496
 20004a4:	04800044 	movi	r18,1
 20004a8:	07010074 	movhi	fp,1025
 20004ac:	e7281004 	addi	fp,fp,-24512
 20004b0:	04000804 	movi	r16,32
 20004b4:	d8800017 	ldw	r2,0(sp)
 20004b8:	00c001c4 	movi	r3,7
 20004bc:	18803e0e 	bge	r3,r2,20005b8 <displayColourBars+0x168>
 20004c0:	10bffe04 	addi	r2,r2,-8
 20004c4:	1880632e 	bgeu	r3,r2,2000654 <displayColourBars+0x204>
 20004c8:	d8c00017 	ldw	r3,0(sp)
 20004cc:	002f883a 	mov	r23,zero
 20004d0:	18bffc04 	addi	r2,r3,-16
 20004d4:	00c001c4 	movi	r3,7
 20004d8:	1880852e 	bgeu	r3,r2,20006f0 <displayColourBars+0x2a0>
 20004dc:	d8800117 	ldw	r2,4(sp)
 20004e0:	14410004 	addi	r17,r2,1024
 20004e4:	b809883a 	mov	r4,r23
 20004e8:	2001c880 	call	2001c88 <__floatsidf>
 20004ec:	1009883a 	mov	r4,r2
 20004f0:	180b883a 	mov	r5,r3
 20004f4:	000d883a 	mov	r6,zero
 20004f8:	01d00ff4 	movhi	r7,16447
 20004fc:	2001ad40 	call	2001ad4 <__divdf3>
 2000500:	000d883a 	mov	r6,zero
 2000504:	01d01c34 	movhi	r7,16496
 2000508:	39f80004 	addi	r7,r7,-8192
 200050c:	1009883a 	mov	r4,r2
 2000510:	180b883a 	mov	r5,r3
 2000514:	20017f00 	call	20017f0 <__muldf3>
 2000518:	180b883a 	mov	r5,r3
 200051c:	1009883a 	mov	r4,r2
 2000520:	2001d5c0 	call	2001d5c <__fixdfsi>
 2000524:	1085883a 	add	r2,r2,r2
 2000528:	a885883a 	add	r2,r21,r2
 200052c:	1080000b 	ldhu	r2,0(r2)
 2000530:	8dcb883a 	add	r5,r17,r23
 2000534:	10ffffcc 	andi	r3,r2,65535
 2000538:	1808953a 	slli	r4,r3,20
 200053c:	180692ba 	slli	r3,r3,10
 2000540:	210ffc2c 	andhi	r4,r4,16368
 2000544:	1d86703a 	and	r3,r3,r22
 2000548:	a1400035 	stwio	r5,0(r20)
 200054c:	20c6b03a 	or	r3,r4,r3
 2000550:	1080ffcc 	andi	r2,r2,1023
 2000554:	1884b03a 	or	r2,r3,r2
 2000558:	98800035 	stwio	r2,0(r19)
 200055c:	e4800035 	stwio	r18,0(fp)
 2000560:	e0000035 	stwio	zero,0(fp)
 2000564:	bdc00044 	addi	r23,r23,1
 2000568:	bc3fde1e 	bne	r23,r16,20004e4 <__alt_mem_epcs_flash_controller+0xfdff74e4>
 200056c:	d8c00017 	ldw	r3,0(sp)
 2000570:	d8800117 	ldw	r2,4(sp)
 2000574:	18c00044 	addi	r3,r3,1
 2000578:	10800804 	addi	r2,r2,32
 200057c:	d8c00015 	stw	r3,0(sp)
 2000580:	d8800115 	stw	r2,4(sp)
 2000584:	1c3fcb1e 	bne	r3,r16,20004b4 <__alt_mem_epcs_flash_controller+0xfdff74b4>
 2000588:	dfc00b17 	ldw	ra,44(sp)
 200058c:	df000a17 	ldw	fp,40(sp)
 2000590:	ddc00917 	ldw	r23,36(sp)
 2000594:	dd800817 	ldw	r22,32(sp)
 2000598:	dd400717 	ldw	r21,28(sp)
 200059c:	dd000617 	ldw	r20,24(sp)
 20005a0:	dcc00517 	ldw	r19,20(sp)
 20005a4:	dc800417 	ldw	r18,16(sp)
 20005a8:	dc400317 	ldw	r17,12(sp)
 20005ac:	dc000217 	ldw	r16,8(sp)
 20005b0:	dec00c04 	addi	sp,sp,48
 20005b4:	f800283a 	ret
 20005b8:	d8800117 	ldw	r2,4(sp)
 20005bc:	002f883a 	mov	r23,zero
 20005c0:	14410004 	addi	r17,r2,1024
 20005c4:	b809883a 	mov	r4,r23
 20005c8:	2001c880 	call	2001c88 <__floatsidf>
 20005cc:	1009883a 	mov	r4,r2
 20005d0:	180b883a 	mov	r5,r3
 20005d4:	000d883a 	mov	r6,zero
 20005d8:	01d00ff4 	movhi	r7,16447
 20005dc:	2001ad40 	call	2001ad4 <__divdf3>
 20005e0:	000d883a 	mov	r6,zero
 20005e4:	01d01c34 	movhi	r7,16496
 20005e8:	39f80004 	addi	r7,r7,-8192
 20005ec:	1009883a 	mov	r4,r2
 20005f0:	180b883a 	mov	r5,r3
 20005f4:	20017f00 	call	20017f0 <__muldf3>
 20005f8:	180b883a 	mov	r5,r3
 20005fc:	1009883a 	mov	r4,r2
 2000600:	2001d5c0 	call	2001d5c <__fixdfsi>
 2000604:	1085883a 	add	r2,r2,r2
 2000608:	a885883a 	add	r2,r21,r2
 200060c:	1080000b 	ldhu	r2,0(r2)
 2000610:	8dc7883a 	add	r3,r17,r23
 2000614:	1004953a 	slli	r2,r2,20
 2000618:	a0c00035 	stwio	r3,0(r20)
 200061c:	108ffc2c 	andhi	r2,r2,16368
 2000620:	98800035 	stwio	r2,0(r19)
 2000624:	e4800035 	stwio	r18,0(fp)
 2000628:	e0000035 	stwio	zero,0(fp)
 200062c:	bdc00044 	addi	r23,r23,1
 2000630:	bc3fe41e 	bne	r23,r16,20005c4 <__alt_mem_epcs_flash_controller+0xfdff75c4>
 2000634:	d8c00017 	ldw	r3,0(sp)
 2000638:	d8800117 	ldw	r2,4(sp)
 200063c:	18c00044 	addi	r3,r3,1
 2000640:	10800804 	addi	r2,r2,32
 2000644:	d8c00015 	stw	r3,0(sp)
 2000648:	d8800115 	stw	r2,4(sp)
 200064c:	1c3f991e 	bne	r3,r16,20004b4 <__alt_mem_epcs_flash_controller+0xfdff74b4>
 2000650:	003fcd06 	br	2000588 <__alt_mem_epcs_flash_controller+0xfdff7588>
 2000654:	d8800117 	ldw	r2,4(sp)
 2000658:	002f883a 	mov	r23,zero
 200065c:	14410004 	addi	r17,r2,1024
 2000660:	b809883a 	mov	r4,r23
 2000664:	2001c880 	call	2001c88 <__floatsidf>
 2000668:	1009883a 	mov	r4,r2
 200066c:	180b883a 	mov	r5,r3
 2000670:	000d883a 	mov	r6,zero
 2000674:	01d00ff4 	movhi	r7,16447
 2000678:	2001ad40 	call	2001ad4 <__divdf3>
 200067c:	000d883a 	mov	r6,zero
 2000680:	01d01c34 	movhi	r7,16496
 2000684:	39f80004 	addi	r7,r7,-8192
 2000688:	1009883a 	mov	r4,r2
 200068c:	180b883a 	mov	r5,r3
 2000690:	20017f00 	call	20017f0 <__muldf3>
 2000694:	180b883a 	mov	r5,r3
 2000698:	1009883a 	mov	r4,r2
 200069c:	2001d5c0 	call	2001d5c <__fixdfsi>
 20006a0:	1085883a 	add	r2,r2,r2
 20006a4:	a885883a 	add	r2,r21,r2
 20006a8:	1080000b 	ldhu	r2,0(r2)
 20006ac:	8dc7883a 	add	r3,r17,r23
 20006b0:	100492ba 	slli	r2,r2,10
 20006b4:	a0c00035 	stwio	r3,0(r20)
 20006b8:	1584703a 	and	r2,r2,r22
 20006bc:	98800035 	stwio	r2,0(r19)
 20006c0:	e4800035 	stwio	r18,0(fp)
 20006c4:	e0000035 	stwio	zero,0(fp)
 20006c8:	bdc00044 	addi	r23,r23,1
 20006cc:	bc3fe41e 	bne	r23,r16,2000660 <__alt_mem_epcs_flash_controller+0xfdff7660>
 20006d0:	d8c00017 	ldw	r3,0(sp)
 20006d4:	d8800117 	ldw	r2,4(sp)
 20006d8:	18c00044 	addi	r3,r3,1
 20006dc:	10800804 	addi	r2,r2,32
 20006e0:	d8c00015 	stw	r3,0(sp)
 20006e4:	d8800115 	stw	r2,4(sp)
 20006e8:	1c3f721e 	bne	r3,r16,20004b4 <__alt_mem_epcs_flash_controller+0xfdff74b4>
 20006ec:	003fa606 	br	2000588 <__alt_mem_epcs_flash_controller+0xfdff7588>
 20006f0:	d8c00117 	ldw	r3,4(sp)
 20006f4:	1c410004 	addi	r17,r3,1024
 20006f8:	b809883a 	mov	r4,r23
 20006fc:	2001c880 	call	2001c88 <__floatsidf>
 2000700:	1009883a 	mov	r4,r2
 2000704:	180b883a 	mov	r5,r3
 2000708:	000d883a 	mov	r6,zero
 200070c:	01d00ff4 	movhi	r7,16447
 2000710:	2001ad40 	call	2001ad4 <__divdf3>
 2000714:	000d883a 	mov	r6,zero
 2000718:	01d01c34 	movhi	r7,16496
 200071c:	39f80004 	addi	r7,r7,-8192
 2000720:	1009883a 	mov	r4,r2
 2000724:	180b883a 	mov	r5,r3
 2000728:	20017f00 	call	20017f0 <__muldf3>
 200072c:	180b883a 	mov	r5,r3
 2000730:	1009883a 	mov	r4,r2
 2000734:	2001d5c0 	call	2001d5c <__fixdfsi>
 2000738:	1085883a 	add	r2,r2,r2
 200073c:	a885883a 	add	r2,r21,r2
 2000740:	1080000b 	ldhu	r2,0(r2)
 2000744:	8dc7883a 	add	r3,r17,r23
 2000748:	1080ffcc 	andi	r2,r2,1023
 200074c:	a0c00035 	stwio	r3,0(r20)
 2000750:	98800035 	stwio	r2,0(r19)
 2000754:	e4800035 	stwio	r18,0(fp)
 2000758:	e0000035 	stwio	zero,0(fp)
 200075c:	bdc00044 	addi	r23,r23,1
 2000760:	bc3fe51e 	bne	r23,r16,20006f8 <__alt_mem_epcs_flash_controller+0xfdff76f8>
 2000764:	d8c00017 	ldw	r3,0(sp)
 2000768:	d8800117 	ldw	r2,4(sp)
 200076c:	18c00044 	addi	r3,r3,1
 2000770:	10800804 	addi	r2,r2,32
 2000774:	d8c00015 	stw	r3,0(sp)
 2000778:	d8800115 	stw	r2,4(sp)
 200077c:	1c3f4d1e 	bne	r3,r16,20004b4 <__alt_mem_epcs_flash_controller+0xfdff74b4>
 2000780:	003f8106 	br	2000588 <__alt_mem_epcs_flash_controller+0xfdff7588>

02000784 <displayCIEColourBars>:
 2000784:	defff404 	addi	sp,sp,-48
 2000788:	df000a15 	stw	fp,40(sp)
 200078c:	dd800815 	stw	r22,32(sp)
 2000790:	dd400715 	stw	r21,28(sp)
 2000794:	dd000615 	stw	r20,24(sp)
 2000798:	dcc00515 	stw	r19,20(sp)
 200079c:	dc800415 	stw	r18,16(sp)
 20007a0:	dc000215 	stw	r16,8(sp)
 20007a4:	dfc00b15 	stw	ra,44(sp)
 20007a8:	ddc00915 	stw	r23,36(sp)
 20007ac:	dc400315 	stw	r17,12(sp)
 20007b0:	d8000115 	stw	zero,4(sp)
 20007b4:	d8000015 	stw	zero,0(sp)
 20007b8:	05408074 	movhi	r21,513
 20007bc:	ad51bb04 	addi	r21,r21,18156
 20007c0:	05010074 	movhi	r20,1025
 20007c4:	a5281804 	addi	r20,r20,-24480
 20007c8:	05800434 	movhi	r22,16
 20007cc:	b5bf0004 	addi	r22,r22,-1024
 20007d0:	04c10074 	movhi	r19,1025
 20007d4:	9ce81404 	addi	r19,r19,-24496
 20007d8:	04800044 	movi	r18,1
 20007dc:	07010074 	movhi	fp,1025
 20007e0:	e7281004 	addi	fp,fp,-24512
 20007e4:	04000804 	movi	r16,32
 20007e8:	d8800017 	ldw	r2,0(sp)
 20007ec:	00c001c4 	movi	r3,7
 20007f0:	18803e0e 	bge	r3,r2,20008ec <displayCIEColourBars+0x168>
 20007f4:	10bffe04 	addi	r2,r2,-8
 20007f8:	1880632e 	bgeu	r3,r2,2000988 <displayCIEColourBars+0x204>
 20007fc:	d8c00017 	ldw	r3,0(sp)
 2000800:	002f883a 	mov	r23,zero
 2000804:	18bffc04 	addi	r2,r3,-16
 2000808:	00c001c4 	movi	r3,7
 200080c:	1880852e 	bgeu	r3,r2,2000a24 <displayCIEColourBars+0x2a0>
 2000810:	d8800117 	ldw	r2,4(sp)
 2000814:	14410004 	addi	r17,r2,1024
 2000818:	b809883a 	mov	r4,r23
 200081c:	2001c880 	call	2001c88 <__floatsidf>
 2000820:	1009883a 	mov	r4,r2
 2000824:	180b883a 	mov	r5,r3
 2000828:	000d883a 	mov	r6,zero
 200082c:	01d00ff4 	movhi	r7,16447
 2000830:	2001ad40 	call	2001ad4 <__divdf3>
 2000834:	000d883a 	mov	r6,zero
 2000838:	01d01c34 	movhi	r7,16496
 200083c:	39f80004 	addi	r7,r7,-8192
 2000840:	1009883a 	mov	r4,r2
 2000844:	180b883a 	mov	r5,r3
 2000848:	20017f00 	call	20017f0 <__muldf3>
 200084c:	180b883a 	mov	r5,r3
 2000850:	1009883a 	mov	r4,r2
 2000854:	2001d5c0 	call	2001d5c <__fixdfsi>
 2000858:	1085883a 	add	r2,r2,r2
 200085c:	a885883a 	add	r2,r21,r2
 2000860:	1080000b 	ldhu	r2,0(r2)
 2000864:	8dcb883a 	add	r5,r17,r23
 2000868:	10ffffcc 	andi	r3,r2,65535
 200086c:	1808953a 	slli	r4,r3,20
 2000870:	180692ba 	slli	r3,r3,10
 2000874:	210ffc2c 	andhi	r4,r4,16368
 2000878:	1d86703a 	and	r3,r3,r22
 200087c:	a1400035 	stwio	r5,0(r20)
 2000880:	20c6b03a 	or	r3,r4,r3
 2000884:	1080ffcc 	andi	r2,r2,1023
 2000888:	1884b03a 	or	r2,r3,r2
 200088c:	98800035 	stwio	r2,0(r19)
 2000890:	e4800035 	stwio	r18,0(fp)
 2000894:	e0000035 	stwio	zero,0(fp)
 2000898:	bdc00044 	addi	r23,r23,1
 200089c:	bc3fde1e 	bne	r23,r16,2000818 <__alt_mem_epcs_flash_controller+0xfdff7818>
 20008a0:	d8c00017 	ldw	r3,0(sp)
 20008a4:	d8800117 	ldw	r2,4(sp)
 20008a8:	18c00044 	addi	r3,r3,1
 20008ac:	10800804 	addi	r2,r2,32
 20008b0:	d8c00015 	stw	r3,0(sp)
 20008b4:	d8800115 	stw	r2,4(sp)
 20008b8:	1c3fcb1e 	bne	r3,r16,20007e8 <__alt_mem_epcs_flash_controller+0xfdff77e8>
 20008bc:	dfc00b17 	ldw	ra,44(sp)
 20008c0:	df000a17 	ldw	fp,40(sp)
 20008c4:	ddc00917 	ldw	r23,36(sp)
 20008c8:	dd800817 	ldw	r22,32(sp)
 20008cc:	dd400717 	ldw	r21,28(sp)
 20008d0:	dd000617 	ldw	r20,24(sp)
 20008d4:	dcc00517 	ldw	r19,20(sp)
 20008d8:	dc800417 	ldw	r18,16(sp)
 20008dc:	dc400317 	ldw	r17,12(sp)
 20008e0:	dc000217 	ldw	r16,8(sp)
 20008e4:	dec00c04 	addi	sp,sp,48
 20008e8:	f800283a 	ret
 20008ec:	d8800117 	ldw	r2,4(sp)
 20008f0:	002f883a 	mov	r23,zero
 20008f4:	14410004 	addi	r17,r2,1024
 20008f8:	b809883a 	mov	r4,r23
 20008fc:	2001c880 	call	2001c88 <__floatsidf>
 2000900:	1009883a 	mov	r4,r2
 2000904:	180b883a 	mov	r5,r3
 2000908:	000d883a 	mov	r6,zero
 200090c:	01d00ff4 	movhi	r7,16447
 2000910:	2001ad40 	call	2001ad4 <__divdf3>
 2000914:	000d883a 	mov	r6,zero
 2000918:	01d01c34 	movhi	r7,16496
 200091c:	39f80004 	addi	r7,r7,-8192
 2000920:	1009883a 	mov	r4,r2
 2000924:	180b883a 	mov	r5,r3
 2000928:	20017f00 	call	20017f0 <__muldf3>
 200092c:	180b883a 	mov	r5,r3
 2000930:	1009883a 	mov	r4,r2
 2000934:	2001d5c0 	call	2001d5c <__fixdfsi>
 2000938:	1085883a 	add	r2,r2,r2
 200093c:	a885883a 	add	r2,r21,r2
 2000940:	1080000b 	ldhu	r2,0(r2)
 2000944:	8dc7883a 	add	r3,r17,r23
 2000948:	1004953a 	slli	r2,r2,20
 200094c:	a0c00035 	stwio	r3,0(r20)
 2000950:	108ffc2c 	andhi	r2,r2,16368
 2000954:	98800035 	stwio	r2,0(r19)
 2000958:	e4800035 	stwio	r18,0(fp)
 200095c:	e0000035 	stwio	zero,0(fp)
 2000960:	bdc00044 	addi	r23,r23,1
 2000964:	bc3fe41e 	bne	r23,r16,20008f8 <__alt_mem_epcs_flash_controller+0xfdff78f8>
 2000968:	d8c00017 	ldw	r3,0(sp)
 200096c:	d8800117 	ldw	r2,4(sp)
 2000970:	18c00044 	addi	r3,r3,1
 2000974:	10800804 	addi	r2,r2,32
 2000978:	d8c00015 	stw	r3,0(sp)
 200097c:	d8800115 	stw	r2,4(sp)
 2000980:	1c3f991e 	bne	r3,r16,20007e8 <__alt_mem_epcs_flash_controller+0xfdff77e8>
 2000984:	003fcd06 	br	20008bc <__alt_mem_epcs_flash_controller+0xfdff78bc>
 2000988:	d8800117 	ldw	r2,4(sp)
 200098c:	002f883a 	mov	r23,zero
 2000990:	14410004 	addi	r17,r2,1024
 2000994:	b809883a 	mov	r4,r23
 2000998:	2001c880 	call	2001c88 <__floatsidf>
 200099c:	1009883a 	mov	r4,r2
 20009a0:	180b883a 	mov	r5,r3
 20009a4:	000d883a 	mov	r6,zero
 20009a8:	01d00ff4 	movhi	r7,16447
 20009ac:	2001ad40 	call	2001ad4 <__divdf3>
 20009b0:	000d883a 	mov	r6,zero
 20009b4:	01d01c34 	movhi	r7,16496
 20009b8:	39f80004 	addi	r7,r7,-8192
 20009bc:	1009883a 	mov	r4,r2
 20009c0:	180b883a 	mov	r5,r3
 20009c4:	20017f00 	call	20017f0 <__muldf3>
 20009c8:	180b883a 	mov	r5,r3
 20009cc:	1009883a 	mov	r4,r2
 20009d0:	2001d5c0 	call	2001d5c <__fixdfsi>
 20009d4:	1085883a 	add	r2,r2,r2
 20009d8:	a885883a 	add	r2,r21,r2
 20009dc:	1080000b 	ldhu	r2,0(r2)
 20009e0:	8dc7883a 	add	r3,r17,r23
 20009e4:	100492ba 	slli	r2,r2,10
 20009e8:	a0c00035 	stwio	r3,0(r20)
 20009ec:	1584703a 	and	r2,r2,r22
 20009f0:	98800035 	stwio	r2,0(r19)
 20009f4:	e4800035 	stwio	r18,0(fp)
 20009f8:	e0000035 	stwio	zero,0(fp)
 20009fc:	bdc00044 	addi	r23,r23,1
 2000a00:	bc3fe41e 	bne	r23,r16,2000994 <__alt_mem_epcs_flash_controller+0xfdff7994>
 2000a04:	d8c00017 	ldw	r3,0(sp)
 2000a08:	d8800117 	ldw	r2,4(sp)
 2000a0c:	18c00044 	addi	r3,r3,1
 2000a10:	10800804 	addi	r2,r2,32
 2000a14:	d8c00015 	stw	r3,0(sp)
 2000a18:	d8800115 	stw	r2,4(sp)
 2000a1c:	1c3f721e 	bne	r3,r16,20007e8 <__alt_mem_epcs_flash_controller+0xfdff77e8>
 2000a20:	003fa606 	br	20008bc <__alt_mem_epcs_flash_controller+0xfdff78bc>
 2000a24:	d8c00117 	ldw	r3,4(sp)
 2000a28:	1c410004 	addi	r17,r3,1024
 2000a2c:	b809883a 	mov	r4,r23
 2000a30:	2001c880 	call	2001c88 <__floatsidf>
 2000a34:	1009883a 	mov	r4,r2
 2000a38:	180b883a 	mov	r5,r3
 2000a3c:	000d883a 	mov	r6,zero
 2000a40:	01d00ff4 	movhi	r7,16447
 2000a44:	2001ad40 	call	2001ad4 <__divdf3>
 2000a48:	000d883a 	mov	r6,zero
 2000a4c:	01d01c34 	movhi	r7,16496
 2000a50:	39f80004 	addi	r7,r7,-8192
 2000a54:	1009883a 	mov	r4,r2
 2000a58:	180b883a 	mov	r5,r3
 2000a5c:	20017f00 	call	20017f0 <__muldf3>
 2000a60:	180b883a 	mov	r5,r3
 2000a64:	1009883a 	mov	r4,r2
 2000a68:	2001d5c0 	call	2001d5c <__fixdfsi>
 2000a6c:	1085883a 	add	r2,r2,r2
 2000a70:	a885883a 	add	r2,r21,r2
 2000a74:	1080000b 	ldhu	r2,0(r2)
 2000a78:	8dc7883a 	add	r3,r17,r23
 2000a7c:	1080ffcc 	andi	r2,r2,1023
 2000a80:	a0c00035 	stwio	r3,0(r20)
 2000a84:	98800035 	stwio	r2,0(r19)
 2000a88:	e4800035 	stwio	r18,0(fp)
 2000a8c:	e0000035 	stwio	zero,0(fp)
 2000a90:	bdc00044 	addi	r23,r23,1
 2000a94:	bc3fe51e 	bne	r23,r16,2000a2c <__alt_mem_epcs_flash_controller+0xfdff7a2c>
 2000a98:	d8c00017 	ldw	r3,0(sp)
 2000a9c:	d8800117 	ldw	r2,4(sp)
 2000aa0:	18c00044 	addi	r3,r3,1
 2000aa4:	10800804 	addi	r2,r2,32
 2000aa8:	d8c00015 	stw	r3,0(sp)
 2000aac:	d8800115 	stw	r2,4(sp)
 2000ab0:	1c3f4d1e 	bne	r3,r16,20007e8 <__alt_mem_epcs_flash_controller+0xfdff77e8>
 2000ab4:	003f8106 	br	20008bc <__alt_mem_epcs_flash_controller+0xfdff78bc>

02000ab8 <displayGamma149ColourBars>:
 2000ab8:	defff404 	addi	sp,sp,-48
 2000abc:	df000a15 	stw	fp,40(sp)
 2000ac0:	dd800815 	stw	r22,32(sp)
 2000ac4:	dd400715 	stw	r21,28(sp)
 2000ac8:	dd000615 	stw	r20,24(sp)
 2000acc:	dcc00515 	stw	r19,20(sp)
 2000ad0:	dc800415 	stw	r18,16(sp)
 2000ad4:	dc000215 	stw	r16,8(sp)
 2000ad8:	dfc00b15 	stw	ra,44(sp)
 2000adc:	ddc00915 	stw	r23,36(sp)
 2000ae0:	dc400315 	stw	r17,12(sp)
 2000ae4:	d8000115 	stw	zero,4(sp)
 2000ae8:	d8000015 	stw	zero,0(sp)
 2000aec:	05408074 	movhi	r21,513
 2000af0:	ad513b04 	addi	r21,r21,17644
 2000af4:	05010074 	movhi	r20,1025
 2000af8:	a5281804 	addi	r20,r20,-24480
 2000afc:	05800434 	movhi	r22,16
 2000b00:	b5bf0004 	addi	r22,r22,-1024
 2000b04:	04c10074 	movhi	r19,1025
 2000b08:	9ce81404 	addi	r19,r19,-24496
 2000b0c:	04800044 	movi	r18,1
 2000b10:	07010074 	movhi	fp,1025
 2000b14:	e7281004 	addi	fp,fp,-24512
 2000b18:	04000804 	movi	r16,32
 2000b1c:	d8800017 	ldw	r2,0(sp)
 2000b20:	00c001c4 	movi	r3,7
 2000b24:	18803e0e 	bge	r3,r2,2000c20 <displayGamma149ColourBars+0x168>
 2000b28:	10bffe04 	addi	r2,r2,-8
 2000b2c:	1880632e 	bgeu	r3,r2,2000cbc <displayGamma149ColourBars+0x204>
 2000b30:	d8c00017 	ldw	r3,0(sp)
 2000b34:	002f883a 	mov	r23,zero
 2000b38:	18bffc04 	addi	r2,r3,-16
 2000b3c:	00c001c4 	movi	r3,7
 2000b40:	1880852e 	bgeu	r3,r2,2000d58 <displayGamma149ColourBars+0x2a0>
 2000b44:	d8800117 	ldw	r2,4(sp)
 2000b48:	14410004 	addi	r17,r2,1024
 2000b4c:	b809883a 	mov	r4,r23
 2000b50:	2001c880 	call	2001c88 <__floatsidf>
 2000b54:	1009883a 	mov	r4,r2
 2000b58:	180b883a 	mov	r5,r3
 2000b5c:	000d883a 	mov	r6,zero
 2000b60:	01d00ff4 	movhi	r7,16447
 2000b64:	2001ad40 	call	2001ad4 <__divdf3>
 2000b68:	000d883a 	mov	r6,zero
 2000b6c:	01d01c34 	movhi	r7,16496
 2000b70:	39f80004 	addi	r7,r7,-8192
 2000b74:	1009883a 	mov	r4,r2
 2000b78:	180b883a 	mov	r5,r3
 2000b7c:	20017f00 	call	20017f0 <__muldf3>
 2000b80:	180b883a 	mov	r5,r3
 2000b84:	1009883a 	mov	r4,r2
 2000b88:	2001d5c0 	call	2001d5c <__fixdfsi>
 2000b8c:	1085883a 	add	r2,r2,r2
 2000b90:	a885883a 	add	r2,r21,r2
 2000b94:	1080000b 	ldhu	r2,0(r2)
 2000b98:	8dcb883a 	add	r5,r17,r23
 2000b9c:	10ffffcc 	andi	r3,r2,65535
 2000ba0:	1808953a 	slli	r4,r3,20
 2000ba4:	180692ba 	slli	r3,r3,10
 2000ba8:	210ffc2c 	andhi	r4,r4,16368
 2000bac:	1d86703a 	and	r3,r3,r22
 2000bb0:	a1400035 	stwio	r5,0(r20)
 2000bb4:	20c6b03a 	or	r3,r4,r3
 2000bb8:	1080ffcc 	andi	r2,r2,1023
 2000bbc:	1884b03a 	or	r2,r3,r2
 2000bc0:	98800035 	stwio	r2,0(r19)
 2000bc4:	e4800035 	stwio	r18,0(fp)
 2000bc8:	e0000035 	stwio	zero,0(fp)
 2000bcc:	bdc00044 	addi	r23,r23,1
 2000bd0:	bc3fde1e 	bne	r23,r16,2000b4c <__alt_mem_epcs_flash_controller+0xfdff7b4c>
 2000bd4:	d8c00017 	ldw	r3,0(sp)
 2000bd8:	d8800117 	ldw	r2,4(sp)
 2000bdc:	18c00044 	addi	r3,r3,1
 2000be0:	10800804 	addi	r2,r2,32
 2000be4:	d8c00015 	stw	r3,0(sp)
 2000be8:	d8800115 	stw	r2,4(sp)
 2000bec:	1c3fcb1e 	bne	r3,r16,2000b1c <__alt_mem_epcs_flash_controller+0xfdff7b1c>
 2000bf0:	dfc00b17 	ldw	ra,44(sp)
 2000bf4:	df000a17 	ldw	fp,40(sp)
 2000bf8:	ddc00917 	ldw	r23,36(sp)
 2000bfc:	dd800817 	ldw	r22,32(sp)
 2000c00:	dd400717 	ldw	r21,28(sp)
 2000c04:	dd000617 	ldw	r20,24(sp)
 2000c08:	dcc00517 	ldw	r19,20(sp)
 2000c0c:	dc800417 	ldw	r18,16(sp)
 2000c10:	dc400317 	ldw	r17,12(sp)
 2000c14:	dc000217 	ldw	r16,8(sp)
 2000c18:	dec00c04 	addi	sp,sp,48
 2000c1c:	f800283a 	ret
 2000c20:	d8800117 	ldw	r2,4(sp)
 2000c24:	002f883a 	mov	r23,zero
 2000c28:	14410004 	addi	r17,r2,1024
 2000c2c:	b809883a 	mov	r4,r23
 2000c30:	2001c880 	call	2001c88 <__floatsidf>
 2000c34:	1009883a 	mov	r4,r2
 2000c38:	180b883a 	mov	r5,r3
 2000c3c:	000d883a 	mov	r6,zero
 2000c40:	01d00ff4 	movhi	r7,16447
 2000c44:	2001ad40 	call	2001ad4 <__divdf3>
 2000c48:	000d883a 	mov	r6,zero
 2000c4c:	01d01c34 	movhi	r7,16496
 2000c50:	39f80004 	addi	r7,r7,-8192
 2000c54:	1009883a 	mov	r4,r2
 2000c58:	180b883a 	mov	r5,r3
 2000c5c:	20017f00 	call	20017f0 <__muldf3>
 2000c60:	180b883a 	mov	r5,r3
 2000c64:	1009883a 	mov	r4,r2
 2000c68:	2001d5c0 	call	2001d5c <__fixdfsi>
 2000c6c:	1085883a 	add	r2,r2,r2
 2000c70:	a885883a 	add	r2,r21,r2
 2000c74:	1080000b 	ldhu	r2,0(r2)
 2000c78:	8dc7883a 	add	r3,r17,r23
 2000c7c:	1004953a 	slli	r2,r2,20
 2000c80:	a0c00035 	stwio	r3,0(r20)
 2000c84:	108ffc2c 	andhi	r2,r2,16368
 2000c88:	98800035 	stwio	r2,0(r19)
 2000c8c:	e4800035 	stwio	r18,0(fp)
 2000c90:	e0000035 	stwio	zero,0(fp)
 2000c94:	bdc00044 	addi	r23,r23,1
 2000c98:	bc3fe41e 	bne	r23,r16,2000c2c <__alt_mem_epcs_flash_controller+0xfdff7c2c>
 2000c9c:	d8c00017 	ldw	r3,0(sp)
 2000ca0:	d8800117 	ldw	r2,4(sp)
 2000ca4:	18c00044 	addi	r3,r3,1
 2000ca8:	10800804 	addi	r2,r2,32
 2000cac:	d8c00015 	stw	r3,0(sp)
 2000cb0:	d8800115 	stw	r2,4(sp)
 2000cb4:	1c3f991e 	bne	r3,r16,2000b1c <__alt_mem_epcs_flash_controller+0xfdff7b1c>
 2000cb8:	003fcd06 	br	2000bf0 <__alt_mem_epcs_flash_controller+0xfdff7bf0>
 2000cbc:	d8800117 	ldw	r2,4(sp)
 2000cc0:	002f883a 	mov	r23,zero
 2000cc4:	14410004 	addi	r17,r2,1024
 2000cc8:	b809883a 	mov	r4,r23
 2000ccc:	2001c880 	call	2001c88 <__floatsidf>
 2000cd0:	1009883a 	mov	r4,r2
 2000cd4:	180b883a 	mov	r5,r3
 2000cd8:	000d883a 	mov	r6,zero
 2000cdc:	01d00ff4 	movhi	r7,16447
 2000ce0:	2001ad40 	call	2001ad4 <__divdf3>
 2000ce4:	000d883a 	mov	r6,zero
 2000ce8:	01d01c34 	movhi	r7,16496
 2000cec:	39f80004 	addi	r7,r7,-8192
 2000cf0:	1009883a 	mov	r4,r2
 2000cf4:	180b883a 	mov	r5,r3
 2000cf8:	20017f00 	call	20017f0 <__muldf3>
 2000cfc:	180b883a 	mov	r5,r3
 2000d00:	1009883a 	mov	r4,r2
 2000d04:	2001d5c0 	call	2001d5c <__fixdfsi>
 2000d08:	1085883a 	add	r2,r2,r2
 2000d0c:	a885883a 	add	r2,r21,r2
 2000d10:	1080000b 	ldhu	r2,0(r2)
 2000d14:	8dc7883a 	add	r3,r17,r23
 2000d18:	100492ba 	slli	r2,r2,10
 2000d1c:	a0c00035 	stwio	r3,0(r20)
 2000d20:	1584703a 	and	r2,r2,r22
 2000d24:	98800035 	stwio	r2,0(r19)
 2000d28:	e4800035 	stwio	r18,0(fp)
 2000d2c:	e0000035 	stwio	zero,0(fp)
 2000d30:	bdc00044 	addi	r23,r23,1
 2000d34:	bc3fe41e 	bne	r23,r16,2000cc8 <__alt_mem_epcs_flash_controller+0xfdff7cc8>
 2000d38:	d8c00017 	ldw	r3,0(sp)
 2000d3c:	d8800117 	ldw	r2,4(sp)
 2000d40:	18c00044 	addi	r3,r3,1
 2000d44:	10800804 	addi	r2,r2,32
 2000d48:	d8c00015 	stw	r3,0(sp)
 2000d4c:	d8800115 	stw	r2,4(sp)
 2000d50:	1c3f721e 	bne	r3,r16,2000b1c <__alt_mem_epcs_flash_controller+0xfdff7b1c>
 2000d54:	003fa606 	br	2000bf0 <__alt_mem_epcs_flash_controller+0xfdff7bf0>
 2000d58:	d8c00117 	ldw	r3,4(sp)
 2000d5c:	1c410004 	addi	r17,r3,1024
 2000d60:	b809883a 	mov	r4,r23
 2000d64:	2001c880 	call	2001c88 <__floatsidf>
 2000d68:	1009883a 	mov	r4,r2
 2000d6c:	180b883a 	mov	r5,r3
 2000d70:	000d883a 	mov	r6,zero
 2000d74:	01d00ff4 	movhi	r7,16447
 2000d78:	2001ad40 	call	2001ad4 <__divdf3>
 2000d7c:	000d883a 	mov	r6,zero
 2000d80:	01d01c34 	movhi	r7,16496
 2000d84:	39f80004 	addi	r7,r7,-8192
 2000d88:	1009883a 	mov	r4,r2
 2000d8c:	180b883a 	mov	r5,r3
 2000d90:	20017f00 	call	20017f0 <__muldf3>
 2000d94:	180b883a 	mov	r5,r3
 2000d98:	1009883a 	mov	r4,r2
 2000d9c:	2001d5c0 	call	2001d5c <__fixdfsi>
 2000da0:	1085883a 	add	r2,r2,r2
 2000da4:	a885883a 	add	r2,r21,r2
 2000da8:	1080000b 	ldhu	r2,0(r2)
 2000dac:	8dc7883a 	add	r3,r17,r23
 2000db0:	1080ffcc 	andi	r2,r2,1023
 2000db4:	a0c00035 	stwio	r3,0(r20)
 2000db8:	98800035 	stwio	r2,0(r19)
 2000dbc:	e4800035 	stwio	r18,0(fp)
 2000dc0:	e0000035 	stwio	zero,0(fp)
 2000dc4:	bdc00044 	addi	r23,r23,1
 2000dc8:	bc3fe51e 	bne	r23,r16,2000d60 <__alt_mem_epcs_flash_controller+0xfdff7d60>
 2000dcc:	d8c00017 	ldw	r3,0(sp)
 2000dd0:	d8800117 	ldw	r2,4(sp)
 2000dd4:	18c00044 	addi	r3,r3,1
 2000dd8:	10800804 	addi	r2,r2,32
 2000ddc:	d8c00015 	stw	r3,0(sp)
 2000de0:	d8800115 	stw	r2,4(sp)
 2000de4:	1c3f4d1e 	bne	r3,r16,2000b1c <__alt_mem_epcs_flash_controller+0xfdff7b1c>
 2000de8:	003f8106 	br	2000bf0 <__alt_mem_epcs_flash_controller+0xfdff7bf0>

02000dec <displayGamma98ColourBars>:
 2000dec:	defff404 	addi	sp,sp,-48
 2000df0:	df000a15 	stw	fp,40(sp)
 2000df4:	dd800815 	stw	r22,32(sp)
 2000df8:	dd400715 	stw	r21,28(sp)
 2000dfc:	dd000615 	stw	r20,24(sp)
 2000e00:	dcc00515 	stw	r19,20(sp)
 2000e04:	dc800415 	stw	r18,16(sp)
 2000e08:	dc000215 	stw	r16,8(sp)
 2000e0c:	dfc00b15 	stw	ra,44(sp)
 2000e10:	ddc00915 	stw	r23,36(sp)
 2000e14:	dc400315 	stw	r17,12(sp)
 2000e18:	d8000115 	stw	zero,4(sp)
 2000e1c:	d8000015 	stw	zero,0(sp)
 2000e20:	05408074 	movhi	r21,513
 2000e24:	ad50bb04 	addi	r21,r21,17132
 2000e28:	05010074 	movhi	r20,1025
 2000e2c:	a5281804 	addi	r20,r20,-24480
 2000e30:	05800434 	movhi	r22,16
 2000e34:	b5bf0004 	addi	r22,r22,-1024
 2000e38:	04c10074 	movhi	r19,1025
 2000e3c:	9ce81404 	addi	r19,r19,-24496
 2000e40:	04800044 	movi	r18,1
 2000e44:	07010074 	movhi	fp,1025
 2000e48:	e7281004 	addi	fp,fp,-24512
 2000e4c:	04000804 	movi	r16,32
 2000e50:	d8800017 	ldw	r2,0(sp)
 2000e54:	00c001c4 	movi	r3,7
 2000e58:	18803e0e 	bge	r3,r2,2000f54 <displayGamma98ColourBars+0x168>
 2000e5c:	10bffe04 	addi	r2,r2,-8
 2000e60:	1880632e 	bgeu	r3,r2,2000ff0 <displayGamma98ColourBars+0x204>
 2000e64:	d8c00017 	ldw	r3,0(sp)
 2000e68:	002f883a 	mov	r23,zero
 2000e6c:	18bffc04 	addi	r2,r3,-16
 2000e70:	00c001c4 	movi	r3,7
 2000e74:	1880852e 	bgeu	r3,r2,200108c <displayGamma98ColourBars+0x2a0>
 2000e78:	d8800117 	ldw	r2,4(sp)
 2000e7c:	14410004 	addi	r17,r2,1024
 2000e80:	b809883a 	mov	r4,r23
 2000e84:	2001c880 	call	2001c88 <__floatsidf>
 2000e88:	1009883a 	mov	r4,r2
 2000e8c:	180b883a 	mov	r5,r3
 2000e90:	000d883a 	mov	r6,zero
 2000e94:	01d00ff4 	movhi	r7,16447
 2000e98:	2001ad40 	call	2001ad4 <__divdf3>
 2000e9c:	000d883a 	mov	r6,zero
 2000ea0:	01d01c34 	movhi	r7,16496
 2000ea4:	39f80004 	addi	r7,r7,-8192
 2000ea8:	1009883a 	mov	r4,r2
 2000eac:	180b883a 	mov	r5,r3
 2000eb0:	20017f00 	call	20017f0 <__muldf3>
 2000eb4:	180b883a 	mov	r5,r3
 2000eb8:	1009883a 	mov	r4,r2
 2000ebc:	2001d5c0 	call	2001d5c <__fixdfsi>
 2000ec0:	1085883a 	add	r2,r2,r2
 2000ec4:	a885883a 	add	r2,r21,r2
 2000ec8:	1080000b 	ldhu	r2,0(r2)
 2000ecc:	8dcb883a 	add	r5,r17,r23
 2000ed0:	10ffffcc 	andi	r3,r2,65535
 2000ed4:	1808953a 	slli	r4,r3,20
 2000ed8:	180692ba 	slli	r3,r3,10
 2000edc:	210ffc2c 	andhi	r4,r4,16368
 2000ee0:	1d86703a 	and	r3,r3,r22
 2000ee4:	a1400035 	stwio	r5,0(r20)
 2000ee8:	20c6b03a 	or	r3,r4,r3
 2000eec:	1080ffcc 	andi	r2,r2,1023
 2000ef0:	1884b03a 	or	r2,r3,r2
 2000ef4:	98800035 	stwio	r2,0(r19)
 2000ef8:	e4800035 	stwio	r18,0(fp)
 2000efc:	e0000035 	stwio	zero,0(fp)
 2000f00:	bdc00044 	addi	r23,r23,1
 2000f04:	bc3fde1e 	bne	r23,r16,2000e80 <__alt_mem_epcs_flash_controller+0xfdff7e80>
 2000f08:	d8c00017 	ldw	r3,0(sp)
 2000f0c:	d8800117 	ldw	r2,4(sp)
 2000f10:	18c00044 	addi	r3,r3,1
 2000f14:	10800804 	addi	r2,r2,32
 2000f18:	d8c00015 	stw	r3,0(sp)
 2000f1c:	d8800115 	stw	r2,4(sp)
 2000f20:	1c3fcb1e 	bne	r3,r16,2000e50 <__alt_mem_epcs_flash_controller+0xfdff7e50>
 2000f24:	dfc00b17 	ldw	ra,44(sp)
 2000f28:	df000a17 	ldw	fp,40(sp)
 2000f2c:	ddc00917 	ldw	r23,36(sp)
 2000f30:	dd800817 	ldw	r22,32(sp)
 2000f34:	dd400717 	ldw	r21,28(sp)
 2000f38:	dd000617 	ldw	r20,24(sp)
 2000f3c:	dcc00517 	ldw	r19,20(sp)
 2000f40:	dc800417 	ldw	r18,16(sp)
 2000f44:	dc400317 	ldw	r17,12(sp)
 2000f48:	dc000217 	ldw	r16,8(sp)
 2000f4c:	dec00c04 	addi	sp,sp,48
 2000f50:	f800283a 	ret
 2000f54:	d8800117 	ldw	r2,4(sp)
 2000f58:	002f883a 	mov	r23,zero
 2000f5c:	14410004 	addi	r17,r2,1024
 2000f60:	b809883a 	mov	r4,r23
 2000f64:	2001c880 	call	2001c88 <__floatsidf>
 2000f68:	1009883a 	mov	r4,r2
 2000f6c:	180b883a 	mov	r5,r3
 2000f70:	000d883a 	mov	r6,zero
 2000f74:	01d00ff4 	movhi	r7,16447
 2000f78:	2001ad40 	call	2001ad4 <__divdf3>
 2000f7c:	000d883a 	mov	r6,zero
 2000f80:	01d01c34 	movhi	r7,16496
 2000f84:	39f80004 	addi	r7,r7,-8192
 2000f88:	1009883a 	mov	r4,r2
 2000f8c:	180b883a 	mov	r5,r3
 2000f90:	20017f00 	call	20017f0 <__muldf3>
 2000f94:	180b883a 	mov	r5,r3
 2000f98:	1009883a 	mov	r4,r2
 2000f9c:	2001d5c0 	call	2001d5c <__fixdfsi>
 2000fa0:	1085883a 	add	r2,r2,r2
 2000fa4:	a885883a 	add	r2,r21,r2
 2000fa8:	1080000b 	ldhu	r2,0(r2)
 2000fac:	8dc7883a 	add	r3,r17,r23
 2000fb0:	1004953a 	slli	r2,r2,20
 2000fb4:	a0c00035 	stwio	r3,0(r20)
 2000fb8:	108ffc2c 	andhi	r2,r2,16368
 2000fbc:	98800035 	stwio	r2,0(r19)
 2000fc0:	e4800035 	stwio	r18,0(fp)
 2000fc4:	e0000035 	stwio	zero,0(fp)
 2000fc8:	bdc00044 	addi	r23,r23,1
 2000fcc:	bc3fe41e 	bne	r23,r16,2000f60 <__alt_mem_epcs_flash_controller+0xfdff7f60>
 2000fd0:	d8c00017 	ldw	r3,0(sp)
 2000fd4:	d8800117 	ldw	r2,4(sp)
 2000fd8:	18c00044 	addi	r3,r3,1
 2000fdc:	10800804 	addi	r2,r2,32
 2000fe0:	d8c00015 	stw	r3,0(sp)
 2000fe4:	d8800115 	stw	r2,4(sp)
 2000fe8:	1c3f991e 	bne	r3,r16,2000e50 <__alt_mem_epcs_flash_controller+0xfdff7e50>
 2000fec:	003fcd06 	br	2000f24 <__alt_mem_epcs_flash_controller+0xfdff7f24>
 2000ff0:	d8800117 	ldw	r2,4(sp)
 2000ff4:	002f883a 	mov	r23,zero
 2000ff8:	14410004 	addi	r17,r2,1024
 2000ffc:	b809883a 	mov	r4,r23
 2001000:	2001c880 	call	2001c88 <__floatsidf>
 2001004:	1009883a 	mov	r4,r2
 2001008:	180b883a 	mov	r5,r3
 200100c:	000d883a 	mov	r6,zero
 2001010:	01d00ff4 	movhi	r7,16447
 2001014:	2001ad40 	call	2001ad4 <__divdf3>
 2001018:	000d883a 	mov	r6,zero
 200101c:	01d01c34 	movhi	r7,16496
 2001020:	39f80004 	addi	r7,r7,-8192
 2001024:	1009883a 	mov	r4,r2
 2001028:	180b883a 	mov	r5,r3
 200102c:	20017f00 	call	20017f0 <__muldf3>
 2001030:	180b883a 	mov	r5,r3
 2001034:	1009883a 	mov	r4,r2
 2001038:	2001d5c0 	call	2001d5c <__fixdfsi>
 200103c:	1085883a 	add	r2,r2,r2
 2001040:	a885883a 	add	r2,r21,r2
 2001044:	1080000b 	ldhu	r2,0(r2)
 2001048:	8dc7883a 	add	r3,r17,r23
 200104c:	100492ba 	slli	r2,r2,10
 2001050:	a0c00035 	stwio	r3,0(r20)
 2001054:	1584703a 	and	r2,r2,r22
 2001058:	98800035 	stwio	r2,0(r19)
 200105c:	e4800035 	stwio	r18,0(fp)
 2001060:	e0000035 	stwio	zero,0(fp)
 2001064:	bdc00044 	addi	r23,r23,1
 2001068:	bc3fe41e 	bne	r23,r16,2000ffc <__alt_mem_epcs_flash_controller+0xfdff7ffc>
 200106c:	d8c00017 	ldw	r3,0(sp)
 2001070:	d8800117 	ldw	r2,4(sp)
 2001074:	18c00044 	addi	r3,r3,1
 2001078:	10800804 	addi	r2,r2,32
 200107c:	d8c00015 	stw	r3,0(sp)
 2001080:	d8800115 	stw	r2,4(sp)
 2001084:	1c3f721e 	bne	r3,r16,2000e50 <__alt_mem_epcs_flash_controller+0xfdff7e50>
 2001088:	003fa606 	br	2000f24 <__alt_mem_epcs_flash_controller+0xfdff7f24>
 200108c:	d8c00117 	ldw	r3,4(sp)
 2001090:	1c410004 	addi	r17,r3,1024
 2001094:	b809883a 	mov	r4,r23
 2001098:	2001c880 	call	2001c88 <__floatsidf>
 200109c:	1009883a 	mov	r4,r2
 20010a0:	180b883a 	mov	r5,r3
 20010a4:	000d883a 	mov	r6,zero
 20010a8:	01d00ff4 	movhi	r7,16447
 20010ac:	2001ad40 	call	2001ad4 <__divdf3>
 20010b0:	000d883a 	mov	r6,zero
 20010b4:	01d01c34 	movhi	r7,16496
 20010b8:	39f80004 	addi	r7,r7,-8192
 20010bc:	1009883a 	mov	r4,r2
 20010c0:	180b883a 	mov	r5,r3
 20010c4:	20017f00 	call	20017f0 <__muldf3>
 20010c8:	180b883a 	mov	r5,r3
 20010cc:	1009883a 	mov	r4,r2
 20010d0:	2001d5c0 	call	2001d5c <__fixdfsi>
 20010d4:	1085883a 	add	r2,r2,r2
 20010d8:	a885883a 	add	r2,r21,r2
 20010dc:	1080000b 	ldhu	r2,0(r2)
 20010e0:	8dc7883a 	add	r3,r17,r23
 20010e4:	1080ffcc 	andi	r2,r2,1023
 20010e8:	a0c00035 	stwio	r3,0(r20)
 20010ec:	98800035 	stwio	r2,0(r19)
 20010f0:	e4800035 	stwio	r18,0(fp)
 20010f4:	e0000035 	stwio	zero,0(fp)
 20010f8:	bdc00044 	addi	r23,r23,1
 20010fc:	bc3fe51e 	bne	r23,r16,2001094 <__alt_mem_epcs_flash_controller+0xfdff8094>
 2001100:	d8c00017 	ldw	r3,0(sp)
 2001104:	d8800117 	ldw	r2,4(sp)
 2001108:	18c00044 	addi	r3,r3,1
 200110c:	10800804 	addi	r2,r2,32
 2001110:	d8c00015 	stw	r3,0(sp)
 2001114:	d8800115 	stw	r2,4(sp)
 2001118:	1c3f4d1e 	bne	r3,r16,2000e50 <__alt_mem_epcs_flash_controller+0xfdff7e50>
 200111c:	003f8106 	br	2000f24 <__alt_mem_epcs_flash_controller+0xfdff7f24>

02001120 <displayGamma46ColourBars>:
 2001120:	defff404 	addi	sp,sp,-48
 2001124:	df000a15 	stw	fp,40(sp)
 2001128:	dd800815 	stw	r22,32(sp)
 200112c:	dd400715 	stw	r21,28(sp)
 2001130:	dd000615 	stw	r20,24(sp)
 2001134:	dcc00515 	stw	r19,20(sp)
 2001138:	dc800415 	stw	r18,16(sp)
 200113c:	dc000215 	stw	r16,8(sp)
 2001140:	dfc00b15 	stw	ra,44(sp)
 2001144:	ddc00915 	stw	r23,36(sp)
 2001148:	dc400315 	stw	r17,12(sp)
 200114c:	d8000115 	stw	zero,4(sp)
 2001150:	d8000015 	stw	zero,0(sp)
 2001154:	05408074 	movhi	r21,513
 2001158:	ad503b04 	addi	r21,r21,16620
 200115c:	05010074 	movhi	r20,1025
 2001160:	a5281804 	addi	r20,r20,-24480
 2001164:	05800434 	movhi	r22,16
 2001168:	b5bf0004 	addi	r22,r22,-1024
 200116c:	04c10074 	movhi	r19,1025
 2001170:	9ce81404 	addi	r19,r19,-24496
 2001174:	04800044 	movi	r18,1
 2001178:	07010074 	movhi	fp,1025
 200117c:	e7281004 	addi	fp,fp,-24512
 2001180:	04000804 	movi	r16,32
 2001184:	d8800017 	ldw	r2,0(sp)
 2001188:	00c001c4 	movi	r3,7
 200118c:	18803e0e 	bge	r3,r2,2001288 <displayGamma46ColourBars+0x168>
 2001190:	10bffe04 	addi	r2,r2,-8
 2001194:	1880632e 	bgeu	r3,r2,2001324 <displayGamma46ColourBars+0x204>
 2001198:	d8c00017 	ldw	r3,0(sp)
 200119c:	002f883a 	mov	r23,zero
 20011a0:	18bffc04 	addi	r2,r3,-16
 20011a4:	00c001c4 	movi	r3,7
 20011a8:	1880852e 	bgeu	r3,r2,20013c0 <displayGamma46ColourBars+0x2a0>
 20011ac:	d8800117 	ldw	r2,4(sp)
 20011b0:	14410004 	addi	r17,r2,1024
 20011b4:	b809883a 	mov	r4,r23
 20011b8:	2001c880 	call	2001c88 <__floatsidf>
 20011bc:	1009883a 	mov	r4,r2
 20011c0:	180b883a 	mov	r5,r3
 20011c4:	000d883a 	mov	r6,zero
 20011c8:	01d00ff4 	movhi	r7,16447
 20011cc:	2001ad40 	call	2001ad4 <__divdf3>
 20011d0:	000d883a 	mov	r6,zero
 20011d4:	01d01c34 	movhi	r7,16496
 20011d8:	39f80004 	addi	r7,r7,-8192
 20011dc:	1009883a 	mov	r4,r2
 20011e0:	180b883a 	mov	r5,r3
 20011e4:	20017f00 	call	20017f0 <__muldf3>
 20011e8:	180b883a 	mov	r5,r3
 20011ec:	1009883a 	mov	r4,r2
 20011f0:	2001d5c0 	call	2001d5c <__fixdfsi>
 20011f4:	1085883a 	add	r2,r2,r2
 20011f8:	a885883a 	add	r2,r21,r2
 20011fc:	1080000b 	ldhu	r2,0(r2)
 2001200:	8dcb883a 	add	r5,r17,r23
 2001204:	10ffffcc 	andi	r3,r2,65535
 2001208:	1808953a 	slli	r4,r3,20
 200120c:	180692ba 	slli	r3,r3,10
 2001210:	210ffc2c 	andhi	r4,r4,16368
 2001214:	1d86703a 	and	r3,r3,r22
 2001218:	a1400035 	stwio	r5,0(r20)
 200121c:	20c6b03a 	or	r3,r4,r3
 2001220:	1080ffcc 	andi	r2,r2,1023
 2001224:	1884b03a 	or	r2,r3,r2
 2001228:	98800035 	stwio	r2,0(r19)
 200122c:	e4800035 	stwio	r18,0(fp)
 2001230:	e0000035 	stwio	zero,0(fp)
 2001234:	bdc00044 	addi	r23,r23,1
 2001238:	bc3fde1e 	bne	r23,r16,20011b4 <__alt_mem_epcs_flash_controller+0xfdff81b4>
 200123c:	d8c00017 	ldw	r3,0(sp)
 2001240:	d8800117 	ldw	r2,4(sp)
 2001244:	18c00044 	addi	r3,r3,1
 2001248:	10800804 	addi	r2,r2,32
 200124c:	d8c00015 	stw	r3,0(sp)
 2001250:	d8800115 	stw	r2,4(sp)
 2001254:	1c3fcb1e 	bne	r3,r16,2001184 <__alt_mem_epcs_flash_controller+0xfdff8184>
 2001258:	dfc00b17 	ldw	ra,44(sp)
 200125c:	df000a17 	ldw	fp,40(sp)
 2001260:	ddc00917 	ldw	r23,36(sp)
 2001264:	dd800817 	ldw	r22,32(sp)
 2001268:	dd400717 	ldw	r21,28(sp)
 200126c:	dd000617 	ldw	r20,24(sp)
 2001270:	dcc00517 	ldw	r19,20(sp)
 2001274:	dc800417 	ldw	r18,16(sp)
 2001278:	dc400317 	ldw	r17,12(sp)
 200127c:	dc000217 	ldw	r16,8(sp)
 2001280:	dec00c04 	addi	sp,sp,48
 2001284:	f800283a 	ret
 2001288:	d8800117 	ldw	r2,4(sp)
 200128c:	002f883a 	mov	r23,zero
 2001290:	14410004 	addi	r17,r2,1024
 2001294:	b809883a 	mov	r4,r23
 2001298:	2001c880 	call	2001c88 <__floatsidf>
 200129c:	1009883a 	mov	r4,r2
 20012a0:	180b883a 	mov	r5,r3
 20012a4:	000d883a 	mov	r6,zero
 20012a8:	01d00ff4 	movhi	r7,16447
 20012ac:	2001ad40 	call	2001ad4 <__divdf3>
 20012b0:	000d883a 	mov	r6,zero
 20012b4:	01d01c34 	movhi	r7,16496
 20012b8:	39f80004 	addi	r7,r7,-8192
 20012bc:	1009883a 	mov	r4,r2
 20012c0:	180b883a 	mov	r5,r3
 20012c4:	20017f00 	call	20017f0 <__muldf3>
 20012c8:	180b883a 	mov	r5,r3
 20012cc:	1009883a 	mov	r4,r2
 20012d0:	2001d5c0 	call	2001d5c <__fixdfsi>
 20012d4:	1085883a 	add	r2,r2,r2
 20012d8:	a885883a 	add	r2,r21,r2
 20012dc:	1080000b 	ldhu	r2,0(r2)
 20012e0:	8dc7883a 	add	r3,r17,r23
 20012e4:	1004953a 	slli	r2,r2,20
 20012e8:	a0c00035 	stwio	r3,0(r20)
 20012ec:	108ffc2c 	andhi	r2,r2,16368
 20012f0:	98800035 	stwio	r2,0(r19)
 20012f4:	e4800035 	stwio	r18,0(fp)
 20012f8:	e0000035 	stwio	zero,0(fp)
 20012fc:	bdc00044 	addi	r23,r23,1
 2001300:	bc3fe41e 	bne	r23,r16,2001294 <__alt_mem_epcs_flash_controller+0xfdff8294>
 2001304:	d8c00017 	ldw	r3,0(sp)
 2001308:	d8800117 	ldw	r2,4(sp)
 200130c:	18c00044 	addi	r3,r3,1
 2001310:	10800804 	addi	r2,r2,32
 2001314:	d8c00015 	stw	r3,0(sp)
 2001318:	d8800115 	stw	r2,4(sp)
 200131c:	1c3f991e 	bne	r3,r16,2001184 <__alt_mem_epcs_flash_controller+0xfdff8184>
 2001320:	003fcd06 	br	2001258 <__alt_mem_epcs_flash_controller+0xfdff8258>
 2001324:	d8800117 	ldw	r2,4(sp)
 2001328:	002f883a 	mov	r23,zero
 200132c:	14410004 	addi	r17,r2,1024
 2001330:	b809883a 	mov	r4,r23
 2001334:	2001c880 	call	2001c88 <__floatsidf>
 2001338:	1009883a 	mov	r4,r2
 200133c:	180b883a 	mov	r5,r3
 2001340:	000d883a 	mov	r6,zero
 2001344:	01d00ff4 	movhi	r7,16447
 2001348:	2001ad40 	call	2001ad4 <__divdf3>
 200134c:	000d883a 	mov	r6,zero
 2001350:	01d01c34 	movhi	r7,16496
 2001354:	39f80004 	addi	r7,r7,-8192
 2001358:	1009883a 	mov	r4,r2
 200135c:	180b883a 	mov	r5,r3
 2001360:	20017f00 	call	20017f0 <__muldf3>
 2001364:	180b883a 	mov	r5,r3
 2001368:	1009883a 	mov	r4,r2
 200136c:	2001d5c0 	call	2001d5c <__fixdfsi>
 2001370:	1085883a 	add	r2,r2,r2
 2001374:	a885883a 	add	r2,r21,r2
 2001378:	1080000b 	ldhu	r2,0(r2)
 200137c:	8dc7883a 	add	r3,r17,r23
 2001380:	100492ba 	slli	r2,r2,10
 2001384:	a0c00035 	stwio	r3,0(r20)
 2001388:	1584703a 	and	r2,r2,r22
 200138c:	98800035 	stwio	r2,0(r19)
 2001390:	e4800035 	stwio	r18,0(fp)
 2001394:	e0000035 	stwio	zero,0(fp)
 2001398:	bdc00044 	addi	r23,r23,1
 200139c:	bc3fe41e 	bne	r23,r16,2001330 <__alt_mem_epcs_flash_controller+0xfdff8330>
 20013a0:	d8c00017 	ldw	r3,0(sp)
 20013a4:	d8800117 	ldw	r2,4(sp)
 20013a8:	18c00044 	addi	r3,r3,1
 20013ac:	10800804 	addi	r2,r2,32
 20013b0:	d8c00015 	stw	r3,0(sp)
 20013b4:	d8800115 	stw	r2,4(sp)
 20013b8:	1c3f721e 	bne	r3,r16,2001184 <__alt_mem_epcs_flash_controller+0xfdff8184>
 20013bc:	003fa606 	br	2001258 <__alt_mem_epcs_flash_controller+0xfdff8258>
 20013c0:	d8c00117 	ldw	r3,4(sp)
 20013c4:	1c410004 	addi	r17,r3,1024
 20013c8:	b809883a 	mov	r4,r23
 20013cc:	2001c880 	call	2001c88 <__floatsidf>
 20013d0:	1009883a 	mov	r4,r2
 20013d4:	180b883a 	mov	r5,r3
 20013d8:	000d883a 	mov	r6,zero
 20013dc:	01d00ff4 	movhi	r7,16447
 20013e0:	2001ad40 	call	2001ad4 <__divdf3>
 20013e4:	000d883a 	mov	r6,zero
 20013e8:	01d01c34 	movhi	r7,16496
 20013ec:	39f80004 	addi	r7,r7,-8192
 20013f0:	1009883a 	mov	r4,r2
 20013f4:	180b883a 	mov	r5,r3
 20013f8:	20017f00 	call	20017f0 <__muldf3>
 20013fc:	180b883a 	mov	r5,r3
 2001400:	1009883a 	mov	r4,r2
 2001404:	2001d5c0 	call	2001d5c <__fixdfsi>
 2001408:	1085883a 	add	r2,r2,r2
 200140c:	a885883a 	add	r2,r21,r2
 2001410:	1080000b 	ldhu	r2,0(r2)
 2001414:	8dc7883a 	add	r3,r17,r23
 2001418:	1080ffcc 	andi	r2,r2,1023
 200141c:	a0c00035 	stwio	r3,0(r20)
 2001420:	98800035 	stwio	r2,0(r19)
 2001424:	e4800035 	stwio	r18,0(fp)
 2001428:	e0000035 	stwio	zero,0(fp)
 200142c:	bdc00044 	addi	r23,r23,1
 2001430:	bc3fe51e 	bne	r23,r16,20013c8 <__alt_mem_epcs_flash_controller+0xfdff83c8>
 2001434:	d8c00017 	ldw	r3,0(sp)
 2001438:	d8800117 	ldw	r2,4(sp)
 200143c:	18c00044 	addi	r3,r3,1
 2001440:	10800804 	addi	r2,r2,32
 2001444:	d8c00015 	stw	r3,0(sp)
 2001448:	d8800115 	stw	r2,4(sp)
 200144c:	1c3f4d1e 	bne	r3,r16,2001184 <__alt_mem_epcs_flash_controller+0xfdff8184>
 2001450:	003f8106 	br	2001258 <__alt_mem_epcs_flash_controller+0xfdff8258>

02001454 <printMenu>:
 2001454:	deffff04 	addi	sp,sp,-4
 2001458:	01008074 	movhi	r4,513
 200145c:	210f9204 	addi	r4,r4,15944
 2001460:	dfc00015 	stw	ra,0(sp)
 2001464:	20034940 	call	2003494 <puts>
 2001468:	01008074 	movhi	r4,513
 200146c:	210f9604 	addi	r4,r4,15960
 2001470:	20034940 	call	2003494 <puts>
 2001474:	01008074 	movhi	r4,513
 2001478:	210f9a04 	addi	r4,r4,15976
 200147c:	20034940 	call	2003494 <puts>
 2001480:	01008074 	movhi	r4,513
 2001484:	210f9f04 	addi	r4,r4,15996
 2001488:	20034940 	call	2003494 <puts>
 200148c:	01008074 	movhi	r4,513
 2001490:	210fa404 	addi	r4,r4,16016
 2001494:	20034940 	call	2003494 <puts>
 2001498:	01008074 	movhi	r4,513
 200149c:	210fad04 	addi	r4,r4,16052
 20014a0:	20034940 	call	2003494 <puts>
 20014a4:	01008074 	movhi	r4,513
 20014a8:	210fb904 	addi	r4,r4,16100
 20014ac:	20034940 	call	2003494 <puts>
 20014b0:	01008074 	movhi	r4,513
 20014b4:	210fc604 	addi	r4,r4,16152
 20014b8:	20034940 	call	2003494 <puts>
 20014bc:	01008074 	movhi	r4,513
 20014c0:	210fd304 	addi	r4,r4,16204
 20014c4:	20034940 	call	2003494 <puts>
 20014c8:	01008074 	movhi	r4,513
 20014cc:	210fe004 	addi	r4,r4,16256
 20014d0:	dfc00017 	ldw	ra,0(sp)
 20014d4:	dec00104 	addi	sp,sp,4
 20014d8:	20033d41 	jmpi	20033d4 <printf>

020014dc <animationsMenu>:
 20014dc:	defffc04 	addi	sp,sp,-16
 20014e0:	dc400215 	stw	r17,8(sp)
 20014e4:	dc000115 	stw	r16,4(sp)
 20014e8:	dfc00315 	stw	ra,12(sp)
 20014ec:	d8000015 	stw	zero,0(sp)
 20014f0:	000b883a 	mov	r5,zero
 20014f4:	04408234 	movhi	r17,520
 20014f8:	8c5c9904 	addi	r17,r17,29284
 20014fc:	04000644 	movi	r16,25
 2001500:	2945883a 	add	r2,r5,r5
 2001504:	1085883a 	add	r2,r2,r2
 2001508:	8885883a 	add	r2,r17,r2
 200150c:	10800017 	ldw	r2,0(r2)
 2001510:	01008074 	movhi	r4,513
 2001514:	210fec04 	addi	r4,r4,16304
 2001518:	11800017 	ldw	r6,0(r2)
 200151c:	20033d40 	call	20033d4 <printf>
 2001520:	d9400017 	ldw	r5,0(sp)
 2001524:	29400044 	addi	r5,r5,1
 2001528:	d9400015 	stw	r5,0(sp)
 200152c:	817ff40e 	bge	r16,r5,2001500 <__alt_mem_epcs_flash_controller+0xfdff8500>
 2001530:	d80b883a 	mov	r5,sp
 2001534:	01008074 	movhi	r4,513
 2001538:	210feb04 	addi	r4,r4,16300
 200153c:	200350c0 	call	200350c <scanf>
 2001540:	00808274 	movhi	r2,521
 2001544:	10a3b704 	addi	r2,r2,-28964
 2001548:	10800017 	ldw	r2,0(r2)
 200154c:	11000117 	ldw	r4,4(r2)
 2001550:	20026cc0 	call	20026cc <fflush>
 2001554:	d8800017 	ldw	r2,0(sp)
 2001558:	00c08234 	movhi	r3,520
 200155c:	18dc9904 	addi	r3,r3,29284
 2001560:	1085883a 	add	r2,r2,r2
 2001564:	1085883a 	add	r2,r2,r2
 2001568:	1885883a 	add	r2,r3,r2
 200156c:	10c00017 	ldw	r3,0(r2)
 2001570:	00808274 	movhi	r2,521
 2001574:	10aaf704 	addi	r2,r2,-21540
 2001578:	10c00015 	stw	r3,0(r2)
 200157c:	dfc00317 	ldw	ra,12(sp)
 2001580:	dc400217 	ldw	r17,8(sp)
 2001584:	dc000117 	ldw	r16,4(sp)
 2001588:	dec00404 	addi	sp,sp,16
 200158c:	f800283a 	ret

02001590 <main>:
 2001590:	defff404 	addi	sp,sp,-48
 2001594:	01008074 	movhi	r4,513
 2001598:	210fe504 	addi	r4,r4,16276
 200159c:	dd400715 	stw	r21,28(sp)
 20015a0:	dc800415 	stw	r18,16(sp)
 20015a4:	dc000215 	stw	r16,8(sp)
 20015a8:	dfc00b15 	stw	ra,44(sp)
 20015ac:	df000a15 	stw	fp,40(sp)
 20015b0:	ddc00915 	stw	r23,36(sp)
 20015b4:	dd800815 	stw	r22,32(sp)
 20015b8:	dd000615 	stw	r20,24(sp)
 20015bc:	dcc00515 	stw	r19,20(sp)
 20015c0:	dc400315 	stw	r17,12(sp)
 20015c4:	04808234 	movhi	r18,520
 20015c8:	949c9904 	addi	r18,r18,29284
 20015cc:	20034940 	call	2003494 <puts>
 20015d0:	90800117 	ldw	r2,4(r18)
 20015d4:	05408274 	movhi	r21,521
 20015d8:	ad6af704 	addi	r21,r21,-21540
 20015dc:	04010074 	movhi	r16,1025
 20015e0:	84281004 	addi	r16,r16,-24512
 20015e4:	a8800015 	stw	r2,0(r21)
 20015e8:	80000035 	stwio	zero,0(r16)
 20015ec:	01008274 	movhi	r4,521
 20015f0:	212b0704 	addi	r4,r4,-21476
 20015f4:	0140fa04 	movi	r5,1000
 20015f8:	01808034 	movhi	r6,512
 20015fc:	31807d04 	addi	r6,r6,500
 2001600:	000f883a 	mov	r7,zero
 2001604:	20104080 	call	2010408 <alt_alarm_start>
 2001608:	20014540 	call	2001454 <printMenu>
 200160c:	04c08274 	movhi	r19,521
 2001610:	9ce3b704 	addi	r19,r19,-28964
 2001614:	05008274 	movhi	r20,521
 2001618:	a52b0504 	addi	r20,r20,-21484
 200161c:	902d883a 	mov	r22,r18
 2001620:	05c10074 	movhi	r23,1025
 2001624:	bde81804 	addi	r23,r23,-24480
 2001628:	04410074 	movhi	r17,1025
 200162c:	8c681404 	addi	r17,r17,-24496
 2001630:	00002a06 	br	20016dc <main+0x14c>
 2001634:	00c00084 	movi	r3,2
 2001638:	10c05526 	beq	r2,r3,2001790 <main+0x200>
 200163c:	00c000c4 	movi	r3,3
 2001640:	10c05f26 	beq	r2,r3,20017c0 <main+0x230>
 2001644:	00c00104 	movi	r3,4
 2001648:	10c06026 	beq	r2,r3,20017cc <main+0x23c>
 200164c:	00c00144 	movi	r3,5
 2001650:	10c06126 	beq	r2,r3,20017d8 <main+0x248>
 2001654:	00c00184 	movi	r3,6
 2001658:	10c06226 	beq	r2,r3,20017e4 <main+0x254>
 200165c:	00c001c4 	movi	r3,7
 2001660:	10c04826 	beq	r2,r3,2001784 <main+0x1f4>
 2001664:	01008074 	movhi	r4,513
 2001668:	210f9204 	addi	r4,r4,15944
 200166c:	20034940 	call	2003494 <puts>
 2001670:	01008074 	movhi	r4,513
 2001674:	210f9604 	addi	r4,r4,15960
 2001678:	20034940 	call	2003494 <puts>
 200167c:	01008074 	movhi	r4,513
 2001680:	210f9a04 	addi	r4,r4,15976
 2001684:	20034940 	call	2003494 <puts>
 2001688:	01008074 	movhi	r4,513
 200168c:	210f9f04 	addi	r4,r4,15996
 2001690:	20034940 	call	2003494 <puts>
 2001694:	01008074 	movhi	r4,513
 2001698:	210fa404 	addi	r4,r4,16016
 200169c:	20034940 	call	2003494 <puts>
 20016a0:	01008074 	movhi	r4,513
 20016a4:	210fad04 	addi	r4,r4,16052
 20016a8:	20034940 	call	2003494 <puts>
 20016ac:	01008074 	movhi	r4,513
 20016b0:	210fb904 	addi	r4,r4,16100
 20016b4:	20034940 	call	2003494 <puts>
 20016b8:	01008074 	movhi	r4,513
 20016bc:	210fc604 	addi	r4,r4,16152
 20016c0:	20034940 	call	2003494 <puts>
 20016c4:	01008074 	movhi	r4,513
 20016c8:	210fd304 	addi	r4,r4,16204
 20016cc:	20034940 	call	2003494 <puts>
 20016d0:	01008074 	movhi	r4,513
 20016d4:	210fe004 	addi	r4,r4,16256
 20016d8:	20033d40 	call	20033d4 <printf>
 20016dc:	01008074 	movhi	r4,513
 20016e0:	210feb04 	addi	r4,r4,16300
 20016e4:	d9400104 	addi	r5,sp,4
 20016e8:	200350c0 	call	200350c <scanf>
 20016ec:	98800017 	ldw	r2,0(r19)
 20016f0:	11000117 	ldw	r4,4(r2)
 20016f4:	20026cc0 	call	20026cc <fflush>
 20016f8:	d8800117 	ldw	r2,4(sp)
 20016fc:	01000044 	movi	r4,1
 2001700:	113fcc1e 	bne	r2,r4,2001634 <__alt_mem_epcs_flash_controller+0xfdff8634>
 2001704:	d8000015 	stw	zero,0(sp)
 2001708:	000b883a 	mov	r5,zero
 200170c:	07000644 	movi	fp,25
 2001710:	2945883a 	add	r2,r5,r5
 2001714:	1085883a 	add	r2,r2,r2
 2001718:	9085883a 	add	r2,r18,r2
 200171c:	10800017 	ldw	r2,0(r2)
 2001720:	01008074 	movhi	r4,513
 2001724:	210fec04 	addi	r4,r4,16304
 2001728:	11800017 	ldw	r6,0(r2)
 200172c:	20033d40 	call	20033d4 <printf>
 2001730:	d9400017 	ldw	r5,0(sp)
 2001734:	29400044 	addi	r5,r5,1
 2001738:	d9400015 	stw	r5,0(sp)
 200173c:	e17ff40e 	bge	fp,r5,2001710 <__alt_mem_epcs_flash_controller+0xfdff8710>
 2001740:	d80b883a 	mov	r5,sp
 2001744:	01008074 	movhi	r4,513
 2001748:	210feb04 	addi	r4,r4,16300
 200174c:	200350c0 	call	200350c <scanf>
 2001750:	98800017 	ldw	r2,0(r19)
 2001754:	11000117 	ldw	r4,4(r2)
 2001758:	20026cc0 	call	20026cc <fflush>
 200175c:	d8800017 	ldw	r2,0(sp)
 2001760:	01008074 	movhi	r4,513
 2001764:	210f9204 	addi	r4,r4,15944
 2001768:	a0000015 	stw	zero,0(r20)
 200176c:	1085883a 	add	r2,r2,r2
 2001770:	1085883a 	add	r2,r2,r2
 2001774:	b085883a 	add	r2,r22,r2
 2001778:	10800017 	ldw	r2,0(r2)
 200177c:	a8800015 	stw	r2,0(r21)
 2001780:	003fba06 	br	200166c <__alt_mem_epcs_flash_controller+0xfdff866c>
 2001784:	a1000015 	stw	r4,0(r20)
 2001788:	20011200 	call	2001120 <displayGamma46ColourBars>
 200178c:	003fb506 	br	2001664 <__alt_mem_epcs_flash_controller+0xfdff8664>
 2001790:	a1000015 	stw	r4,0(r20)
 2001794:	00810004 	movi	r2,1024
 2001798:	01420004 	movi	r5,2048
 200179c:	10c00804 	addi	r3,r2,32
 20017a0:	b8800035 	stwio	r2,0(r23)
 20017a4:	88000035 	stwio	zero,0(r17)
 20017a8:	81000035 	stwio	r4,0(r16)
 20017ac:	80000035 	stwio	zero,0(r16)
 20017b0:	10800044 	addi	r2,r2,1
 20017b4:	10fffa1e 	bne	r2,r3,20017a0 <__alt_mem_epcs_flash_controller+0xfdff87a0>
 20017b8:	117ff81e 	bne	r2,r5,200179c <__alt_mem_epcs_flash_controller+0xfdff879c>
 20017bc:	003fa906 	br	2001664 <__alt_mem_epcs_flash_controller+0xfdff8664>
 20017c0:	a1000015 	stw	r4,0(r20)
 20017c4:	20004500 	call	2000450 <displayColourBars>
 20017c8:	003fa606 	br	2001664 <__alt_mem_epcs_flash_controller+0xfdff8664>
 20017cc:	a1000015 	stw	r4,0(r20)
 20017d0:	20007840 	call	2000784 <displayCIEColourBars>
 20017d4:	003fa306 	br	2001664 <__alt_mem_epcs_flash_controller+0xfdff8664>
 20017d8:	a1000015 	stw	r4,0(r20)
 20017dc:	2000ab80 	call	2000ab8 <displayGamma149ColourBars>
 20017e0:	003fa006 	br	2001664 <__alt_mem_epcs_flash_controller+0xfdff8664>
 20017e4:	a1000015 	stw	r4,0(r20)
 20017e8:	2000dec0 	call	2000dec <displayGamma98ColourBars>
 20017ec:	003f9d06 	br	2001664 <__alt_mem_epcs_flash_controller+0xfdff8664>

020017f0 <__muldf3>:
 20017f0:	deffe404 	addi	sp,sp,-112
 20017f4:	d9001115 	stw	r4,68(sp)
 20017f8:	d9401215 	stw	r5,72(sp)
 20017fc:	d9001104 	addi	r4,sp,68
 2001800:	d9400a04 	addi	r5,sp,40
 2001804:	dfc01b15 	stw	ra,108(sp)
 2001808:	d9800f15 	stw	r6,60(sp)
 200180c:	d9c01015 	stw	r7,64(sp)
 2001810:	ddc01a15 	stw	r23,104(sp)
 2001814:	dd801915 	stw	r22,100(sp)
 2001818:	dd401815 	stw	r21,96(sp)
 200181c:	dd001715 	stw	r20,92(sp)
 2001820:	dcc01615 	stw	r19,88(sp)
 2001824:	dc801515 	stw	r18,84(sp)
 2001828:	dc401415 	stw	r17,80(sp)
 200182c:	dc001315 	stw	r16,76(sp)
 2001830:	20023580 	call	2002358 <__unpack_d>
 2001834:	d9000f04 	addi	r4,sp,60
 2001838:	d9400504 	addi	r5,sp,20
 200183c:	20023580 	call	2002358 <__unpack_d>
 2001840:	d8c00a17 	ldw	r3,40(sp)
 2001844:	00800044 	movi	r2,1
 2001848:	10c01136 	bltu	r2,r3,2001890 <__muldf3+0xa0>
 200184c:	d8c00b17 	ldw	r3,44(sp)
 2001850:	d8800617 	ldw	r2,24(sp)
 2001854:	d9000a04 	addi	r4,sp,40
 2001858:	1884c03a 	cmpne	r2,r3,r2
 200185c:	d8800b15 	stw	r2,44(sp)
 2001860:	20021340 	call	2002134 <__pack_d>
 2001864:	dfc01b17 	ldw	ra,108(sp)
 2001868:	ddc01a17 	ldw	r23,104(sp)
 200186c:	dd801917 	ldw	r22,100(sp)
 2001870:	dd401817 	ldw	r21,96(sp)
 2001874:	dd001717 	ldw	r20,92(sp)
 2001878:	dcc01617 	ldw	r19,88(sp)
 200187c:	dc801517 	ldw	r18,84(sp)
 2001880:	dc401417 	ldw	r17,80(sp)
 2001884:	dc001317 	ldw	r16,76(sp)
 2001888:	dec01c04 	addi	sp,sp,112
 200188c:	f800283a 	ret
 2001890:	d9000517 	ldw	r4,20(sp)
 2001894:	11000636 	bltu	r2,r4,20018b0 <__muldf3+0xc0>
 2001898:	d8800617 	ldw	r2,24(sp)
 200189c:	d8c00b17 	ldw	r3,44(sp)
 20018a0:	d9000504 	addi	r4,sp,20
 20018a4:	1884c03a 	cmpne	r2,r3,r2
 20018a8:	d8800615 	stw	r2,24(sp)
 20018ac:	003fec06 	br	2001860 <__alt_mem_epcs_flash_controller+0xfdff8860>
 20018b0:	00800104 	movi	r2,4
 20018b4:	1880051e 	bne	r3,r2,20018cc <__muldf3+0xdc>
 20018b8:	00800084 	movi	r2,2
 20018bc:	20bfe31e 	bne	r4,r2,200184c <__alt_mem_epcs_flash_controller+0xfdff884c>
 20018c0:	01008234 	movhi	r4,520
 20018c4:	211b0a04 	addi	r4,r4,27688
 20018c8:	003fe506 	br	2001860 <__alt_mem_epcs_flash_controller+0xfdff8860>
 20018cc:	2080031e 	bne	r4,r2,20018dc <__muldf3+0xec>
 20018d0:	00800084 	movi	r2,2
 20018d4:	18bffa26 	beq	r3,r2,20018c0 <__alt_mem_epcs_flash_controller+0xfdff88c0>
 20018d8:	003fef06 	br	2001898 <__alt_mem_epcs_flash_controller+0xfdff8898>
 20018dc:	00800084 	movi	r2,2
 20018e0:	18bfda26 	beq	r3,r2,200184c <__alt_mem_epcs_flash_controller+0xfdff884c>
 20018e4:	20bfec26 	beq	r4,r2,2001898 <__alt_mem_epcs_flash_controller+0xfdff8898>
 20018e8:	dc000d17 	ldw	r16,52(sp)
 20018ec:	dd000817 	ldw	r20,32(sp)
 20018f0:	dc800917 	ldw	r18,36(sp)
 20018f4:	8009883a 	mov	r4,r16
 20018f8:	000b883a 	mov	r5,zero
 20018fc:	a00d883a 	mov	r6,r20
 2001900:	000f883a 	mov	r7,zero
 2001904:	2001f780 	call	2001f78 <__muldi3>
 2001908:	dc400e17 	ldw	r17,56(sp)
 200190c:	9009883a 	mov	r4,r18
 2001910:	800d883a 	mov	r6,r16
 2001914:	000b883a 	mov	r5,zero
 2001918:	000f883a 	mov	r7,zero
 200191c:	102f883a 	mov	r23,r2
 2001920:	1827883a 	mov	r19,r3
 2001924:	2001f780 	call	2001f78 <__muldi3>
 2001928:	900d883a 	mov	r6,r18
 200192c:	8809883a 	mov	r4,r17
 2001930:	000b883a 	mov	r5,zero
 2001934:	000f883a 	mov	r7,zero
 2001938:	102b883a 	mov	r21,r2
 200193c:	1821883a 	mov	r16,r3
 2001940:	2001f780 	call	2001f78 <__muldi3>
 2001944:	8809883a 	mov	r4,r17
 2001948:	000b883a 	mov	r5,zero
 200194c:	a00d883a 	mov	r6,r20
 2001950:	000f883a 	mov	r7,zero
 2001954:	102d883a 	mov	r22,r2
 2001958:	1825883a 	mov	r18,r3
 200195c:	2001f780 	call	2001f78 <__muldi3>
 2001960:	154b883a 	add	r5,r2,r21
 2001964:	2889803a 	cmpltu	r4,r5,r2
 2001968:	1c07883a 	add	r3,r3,r16
 200196c:	20c9883a 	add	r4,r4,r3
 2001970:	24004b36 	bltu	r4,r16,2001aa0 <__muldf3+0x2b0>
 2001974:	8100011e 	bne	r16,r4,200197c <__muldf3+0x18c>
 2001978:	2d404936 	bltu	r5,r21,2001aa0 <__muldf3+0x2b0>
 200197c:	0011883a 	mov	r8,zero
 2001980:	0007883a 	mov	r3,zero
 2001984:	2ccb883a 	add	r5,r5,r19
 2001988:	b80d883a 	mov	r6,r23
 200198c:	2cc0012e 	bgeu	r5,r19,2001994 <__muldf3+0x1a4>
 2001990:	02000044 	movi	r8,1
 2001994:	258f883a 	add	r7,r4,r22
 2001998:	3909803a 	cmpltu	r4,r7,r4
 200199c:	da400c17 	ldw	r9,48(sp)
 20019a0:	2489883a 	add	r4,r4,r18
 20019a4:	d8800717 	ldw	r2,28(sp)
 20019a8:	20c9883a 	add	r4,r4,r3
 20019ac:	da800b17 	ldw	r10,44(sp)
 20019b0:	d8c00617 	ldw	r3,24(sp)
 20019b4:	3a11883a 	add	r8,r7,r8
 20019b8:	4885883a 	add	r2,r9,r2
 20019bc:	50c6c03a 	cmpne	r3,r10,r3
 20019c0:	41cf803a 	cmpltu	r7,r8,r7
 20019c4:	12400104 	addi	r9,r2,4
 20019c8:	d8c00115 	stw	r3,4(sp)
 20019cc:	3909883a 	add	r4,r7,r4
 20019d0:	da400215 	stw	r9,8(sp)
 20019d4:	03480034 	movhi	r13,8192
 20019d8:	6b7fffc4 	addi	r13,r13,-1
 20019dc:	4007883a 	mov	r3,r8
 20019e0:	6900102e 	bgeu	r13,r4,2001a24 <__muldf3+0x234>
 20019e4:	10800144 	addi	r2,r2,5
 20019e8:	180ed07a 	srli	r7,r3,1
 20019ec:	18c0004c 	andi	r3,r3,1
 20019f0:	201097fa 	slli	r8,r4,31
 20019f4:	281697fa 	slli	r11,r5,31
 20019f8:	2008d07a 	srli	r4,r4,1
 20019fc:	3014d07a 	srli	r10,r6,1
 2001a00:	2812d07a 	srli	r9,r5,1
 2001a04:	1019883a 	mov	r12,r2
 2001a08:	18000226 	beq	r3,zero,2001a14 <__muldf3+0x224>
 2001a0c:	5a8cb03a 	or	r6,r11,r10
 2001a10:	49600034 	orhi	r5,r9,32768
 2001a14:	41c6b03a 	or	r3,r8,r7
 2001a18:	10800044 	addi	r2,r2,1
 2001a1c:	693ff236 	bltu	r13,r4,20019e8 <__alt_mem_epcs_flash_controller+0xfdff89e8>
 2001a20:	db000215 	stw	r12,8(sp)
 2001a24:	03440034 	movhi	r13,4096
 2001a28:	6b7fffc4 	addi	r13,r13,-1
 2001a2c:	69001336 	bltu	r13,r4,2001a7c <__muldf3+0x28c>
 2001a30:	d8800217 	ldw	r2,8(sp)
 2001a34:	10bfffc4 	addi	r2,r2,-1
 2001a38:	18d3883a 	add	r9,r3,r3
 2001a3c:	48c7803a 	cmpltu	r3,r9,r3
 2001a40:	2109883a 	add	r4,r4,r4
 2001a44:	190f883a 	add	r7,r3,r4
 2001a48:	3191883a 	add	r8,r6,r6
 2001a4c:	4197803a 	cmpltu	r11,r8,r6
 2001a50:	2955883a 	add	r10,r5,r5
 2001a54:	1019883a 	mov	r12,r2
 2001a58:	4807883a 	mov	r3,r9
 2001a5c:	3809883a 	mov	r4,r7
 2001a60:	2800010e 	bge	r5,zero,2001a68 <__muldf3+0x278>
 2001a64:	48c00054 	ori	r3,r9,1
 2001a68:	400d883a 	mov	r6,r8
 2001a6c:	5a8b883a 	add	r5,r11,r10
 2001a70:	10bfffc4 	addi	r2,r2,-1
 2001a74:	69fff02e 	bgeu	r13,r7,2001a38 <__alt_mem_epcs_flash_controller+0xfdff8a38>
 2001a78:	db000215 	stw	r12,8(sp)
 2001a7c:	18803fcc 	andi	r2,r3,255
 2001a80:	01c02004 	movi	r7,128
 2001a84:	11c00926 	beq	r2,r7,2001aac <__muldf3+0x2bc>
 2001a88:	008000c4 	movi	r2,3
 2001a8c:	d9000415 	stw	r4,16(sp)
 2001a90:	d8c00315 	stw	r3,12(sp)
 2001a94:	d8800015 	stw	r2,0(sp)
 2001a98:	d809883a 	mov	r4,sp
 2001a9c:	003f7006 	br	2001860 <__alt_mem_epcs_flash_controller+0xfdff8860>
 2001aa0:	0011883a 	mov	r8,zero
 2001aa4:	00c00044 	movi	r3,1
 2001aa8:	003fb606 	br	2001984 <__alt_mem_epcs_flash_controller+0xfdff8984>
 2001aac:	19c0400c 	andi	r7,r3,256
 2001ab0:	383ff51e 	bne	r7,zero,2001a88 <__alt_mem_epcs_flash_controller+0xfdff8a88>
 2001ab4:	314ab03a 	or	r5,r6,r5
 2001ab8:	283ff326 	beq	r5,zero,2001a88 <__alt_mem_epcs_flash_controller+0xfdff8a88>
 2001abc:	1885883a 	add	r2,r3,r2
 2001ac0:	10cb803a 	cmpltu	r5,r2,r3
 2001ac4:	00ffc004 	movi	r3,-256
 2001ac8:	10c6703a 	and	r3,r2,r3
 2001acc:	2909883a 	add	r4,r5,r4
 2001ad0:	003fed06 	br	2001a88 <__alt_mem_epcs_flash_controller+0xfdff8a88>

02001ad4 <__divdf3>:
 2001ad4:	defff104 	addi	sp,sp,-60
 2001ad8:	d9000c15 	stw	r4,48(sp)
 2001adc:	d9400d15 	stw	r5,52(sp)
 2001ae0:	d9000c04 	addi	r4,sp,48
 2001ae4:	d9400504 	addi	r5,sp,20
 2001ae8:	dfc00e15 	stw	ra,56(sp)
 2001aec:	d9800a15 	stw	r6,40(sp)
 2001af0:	d9c00b15 	stw	r7,44(sp)
 2001af4:	20023580 	call	2002358 <__unpack_d>
 2001af8:	d9000a04 	addi	r4,sp,40
 2001afc:	d80b883a 	mov	r5,sp
 2001b00:	20023580 	call	2002358 <__unpack_d>
 2001b04:	d8c00517 	ldw	r3,20(sp)
 2001b08:	00800044 	movi	r2,1
 2001b0c:	10c00536 	bltu	r2,r3,2001b24 <__divdf3+0x50>
 2001b10:	d9000504 	addi	r4,sp,20
 2001b14:	20021340 	call	2002134 <__pack_d>
 2001b18:	dfc00e17 	ldw	ra,56(sp)
 2001b1c:	dec00f04 	addi	sp,sp,60
 2001b20:	f800283a 	ret
 2001b24:	d9000017 	ldw	r4,0(sp)
 2001b28:	11000536 	bltu	r2,r4,2001b40 <__divdf3+0x6c>
 2001b2c:	d809883a 	mov	r4,sp
 2001b30:	20021340 	call	2002134 <__pack_d>
 2001b34:	dfc00e17 	ldw	ra,56(sp)
 2001b38:	dec00f04 	addi	sp,sp,60
 2001b3c:	f800283a 	ret
 2001b40:	d9800617 	ldw	r6,24(sp)
 2001b44:	d9400117 	ldw	r5,4(sp)
 2001b48:	00800104 	movi	r2,4
 2001b4c:	314af03a 	xor	r5,r6,r5
 2001b50:	d9400615 	stw	r5,24(sp)
 2001b54:	18800226 	beq	r3,r2,2001b60 <__divdf3+0x8c>
 2001b58:	01400084 	movi	r5,2
 2001b5c:	1940041e 	bne	r3,r5,2001b70 <__divdf3+0x9c>
 2001b60:	193feb1e 	bne	r3,r4,2001b10 <__alt_mem_epcs_flash_controller+0xfdff8b10>
 2001b64:	01008234 	movhi	r4,520
 2001b68:	211b0a04 	addi	r4,r4,27688
 2001b6c:	003fe906 	br	2001b14 <__alt_mem_epcs_flash_controller+0xfdff8b14>
 2001b70:	20803326 	beq	r4,r2,2001c40 <__divdf3+0x16c>
 2001b74:	21403726 	beq	r4,r5,2001c54 <__divdf3+0x180>
 2001b78:	d8800217 	ldw	r2,8(sp)
 2001b7c:	d9000717 	ldw	r4,28(sp)
 2001b80:	d8c00917 	ldw	r3,36(sp)
 2001b84:	da000417 	ldw	r8,16(sp)
 2001b88:	2089c83a 	sub	r4,r4,r2
 2001b8c:	d9000715 	stw	r4,28(sp)
 2001b90:	d8800817 	ldw	r2,32(sp)
 2001b94:	dbc00317 	ldw	r15,12(sp)
 2001b98:	1a000236 	bltu	r3,r8,2001ba4 <__divdf3+0xd0>
 2001b9c:	40c0081e 	bne	r8,r3,2001bc0 <__divdf3+0xec>
 2001ba0:	13c0072e 	bgeu	r2,r15,2001bc0 <__divdf3+0xec>
 2001ba4:	108b883a 	add	r5,r2,r2
 2001ba8:	288d803a 	cmpltu	r6,r5,r2
 2001bac:	18c7883a 	add	r3,r3,r3
 2001bb0:	213fffc4 	addi	r4,r4,-1
 2001bb4:	2805883a 	mov	r2,r5
 2001bb8:	30c7883a 	add	r3,r6,r3
 2001bbc:	d9000715 	stw	r4,28(sp)
 2001bc0:	01400f44 	movi	r5,61
 2001bc4:	000f883a 	mov	r7,zero
 2001bc8:	01040034 	movhi	r4,4096
 2001bcc:	0019883a 	mov	r12,zero
 2001bd0:	001b883a 	mov	r13,zero
 2001bd4:	201697fa 	slli	r11,r4,31
 2001bd8:	3814d07a 	srli	r10,r7,1
 2001bdc:	297fffc4 	addi	r5,r5,-1
 2001be0:	1a000936 	bltu	r3,r8,2001c08 <__divdf3+0x134>
 2001be4:	13cdc83a 	sub	r6,r2,r15
 2001be8:	1193803a 	cmpltu	r9,r2,r6
 2001bec:	1a1dc83a 	sub	r14,r3,r8
 2001bf0:	40c0011e 	bne	r8,r3,2001bf8 <__divdf3+0x124>
 2001bf4:	13c00436 	bltu	r2,r15,2001c08 <__divdf3+0x134>
 2001bf8:	3005883a 	mov	r2,r6
 2001bfc:	7247c83a 	sub	r3,r14,r9
 2001c00:	61d8b03a 	or	r12,r12,r7
 2001c04:	691ab03a 	or	r13,r13,r4
 2001c08:	108d883a 	add	r6,r2,r2
 2001c0c:	3093803a 	cmpltu	r9,r6,r2
 2001c10:	18c7883a 	add	r3,r3,r3
 2001c14:	5a8eb03a 	or	r7,r11,r10
 2001c18:	2008d07a 	srli	r4,r4,1
 2001c1c:	3005883a 	mov	r2,r6
 2001c20:	48c7883a 	add	r3,r9,r3
 2001c24:	283feb1e 	bne	r5,zero,2001bd4 <__alt_mem_epcs_flash_controller+0xfdff8bd4>
 2001c28:	61003fcc 	andi	r4,r12,255
 2001c2c:	01402004 	movi	r5,128
 2001c30:	21400b26 	beq	r4,r5,2001c60 <__divdf3+0x18c>
 2001c34:	db000815 	stw	r12,32(sp)
 2001c38:	db400915 	stw	r13,36(sp)
 2001c3c:	003fb406 	br	2001b10 <__alt_mem_epcs_flash_controller+0xfdff8b10>
 2001c40:	d8000815 	stw	zero,32(sp)
 2001c44:	d8000915 	stw	zero,36(sp)
 2001c48:	d8000715 	stw	zero,28(sp)
 2001c4c:	d9000504 	addi	r4,sp,20
 2001c50:	003fb006 	br	2001b14 <__alt_mem_epcs_flash_controller+0xfdff8b14>
 2001c54:	d8800515 	stw	r2,20(sp)
 2001c58:	d9000504 	addi	r4,sp,20
 2001c5c:	003fad06 	br	2001b14 <__alt_mem_epcs_flash_controller+0xfdff8b14>
 2001c60:	6140400c 	andi	r5,r12,256
 2001c64:	283ff31e 	bne	r5,zero,2001c34 <__alt_mem_epcs_flash_controller+0xfdff8c34>
 2001c68:	30c4b03a 	or	r2,r6,r3
 2001c6c:	103ff126 	beq	r2,zero,2001c34 <__alt_mem_epcs_flash_controller+0xfdff8c34>
 2001c70:	6109883a 	add	r4,r12,r4
 2001c74:	2305803a 	cmpltu	r2,r4,r12
 2001c78:	033fc004 	movi	r12,-256
 2001c7c:	2318703a 	and	r12,r4,r12
 2001c80:	135b883a 	add	r13,r2,r13
 2001c84:	003feb06 	br	2001c34 <__alt_mem_epcs_flash_controller+0xfdff8c34>

02001c88 <__floatsidf>:
 2001c88:	2004d7fa 	srli	r2,r4,31
 2001c8c:	defff904 	addi	sp,sp,-28
 2001c90:	00c000c4 	movi	r3,3
 2001c94:	dfc00615 	stw	ra,24(sp)
 2001c98:	dc000515 	stw	r16,20(sp)
 2001c9c:	d8c00015 	stw	r3,0(sp)
 2001ca0:	d8800115 	stw	r2,4(sp)
 2001ca4:	2000081e 	bne	r4,zero,2001cc8 <__floatsidf+0x40>
 2001ca8:	00800084 	movi	r2,2
 2001cac:	d8800015 	stw	r2,0(sp)
 2001cb0:	d809883a 	mov	r4,sp
 2001cb4:	20021340 	call	2002134 <__pack_d>
 2001cb8:	dfc00617 	ldw	ra,24(sp)
 2001cbc:	dc000517 	ldw	r16,20(sp)
 2001cc0:	dec00704 	addi	sp,sp,28
 2001cc4:	f800283a 	ret
 2001cc8:	00c00f04 	movi	r3,60
 2001ccc:	d8c00215 	stw	r3,8(sp)
 2001cd0:	10000f1e 	bne	r2,zero,2001d10 <__floatsidf+0x88>
 2001cd4:	2021883a 	mov	r16,r4
 2001cd8:	8009883a 	mov	r4,r16
 2001cdc:	20020880 	call	2002088 <__clzsi2>
 2001ce0:	11000744 	addi	r4,r2,29
 2001ce4:	0100110e 	bge	zero,r4,2001d2c <__floatsidf+0xa4>
 2001ce8:	10ffff44 	addi	r3,r2,-3
 2001cec:	18001216 	blt	r3,zero,2001d38 <__floatsidf+0xb0>
 2001cf0:	80c6983a 	sll	r3,r16,r3
 2001cf4:	0009883a 	mov	r4,zero
 2001cf8:	014007c4 	movi	r5,31
 2001cfc:	2885c83a 	sub	r2,r5,r2
 2001d00:	d9000315 	stw	r4,12(sp)
 2001d04:	d8c00415 	stw	r3,16(sp)
 2001d08:	d8800215 	stw	r2,8(sp)
 2001d0c:	003fe806 	br	2001cb0 <__alt_mem_epcs_flash_controller+0xfdff8cb0>
 2001d10:	00a00034 	movhi	r2,32768
 2001d14:	20800e26 	beq	r4,r2,2001d50 <__floatsidf+0xc8>
 2001d18:	0121c83a 	sub	r16,zero,r4
 2001d1c:	8009883a 	mov	r4,r16
 2001d20:	20020880 	call	2002088 <__clzsi2>
 2001d24:	11000744 	addi	r4,r2,29
 2001d28:	013fef16 	blt	zero,r4,2001ce8 <__alt_mem_epcs_flash_controller+0xfdff8ce8>
 2001d2c:	dc000315 	stw	r16,12(sp)
 2001d30:	d8000415 	stw	zero,16(sp)
 2001d34:	003fde06 	br	2001cb0 <__alt_mem_epcs_flash_controller+0xfdff8cb0>
 2001d38:	800ad07a 	srli	r5,r16,1
 2001d3c:	00c007c4 	movi	r3,31
 2001d40:	1907c83a 	sub	r3,r3,r4
 2001d44:	28c6d83a 	srl	r3,r5,r3
 2001d48:	8108983a 	sll	r4,r16,r4
 2001d4c:	003fea06 	br	2001cf8 <__alt_mem_epcs_flash_controller+0xfdff8cf8>
 2001d50:	0005883a 	mov	r2,zero
 2001d54:	00f07834 	movhi	r3,49632
 2001d58:	003fd706 	br	2001cb8 <__alt_mem_epcs_flash_controller+0xfdff8cb8>

02001d5c <__fixdfsi>:
 2001d5c:	defff804 	addi	sp,sp,-32
 2001d60:	d9000515 	stw	r4,20(sp)
 2001d64:	d9400615 	stw	r5,24(sp)
 2001d68:	d9000504 	addi	r4,sp,20
 2001d6c:	d80b883a 	mov	r5,sp
 2001d70:	dfc00715 	stw	ra,28(sp)
 2001d74:	20023580 	call	2002358 <__unpack_d>
 2001d78:	d8800017 	ldw	r2,0(sp)
 2001d7c:	00c00084 	movi	r3,2
 2001d80:	10c01c26 	beq	r2,r3,2001df4 <__fixdfsi+0x98>
 2001d84:	00c00044 	movi	r3,1
 2001d88:	18801a2e 	bgeu	r3,r2,2001df4 <__fixdfsi+0x98>
 2001d8c:	00c00104 	movi	r3,4
 2001d90:	10c01126 	beq	r2,r3,2001dd8 <__fixdfsi+0x7c>
 2001d94:	d8800217 	ldw	r2,8(sp)
 2001d98:	10001616 	blt	r2,zero,2001df4 <__fixdfsi+0x98>
 2001d9c:	00c00784 	movi	r3,30
 2001da0:	18800d16 	blt	r3,r2,2001dd8 <__fixdfsi+0x7c>
 2001da4:	00c00f04 	movi	r3,60
 2001da8:	1885c83a 	sub	r2,r3,r2
 2001dac:	10fff804 	addi	r3,r2,-32
 2001db0:	d9400317 	ldw	r5,12(sp)
 2001db4:	d9000417 	ldw	r4,16(sp)
 2001db8:	18001216 	blt	r3,zero,2001e04 <__fixdfsi+0xa8>
 2001dbc:	20c4d83a 	srl	r2,r4,r3
 2001dc0:	d8c00117 	ldw	r3,4(sp)
 2001dc4:	18000826 	beq	r3,zero,2001de8 <__fixdfsi+0x8c>
 2001dc8:	0085c83a 	sub	r2,zero,r2
 2001dcc:	dfc00717 	ldw	ra,28(sp)
 2001dd0:	dec00804 	addi	sp,sp,32
 2001dd4:	f800283a 	ret
 2001dd8:	d8800117 	ldw	r2,4(sp)
 2001ddc:	00e00034 	movhi	r3,32768
 2001de0:	1005003a 	cmpeq	r2,r2,zero
 2001de4:	1885c83a 	sub	r2,r3,r2
 2001de8:	dfc00717 	ldw	ra,28(sp)
 2001dec:	dec00804 	addi	sp,sp,32
 2001df0:	f800283a 	ret
 2001df4:	0005883a 	mov	r2,zero
 2001df8:	dfc00717 	ldw	ra,28(sp)
 2001dfc:	dec00804 	addi	sp,sp,32
 2001e00:	f800283a 	ret
 2001e04:	2008907a 	slli	r4,r4,1
 2001e08:	018007c4 	movi	r6,31
 2001e0c:	308dc83a 	sub	r6,r6,r2
 2001e10:	2188983a 	sll	r4,r4,r6
 2001e14:	2884d83a 	srl	r2,r5,r2
 2001e18:	2084b03a 	or	r2,r4,r2
 2001e1c:	003fe806 	br	2001dc0 <__alt_mem_epcs_flash_controller+0xfdff8dc0>

02001e20 <udivmodsi4>:
 2001e20:	2005883a 	mov	r2,r4
 2001e24:	2900182e 	bgeu	r5,r4,2001e88 <udivmodsi4+0x68>
 2001e28:	28001716 	blt	r5,zero,2001e88 <udivmodsi4+0x68>
 2001e2c:	01000804 	movi	r4,32
 2001e30:	00c00044 	movi	r3,1
 2001e34:	00000206 	br	2001e40 <udivmodsi4+0x20>
 2001e38:	20001126 	beq	r4,zero,2001e80 <udivmodsi4+0x60>
 2001e3c:	28000516 	blt	r5,zero,2001e54 <udivmodsi4+0x34>
 2001e40:	294b883a 	add	r5,r5,r5
 2001e44:	213fffc4 	addi	r4,r4,-1
 2001e48:	18c7883a 	add	r3,r3,r3
 2001e4c:	28bffa36 	bltu	r5,r2,2001e38 <__alt_mem_epcs_flash_controller+0xfdff8e38>
 2001e50:	18000b26 	beq	r3,zero,2001e80 <udivmodsi4+0x60>
 2001e54:	0009883a 	mov	r4,zero
 2001e58:	11400236 	bltu	r2,r5,2001e64 <udivmodsi4+0x44>
 2001e5c:	1145c83a 	sub	r2,r2,r5
 2001e60:	20c8b03a 	or	r4,r4,r3
 2001e64:	1806d07a 	srli	r3,r3,1
 2001e68:	280ad07a 	srli	r5,r5,1
 2001e6c:	183ffa1e 	bne	r3,zero,2001e58 <__alt_mem_epcs_flash_controller+0xfdff8e58>
 2001e70:	3000021e 	bne	r6,zero,2001e7c <udivmodsi4+0x5c>
 2001e74:	2005883a 	mov	r2,r4
 2001e78:	f800283a 	ret
 2001e7c:	f800283a 	ret
 2001e80:	0009883a 	mov	r4,zero
 2001e84:	003ffa06 	br	2001e70 <__alt_mem_epcs_flash_controller+0xfdff8e70>
 2001e88:	00c00044 	movi	r3,1
 2001e8c:	0009883a 	mov	r4,zero
 2001e90:	003ff106 	br	2001e58 <__alt_mem_epcs_flash_controller+0xfdff8e58>

02001e94 <__divsi3>:
 2001e94:	defffe04 	addi	sp,sp,-8
 2001e98:	dfc00115 	stw	ra,4(sp)
 2001e9c:	dc000015 	stw	r16,0(sp)
 2001ea0:	20000a16 	blt	r4,zero,2001ecc <__divsi3+0x38>
 2001ea4:	0021883a 	mov	r16,zero
 2001ea8:	28000b16 	blt	r5,zero,2001ed8 <__divsi3+0x44>
 2001eac:	000d883a 	mov	r6,zero
 2001eb0:	2001e200 	call	2001e20 <udivmodsi4>
 2001eb4:	80000126 	beq	r16,zero,2001ebc <__divsi3+0x28>
 2001eb8:	0085c83a 	sub	r2,zero,r2
 2001ebc:	dfc00117 	ldw	ra,4(sp)
 2001ec0:	dc000017 	ldw	r16,0(sp)
 2001ec4:	dec00204 	addi	sp,sp,8
 2001ec8:	f800283a 	ret
 2001ecc:	0109c83a 	sub	r4,zero,r4
 2001ed0:	04000044 	movi	r16,1
 2001ed4:	283ff50e 	bge	r5,zero,2001eac <__alt_mem_epcs_flash_controller+0xfdff8eac>
 2001ed8:	014bc83a 	sub	r5,zero,r5
 2001edc:	8400005c 	xori	r16,r16,1
 2001ee0:	003ff206 	br	2001eac <__alt_mem_epcs_flash_controller+0xfdff8eac>

02001ee4 <__modsi3>:
 2001ee4:	deffff04 	addi	sp,sp,-4
 2001ee8:	dfc00015 	stw	ra,0(sp)
 2001eec:	20000516 	blt	r4,zero,2001f04 <__modsi3+0x20>
 2001ef0:	28000c16 	blt	r5,zero,2001f24 <__modsi3+0x40>
 2001ef4:	01800044 	movi	r6,1
 2001ef8:	dfc00017 	ldw	ra,0(sp)
 2001efc:	dec00104 	addi	sp,sp,4
 2001f00:	2001e201 	jmpi	2001e20 <udivmodsi4>
 2001f04:	0109c83a 	sub	r4,zero,r4
 2001f08:	28000b16 	blt	r5,zero,2001f38 <__modsi3+0x54>
 2001f0c:	01800044 	movi	r6,1
 2001f10:	2001e200 	call	2001e20 <udivmodsi4>
 2001f14:	0085c83a 	sub	r2,zero,r2
 2001f18:	dfc00017 	ldw	ra,0(sp)
 2001f1c:	dec00104 	addi	sp,sp,4
 2001f20:	f800283a 	ret
 2001f24:	014bc83a 	sub	r5,zero,r5
 2001f28:	01800044 	movi	r6,1
 2001f2c:	dfc00017 	ldw	ra,0(sp)
 2001f30:	dec00104 	addi	sp,sp,4
 2001f34:	2001e201 	jmpi	2001e20 <udivmodsi4>
 2001f38:	014bc83a 	sub	r5,zero,r5
 2001f3c:	003ff306 	br	2001f0c <__alt_mem_epcs_flash_controller+0xfdff8f0c>

02001f40 <__udivsi3>:
 2001f40:	000d883a 	mov	r6,zero
 2001f44:	2001e201 	jmpi	2001e20 <udivmodsi4>

02001f48 <__umodsi3>:
 2001f48:	01800044 	movi	r6,1
 2001f4c:	2001e201 	jmpi	2001e20 <udivmodsi4>

02001f50 <__mulsi3>:
 2001f50:	0005883a 	mov	r2,zero
 2001f54:	20000726 	beq	r4,zero,2001f74 <__mulsi3+0x24>
 2001f58:	20c0004c 	andi	r3,r4,1
 2001f5c:	2008d07a 	srli	r4,r4,1
 2001f60:	18000126 	beq	r3,zero,2001f68 <__mulsi3+0x18>
 2001f64:	1145883a 	add	r2,r2,r5
 2001f68:	294b883a 	add	r5,r5,r5
 2001f6c:	203ffa1e 	bne	r4,zero,2001f58 <__alt_mem_epcs_flash_controller+0xfdff8f58>
 2001f70:	f800283a 	ret
 2001f74:	f800283a 	ret

02001f78 <__muldi3>:
 2001f78:	defff604 	addi	sp,sp,-40
 2001f7c:	dd400515 	stw	r21,20(sp)
 2001f80:	dd000415 	stw	r20,16(sp)
 2001f84:	257fffcc 	andi	r21,r4,65535
 2001f88:	353fffcc 	andi	r20,r6,65535
 2001f8c:	dcc00315 	stw	r19,12(sp)
 2001f90:	3026d43a 	srli	r19,r6,16
 2001f94:	dd800615 	stw	r22,24(sp)
 2001f98:	dc800215 	stw	r18,8(sp)
 2001f9c:	dc400115 	stw	r17,4(sp)
 2001fa0:	2024d43a 	srli	r18,r4,16
 2001fa4:	2023883a 	mov	r17,r4
 2001fa8:	282d883a 	mov	r22,r5
 2001fac:	a009883a 	mov	r4,r20
 2001fb0:	a80b883a 	mov	r5,r21
 2001fb4:	dfc00915 	stw	ra,36(sp)
 2001fb8:	df000815 	stw	fp,32(sp)
 2001fbc:	ddc00715 	stw	r23,28(sp)
 2001fc0:	3839883a 	mov	fp,r7
 2001fc4:	dc000015 	stw	r16,0(sp)
 2001fc8:	3021883a 	mov	r16,r6
 2001fcc:	2001f500 	call	2001f50 <__mulsi3>
 2001fd0:	a80b883a 	mov	r5,r21
 2001fd4:	9809883a 	mov	r4,r19
 2001fd8:	102f883a 	mov	r23,r2
 2001fdc:	2001f500 	call	2001f50 <__mulsi3>
 2001fe0:	a009883a 	mov	r4,r20
 2001fe4:	900b883a 	mov	r5,r18
 2001fe8:	102b883a 	mov	r21,r2
 2001fec:	2001f500 	call	2001f50 <__mulsi3>
 2001ff0:	9809883a 	mov	r4,r19
 2001ff4:	900b883a 	mov	r5,r18
 2001ff8:	1029883a 	mov	r20,r2
 2001ffc:	2001f500 	call	2001f50 <__mulsi3>
 2002000:	1007883a 	mov	r3,r2
 2002004:	b804d43a 	srli	r2,r23,16
 2002008:	a549883a 	add	r4,r20,r21
 200200c:	2089883a 	add	r4,r4,r2
 2002010:	2500022e 	bgeu	r4,r20,200201c <__muldi3+0xa4>
 2002014:	00800074 	movhi	r2,1
 2002018:	1887883a 	add	r3,r3,r2
 200201c:	200cd43a 	srli	r6,r4,16
 2002020:	2004943a 	slli	r2,r4,16
 2002024:	e00b883a 	mov	r5,fp
 2002028:	8809883a 	mov	r4,r17
 200202c:	bdffffcc 	andi	r23,r23,65535
 2002030:	19a3883a 	add	r17,r3,r6
 2002034:	15ef883a 	add	r23,r2,r23
 2002038:	2001f500 	call	2001f50 <__mulsi3>
 200203c:	8009883a 	mov	r4,r16
 2002040:	b00b883a 	mov	r5,r22
 2002044:	1025883a 	mov	r18,r2
 2002048:	2001f500 	call	2001f50 <__mulsi3>
 200204c:	9085883a 	add	r2,r18,r2
 2002050:	1447883a 	add	r3,r2,r17
 2002054:	b805883a 	mov	r2,r23
 2002058:	dfc00917 	ldw	ra,36(sp)
 200205c:	df000817 	ldw	fp,32(sp)
 2002060:	ddc00717 	ldw	r23,28(sp)
 2002064:	dd800617 	ldw	r22,24(sp)
 2002068:	dd400517 	ldw	r21,20(sp)
 200206c:	dd000417 	ldw	r20,16(sp)
 2002070:	dcc00317 	ldw	r19,12(sp)
 2002074:	dc800217 	ldw	r18,8(sp)
 2002078:	dc400117 	ldw	r17,4(sp)
 200207c:	dc000017 	ldw	r16,0(sp)
 2002080:	dec00a04 	addi	sp,sp,40
 2002084:	f800283a 	ret

02002088 <__clzsi2>:
 2002088:	00bfffd4 	movui	r2,65535
 200208c:	11000b36 	bltu	r2,r4,20020bc <__clzsi2+0x34>
 2002090:	00803fc4 	movi	r2,255
 2002094:	11001e2e 	bgeu	r2,r4,2002110 <__clzsi2+0x88>
 2002098:	00c00204 	movi	r3,8
 200209c:	20c8d83a 	srl	r4,r4,r3
 20020a0:	00c08234 	movhi	r3,520
 20020a4:	18db0f04 	addi	r3,r3,27708
 20020a8:	00800604 	movi	r2,24
 20020ac:	1909883a 	add	r4,r3,r4
 20020b0:	20c00003 	ldbu	r3,0(r4)
 20020b4:	10c5c83a 	sub	r2,r2,r3
 20020b8:	f800283a 	ret
 20020bc:	00804034 	movhi	r2,256
 20020c0:	10bfffc4 	addi	r2,r2,-1
 20020c4:	11000936 	bltu	r2,r4,20020ec <__clzsi2+0x64>
 20020c8:	00800404 	movi	r2,16
 20020cc:	1007883a 	mov	r3,r2
 20020d0:	20c8d83a 	srl	r4,r4,r3
 20020d4:	00c08234 	movhi	r3,520
 20020d8:	18db0f04 	addi	r3,r3,27708
 20020dc:	1909883a 	add	r4,r3,r4
 20020e0:	20c00003 	ldbu	r3,0(r4)
 20020e4:	10c5c83a 	sub	r2,r2,r3
 20020e8:	f800283a 	ret
 20020ec:	00c00604 	movi	r3,24
 20020f0:	20c8d83a 	srl	r4,r4,r3
 20020f4:	00c08234 	movhi	r3,520
 20020f8:	18db0f04 	addi	r3,r3,27708
 20020fc:	00800204 	movi	r2,8
 2002100:	1909883a 	add	r4,r3,r4
 2002104:	20c00003 	ldbu	r3,0(r4)
 2002108:	10c5c83a 	sub	r2,r2,r3
 200210c:	f800283a 	ret
 2002110:	0007883a 	mov	r3,zero
 2002114:	20c8d83a 	srl	r4,r4,r3
 2002118:	00c08234 	movhi	r3,520
 200211c:	18db0f04 	addi	r3,r3,27708
 2002120:	00800804 	movi	r2,32
 2002124:	1909883a 	add	r4,r3,r4
 2002128:	20c00003 	ldbu	r3,0(r4)
 200212c:	10c5c83a 	sub	r2,r2,r3
 2002130:	f800283a 	ret

02002134 <__pack_d>:
 2002134:	20800017 	ldw	r2,0(r4)
 2002138:	defff804 	addi	sp,sp,-32
 200213c:	dcc00315 	stw	r19,12(sp)
 2002140:	dc800215 	stw	r18,8(sp)
 2002144:	dfc00715 	stw	ra,28(sp)
 2002148:	dd800615 	stw	r22,24(sp)
 200214c:	dd400515 	stw	r21,20(sp)
 2002150:	dd000415 	stw	r20,16(sp)
 2002154:	dc400115 	stw	r17,4(sp)
 2002158:	dc000015 	stw	r16,0(sp)
 200215c:	04800044 	movi	r18,1
 2002160:	24400317 	ldw	r17,12(r4)
 2002164:	24000417 	ldw	r16,16(r4)
 2002168:	24c00117 	ldw	r19,4(r4)
 200216c:	9080422e 	bgeu	r18,r2,2002278 <__pack_d+0x144>
 2002170:	00c00104 	movi	r3,4
 2002174:	10c03c26 	beq	r2,r3,2002268 <__pack_d+0x134>
 2002178:	00c00084 	movi	r3,2
 200217c:	10c01926 	beq	r2,r3,20021e4 <__pack_d+0xb0>
 2002180:	8c04b03a 	or	r2,r17,r16
 2002184:	10001726 	beq	r2,zero,20021e4 <__pack_d+0xb0>
 2002188:	21000217 	ldw	r4,8(r4)
 200218c:	00bf0084 	movi	r2,-1022
 2002190:	20804016 	blt	r4,r2,2002294 <__pack_d+0x160>
 2002194:	0080ffc4 	movi	r2,1023
 2002198:	11003316 	blt	r2,r4,2002268 <__pack_d+0x134>
 200219c:	88803fcc 	andi	r2,r17,255
 20021a0:	00c02004 	movi	r3,128
 20021a4:	10c02926 	beq	r2,r3,200224c <__pack_d+0x118>
 20021a8:	88801fc4 	addi	r2,r17,127
 20021ac:	1463803a 	cmpltu	r17,r2,r17
 20021b0:	8c21883a 	add	r16,r17,r16
 20021b4:	1023883a 	mov	r17,r2
 20021b8:	00880034 	movhi	r2,8192
 20021bc:	10bfffc4 	addi	r2,r2,-1
 20021c0:	14001c36 	bltu	r2,r16,2002234 <__pack_d+0x100>
 20021c4:	2100ffc4 	addi	r4,r4,1023
 20021c8:	8006963a 	slli	r3,r16,24
 20021cc:	8804d23a 	srli	r2,r17,8
 20021d0:	8020913a 	slli	r16,r16,4
 20021d4:	2101ffcc 	andi	r4,r4,2047
 20021d8:	1884b03a 	or	r2,r3,r2
 20021dc:	8020d33a 	srli	r16,r16,12
 20021e0:	00000306 	br	20021f0 <__pack_d+0xbc>
 20021e4:	0009883a 	mov	r4,zero
 20021e8:	0005883a 	mov	r2,zero
 20021ec:	0021883a 	mov	r16,zero
 20021f0:	2008953a 	slli	r4,r4,20
 20021f4:	982697fa 	slli	r19,r19,31
 20021f8:	00c00434 	movhi	r3,16
 20021fc:	18ffffc4 	addi	r3,r3,-1
 2002200:	80e0703a 	and	r16,r16,r3
 2002204:	8106b03a 	or	r3,r16,r4
 2002208:	1cc6b03a 	or	r3,r3,r19
 200220c:	dfc00717 	ldw	ra,28(sp)
 2002210:	dd800617 	ldw	r22,24(sp)
 2002214:	dd400517 	ldw	r21,20(sp)
 2002218:	dd000417 	ldw	r20,16(sp)
 200221c:	dcc00317 	ldw	r19,12(sp)
 2002220:	dc800217 	ldw	r18,8(sp)
 2002224:	dc400117 	ldw	r17,4(sp)
 2002228:	dc000017 	ldw	r16,0(sp)
 200222c:	dec00804 	addi	sp,sp,32
 2002230:	f800283a 	ret
 2002234:	800697fa 	slli	r3,r16,31
 2002238:	8804d07a 	srli	r2,r17,1
 200223c:	21010004 	addi	r4,r4,1024
 2002240:	8020d07a 	srli	r16,r16,1
 2002244:	18a2b03a 	or	r17,r3,r2
 2002248:	003fdf06 	br	20021c8 <__alt_mem_epcs_flash_controller+0xfdff91c8>
 200224c:	88c0400c 	andi	r3,r17,256
 2002250:	183fd926 	beq	r3,zero,20021b8 <__alt_mem_epcs_flash_controller+0xfdff91b8>
 2002254:	8885883a 	add	r2,r17,r2
 2002258:	1463803a 	cmpltu	r17,r2,r17
 200225c:	8c21883a 	add	r16,r17,r16
 2002260:	1023883a 	mov	r17,r2
 2002264:	003fd406 	br	20021b8 <__alt_mem_epcs_flash_controller+0xfdff91b8>
 2002268:	0101ffc4 	movi	r4,2047
 200226c:	0005883a 	mov	r2,zero
 2002270:	0021883a 	mov	r16,zero
 2002274:	003fde06 	br	20021f0 <__alt_mem_epcs_flash_controller+0xfdff91f0>
 2002278:	84000234 	orhi	r16,r16,8
 200227c:	00c00434 	movhi	r3,16
 2002280:	18ffffc4 	addi	r3,r3,-1
 2002284:	8805883a 	mov	r2,r17
 2002288:	80e0703a 	and	r16,r16,r3
 200228c:	0101ffc4 	movi	r4,2047
 2002290:	003fd706 	br	20021f0 <__alt_mem_epcs_flash_controller+0xfdff91f0>
 2002294:	1129c83a 	sub	r20,r2,r4
 2002298:	00800e04 	movi	r2,56
 200229c:	15002716 	blt	r2,r20,200233c <__pack_d+0x208>
 20022a0:	800b883a 	mov	r5,r16
 20022a4:	a00d883a 	mov	r6,r20
 20022a8:	8809883a 	mov	r4,r17
 20022ac:	200245c0 	call	200245c <__lshrdi3>
 20022b0:	9009883a 	mov	r4,r18
 20022b4:	000b883a 	mov	r5,zero
 20022b8:	a00d883a 	mov	r6,r20
 20022bc:	102d883a 	mov	r22,r2
 20022c0:	182b883a 	mov	r21,r3
 20022c4:	20024a00 	call	20024a0 <__ashldi3>
 20022c8:	1009003a 	cmpeq	r4,r2,zero
 20022cc:	1907c83a 	sub	r3,r3,r4
 20022d0:	10bfffc4 	addi	r2,r2,-1
 20022d4:	1c20703a 	and	r16,r3,r16
 20022d8:	1444703a 	and	r2,r2,r17
 20022dc:	1404b03a 	or	r2,r2,r16
 20022e0:	1004c03a 	cmpne	r2,r2,zero
 20022e4:	1584b03a 	or	r2,r2,r22
 20022e8:	11003fcc 	andi	r4,r2,255
 20022ec:	01402004 	movi	r5,128
 20022f0:	a807883a 	mov	r3,r21
 20022f4:	2140131e 	bne	r4,r5,2002344 <__pack_d+0x210>
 20022f8:	1140400c 	andi	r5,r2,256
 20022fc:	28000426 	beq	r5,zero,2002310 <__pack_d+0x1dc>
 2002300:	1109883a 	add	r4,r2,r4
 2002304:	2085803a 	cmpltu	r2,r4,r2
 2002308:	1547883a 	add	r3,r2,r21
 200230c:	2005883a 	mov	r2,r4
 2002310:	1808963a 	slli	r4,r3,24
 2002314:	1004d23a 	srli	r2,r2,8
 2002318:	1820913a 	slli	r16,r3,4
 200231c:	01440034 	movhi	r5,4096
 2002320:	297fffc4 	addi	r5,r5,-1
 2002324:	2084b03a 	or	r2,r4,r2
 2002328:	8020d33a 	srli	r16,r16,12
 200232c:	01000044 	movi	r4,1
 2002330:	28ffaf36 	bltu	r5,r3,20021f0 <__alt_mem_epcs_flash_controller+0xfdff91f0>
 2002334:	0009883a 	mov	r4,zero
 2002338:	003fad06 	br	20021f0 <__alt_mem_epcs_flash_controller+0xfdff91f0>
 200233c:	0005883a 	mov	r2,zero
 2002340:	0007883a 	mov	r3,zero
 2002344:	11001fc4 	addi	r4,r2,127
 2002348:	2085803a 	cmpltu	r2,r4,r2
 200234c:	10c7883a 	add	r3,r2,r3
 2002350:	2005883a 	mov	r2,r4
 2002354:	003fee06 	br	2002310 <__alt_mem_epcs_flash_controller+0xfdff9310>

02002358 <__unpack_d>:
 2002358:	21800117 	ldw	r6,4(r4)
 200235c:	20c00017 	ldw	r3,0(r4)
 2002360:	3004d7fa 	srli	r2,r6,31
 2002364:	3008d53a 	srli	r4,r6,20
 2002368:	28800115 	stw	r2,4(r5)
 200236c:	2101ffcc 	andi	r4,r4,2047
 2002370:	00800434 	movhi	r2,16
 2002374:	10bfffc4 	addi	r2,r2,-1
 2002378:	3084703a 	and	r2,r6,r2
 200237c:	20001a1e 	bne	r4,zero,20023e8 <__unpack_d+0x90>
 2002380:	1888b03a 	or	r4,r3,r2
 2002384:	20002626 	beq	r4,zero,2002420 <__unpack_d+0xc8>
 2002388:	1808d63a 	srli	r4,r3,24
 200238c:	1004923a 	slli	r2,r2,8
 2002390:	01bf0084 	movi	r6,-1022
 2002394:	29800215 	stw	r6,8(r5)
 2002398:	2084b03a 	or	r2,r4,r2
 200239c:	010000c4 	movi	r4,3
 20023a0:	29000015 	stw	r4,0(r5)
 20023a4:	02040034 	movhi	r8,4096
 20023a8:	423fffc4 	addi	r8,r8,-1
 20023ac:	1806923a 	slli	r3,r3,8
 20023b0:	40801836 	bltu	r8,r2,2002414 <__unpack_d+0xbc>
 20023b4:	013f0044 	movi	r4,-1023
 20023b8:	18cd883a 	add	r6,r3,r3
 20023bc:	30c7803a 	cmpltu	r3,r6,r3
 20023c0:	1085883a 	add	r2,r2,r2
 20023c4:	1885883a 	add	r2,r3,r2
 20023c8:	200f883a 	mov	r7,r4
 20023cc:	3007883a 	mov	r3,r6
 20023d0:	213fffc4 	addi	r4,r4,-1
 20023d4:	40bff82e 	bgeu	r8,r2,20023b8 <__alt_mem_epcs_flash_controller+0xfdff93b8>
 20023d8:	29c00215 	stw	r7,8(r5)
 20023dc:	28c00315 	stw	r3,12(r5)
 20023e0:	28800415 	stw	r2,16(r5)
 20023e4:	f800283a 	ret
 20023e8:	01c1ffc4 	movi	r7,2047
 20023ec:	21c00f26 	beq	r4,r7,200242c <__unpack_d+0xd4>
 20023f0:	180cd63a 	srli	r6,r3,24
 20023f4:	1004923a 	slli	r2,r2,8
 20023f8:	213f0044 	addi	r4,r4,-1023
 20023fc:	1806923a 	slli	r3,r3,8
 2002400:	3084b03a 	or	r2,r6,r2
 2002404:	29000215 	stw	r4,8(r5)
 2002408:	010000c4 	movi	r4,3
 200240c:	10840034 	orhi	r2,r2,4096
 2002410:	29000015 	stw	r4,0(r5)
 2002414:	28c00315 	stw	r3,12(r5)
 2002418:	28800415 	stw	r2,16(r5)
 200241c:	f800283a 	ret
 2002420:	00800084 	movi	r2,2
 2002424:	28800015 	stw	r2,0(r5)
 2002428:	f800283a 	ret
 200242c:	1888b03a 	or	r4,r3,r2
 2002430:	20000526 	beq	r4,zero,2002448 <__unpack_d+0xf0>
 2002434:	3180022c 	andhi	r6,r6,8
 2002438:	30000626 	beq	r6,zero,2002454 <__unpack_d+0xfc>
 200243c:	01000044 	movi	r4,1
 2002440:	29000015 	stw	r4,0(r5)
 2002444:	003ff306 	br	2002414 <__alt_mem_epcs_flash_controller+0xfdff9414>
 2002448:	00800104 	movi	r2,4
 200244c:	28800015 	stw	r2,0(r5)
 2002450:	f800283a 	ret
 2002454:	28000015 	stw	zero,0(r5)
 2002458:	003fee06 	br	2002414 <__alt_mem_epcs_flash_controller+0xfdff9414>

0200245c <__lshrdi3>:
 200245c:	2005883a 	mov	r2,r4
 2002460:	2807883a 	mov	r3,r5
 2002464:	30000826 	beq	r6,zero,2002488 <__lshrdi3+0x2c>
 2002468:	01000804 	movi	r4,32
 200246c:	2189c83a 	sub	r4,r4,r6
 2002470:	0100060e 	bge	zero,r4,200248c <__lshrdi3+0x30>
 2002474:	1184d83a 	srl	r2,r2,r6
 2002478:	2908983a 	sll	r4,r5,r4
 200247c:	298cd83a 	srl	r6,r5,r6
 2002480:	2084b03a 	or	r2,r4,r2
 2002484:	3007883a 	mov	r3,r6
 2002488:	f800283a 	ret
 200248c:	0105c83a 	sub	r2,zero,r4
 2002490:	000d883a 	mov	r6,zero
 2002494:	2884d83a 	srl	r2,r5,r2
 2002498:	3007883a 	mov	r3,r6
 200249c:	003ffa06 	br	2002488 <__alt_mem_epcs_flash_controller+0xfdff9488>

020024a0 <__ashldi3>:
 20024a0:	2005883a 	mov	r2,r4
 20024a4:	2807883a 	mov	r3,r5
 20024a8:	30000826 	beq	r6,zero,20024cc <__ashldi3+0x2c>
 20024ac:	01000804 	movi	r4,32
 20024b0:	2189c83a 	sub	r4,r4,r6
 20024b4:	0100060e 	bge	zero,r4,20024d0 <__ashldi3+0x30>
 20024b8:	1108d83a 	srl	r4,r2,r4
 20024bc:	2986983a 	sll	r3,r5,r6
 20024c0:	118c983a 	sll	r6,r2,r6
 20024c4:	20c6b03a 	or	r3,r4,r3
 20024c8:	3005883a 	mov	r2,r6
 20024cc:	f800283a 	ret
 20024d0:	0107c83a 	sub	r3,zero,r4
 20024d4:	000d883a 	mov	r6,zero
 20024d8:	10c6983a 	sll	r3,r2,r3
 20024dc:	3005883a 	mov	r2,r6
 20024e0:	003ffa06 	br	20024cc <__alt_mem_epcs_flash_controller+0xfdff94cc>

020024e4 <_fflush_r>:
 20024e4:	defffb04 	addi	sp,sp,-20
 20024e8:	dcc00315 	stw	r19,12(sp)
 20024ec:	dc400115 	stw	r17,4(sp)
 20024f0:	dfc00415 	stw	ra,16(sp)
 20024f4:	dc800215 	stw	r18,8(sp)
 20024f8:	dc000015 	stw	r16,0(sp)
 20024fc:	2027883a 	mov	r19,r4
 2002500:	2823883a 	mov	r17,r5
 2002504:	20000226 	beq	r4,zero,2002510 <_fflush_r+0x2c>
 2002508:	20800e17 	ldw	r2,56(r4)
 200250c:	10005726 	beq	r2,zero,200266c <_fflush_r+0x188>
 2002510:	8880030b 	ldhu	r2,12(r17)
 2002514:	10c0020c 	andi	r3,r2,8
 2002518:	18ffffcc 	andi	r3,r3,65535
 200251c:	18e0001c 	xori	r3,r3,32768
 2002520:	18e00004 	addi	r3,r3,-32768
 2002524:	1800311e 	bne	r3,zero,20025ec <_fflush_r+0x108>
 2002528:	89000117 	ldw	r4,4(r17)
 200252c:	10c20014 	ori	r3,r2,2048
 2002530:	88c0030d 	sth	r3,12(r17)
 2002534:	180b883a 	mov	r5,r3
 2002538:	0100520e 	bge	zero,r4,2002684 <_fflush_r+0x1a0>
 200253c:	88c00a17 	ldw	r3,40(r17)
 2002540:	18002226 	beq	r3,zero,20025cc <_fflush_r+0xe8>
 2002544:	1084000c 	andi	r2,r2,4096
 2002548:	10bfffcc 	andi	r2,r2,65535
 200254c:	10a0001c 	xori	r2,r2,32768
 2002550:	10a00004 	addi	r2,r2,-32768
 2002554:	10004e26 	beq	r2,zero,2002690 <_fflush_r+0x1ac>
 2002558:	8c001417 	ldw	r16,80(r17)
 200255c:	2940010c 	andi	r5,r5,4
 2002560:	297fffcc 	andi	r5,r5,65535
 2002564:	2960001c 	xori	r5,r5,32768
 2002568:	29600004 	addi	r5,r5,-32768
 200256c:	28000626 	beq	r5,zero,2002588 <_fflush_r+0xa4>
 2002570:	89000117 	ldw	r4,4(r17)
 2002574:	88800c17 	ldw	r2,48(r17)
 2002578:	8121c83a 	sub	r16,r16,r4
 200257c:	10000226 	beq	r2,zero,2002588 <_fflush_r+0xa4>
 2002580:	88800f17 	ldw	r2,60(r17)
 2002584:	80a1c83a 	sub	r16,r16,r2
 2002588:	89400717 	ldw	r5,28(r17)
 200258c:	9809883a 	mov	r4,r19
 2002590:	800d883a 	mov	r6,r16
 2002594:	000f883a 	mov	r7,zero
 2002598:	183ee83a 	callr	r3
 200259c:	8080281e 	bne	r16,r2,2002640 <_fflush_r+0x15c>
 20025a0:	8880030b 	ldhu	r2,12(r17)
 20025a4:	88c00417 	ldw	r3,16(r17)
 20025a8:	88000115 	stw	zero,4(r17)
 20025ac:	113dffcc 	andi	r4,r2,63487
 20025b0:	1084000c 	andi	r2,r2,4096
 20025b4:	10bfffcc 	andi	r2,r2,65535
 20025b8:	10a0001c 	xori	r2,r2,32768
 20025bc:	8900030d 	sth	r4,12(r17)
 20025c0:	88c00015 	stw	r3,0(r17)
 20025c4:	10a00004 	addi	r2,r2,-32768
 20025c8:	10002c1e 	bne	r2,zero,200267c <_fflush_r+0x198>
 20025cc:	0005883a 	mov	r2,zero
 20025d0:	dfc00417 	ldw	ra,16(sp)
 20025d4:	dcc00317 	ldw	r19,12(sp)
 20025d8:	dc800217 	ldw	r18,8(sp)
 20025dc:	dc400117 	ldw	r17,4(sp)
 20025e0:	dc000017 	ldw	r16,0(sp)
 20025e4:	dec00504 	addi	sp,sp,20
 20025e8:	f800283a 	ret
 20025ec:	8c800417 	ldw	r18,16(r17)
 20025f0:	903ff626 	beq	r18,zero,20025cc <__alt_mem_epcs_flash_controller+0xfdff95cc>
 20025f4:	8c000017 	ldw	r16,0(r17)
 20025f8:	108000cc 	andi	r2,r2,3
 20025fc:	8c800015 	stw	r18,0(r17)
 2002600:	84a1c83a 	sub	r16,r16,r18
 2002604:	10001b1e 	bne	r2,zero,2002674 <_fflush_r+0x190>
 2002608:	88800517 	ldw	r2,20(r17)
 200260c:	88800215 	stw	r2,8(r17)
 2002610:	04000316 	blt	zero,r16,2002620 <_fflush_r+0x13c>
 2002614:	003fed06 	br	20025cc <__alt_mem_epcs_flash_controller+0xfdff95cc>
 2002618:	90a5883a 	add	r18,r18,r2
 200261c:	043feb0e 	bge	zero,r16,20025cc <__alt_mem_epcs_flash_controller+0xfdff95cc>
 2002620:	88800917 	ldw	r2,36(r17)
 2002624:	89400717 	ldw	r5,28(r17)
 2002628:	800f883a 	mov	r7,r16
 200262c:	900d883a 	mov	r6,r18
 2002630:	9809883a 	mov	r4,r19
 2002634:	103ee83a 	callr	r2
 2002638:	80a1c83a 	sub	r16,r16,r2
 200263c:	00bff616 	blt	zero,r2,2002618 <__alt_mem_epcs_flash_controller+0xfdff9618>
 2002640:	88c0030b 	ldhu	r3,12(r17)
 2002644:	00bfffc4 	movi	r2,-1
 2002648:	18c01014 	ori	r3,r3,64
 200264c:	88c0030d 	sth	r3,12(r17)
 2002650:	dfc00417 	ldw	ra,16(sp)
 2002654:	dcc00317 	ldw	r19,12(sp)
 2002658:	dc800217 	ldw	r18,8(sp)
 200265c:	dc400117 	ldw	r17,4(sp)
 2002660:	dc000017 	ldw	r16,0(sp)
 2002664:	dec00504 	addi	sp,sp,20
 2002668:	f800283a 	ret
 200266c:	20027a00 	call	20027a0 <__sinit>
 2002670:	003fa706 	br	2002510 <__alt_mem_epcs_flash_controller+0xfdff9510>
 2002674:	0005883a 	mov	r2,zero
 2002678:	003fe406 	br	200260c <__alt_mem_epcs_flash_controller+0xfdff960c>
 200267c:	8c001415 	stw	r16,80(r17)
 2002680:	003fd206 	br	20025cc <__alt_mem_epcs_flash_controller+0xfdff95cc>
 2002684:	88c00f17 	ldw	r3,60(r17)
 2002688:	00ffac16 	blt	zero,r3,200253c <__alt_mem_epcs_flash_controller+0xfdff953c>
 200268c:	003fcf06 	br	20025cc <__alt_mem_epcs_flash_controller+0xfdff95cc>
 2002690:	89400717 	ldw	r5,28(r17)
 2002694:	9809883a 	mov	r4,r19
 2002698:	000d883a 	mov	r6,zero
 200269c:	01c00044 	movi	r7,1
 20026a0:	183ee83a 	callr	r3
 20026a4:	1021883a 	mov	r16,r2
 20026a8:	00bfffc4 	movi	r2,-1
 20026ac:	80800326 	beq	r16,r2,20026bc <_fflush_r+0x1d8>
 20026b0:	8940030b 	ldhu	r5,12(r17)
 20026b4:	88c00a17 	ldw	r3,40(r17)
 20026b8:	003fa806 	br	200255c <__alt_mem_epcs_flash_controller+0xfdff955c>
 20026bc:	98c00017 	ldw	r3,0(r19)
 20026c0:	00800744 	movi	r2,29
 20026c4:	18bfde1e 	bne	r3,r2,2002640 <__alt_mem_epcs_flash_controller+0xfdff9640>
 20026c8:	003fc006 	br	20025cc <__alt_mem_epcs_flash_controller+0xfdff95cc>

020026cc <fflush>:
 20026cc:	200b883a 	mov	r5,r4
 20026d0:	20000426 	beq	r4,zero,20026e4 <fflush+0x18>
 20026d4:	00808274 	movhi	r2,521
 20026d8:	10a3b704 	addi	r2,r2,-28964
 20026dc:	11000017 	ldw	r4,0(r2)
 20026e0:	20024e41 	jmpi	20024e4 <_fflush_r>
 20026e4:	00808274 	movhi	r2,521
 20026e8:	10a3b604 	addi	r2,r2,-28968
 20026ec:	11000017 	ldw	r4,0(r2)
 20026f0:	01408034 	movhi	r5,512
 20026f4:	29493904 	addi	r5,r5,9444
 20026f8:	2002a901 	jmpi	2002a90 <_fwalk_reent>

020026fc <__fp_lock>:
 20026fc:	0005883a 	mov	r2,zero
 2002700:	f800283a 	ret

02002704 <__fp_unlock>:
 2002704:	0005883a 	mov	r2,zero
 2002708:	f800283a 	ret

0200270c <_cleanup_r>:
 200270c:	01408074 	movhi	r5,513
 2002710:	29625e04 	addi	r5,r5,-30344
 2002714:	20029e81 	jmpi	20029e8 <_fwalk>

02002718 <__sfmoreglue>:
 2002718:	defffc04 	addi	sp,sp,-16
 200271c:	dc800215 	stw	r18,8(sp)
 2002720:	2825883a 	mov	r18,r5
 2002724:	dc000015 	stw	r16,0(sp)
 2002728:	01401704 	movi	r5,92
 200272c:	2021883a 	mov	r16,r4
 2002730:	9009883a 	mov	r4,r18
 2002734:	dfc00315 	stw	ra,12(sp)
 2002738:	dc400115 	stw	r17,4(sp)
 200273c:	2001f500 	call	2001f50 <__mulsi3>
 2002740:	8009883a 	mov	r4,r16
 2002744:	11400304 	addi	r5,r2,12
 2002748:	1023883a 	mov	r17,r2
 200274c:	2002b480 	call	2002b48 <_malloc_r>
 2002750:	1021883a 	mov	r16,r2
 2002754:	10000726 	beq	r2,zero,2002774 <__sfmoreglue+0x5c>
 2002758:	11000304 	addi	r4,r2,12
 200275c:	10000015 	stw	zero,0(r2)
 2002760:	14800115 	stw	r18,4(r2)
 2002764:	11000215 	stw	r4,8(r2)
 2002768:	000b883a 	mov	r5,zero
 200276c:	880d883a 	mov	r6,r17
 2002770:	20032cc0 	call	20032cc <memset>
 2002774:	8005883a 	mov	r2,r16
 2002778:	dfc00317 	ldw	ra,12(sp)
 200277c:	dc800217 	ldw	r18,8(sp)
 2002780:	dc400117 	ldw	r17,4(sp)
 2002784:	dc000017 	ldw	r16,0(sp)
 2002788:	dec00404 	addi	sp,sp,16
 200278c:	f800283a 	ret

02002790 <_cleanup>:
 2002790:	00808274 	movhi	r2,521
 2002794:	10a3b604 	addi	r2,r2,-28968
 2002798:	11000017 	ldw	r4,0(r2)
 200279c:	200270c1 	jmpi	200270c <_cleanup_r>

020027a0 <__sinit>:
 20027a0:	20800e17 	ldw	r2,56(r4)
 20027a4:	1000401e 	bne	r2,zero,20028a8 <__sinit+0x108>
 20027a8:	21400117 	ldw	r5,4(r4)
 20027ac:	01808034 	movhi	r6,512
 20027b0:	3189c304 	addi	r6,r6,9996
 20027b4:	20c00217 	ldw	r3,8(r4)
 20027b8:	21800f15 	stw	r6,60(r4)
 20027bc:	2080bb04 	addi	r2,r4,748
 20027c0:	02400044 	movi	r9,1
 20027c4:	018000c4 	movi	r6,3
 20027c8:	2180b915 	stw	r6,740(r4)
 20027cc:	2080ba15 	stw	r2,744(r4)
 20027d0:	22400e15 	stw	r9,56(r4)
 20027d4:	20800317 	ldw	r2,12(r4)
 20027d8:	2000b815 	stw	zero,736(r4)
 20027dc:	02008034 	movhi	r8,512
 20027e0:	420d5e04 	addi	r8,r8,13688
 20027e4:	01c08034 	movhi	r7,512
 20027e8:	39cd7304 	addi	r7,r7,13772
 20027ec:	01808034 	movhi	r6,512
 20027f0:	318d9504 	addi	r6,r6,13908
 20027f4:	01008034 	movhi	r4,512
 20027f8:	210dac04 	addi	r4,r4,14000
 20027fc:	02800104 	movi	r10,4
 2002800:	28000015 	stw	zero,0(r5)
 2002804:	28000115 	stw	zero,4(r5)
 2002808:	28000215 	stw	zero,8(r5)
 200280c:	2a80030d 	sth	r10,12(r5)
 2002810:	2800038d 	sth	zero,14(r5)
 2002814:	28000415 	stw	zero,16(r5)
 2002818:	28000515 	stw	zero,20(r5)
 200281c:	28000615 	stw	zero,24(r5)
 2002820:	29400715 	stw	r5,28(r5)
 2002824:	2a000815 	stw	r8,32(r5)
 2002828:	29c00915 	stw	r7,36(r5)
 200282c:	29800a15 	stw	r6,40(r5)
 2002830:	29000b15 	stw	r4,44(r5)
 2002834:	01400284 	movi	r5,10
 2002838:	18000015 	stw	zero,0(r3)
 200283c:	18000115 	stw	zero,4(r3)
 2002840:	18000215 	stw	zero,8(r3)
 2002844:	1940030d 	sth	r5,12(r3)
 2002848:	1a40038d 	sth	r9,14(r3)
 200284c:	18000415 	stw	zero,16(r3)
 2002850:	18000515 	stw	zero,20(r3)
 2002854:	18000615 	stw	zero,24(r3)
 2002858:	18c00715 	stw	r3,28(r3)
 200285c:	1a000815 	stw	r8,32(r3)
 2002860:	19c00915 	stw	r7,36(r3)
 2002864:	19800a15 	stw	r6,40(r3)
 2002868:	19000b15 	stw	r4,44(r3)
 200286c:	00c00484 	movi	r3,18
 2002870:	10c0030d 	sth	r3,12(r2)
 2002874:	00c00084 	movi	r3,2
 2002878:	10000015 	stw	zero,0(r2)
 200287c:	10000115 	stw	zero,4(r2)
 2002880:	10000215 	stw	zero,8(r2)
 2002884:	10c0038d 	sth	r3,14(r2)
 2002888:	10000415 	stw	zero,16(r2)
 200288c:	10000515 	stw	zero,20(r2)
 2002890:	10000615 	stw	zero,24(r2)
 2002894:	10800715 	stw	r2,28(r2)
 2002898:	12000815 	stw	r8,32(r2)
 200289c:	11c00915 	stw	r7,36(r2)
 20028a0:	11800a15 	stw	r6,40(r2)
 20028a4:	11000b15 	stw	r4,44(r2)
 20028a8:	f800283a 	ret

020028ac <__sfp>:
 20028ac:	defffc04 	addi	sp,sp,-16
 20028b0:	00808274 	movhi	r2,521
 20028b4:	10a3b604 	addi	r2,r2,-28968
 20028b8:	dc400115 	stw	r17,4(sp)
 20028bc:	14400017 	ldw	r17,0(r2)
 20028c0:	dc800215 	stw	r18,8(sp)
 20028c4:	dfc00315 	stw	ra,12(sp)
 20028c8:	88800e17 	ldw	r2,56(r17)
 20028cc:	dc000015 	stw	r16,0(sp)
 20028d0:	2025883a 	mov	r18,r4
 20028d4:	10002826 	beq	r2,zero,2002978 <__sfp+0xcc>
 20028d8:	8c40b804 	addi	r17,r17,736
 20028dc:	043fffc4 	movi	r16,-1
 20028e0:	89400117 	ldw	r5,4(r17)
 20028e4:	88800217 	ldw	r2,8(r17)
 20028e8:	297fffc4 	addi	r5,r5,-1
 20028ec:	28000a16 	blt	r5,zero,2002918 <__sfp+0x6c>
 20028f0:	10c0030f 	ldh	r3,12(r2)
 20028f4:	18000c26 	beq	r3,zero,2002928 <__sfp+0x7c>
 20028f8:	10c01a04 	addi	r3,r2,104
 20028fc:	00000206 	br	2002908 <__sfp+0x5c>
 2002900:	19bfe90f 	ldh	r6,-92(r3)
 2002904:	30000826 	beq	r6,zero,2002928 <__sfp+0x7c>
 2002908:	297fffc4 	addi	r5,r5,-1
 200290c:	18bffd04 	addi	r2,r3,-12
 2002910:	18c01704 	addi	r3,r3,92
 2002914:	2c3ffa1e 	bne	r5,r16,2002900 <__alt_mem_epcs_flash_controller+0xfdff9900>
 2002918:	88800017 	ldw	r2,0(r17)
 200291c:	10001926 	beq	r2,zero,2002984 <__sfp+0xd8>
 2002920:	1023883a 	mov	r17,r2
 2002924:	003fee06 	br	20028e0 <__alt_mem_epcs_flash_controller+0xfdff98e0>
 2002928:	00ffffc4 	movi	r3,-1
 200292c:	10c0038d 	sth	r3,14(r2)
 2002930:	00c00044 	movi	r3,1
 2002934:	10c0030d 	sth	r3,12(r2)
 2002938:	10000015 	stw	zero,0(r2)
 200293c:	10000215 	stw	zero,8(r2)
 2002940:	10000115 	stw	zero,4(r2)
 2002944:	10000415 	stw	zero,16(r2)
 2002948:	10000515 	stw	zero,20(r2)
 200294c:	10000615 	stw	zero,24(r2)
 2002950:	10000c15 	stw	zero,48(r2)
 2002954:	10000d15 	stw	zero,52(r2)
 2002958:	10001115 	stw	zero,68(r2)
 200295c:	10001215 	stw	zero,72(r2)
 2002960:	dfc00317 	ldw	ra,12(sp)
 2002964:	dc800217 	ldw	r18,8(sp)
 2002968:	dc400117 	ldw	r17,4(sp)
 200296c:	dc000017 	ldw	r16,0(sp)
 2002970:	dec00404 	addi	sp,sp,16
 2002974:	f800283a 	ret
 2002978:	8809883a 	mov	r4,r17
 200297c:	20027a00 	call	20027a0 <__sinit>
 2002980:	003fd506 	br	20028d8 <__alt_mem_epcs_flash_controller+0xfdff98d8>
 2002984:	9009883a 	mov	r4,r18
 2002988:	01400104 	movi	r5,4
 200298c:	20027180 	call	2002718 <__sfmoreglue>
 2002990:	88800015 	stw	r2,0(r17)
 2002994:	103fe21e 	bne	r2,zero,2002920 <__alt_mem_epcs_flash_controller+0xfdff9920>
 2002998:	00800304 	movi	r2,12
 200299c:	90800015 	stw	r2,0(r18)
 20029a0:	0005883a 	mov	r2,zero
 20029a4:	003fee06 	br	2002960 <__alt_mem_epcs_flash_controller+0xfdff9960>

020029a8 <__sfp_lock_acquire>:
 20029a8:	f800283a 	ret

020029ac <__sfp_lock_release>:
 20029ac:	f800283a 	ret

020029b0 <__sinit_lock_acquire>:
 20029b0:	f800283a 	ret

020029b4 <__sinit_lock_release>:
 20029b4:	f800283a 	ret

020029b8 <__fp_lock_all>:
 20029b8:	00808274 	movhi	r2,521
 20029bc:	10a3b704 	addi	r2,r2,-28964
 20029c0:	11000017 	ldw	r4,0(r2)
 20029c4:	01408034 	movhi	r5,512
 20029c8:	2949bf04 	addi	r5,r5,9980
 20029cc:	20029e81 	jmpi	20029e8 <_fwalk>

020029d0 <__fp_unlock_all>:
 20029d0:	00808274 	movhi	r2,521
 20029d4:	10a3b704 	addi	r2,r2,-28964
 20029d8:	11000017 	ldw	r4,0(r2)
 20029dc:	01408034 	movhi	r5,512
 20029e0:	2949c104 	addi	r5,r5,9988
 20029e4:	20029e81 	jmpi	20029e8 <_fwalk>

020029e8 <_fwalk>:
 20029e8:	defff904 	addi	sp,sp,-28
 20029ec:	dcc00315 	stw	r19,12(sp)
 20029f0:	24c0b804 	addi	r19,r4,736
 20029f4:	dd400515 	stw	r21,20(sp)
 20029f8:	dd000415 	stw	r20,16(sp)
 20029fc:	dfc00615 	stw	ra,24(sp)
 2002a00:	dc800215 	stw	r18,8(sp)
 2002a04:	dc400115 	stw	r17,4(sp)
 2002a08:	dc000015 	stw	r16,0(sp)
 2002a0c:	282b883a 	mov	r21,r5
 2002a10:	0029883a 	mov	r20,zero
 2002a14:	20029a80 	call	20029a8 <__sfp_lock_acquire>
 2002a18:	98001226 	beq	r19,zero,2002a64 <_fwalk+0x7c>
 2002a1c:	04bfffc4 	movi	r18,-1
 2002a20:	9c400117 	ldw	r17,4(r19)
 2002a24:	9c000217 	ldw	r16,8(r19)
 2002a28:	8c7fffc4 	addi	r17,r17,-1
 2002a2c:	88000b16 	blt	r17,zero,2002a5c <_fwalk+0x74>
 2002a30:	84000304 	addi	r16,r16,12
 2002a34:	80c0000f 	ldh	r3,0(r16)
 2002a38:	8c7fffc4 	addi	r17,r17,-1
 2002a3c:	813ffd04 	addi	r4,r16,-12
 2002a40:	18000426 	beq	r3,zero,2002a54 <_fwalk+0x6c>
 2002a44:	80c0008f 	ldh	r3,2(r16)
 2002a48:	1c800226 	beq	r3,r18,2002a54 <_fwalk+0x6c>
 2002a4c:	a83ee83a 	callr	r21
 2002a50:	a0a8b03a 	or	r20,r20,r2
 2002a54:	84001704 	addi	r16,r16,92
 2002a58:	8cbff61e 	bne	r17,r18,2002a34 <__alt_mem_epcs_flash_controller+0xfdff9a34>
 2002a5c:	9cc00017 	ldw	r19,0(r19)
 2002a60:	983fef1e 	bne	r19,zero,2002a20 <__alt_mem_epcs_flash_controller+0xfdff9a20>
 2002a64:	20029ac0 	call	20029ac <__sfp_lock_release>
 2002a68:	a005883a 	mov	r2,r20
 2002a6c:	dfc00617 	ldw	ra,24(sp)
 2002a70:	dd400517 	ldw	r21,20(sp)
 2002a74:	dd000417 	ldw	r20,16(sp)
 2002a78:	dcc00317 	ldw	r19,12(sp)
 2002a7c:	dc800217 	ldw	r18,8(sp)
 2002a80:	dc400117 	ldw	r17,4(sp)
 2002a84:	dc000017 	ldw	r16,0(sp)
 2002a88:	dec00704 	addi	sp,sp,28
 2002a8c:	f800283a 	ret

02002a90 <_fwalk_reent>:
 2002a90:	defff804 	addi	sp,sp,-32
 2002a94:	dcc00315 	stw	r19,12(sp)
 2002a98:	24c0b804 	addi	r19,r4,736
 2002a9c:	dd800615 	stw	r22,24(sp)
 2002aa0:	dd400515 	stw	r21,20(sp)
 2002aa4:	dd000415 	stw	r20,16(sp)
 2002aa8:	dfc00715 	stw	ra,28(sp)
 2002aac:	dc800215 	stw	r18,8(sp)
 2002ab0:	dc400115 	stw	r17,4(sp)
 2002ab4:	dc000015 	stw	r16,0(sp)
 2002ab8:	2029883a 	mov	r20,r4
 2002abc:	282b883a 	mov	r21,r5
 2002ac0:	002d883a 	mov	r22,zero
 2002ac4:	20029a80 	call	20029a8 <__sfp_lock_acquire>
 2002ac8:	98001326 	beq	r19,zero,2002b18 <_fwalk_reent+0x88>
 2002acc:	04bfffc4 	movi	r18,-1
 2002ad0:	9c400117 	ldw	r17,4(r19)
 2002ad4:	9c000217 	ldw	r16,8(r19)
 2002ad8:	8c7fffc4 	addi	r17,r17,-1
 2002adc:	88000c16 	blt	r17,zero,2002b10 <_fwalk_reent+0x80>
 2002ae0:	84000304 	addi	r16,r16,12
 2002ae4:	80c0000f 	ldh	r3,0(r16)
 2002ae8:	8c7fffc4 	addi	r17,r17,-1
 2002aec:	817ffd04 	addi	r5,r16,-12
 2002af0:	18000526 	beq	r3,zero,2002b08 <_fwalk_reent+0x78>
 2002af4:	80c0008f 	ldh	r3,2(r16)
 2002af8:	a009883a 	mov	r4,r20
 2002afc:	1c800226 	beq	r3,r18,2002b08 <_fwalk_reent+0x78>
 2002b00:	a83ee83a 	callr	r21
 2002b04:	b0acb03a 	or	r22,r22,r2
 2002b08:	84001704 	addi	r16,r16,92
 2002b0c:	8cbff51e 	bne	r17,r18,2002ae4 <__alt_mem_epcs_flash_controller+0xfdff9ae4>
 2002b10:	9cc00017 	ldw	r19,0(r19)
 2002b14:	983fee1e 	bne	r19,zero,2002ad0 <__alt_mem_epcs_flash_controller+0xfdff9ad0>
 2002b18:	20029ac0 	call	20029ac <__sfp_lock_release>
 2002b1c:	b005883a 	mov	r2,r22
 2002b20:	dfc00717 	ldw	ra,28(sp)
 2002b24:	dd800617 	ldw	r22,24(sp)
 2002b28:	dd400517 	ldw	r21,20(sp)
 2002b2c:	dd000417 	ldw	r20,16(sp)
 2002b30:	dcc00317 	ldw	r19,12(sp)
 2002b34:	dc800217 	ldw	r18,8(sp)
 2002b38:	dc400117 	ldw	r17,4(sp)
 2002b3c:	dc000017 	ldw	r16,0(sp)
 2002b40:	dec00804 	addi	sp,sp,32
 2002b44:	f800283a 	ret

02002b48 <_malloc_r>:
 2002b48:	defff604 	addi	sp,sp,-40
 2002b4c:	dc800215 	stw	r18,8(sp)
 2002b50:	dfc00915 	stw	ra,36(sp)
 2002b54:	df000815 	stw	fp,32(sp)
 2002b58:	ddc00715 	stw	r23,28(sp)
 2002b5c:	dd800615 	stw	r22,24(sp)
 2002b60:	dd400515 	stw	r21,20(sp)
 2002b64:	dd000415 	stw	r20,16(sp)
 2002b68:	dcc00315 	stw	r19,12(sp)
 2002b6c:	dc400115 	stw	r17,4(sp)
 2002b70:	dc000015 	stw	r16,0(sp)
 2002b74:	288002c4 	addi	r2,r5,11
 2002b78:	00c00584 	movi	r3,22
 2002b7c:	2025883a 	mov	r18,r4
 2002b80:	18802b2e 	bgeu	r3,r2,2002c30 <_malloc_r+0xe8>
 2002b84:	047ffe04 	movi	r17,-8
 2002b88:	1462703a 	and	r17,r2,r17
 2002b8c:	88002a16 	blt	r17,zero,2002c38 <_malloc_r+0xf0>
 2002b90:	89402936 	bltu	r17,r5,2002c38 <_malloc_r+0xf0>
 2002b94:	9009883a 	mov	r4,r18
 2002b98:	2010b0c0 	call	2010b0c <__malloc_lock>
 2002b9c:	00807dc4 	movi	r2,503
 2002ba0:	14402936 	bltu	r2,r17,2002c48 <_malloc_r+0x100>
 2002ba4:	8808d0fa 	srli	r4,r17,3
 2002ba8:	04c08234 	movhi	r19,520
 2002bac:	9cddf304 	addi	r19,r19,30668
 2002bb0:	2105883a 	add	r2,r4,r4
 2002bb4:	1085883a 	add	r2,r2,r2
 2002bb8:	1085883a 	add	r2,r2,r2
 2002bbc:	9885883a 	add	r2,r19,r2
 2002bc0:	14000317 	ldw	r16,12(r2)
 2002bc4:	80815526 	beq	r16,r2,200311c <_malloc_r+0x5d4>
 2002bc8:	81000117 	ldw	r4,4(r16)
 2002bcc:	00bfff04 	movi	r2,-4
 2002bd0:	80c00317 	ldw	r3,12(r16)
 2002bd4:	2084703a 	and	r2,r4,r2
 2002bd8:	8085883a 	add	r2,r16,r2
 2002bdc:	11800117 	ldw	r6,4(r2)
 2002be0:	81400217 	ldw	r5,8(r16)
 2002be4:	9009883a 	mov	r4,r18
 2002be8:	31800054 	ori	r6,r6,1
 2002bec:	11800115 	stw	r6,4(r2)
 2002bf0:	28c00315 	stw	r3,12(r5)
 2002bf4:	19400215 	stw	r5,8(r3)
 2002bf8:	2010b2c0 	call	2010b2c <__malloc_unlock>
 2002bfc:	80800204 	addi	r2,r16,8
 2002c00:	dfc00917 	ldw	ra,36(sp)
 2002c04:	df000817 	ldw	fp,32(sp)
 2002c08:	ddc00717 	ldw	r23,28(sp)
 2002c0c:	dd800617 	ldw	r22,24(sp)
 2002c10:	dd400517 	ldw	r21,20(sp)
 2002c14:	dd000417 	ldw	r20,16(sp)
 2002c18:	dcc00317 	ldw	r19,12(sp)
 2002c1c:	dc800217 	ldw	r18,8(sp)
 2002c20:	dc400117 	ldw	r17,4(sp)
 2002c24:	dc000017 	ldw	r16,0(sp)
 2002c28:	dec00a04 	addi	sp,sp,40
 2002c2c:	f800283a 	ret
 2002c30:	04400404 	movi	r17,16
 2002c34:	897fd72e 	bgeu	r17,r5,2002b94 <__alt_mem_epcs_flash_controller+0xfdff9b94>
 2002c38:	00800304 	movi	r2,12
 2002c3c:	90800015 	stw	r2,0(r18)
 2002c40:	0005883a 	mov	r2,zero
 2002c44:	003fee06 	br	2002c00 <__alt_mem_epcs_flash_controller+0xfdff9c00>
 2002c48:	8808d27a 	srli	r4,r17,9
 2002c4c:	20007126 	beq	r4,zero,2002e14 <_malloc_r+0x2cc>
 2002c50:	00800104 	movi	r2,4
 2002c54:	1100eb36 	bltu	r2,r4,2003004 <_malloc_r+0x4bc>
 2002c58:	8808d1ba 	srli	r4,r17,6
 2002c5c:	21000e04 	addi	r4,r4,56
 2002c60:	210b883a 	add	r5,r4,r4
 2002c64:	294b883a 	add	r5,r5,r5
 2002c68:	294b883a 	add	r5,r5,r5
 2002c6c:	04c08234 	movhi	r19,520
 2002c70:	9cddf304 	addi	r19,r19,30668
 2002c74:	994b883a 	add	r5,r19,r5
 2002c78:	2c000317 	ldw	r16,12(r5)
 2002c7c:	2c000e26 	beq	r5,r16,2002cb8 <_malloc_r+0x170>
 2002c80:	80c00117 	ldw	r3,4(r16)
 2002c84:	01ffff04 	movi	r7,-4
 2002c88:	018003c4 	movi	r6,15
 2002c8c:	19c6703a 	and	r3,r3,r7
 2002c90:	1c45c83a 	sub	r2,r3,r17
 2002c94:	30800716 	blt	r6,r2,2002cb4 <_malloc_r+0x16c>
 2002c98:	1000610e 	bge	r2,zero,2002e20 <_malloc_r+0x2d8>
 2002c9c:	84000317 	ldw	r16,12(r16)
 2002ca0:	2c000526 	beq	r5,r16,2002cb8 <_malloc_r+0x170>
 2002ca4:	80c00117 	ldw	r3,4(r16)
 2002ca8:	19c6703a 	and	r3,r3,r7
 2002cac:	1c45c83a 	sub	r2,r3,r17
 2002cb0:	30bff90e 	bge	r6,r2,2002c98 <__alt_mem_epcs_flash_controller+0xfdff9c98>
 2002cb4:	213fffc4 	addi	r4,r4,-1
 2002cb8:	21000044 	addi	r4,r4,1
 2002cbc:	9c000417 	ldw	r16,16(r19)
 2002cc0:	00c08234 	movhi	r3,520
 2002cc4:	18ddf304 	addi	r3,r3,30668
 2002cc8:	1a400204 	addi	r9,r3,8
 2002ccc:	8240ff26 	beq	r16,r9,20030cc <_malloc_r+0x584>
 2002cd0:	81400117 	ldw	r5,4(r16)
 2002cd4:	00bfff04 	movi	r2,-4
 2002cd8:	018003c4 	movi	r6,15
 2002cdc:	2884703a 	and	r2,r5,r2
 2002ce0:	144bc83a 	sub	r5,r2,r17
 2002ce4:	3140ea16 	blt	r6,r5,2003090 <_malloc_r+0x548>
 2002ce8:	1a400515 	stw	r9,20(r3)
 2002cec:	1a400415 	stw	r9,16(r3)
 2002cf0:	2800570e 	bge	r5,zero,2002e50 <_malloc_r+0x308>
 2002cf4:	01407fc4 	movi	r5,511
 2002cf8:	2880ca36 	bltu	r5,r2,2003024 <_malloc_r+0x4dc>
 2002cfc:	1004d0fa 	srli	r2,r2,3
 2002d00:	02000044 	movi	r8,1
 2002d04:	19c00117 	ldw	r7,4(r3)
 2002d08:	108b883a 	add	r5,r2,r2
 2002d0c:	294b883a 	add	r5,r5,r5
 2002d10:	1005d0ba 	srai	r2,r2,2
 2002d14:	294b883a 	add	r5,r5,r5
 2002d18:	28cb883a 	add	r5,r5,r3
 2002d1c:	29800217 	ldw	r6,8(r5)
 2002d20:	4084983a 	sll	r2,r8,r2
 2002d24:	81400315 	stw	r5,12(r16)
 2002d28:	81800215 	stw	r6,8(r16)
 2002d2c:	11c4b03a 	or	r2,r2,r7
 2002d30:	18800115 	stw	r2,4(r3)
 2002d34:	2c000215 	stw	r16,8(r5)
 2002d38:	34000315 	stw	r16,12(r6)
 2002d3c:	200bd0ba 	srai	r5,r4,2
 2002d40:	00c00044 	movi	r3,1
 2002d44:	194a983a 	sll	r5,r3,r5
 2002d48:	11404936 	bltu	r2,r5,2002e70 <_malloc_r+0x328>
 2002d4c:	1146703a 	and	r3,r2,r5
 2002d50:	18000a1e 	bne	r3,zero,2002d7c <_malloc_r+0x234>
 2002d54:	00ffff04 	movi	r3,-4
 2002d58:	294b883a 	add	r5,r5,r5
 2002d5c:	20c8703a 	and	r4,r4,r3
 2002d60:	1146703a 	and	r3,r2,r5
 2002d64:	21000104 	addi	r4,r4,4
 2002d68:	1800041e 	bne	r3,zero,2002d7c <_malloc_r+0x234>
 2002d6c:	294b883a 	add	r5,r5,r5
 2002d70:	1146703a 	and	r3,r2,r5
 2002d74:	21000104 	addi	r4,r4,4
 2002d78:	183ffc26 	beq	r3,zero,2002d6c <__alt_mem_epcs_flash_controller+0xfdff9d6c>
 2002d7c:	023fff04 	movi	r8,-4
 2002d80:	01c003c4 	movi	r7,15
 2002d84:	2105883a 	add	r2,r4,r4
 2002d88:	1085883a 	add	r2,r2,r2
 2002d8c:	1085883a 	add	r2,r2,r2
 2002d90:	9899883a 	add	r12,r19,r2
 2002d94:	62800304 	addi	r10,r12,12
 2002d98:	2017883a 	mov	r11,r4
 2002d9c:	54000017 	ldw	r16,0(r10)
 2002da0:	51bffd04 	addi	r6,r10,-12
 2002da4:	8180041e 	bne	r16,r6,2002db8 <_malloc_r+0x270>
 2002da8:	0000ca06 	br	20030d4 <_malloc_r+0x58c>
 2002dac:	10001c0e 	bge	r2,zero,2002e20 <_malloc_r+0x2d8>
 2002db0:	84000317 	ldw	r16,12(r16)
 2002db4:	8180c726 	beq	r16,r6,20030d4 <_malloc_r+0x58c>
 2002db8:	80c00117 	ldw	r3,4(r16)
 2002dbc:	1a06703a 	and	r3,r3,r8
 2002dc0:	1c45c83a 	sub	r2,r3,r17
 2002dc4:	38bff90e 	bge	r7,r2,2002dac <__alt_mem_epcs_flash_controller+0xfdff9dac>
 2002dc8:	81000317 	ldw	r4,12(r16)
 2002dcc:	81400217 	ldw	r5,8(r16)
 2002dd0:	8447883a 	add	r3,r16,r17
 2002dd4:	8c400054 	ori	r17,r17,1
 2002dd8:	29000315 	stw	r4,12(r5)
 2002ddc:	21400215 	stw	r5,8(r4)
 2002de0:	84400115 	stw	r17,4(r16)
 2002de4:	1889883a 	add	r4,r3,r2
 2002de8:	11400054 	ori	r5,r2,1
 2002dec:	98c00515 	stw	r3,20(r19)
 2002df0:	98c00415 	stw	r3,16(r19)
 2002df4:	20800015 	stw	r2,0(r4)
 2002df8:	1a400315 	stw	r9,12(r3)
 2002dfc:	1a400215 	stw	r9,8(r3)
 2002e00:	19400115 	stw	r5,4(r3)
 2002e04:	9009883a 	mov	r4,r18
 2002e08:	2010b2c0 	call	2010b2c <__malloc_unlock>
 2002e0c:	80800204 	addi	r2,r16,8
 2002e10:	003f7b06 	br	2002c00 <__alt_mem_epcs_flash_controller+0xfdff9c00>
 2002e14:	8808d0fa 	srli	r4,r17,3
 2002e18:	210b883a 	add	r5,r4,r4
 2002e1c:	003f9106 	br	2002c64 <__alt_mem_epcs_flash_controller+0xfdff9c64>
 2002e20:	80c7883a 	add	r3,r16,r3
 2002e24:	19400117 	ldw	r5,4(r3)
 2002e28:	80800317 	ldw	r2,12(r16)
 2002e2c:	81000217 	ldw	r4,8(r16)
 2002e30:	29400054 	ori	r5,r5,1
 2002e34:	19400115 	stw	r5,4(r3)
 2002e38:	20800315 	stw	r2,12(r4)
 2002e3c:	11000215 	stw	r4,8(r2)
 2002e40:	9009883a 	mov	r4,r18
 2002e44:	2010b2c0 	call	2010b2c <__malloc_unlock>
 2002e48:	80800204 	addi	r2,r16,8
 2002e4c:	003f6c06 	br	2002c00 <__alt_mem_epcs_flash_controller+0xfdff9c00>
 2002e50:	8085883a 	add	r2,r16,r2
 2002e54:	10c00117 	ldw	r3,4(r2)
 2002e58:	9009883a 	mov	r4,r18
 2002e5c:	18c00054 	ori	r3,r3,1
 2002e60:	10c00115 	stw	r3,4(r2)
 2002e64:	2010b2c0 	call	2010b2c <__malloc_unlock>
 2002e68:	80800204 	addi	r2,r16,8
 2002e6c:	003f6406 	br	2002c00 <__alt_mem_epcs_flash_controller+0xfdff9c00>
 2002e70:	9c000217 	ldw	r16,8(r19)
 2002e74:	00bfff04 	movi	r2,-4
 2002e78:	85400117 	ldw	r21,4(r16)
 2002e7c:	a8aa703a 	and	r21,r21,r2
 2002e80:	ac400336 	bltu	r21,r17,2002e90 <_malloc_r+0x348>
 2002e84:	ac45c83a 	sub	r2,r21,r17
 2002e88:	00c003c4 	movi	r3,15
 2002e8c:	18805316 	blt	r3,r2,2002fdc <_malloc_r+0x494>
 2002e90:	d5e74417 	ldw	r23,-25328(gp)
 2002e94:	d0e00217 	ldw	r3,-32760(gp)
 2002e98:	00bfffc4 	movi	r2,-1
 2002e9c:	8579883a 	add	fp,r16,r21
 2002ea0:	8def883a 	add	r23,r17,r23
 2002ea4:	1880d226 	beq	r3,r2,20031f0 <_malloc_r+0x6a8>
 2002ea8:	bdc403c4 	addi	r23,r23,4111
 2002eac:	00bc0004 	movi	r2,-4096
 2002eb0:	b8ae703a 	and	r23,r23,r2
 2002eb4:	9009883a 	mov	r4,r18
 2002eb8:	b80b883a 	mov	r5,r23
 2002ebc:	20034a80 	call	20034a8 <_sbrk_r>
 2002ec0:	1029883a 	mov	r20,r2
 2002ec4:	00bfffc4 	movi	r2,-1
 2002ec8:	a080d126 	beq	r20,r2,2003210 <_malloc_r+0x6c8>
 2002ecc:	a7009f36 	bltu	r20,fp,200314c <_malloc_r+0x604>
 2002ed0:	05808274 	movhi	r22,521
 2002ed4:	b5ab0d04 	addi	r22,r22,-21452
 2002ed8:	b0800017 	ldw	r2,0(r22)
 2002edc:	b885883a 	add	r2,r23,r2
 2002ee0:	b0800015 	stw	r2,0(r22)
 2002ee4:	e500cf26 	beq	fp,r20,2003224 <_malloc_r+0x6dc>
 2002ee8:	d1200217 	ldw	r4,-32760(gp)
 2002eec:	00ffffc4 	movi	r3,-1
 2002ef0:	20c0e026 	beq	r4,r3,2003274 <_malloc_r+0x72c>
 2002ef4:	a739c83a 	sub	fp,r20,fp
 2002ef8:	1705883a 	add	r2,r2,fp
 2002efc:	b0800015 	stw	r2,0(r22)
 2002f00:	a08001cc 	andi	r2,r20,7
 2002f04:	1000a526 	beq	r2,zero,200319c <_malloc_r+0x654>
 2002f08:	a0a9c83a 	sub	r20,r20,r2
 2002f0c:	00c40204 	movi	r3,4104
 2002f10:	a5000204 	addi	r20,r20,8
 2002f14:	1885c83a 	sub	r2,r3,r2
 2002f18:	a5c7883a 	add	r3,r20,r23
 2002f1c:	18c3ffcc 	andi	r3,r3,4095
 2002f20:	10efc83a 	sub	r23,r2,r3
 2002f24:	9009883a 	mov	r4,r18
 2002f28:	b80b883a 	mov	r5,r23
 2002f2c:	20034a80 	call	20034a8 <_sbrk_r>
 2002f30:	00ffffc4 	movi	r3,-1
 2002f34:	10c0cc26 	beq	r2,r3,2003268 <_malloc_r+0x720>
 2002f38:	1505c83a 	sub	r2,r2,r20
 2002f3c:	b887883a 	add	r3,r23,r2
 2002f40:	18c00054 	ori	r3,r3,1
 2002f44:	b0800017 	ldw	r2,0(r22)
 2002f48:	9d000215 	stw	r20,8(r19)
 2002f4c:	a0c00115 	stw	r3,4(r20)
 2002f50:	b885883a 	add	r2,r23,r2
 2002f54:	b0800015 	stw	r2,0(r22)
 2002f58:	84c00e26 	beq	r16,r19,2002f94 <_malloc_r+0x44c>
 2002f5c:	00c003c4 	movi	r3,15
 2002f60:	1d40902e 	bgeu	r3,r21,20031a4 <_malloc_r+0x65c>
 2002f64:	ad7ffd04 	addi	r21,r21,-12
 2002f68:	013ffe04 	movi	r4,-8
 2002f6c:	a908703a 	and	r4,r21,r4
 2002f70:	810b883a 	add	r5,r16,r4
 2002f74:	01800144 	movi	r6,5
 2002f78:	29800115 	stw	r6,4(r5)
 2002f7c:	29800215 	stw	r6,8(r5)
 2002f80:	81400117 	ldw	r5,4(r16)
 2002f84:	2940004c 	andi	r5,r5,1
 2002f88:	214ab03a 	or	r5,r4,r5
 2002f8c:	81400115 	stw	r5,4(r16)
 2002f90:	1900ae36 	bltu	r3,r4,200324c <_malloc_r+0x704>
 2002f94:	d0e74317 	ldw	r3,-25332(gp)
 2002f98:	1880012e 	bgeu	r3,r2,2002fa0 <_malloc_r+0x458>
 2002f9c:	d0a74315 	stw	r2,-25332(gp)
 2002fa0:	d0e74217 	ldw	r3,-25336(gp)
 2002fa4:	9c000217 	ldw	r16,8(r19)
 2002fa8:	1880012e 	bgeu	r3,r2,2002fb0 <_malloc_r+0x468>
 2002fac:	d0a74215 	stw	r2,-25336(gp)
 2002fb0:	80c00117 	ldw	r3,4(r16)
 2002fb4:	00bfff04 	movi	r2,-4
 2002fb8:	1886703a 	and	r3,r3,r2
 2002fbc:	1c45c83a 	sub	r2,r3,r17
 2002fc0:	1c400236 	bltu	r3,r17,2002fcc <_malloc_r+0x484>
 2002fc4:	00c003c4 	movi	r3,15
 2002fc8:	18800416 	blt	r3,r2,2002fdc <_malloc_r+0x494>
 2002fcc:	9009883a 	mov	r4,r18
 2002fd0:	2010b2c0 	call	2010b2c <__malloc_unlock>
 2002fd4:	0005883a 	mov	r2,zero
 2002fd8:	003f0906 	br	2002c00 <__alt_mem_epcs_flash_controller+0xfdff9c00>
 2002fdc:	88c00054 	ori	r3,r17,1
 2002fe0:	10800054 	ori	r2,r2,1
 2002fe4:	80c00115 	stw	r3,4(r16)
 2002fe8:	8463883a 	add	r17,r16,r17
 2002fec:	88800115 	stw	r2,4(r17)
 2002ff0:	9009883a 	mov	r4,r18
 2002ff4:	9c400215 	stw	r17,8(r19)
 2002ff8:	2010b2c0 	call	2010b2c <__malloc_unlock>
 2002ffc:	80800204 	addi	r2,r16,8
 2003000:	003eff06 	br	2002c00 <__alt_mem_epcs_flash_controller+0xfdff9c00>
 2003004:	00800504 	movi	r2,20
 2003008:	1100492e 	bgeu	r2,r4,2003130 <_malloc_r+0x5e8>
 200300c:	00801504 	movi	r2,84
 2003010:	11005c36 	bltu	r2,r4,2003184 <_malloc_r+0x63c>
 2003014:	8808d33a 	srli	r4,r17,12
 2003018:	21001b84 	addi	r4,r4,110
 200301c:	210b883a 	add	r5,r4,r4
 2003020:	003f1006 	br	2002c64 <__alt_mem_epcs_flash_controller+0xfdff9c64>
 2003024:	1006d27a 	srli	r3,r2,9
 2003028:	01400104 	movi	r5,4
 200302c:	28c0432e 	bgeu	r5,r3,200313c <_malloc_r+0x5f4>
 2003030:	01400504 	movi	r5,20
 2003034:	28c07036 	bltu	r5,r3,20031f8 <_malloc_r+0x6b0>
 2003038:	194016c4 	addi	r5,r3,91
 200303c:	294d883a 	add	r6,r5,r5
 2003040:	318d883a 	add	r6,r6,r6
 2003044:	318d883a 	add	r6,r6,r6
 2003048:	998d883a 	add	r6,r19,r6
 200304c:	30c00217 	ldw	r3,8(r6)
 2003050:	01c08234 	movhi	r7,520
 2003054:	39ddf304 	addi	r7,r7,30668
 2003058:	19805726 	beq	r3,r6,20031b8 <_malloc_r+0x670>
 200305c:	01ffff04 	movi	r7,-4
 2003060:	19400117 	ldw	r5,4(r3)
 2003064:	29ca703a 	and	r5,r5,r7
 2003068:	1140022e 	bgeu	r2,r5,2003074 <_malloc_r+0x52c>
 200306c:	18c00217 	ldw	r3,8(r3)
 2003070:	30fffb1e 	bne	r6,r3,2003060 <__alt_mem_epcs_flash_controller+0xfdffa060>
 2003074:	19400317 	ldw	r5,12(r3)
 2003078:	98800117 	ldw	r2,4(r19)
 200307c:	81400315 	stw	r5,12(r16)
 2003080:	80c00215 	stw	r3,8(r16)
 2003084:	2c000215 	stw	r16,8(r5)
 2003088:	1c000315 	stw	r16,12(r3)
 200308c:	003f2b06 	br	2002d3c <__alt_mem_epcs_flash_controller+0xfdff9d3c>
 2003090:	8445883a 	add	r2,r16,r17
 2003094:	8c400054 	ori	r17,r17,1
 2003098:	18800515 	stw	r2,20(r3)
 200309c:	18800415 	stw	r2,16(r3)
 20030a0:	29000054 	ori	r4,r5,1
 20030a4:	1147883a 	add	r3,r2,r5
 20030a8:	84400115 	stw	r17,4(r16)
 20030ac:	11000115 	stw	r4,4(r2)
 20030b0:	12400315 	stw	r9,12(r2)
 20030b4:	12400215 	stw	r9,8(r2)
 20030b8:	19400015 	stw	r5,0(r3)
 20030bc:	9009883a 	mov	r4,r18
 20030c0:	2010b2c0 	call	2010b2c <__malloc_unlock>
 20030c4:	80800204 	addi	r2,r16,8
 20030c8:	003ecd06 	br	2002c00 <__alt_mem_epcs_flash_controller+0xfdff9c00>
 20030cc:	18800117 	ldw	r2,4(r3)
 20030d0:	003f1a06 	br	2002d3c <__alt_mem_epcs_flash_controller+0xfdff9d3c>
 20030d4:	5ac00044 	addi	r11,r11,1
 20030d8:	588000cc 	andi	r2,r11,3
 20030dc:	52800204 	addi	r10,r10,8
 20030e0:	103f2e1e 	bne	r2,zero,2002d9c <__alt_mem_epcs_flash_controller+0xfdff9d9c>
 20030e4:	20c000cc 	andi	r3,r4,3
 20030e8:	60bffe04 	addi	r2,r12,-8
 20030ec:	18006f26 	beq	r3,zero,20032ac <_malloc_r+0x764>
 20030f0:	63000017 	ldw	r12,0(r12)
 20030f4:	213fffc4 	addi	r4,r4,-1
 20030f8:	60bffa26 	beq	r12,r2,20030e4 <__alt_mem_epcs_flash_controller+0xfdffa0e4>
 20030fc:	98800117 	ldw	r2,4(r19)
 2003100:	294b883a 	add	r5,r5,r5
 2003104:	117f5a36 	bltu	r2,r5,2002e70 <__alt_mem_epcs_flash_controller+0xfdff9e70>
 2003108:	283f5926 	beq	r5,zero,2002e70 <__alt_mem_epcs_flash_controller+0xfdff9e70>
 200310c:	1146703a 	and	r3,r2,r5
 2003110:	18001626 	beq	r3,zero,200316c <_malloc_r+0x624>
 2003114:	5809883a 	mov	r4,r11
 2003118:	003f1a06 	br	2002d84 <__alt_mem_epcs_flash_controller+0xfdff9d84>
 200311c:	80800204 	addi	r2,r16,8
 2003120:	84000517 	ldw	r16,20(r16)
 2003124:	143ea81e 	bne	r2,r16,2002bc8 <__alt_mem_epcs_flash_controller+0xfdff9bc8>
 2003128:	21000084 	addi	r4,r4,2
 200312c:	003ee306 	br	2002cbc <__alt_mem_epcs_flash_controller+0xfdff9cbc>
 2003130:	210016c4 	addi	r4,r4,91
 2003134:	210b883a 	add	r5,r4,r4
 2003138:	003eca06 	br	2002c64 <__alt_mem_epcs_flash_controller+0xfdff9c64>
 200313c:	100ad1ba 	srli	r5,r2,6
 2003140:	29400e04 	addi	r5,r5,56
 2003144:	294d883a 	add	r6,r5,r5
 2003148:	003fbd06 	br	2003040 <__alt_mem_epcs_flash_controller+0xfdffa040>
 200314c:	84ff6026 	beq	r16,r19,2002ed0 <__alt_mem_epcs_flash_controller+0xfdff9ed0>
 2003150:	00808234 	movhi	r2,520
 2003154:	109df304 	addi	r2,r2,30668
 2003158:	14000217 	ldw	r16,8(r2)
 200315c:	00bfff04 	movi	r2,-4
 2003160:	80c00117 	ldw	r3,4(r16)
 2003164:	1886703a 	and	r3,r3,r2
 2003168:	003f9406 	br	2002fbc <__alt_mem_epcs_flash_controller+0xfdff9fbc>
 200316c:	294b883a 	add	r5,r5,r5
 2003170:	1146703a 	and	r3,r2,r5
 2003174:	5ac00104 	addi	r11,r11,4
 2003178:	183ffc26 	beq	r3,zero,200316c <__alt_mem_epcs_flash_controller+0xfdffa16c>
 200317c:	5809883a 	mov	r4,r11
 2003180:	003f0006 	br	2002d84 <__alt_mem_epcs_flash_controller+0xfdff9d84>
 2003184:	00805504 	movi	r2,340
 2003188:	11001336 	bltu	r2,r4,20031d8 <_malloc_r+0x690>
 200318c:	8808d3fa 	srli	r4,r17,15
 2003190:	21001dc4 	addi	r4,r4,119
 2003194:	210b883a 	add	r5,r4,r4
 2003198:	003eb206 	br	2002c64 <__alt_mem_epcs_flash_controller+0xfdff9c64>
 200319c:	00840004 	movi	r2,4096
 20031a0:	003f5d06 	br	2002f18 <__alt_mem_epcs_flash_controller+0xfdff9f18>
 20031a4:	00800044 	movi	r2,1
 20031a8:	a0800115 	stw	r2,4(r20)
 20031ac:	a021883a 	mov	r16,r20
 20031b0:	0007883a 	mov	r3,zero
 20031b4:	003f8106 	br	2002fbc <__alt_mem_epcs_flash_controller+0xfdff9fbc>
 20031b8:	280bd0ba 	srai	r5,r5,2
 20031bc:	01800044 	movi	r6,1
 20031c0:	38800117 	ldw	r2,4(r7)
 20031c4:	314c983a 	sll	r6,r6,r5
 20031c8:	180b883a 	mov	r5,r3
 20031cc:	3084b03a 	or	r2,r6,r2
 20031d0:	38800115 	stw	r2,4(r7)
 20031d4:	003fa906 	br	200307c <__alt_mem_epcs_flash_controller+0xfdffa07c>
 20031d8:	00815504 	movi	r2,1364
 20031dc:	11001836 	bltu	r2,r4,2003240 <_malloc_r+0x6f8>
 20031e0:	8808d4ba 	srli	r4,r17,18
 20031e4:	21001f04 	addi	r4,r4,124
 20031e8:	210b883a 	add	r5,r4,r4
 20031ec:	003e9d06 	br	2002c64 <__alt_mem_epcs_flash_controller+0xfdff9c64>
 20031f0:	bdc00404 	addi	r23,r23,16
 20031f4:	003f2f06 	br	2002eb4 <__alt_mem_epcs_flash_controller+0xfdff9eb4>
 20031f8:	01401504 	movi	r5,84
 20031fc:	28c01f36 	bltu	r5,r3,200327c <_malloc_r+0x734>
 2003200:	100ad33a 	srli	r5,r2,12
 2003204:	29401b84 	addi	r5,r5,110
 2003208:	294d883a 	add	r6,r5,r5
 200320c:	003f8c06 	br	2003040 <__alt_mem_epcs_flash_controller+0xfdffa040>
 2003210:	9c000217 	ldw	r16,8(r19)
 2003214:	00bfff04 	movi	r2,-4
 2003218:	80c00117 	ldw	r3,4(r16)
 200321c:	1886703a 	and	r3,r3,r2
 2003220:	003f6606 	br	2002fbc <__alt_mem_epcs_flash_controller+0xfdff9fbc>
 2003224:	e0c3ffcc 	andi	r3,fp,4095
 2003228:	183f2f1e 	bne	r3,zero,2002ee8 <__alt_mem_epcs_flash_controller+0xfdff9ee8>
 200322c:	98c00217 	ldw	r3,8(r19)
 2003230:	bd49883a 	add	r4,r23,r21
 2003234:	21000054 	ori	r4,r4,1
 2003238:	19000115 	stw	r4,4(r3)
 200323c:	003f5506 	br	2002f94 <__alt_mem_epcs_flash_controller+0xfdff9f94>
 2003240:	01403f04 	movi	r5,252
 2003244:	01001f84 	movi	r4,126
 2003248:	003e8606 	br	2002c64 <__alt_mem_epcs_flash_controller+0xfdff9c64>
 200324c:	9009883a 	mov	r4,r18
 2003250:	81400204 	addi	r5,r16,8
 2003254:	2008d440 	call	2008d44 <_free_r>
 2003258:	00808274 	movhi	r2,521
 200325c:	10ab0d04 	addi	r2,r2,-21452
 2003260:	10800017 	ldw	r2,0(r2)
 2003264:	003f4b06 	br	2002f94 <__alt_mem_epcs_flash_controller+0xfdff9f94>
 2003268:	00c00044 	movi	r3,1
 200326c:	002f883a 	mov	r23,zero
 2003270:	003f3406 	br	2002f44 <__alt_mem_epcs_flash_controller+0xfdff9f44>
 2003274:	d5200215 	stw	r20,-32760(gp)
 2003278:	003f2106 	br	2002f00 <__alt_mem_epcs_flash_controller+0xfdff9f00>
 200327c:	01405504 	movi	r5,340
 2003280:	28c00436 	bltu	r5,r3,2003294 <_malloc_r+0x74c>
 2003284:	100ad3fa 	srli	r5,r2,15
 2003288:	29401dc4 	addi	r5,r5,119
 200328c:	294d883a 	add	r6,r5,r5
 2003290:	003f6b06 	br	2003040 <__alt_mem_epcs_flash_controller+0xfdffa040>
 2003294:	01415504 	movi	r5,1364
 2003298:	28c00936 	bltu	r5,r3,20032c0 <_malloc_r+0x778>
 200329c:	100ad4ba 	srli	r5,r2,18
 20032a0:	29401f04 	addi	r5,r5,124
 20032a4:	294d883a 	add	r6,r5,r5
 20032a8:	003f6506 	br	2003040 <__alt_mem_epcs_flash_controller+0xfdffa040>
 20032ac:	98800117 	ldw	r2,4(r19)
 20032b0:	0146303a 	nor	r3,zero,r5
 20032b4:	1884703a 	and	r2,r3,r2
 20032b8:	98800115 	stw	r2,4(r19)
 20032bc:	003f9006 	br	2003100 <__alt_mem_epcs_flash_controller+0xfdffa100>
 20032c0:	01803f04 	movi	r6,252
 20032c4:	01401f84 	movi	r5,126
 20032c8:	003f5d06 	br	2003040 <__alt_mem_epcs_flash_controller+0xfdffa040>

020032cc <memset>:
 20032cc:	00c000c4 	movi	r3,3
 20032d0:	2005883a 	mov	r2,r4
 20032d4:	29403fcc 	andi	r5,r5,255
 20032d8:	19802d2e 	bgeu	r3,r6,2003390 <memset+0xc4>
 20032dc:	20c6703a 	and	r3,r4,r3
 20032e0:	18002e1e 	bne	r3,zero,200339c <memset+0xd0>
 20032e4:	2806923a 	slli	r3,r5,8
 20032e8:	010003c4 	movi	r4,15
 20032ec:	3011883a 	mov	r8,r6
 20032f0:	1946b03a 	or	r3,r3,r5
 20032f4:	180e943a 	slli	r7,r3,16
 20032f8:	38ceb03a 	or	r7,r7,r3
 20032fc:	1007883a 	mov	r3,r2
 2003300:	21800f2e 	bgeu	r4,r6,2003340 <memset+0x74>
 2003304:	19c00015 	stw	r7,0(r3)
 2003308:	19c00115 	stw	r7,4(r3)
 200330c:	19c00215 	stw	r7,8(r3)
 2003310:	19c00315 	stw	r7,12(r3)
 2003314:	423ffc04 	addi	r8,r8,-16
 2003318:	18c00404 	addi	r3,r3,16
 200331c:	223ff936 	bltu	r4,r8,2003304 <__alt_mem_epcs_flash_controller+0xfdffa304>
 2003320:	30fffc04 	addi	r3,r6,-16
 2003324:	1806d13a 	srli	r3,r3,4
 2003328:	318003cc 	andi	r6,r6,15
 200332c:	010000c4 	movi	r4,3
 2003330:	18c00044 	addi	r3,r3,1
 2003334:	1806913a 	slli	r3,r3,4
 2003338:	10c7883a 	add	r3,r2,r3
 200333c:	21800e2e 	bgeu	r4,r6,2003378 <memset+0xac>
 2003340:	1813883a 	mov	r9,r3
 2003344:	3011883a 	mov	r8,r6
 2003348:	010000c4 	movi	r4,3
 200334c:	49c00015 	stw	r7,0(r9)
 2003350:	423fff04 	addi	r8,r8,-4
 2003354:	4a400104 	addi	r9,r9,4
 2003358:	223ffc36 	bltu	r4,r8,200334c <__alt_mem_epcs_flash_controller+0xfdffa34c>
 200335c:	313fff04 	addi	r4,r6,-4
 2003360:	2008d0ba 	srli	r4,r4,2
 2003364:	318000cc 	andi	r6,r6,3
 2003368:	21000044 	addi	r4,r4,1
 200336c:	2109883a 	add	r4,r4,r4
 2003370:	2109883a 	add	r4,r4,r4
 2003374:	1907883a 	add	r3,r3,r4
 2003378:	30000a26 	beq	r6,zero,20033a4 <memset+0xd8>
 200337c:	198d883a 	add	r6,r3,r6
 2003380:	19400005 	stb	r5,0(r3)
 2003384:	18c00044 	addi	r3,r3,1
 2003388:	19bffd1e 	bne	r3,r6,2003380 <__alt_mem_epcs_flash_controller+0xfdffa380>
 200338c:	f800283a 	ret
 2003390:	2007883a 	mov	r3,r4
 2003394:	303ff91e 	bne	r6,zero,200337c <__alt_mem_epcs_flash_controller+0xfdffa37c>
 2003398:	00000206 	br	20033a4 <memset+0xd8>
 200339c:	2007883a 	mov	r3,r4
 20033a0:	003ff606 	br	200337c <__alt_mem_epcs_flash_controller+0xfdffa37c>
 20033a4:	f800283a 	ret

020033a8 <_printf_r>:
 20033a8:	defffd04 	addi	sp,sp,-12
 20033ac:	dfc00015 	stw	ra,0(sp)
 20033b0:	d9800115 	stw	r6,4(sp)
 20033b4:	d9c00215 	stw	r7,8(sp)
 20033b8:	280d883a 	mov	r6,r5
 20033bc:	21400217 	ldw	r5,8(r4)
 20033c0:	d9c00104 	addi	r7,sp,4
 20033c4:	20037780 	call	2003778 <___vfprintf_internal_r>
 20033c8:	dfc00017 	ldw	ra,0(sp)
 20033cc:	dec00304 	addi	sp,sp,12
 20033d0:	f800283a 	ret

020033d4 <printf>:
 20033d4:	defffc04 	addi	sp,sp,-16
 20033d8:	dfc00015 	stw	ra,0(sp)
 20033dc:	d9400115 	stw	r5,4(sp)
 20033e0:	d9800215 	stw	r6,8(sp)
 20033e4:	d9c00315 	stw	r7,12(sp)
 20033e8:	00808274 	movhi	r2,521
 20033ec:	10a3b704 	addi	r2,r2,-28964
 20033f0:	10800017 	ldw	r2,0(r2)
 20033f4:	200b883a 	mov	r5,r4
 20033f8:	d9800104 	addi	r6,sp,4
 20033fc:	11000217 	ldw	r4,8(r2)
 2003400:	20055f40 	call	20055f4 <__vfprintf_internal>
 2003404:	dfc00017 	ldw	ra,0(sp)
 2003408:	dec00404 	addi	sp,sp,16
 200340c:	f800283a 	ret

02003410 <_puts_r>:
 2003410:	defff604 	addi	sp,sp,-40
 2003414:	dc400815 	stw	r17,32(sp)
 2003418:	2023883a 	mov	r17,r4
 200341c:	2809883a 	mov	r4,r5
 2003420:	dc000715 	stw	r16,28(sp)
 2003424:	dfc00915 	stw	ra,36(sp)
 2003428:	2821883a 	mov	r16,r5
 200342c:	20036b80 	call	20036b8 <strlen>
 2003430:	10c00044 	addi	r3,r2,1
 2003434:	d8800115 	stw	r2,4(sp)
 2003438:	89400217 	ldw	r5,8(r17)
 200343c:	00808234 	movhi	r2,520
 2003440:	109b5004 	addi	r2,r2,27968
 2003444:	d8800215 	stw	r2,8(sp)
 2003448:	00800044 	movi	r2,1
 200344c:	d8800315 	stw	r2,12(sp)
 2003450:	8809883a 	mov	r4,r17
 2003454:	00800084 	movi	r2,2
 2003458:	d9800404 	addi	r6,sp,16
 200345c:	dc000015 	stw	r16,0(sp)
 2003460:	d8c00615 	stw	r3,24(sp)
 2003464:	dec00415 	stw	sp,16(sp)
 2003468:	d8800515 	stw	r2,20(sp)
 200346c:	20090140 	call	2009014 <__sfvwrite_r>
 2003470:	1000061e 	bne	r2,zero,200348c <_puts_r+0x7c>
 2003474:	00800284 	movi	r2,10
 2003478:	dfc00917 	ldw	ra,36(sp)
 200347c:	dc400817 	ldw	r17,32(sp)
 2003480:	dc000717 	ldw	r16,28(sp)
 2003484:	dec00a04 	addi	sp,sp,40
 2003488:	f800283a 	ret
 200348c:	00bfffc4 	movi	r2,-1
 2003490:	003ff906 	br	2003478 <__alt_mem_epcs_flash_controller+0xfdffa478>

02003494 <puts>:
 2003494:	00808274 	movhi	r2,521
 2003498:	10a3b704 	addi	r2,r2,-28964
 200349c:	200b883a 	mov	r5,r4
 20034a0:	11000017 	ldw	r4,0(r2)
 20034a4:	20034101 	jmpi	2003410 <_puts_r>

020034a8 <_sbrk_r>:
 20034a8:	defffd04 	addi	sp,sp,-12
 20034ac:	dc400115 	stw	r17,4(sp)
 20034b0:	dc000015 	stw	r16,0(sp)
 20034b4:	2023883a 	mov	r17,r4
 20034b8:	04008274 	movhi	r16,521
 20034bc:	842afb04 	addi	r16,r16,-21524
 20034c0:	2809883a 	mov	r4,r5
 20034c4:	dfc00215 	stw	ra,8(sp)
 20034c8:	80000015 	stw	zero,0(r16)
 20034cc:	2010d100 	call	2010d10 <sbrk>
 20034d0:	00ffffc4 	movi	r3,-1
 20034d4:	10c00526 	beq	r2,r3,20034ec <_sbrk_r+0x44>
 20034d8:	dfc00217 	ldw	ra,8(sp)
 20034dc:	dc400117 	ldw	r17,4(sp)
 20034e0:	dc000017 	ldw	r16,0(sp)
 20034e4:	dec00304 	addi	sp,sp,12
 20034e8:	f800283a 	ret
 20034ec:	80c00017 	ldw	r3,0(r16)
 20034f0:	183ff926 	beq	r3,zero,20034d8 <__alt_mem_epcs_flash_controller+0xfdffa4d8>
 20034f4:	88c00015 	stw	r3,0(r17)
 20034f8:	dfc00217 	ldw	ra,8(sp)
 20034fc:	dc400117 	ldw	r17,4(sp)
 2003500:	dc000017 	ldw	r16,0(sp)
 2003504:	dec00304 	addi	sp,sp,12
 2003508:	f800283a 	ret

0200350c <scanf>:
 200350c:	defffc04 	addi	sp,sp,-16
 2003510:	dfc00015 	stw	ra,0(sp)
 2003514:	d9400115 	stw	r5,4(sp)
 2003518:	d9800215 	stw	r6,8(sp)
 200351c:	d9c00315 	stw	r7,12(sp)
 2003520:	00808274 	movhi	r2,521
 2003524:	10a3b704 	addi	r2,r2,-28964
 2003528:	10800017 	ldw	r2,0(r2)
 200352c:	200d883a 	mov	r6,r4
 2003530:	d9c00104 	addi	r7,sp,4
 2003534:	11400117 	ldw	r5,4(r2)
 2003538:	1009883a 	mov	r4,r2
 200353c:	20056180 	call	2005618 <__svfscanf_r>
 2003540:	dfc00017 	ldw	ra,0(sp)
 2003544:	dec00404 	addi	sp,sp,16
 2003548:	f800283a 	ret

0200354c <_scanf_r>:
 200354c:	defffd04 	addi	sp,sp,-12
 2003550:	dfc00015 	stw	ra,0(sp)
 2003554:	d9800115 	stw	r6,4(sp)
 2003558:	d9c00215 	stw	r7,8(sp)
 200355c:	280d883a 	mov	r6,r5
 2003560:	21400117 	ldw	r5,4(r4)
 2003564:	d9c00104 	addi	r7,sp,4
 2003568:	20056180 	call	2005618 <__svfscanf_r>
 200356c:	dfc00017 	ldw	ra,0(sp)
 2003570:	dec00304 	addi	sp,sp,12
 2003574:	f800283a 	ret

02003578 <__sread>:
 2003578:	defffe04 	addi	sp,sp,-8
 200357c:	dc000015 	stw	r16,0(sp)
 2003580:	2821883a 	mov	r16,r5
 2003584:	2940038f 	ldh	r5,14(r5)
 2003588:	dfc00115 	stw	ra,4(sp)
 200358c:	200ad1c0 	call	200ad1c <_read_r>
 2003590:	10000716 	blt	r2,zero,20035b0 <__sread+0x38>
 2003594:	80c01417 	ldw	r3,80(r16)
 2003598:	1887883a 	add	r3,r3,r2
 200359c:	80c01415 	stw	r3,80(r16)
 20035a0:	dfc00117 	ldw	ra,4(sp)
 20035a4:	dc000017 	ldw	r16,0(sp)
 20035a8:	dec00204 	addi	sp,sp,8
 20035ac:	f800283a 	ret
 20035b0:	80c0030b 	ldhu	r3,12(r16)
 20035b4:	18fbffcc 	andi	r3,r3,61439
 20035b8:	80c0030d 	sth	r3,12(r16)
 20035bc:	dfc00117 	ldw	ra,4(sp)
 20035c0:	dc000017 	ldw	r16,0(sp)
 20035c4:	dec00204 	addi	sp,sp,8
 20035c8:	f800283a 	ret

020035cc <__swrite>:
 20035cc:	2880030b 	ldhu	r2,12(r5)
 20035d0:	defffb04 	addi	sp,sp,-20
 20035d4:	dcc00315 	stw	r19,12(sp)
 20035d8:	10c0400c 	andi	r3,r2,256
 20035dc:	18ffffcc 	andi	r3,r3,65535
 20035e0:	18e0001c 	xori	r3,r3,32768
 20035e4:	dc800215 	stw	r18,8(sp)
 20035e8:	dc400115 	stw	r17,4(sp)
 20035ec:	dc000015 	stw	r16,0(sp)
 20035f0:	dfc00415 	stw	ra,16(sp)
 20035f4:	18e00004 	addi	r3,r3,-32768
 20035f8:	2821883a 	mov	r16,r5
 20035fc:	2027883a 	mov	r19,r4
 2003600:	3025883a 	mov	r18,r6
 2003604:	3823883a 	mov	r17,r7
 2003608:	18000526 	beq	r3,zero,2003620 <__swrite+0x54>
 200360c:	2940038f 	ldh	r5,14(r5)
 2003610:	000d883a 	mov	r6,zero
 2003614:	01c00084 	movi	r7,2
 2003618:	200960c0 	call	200960c <_lseek_r>
 200361c:	8080030b 	ldhu	r2,12(r16)
 2003620:	8140038f 	ldh	r5,14(r16)
 2003624:	10bbffcc 	andi	r2,r2,61439
 2003628:	9809883a 	mov	r4,r19
 200362c:	900d883a 	mov	r6,r18
 2003630:	880f883a 	mov	r7,r17
 2003634:	8080030d 	sth	r2,12(r16)
 2003638:	dfc00417 	ldw	ra,16(sp)
 200363c:	dcc00317 	ldw	r19,12(sp)
 2003640:	dc800217 	ldw	r18,8(sp)
 2003644:	dc400117 	ldw	r17,4(sp)
 2003648:	dc000017 	ldw	r16,0(sp)
 200364c:	dec00504 	addi	sp,sp,20
 2003650:	2006da01 	jmpi	2006da0 <_write_r>

02003654 <__sseek>:
 2003654:	defffe04 	addi	sp,sp,-8
 2003658:	dc000015 	stw	r16,0(sp)
 200365c:	2821883a 	mov	r16,r5
 2003660:	2940038f 	ldh	r5,14(r5)
 2003664:	dfc00115 	stw	ra,4(sp)
 2003668:	200960c0 	call	200960c <_lseek_r>
 200366c:	00ffffc4 	movi	r3,-1
 2003670:	10c00826 	beq	r2,r3,2003694 <__sseek+0x40>
 2003674:	80c0030b 	ldhu	r3,12(r16)
 2003678:	80801415 	stw	r2,80(r16)
 200367c:	18c40014 	ori	r3,r3,4096
 2003680:	80c0030d 	sth	r3,12(r16)
 2003684:	dfc00117 	ldw	ra,4(sp)
 2003688:	dc000017 	ldw	r16,0(sp)
 200368c:	dec00204 	addi	sp,sp,8
 2003690:	f800283a 	ret
 2003694:	80c0030b 	ldhu	r3,12(r16)
 2003698:	18fbffcc 	andi	r3,r3,61439
 200369c:	80c0030d 	sth	r3,12(r16)
 20036a0:	dfc00117 	ldw	ra,4(sp)
 20036a4:	dc000017 	ldw	r16,0(sp)
 20036a8:	dec00204 	addi	sp,sp,8
 20036ac:	f800283a 	ret

020036b0 <__sclose>:
 20036b0:	2940038f 	ldh	r5,14(r5)
 20036b4:	2006f801 	jmpi	2006f80 <_close_r>

020036b8 <strlen>:
 20036b8:	208000cc 	andi	r2,r4,3
 20036bc:	10001f1e 	bne	r2,zero,200373c <strlen+0x84>
 20036c0:	20800017 	ldw	r2,0(r4)
 20036c4:	01ffbff4 	movhi	r7,65279
 20036c8:	39ffbfc4 	addi	r7,r7,-257
 20036cc:	01a02074 	movhi	r6,32897
 20036d0:	31a02004 	addi	r6,r6,-32640
 20036d4:	11c7883a 	add	r3,r2,r7
 20036d8:	0084303a 	nor	r2,zero,r2
 20036dc:	1886703a 	and	r3,r3,r2
 20036e0:	1986703a 	and	r3,r3,r6
 20036e4:	2005883a 	mov	r2,r4
 20036e8:	1800101e 	bne	r3,zero,200372c <strlen+0x74>
 20036ec:	10800104 	addi	r2,r2,4
 20036f0:	10c00017 	ldw	r3,0(r2)
 20036f4:	19cb883a 	add	r5,r3,r7
 20036f8:	00c6303a 	nor	r3,zero,r3
 20036fc:	28c6703a 	and	r3,r5,r3
 2003700:	1986703a 	and	r3,r3,r6
 2003704:	1800091e 	bne	r3,zero,200372c <strlen+0x74>
 2003708:	10800104 	addi	r2,r2,4
 200370c:	10c00017 	ldw	r3,0(r2)
 2003710:	19cb883a 	add	r5,r3,r7
 2003714:	00c6303a 	nor	r3,zero,r3
 2003718:	28c6703a 	and	r3,r5,r3
 200371c:	1986703a 	and	r3,r3,r6
 2003720:	183ff226 	beq	r3,zero,20036ec <__alt_mem_epcs_flash_controller+0xfdffa6ec>
 2003724:	00000106 	br	200372c <strlen+0x74>
 2003728:	10800044 	addi	r2,r2,1
 200372c:	10c00007 	ldb	r3,0(r2)
 2003730:	183ffd1e 	bne	r3,zero,2003728 <__alt_mem_epcs_flash_controller+0xfdffa728>
 2003734:	1105c83a 	sub	r2,r2,r4
 2003738:	f800283a 	ret
 200373c:	2005883a 	mov	r2,r4
 2003740:	003ffa06 	br	200372c <__alt_mem_epcs_flash_controller+0xfdffa72c>

02003744 <__sprint_r>:
 2003744:	30800217 	ldw	r2,8(r6)
 2003748:	defffe04 	addi	sp,sp,-8
 200374c:	dc000015 	stw	r16,0(sp)
 2003750:	dfc00115 	stw	ra,4(sp)
 2003754:	3021883a 	mov	r16,r6
 2003758:	10000226 	beq	r2,zero,2003764 <__sprint_r+0x20>
 200375c:	20090140 	call	2009014 <__sfvwrite_r>
 2003760:	80000215 	stw	zero,8(r16)
 2003764:	80000115 	stw	zero,4(r16)
 2003768:	dfc00117 	ldw	ra,4(sp)
 200376c:	dc000017 	ldw	r16,0(sp)
 2003770:	dec00204 	addi	sp,sp,8
 2003774:	f800283a 	ret

02003778 <___vfprintf_internal_r>:
 2003778:	defeb904 	addi	sp,sp,-1308
 200377c:	dc013d15 	stw	r16,1268(sp)
 2003780:	d9013015 	stw	r4,1216(sp)
 2003784:	dfc14615 	stw	ra,1304(sp)
 2003788:	df014515 	stw	fp,1300(sp)
 200378c:	ddc14415 	stw	r23,1296(sp)
 2003790:	dd814315 	stw	r22,1292(sp)
 2003794:	dd414215 	stw	r21,1288(sp)
 2003798:	dd014115 	stw	r20,1284(sp)
 200379c:	dcc14015 	stw	r19,1280(sp)
 20037a0:	dc813f15 	stw	r18,1276(sp)
 20037a4:	dc413e15 	stw	r17,1272(sp)
 20037a8:	d9412915 	stw	r5,1188(sp)
 20037ac:	3021883a 	mov	r16,r6
 20037b0:	d9c12d15 	stw	r7,1204(sp)
 20037b4:	20095d80 	call	20095d8 <_localeconv_r>
 20037b8:	10800017 	ldw	r2,0(r2)
 20037bc:	d9013017 	ldw	r4,1216(sp)
 20037c0:	d8013315 	stw	zero,1228(sp)
 20037c4:	d8813715 	stw	r2,1244(sp)
 20037c8:	d8013415 	stw	zero,1232(sp)
 20037cc:	20000226 	beq	r4,zero,20037d8 <___vfprintf_internal_r+0x60>
 20037d0:	20800e17 	ldw	r2,56(r4)
 20037d4:	10014b26 	beq	r2,zero,2003d04 <___vfprintf_internal_r+0x58c>
 20037d8:	d8c12917 	ldw	r3,1188(sp)
 20037dc:	1880030b 	ldhu	r2,12(r3)
 20037e0:	10c0020c 	andi	r3,r2,8
 20037e4:	18ffffcc 	andi	r3,r3,65535
 20037e8:	18e0001c 	xori	r3,r3,32768
 20037ec:	18e00004 	addi	r3,r3,-32768
 20037f0:	1800ed26 	beq	r3,zero,2003ba8 <___vfprintf_internal_r+0x430>
 20037f4:	d9012917 	ldw	r4,1188(sp)
 20037f8:	20c00417 	ldw	r3,16(r4)
 20037fc:	1800ea26 	beq	r3,zero,2003ba8 <___vfprintf_internal_r+0x430>
 2003800:	1100068c 	andi	r4,r2,26
 2003804:	00c00284 	movi	r3,10
 2003808:	20c0f026 	beq	r4,r3,2003bcc <___vfprintf_internal_r+0x454>
 200380c:	d9010dc4 	addi	r4,sp,1079
 2003810:	d8810e04 	addi	r2,sp,1080
 2003814:	dc413017 	ldw	r17,1216(sp)
 2003818:	d8c00404 	addi	r3,sp,16
 200381c:	d9012615 	stw	r4,1176(sp)
 2003820:	1109c83a 	sub	r4,r2,r4
 2003824:	d8812715 	stw	r2,1180(sp)
 2003828:	d8c11b15 	stw	r3,1132(sp)
 200382c:	d8011d15 	stw	zero,1140(sp)
 2003830:	d8011c15 	stw	zero,1136(sp)
 2003834:	802b883a 	mov	r21,r16
 2003838:	d8013215 	stw	zero,1224(sp)
 200383c:	d8013615 	stw	zero,1240(sp)
 2003840:	d8013515 	stw	zero,1236(sp)
 2003844:	d8012c15 	stw	zero,1200(sp)
 2003848:	1813883a 	mov	r9,r3
 200384c:	d9013915 	stw	r4,1252(sp)
 2003850:	a8800007 	ldb	r2,0(r21)
 2003854:	1002f326 	beq	r2,zero,2004424 <___vfprintf_internal_r+0xcac>
 2003858:	00c00944 	movi	r3,37
 200385c:	a825883a 	mov	r18,r21
 2003860:	10c0021e 	bne	r2,r3,200386c <___vfprintf_internal_r+0xf4>
 2003864:	00001406 	br	20038b8 <___vfprintf_internal_r+0x140>
 2003868:	10c00326 	beq	r2,r3,2003878 <___vfprintf_internal_r+0x100>
 200386c:	94800044 	addi	r18,r18,1
 2003870:	90800007 	ldb	r2,0(r18)
 2003874:	103ffc1e 	bne	r2,zero,2003868 <__alt_mem_epcs_flash_controller+0xfdffa868>
 2003878:	9561c83a 	sub	r16,r18,r21
 200387c:	80000e26 	beq	r16,zero,20038b8 <___vfprintf_internal_r+0x140>
 2003880:	da011d17 	ldw	r8,1140(sp)
 2003884:	d8c11c17 	ldw	r3,1136(sp)
 2003888:	4d400015 	stw	r21,0(r9)
 200388c:	4c000115 	stw	r16,4(r9)
 2003890:	4411883a 	add	r8,r8,r16
 2003894:	18c00044 	addi	r3,r3,1
 2003898:	da011d15 	stw	r8,1140(sp)
 200389c:	d8c11c15 	stw	r3,1136(sp)
 20038a0:	008001c4 	movi	r2,7
 20038a4:	10c11016 	blt	r2,r3,2003ce8 <___vfprintf_internal_r+0x570>
 20038a8:	4a400204 	addi	r9,r9,8
 20038ac:	d8812c17 	ldw	r2,1200(sp)
 20038b0:	1405883a 	add	r2,r2,r16
 20038b4:	d8812c15 	stw	r2,1200(sp)
 20038b8:	90800007 	ldb	r2,0(r18)
 20038bc:	1000ee26 	beq	r2,zero,2003c78 <___vfprintf_internal_r+0x500>
 20038c0:	95400044 	addi	r21,r18,1
 20038c4:	94800047 	ldb	r18,1(r18)
 20038c8:	073fffc4 	movi	fp,-1
 20038cc:	e007883a 	mov	r3,fp
 20038d0:	d8012585 	stb	zero,1174(sp)
 20038d4:	d8012e15 	stw	zero,1208(sp)
 20038d8:	0021883a 	mov	r16,zero
 20038dc:	05001604 	movi	r20,88
 20038e0:	04c00244 	movi	r19,9
 20038e4:	4839883a 	mov	fp,r9
 20038e8:	ad400044 	addi	r21,r21,1
 20038ec:	90bff804 	addi	r2,r18,-32
 20038f0:	a080462e 	bgeu	r20,r2,2003a0c <___vfprintf_internal_r+0x294>
 20038f4:	e013883a 	mov	r9,fp
 20038f8:	9000df26 	beq	r18,zero,2003c78 <___vfprintf_internal_r+0x500>
 20038fc:	00c00044 	movi	r3,1
 2003900:	d8c12815 	stw	r3,1184(sp)
 2003904:	dc810405 	stb	r18,1040(sp)
 2003908:	d8012585 	stb	zero,1174(sp)
 200390c:	d8c12b15 	stw	r3,1196(sp)
 2003910:	dcc10404 	addi	r19,sp,1040
 2003914:	d8013115 	stw	zero,1220(sp)
 2003918:	80c0008c 	andi	r3,r16,2
 200391c:	d8c12a15 	stw	r3,1192(sp)
 2003920:	18000326 	beq	r3,zero,2003930 <___vfprintf_internal_r+0x1b8>
 2003924:	d8c12817 	ldw	r3,1184(sp)
 2003928:	18c00084 	addi	r3,r3,2
 200392c:	d8c12815 	stw	r3,1184(sp)
 2003930:	80c0210c 	andi	r3,r16,132
 2003934:	d8c12f15 	stw	r3,1212(sp)
 2003938:	1802251e 	bne	r3,zero,20041d0 <___vfprintf_internal_r+0xa58>
 200393c:	d9012e17 	ldw	r4,1208(sp)
 2003940:	d8c12817 	ldw	r3,1184(sp)
 2003944:	20edc83a 	sub	r22,r4,r3
 2003948:	0582210e 	bge	zero,r22,20041d0 <___vfprintf_internal_r+0xa58>
 200394c:	02800404 	movi	r10,16
 2003950:	da011d17 	ldw	r8,1140(sp)
 2003954:	d8c11c17 	ldw	r3,1136(sp)
 2003958:	05c08234 	movhi	r23,520
 200395c:	bddb6184 	addi	r23,r23,28038
 2003960:	5580200e 	bge	r10,r22,20039e4 <___vfprintf_internal_r+0x26c>
 2003964:	dc813815 	stw	r18,1248(sp)
 2003968:	5039883a 	mov	fp,r10
 200396c:	b825883a 	mov	r18,r23
 2003970:	050001c4 	movi	r20,7
 2003974:	b02f883a 	mov	r23,r22
 2003978:	802d883a 	mov	r22,r16
 200397c:	dc012917 	ldw	r16,1188(sp)
 2003980:	00000306 	br	2003990 <___vfprintf_internal_r+0x218>
 2003984:	bdfffc04 	addi	r23,r23,-16
 2003988:	4a400204 	addi	r9,r9,8
 200398c:	e5c0110e 	bge	fp,r23,20039d4 <___vfprintf_internal_r+0x25c>
 2003990:	4c800015 	stw	r18,0(r9)
 2003994:	4f000115 	stw	fp,4(r9)
 2003998:	42000404 	addi	r8,r8,16
 200399c:	18c00044 	addi	r3,r3,1
 20039a0:	da011d15 	stw	r8,1140(sp)
 20039a4:	d8c11c15 	stw	r3,1136(sp)
 20039a8:	a0fff60e 	bge	r20,r3,2003984 <__alt_mem_epcs_flash_controller+0xfdffa984>
 20039ac:	8809883a 	mov	r4,r17
 20039b0:	800b883a 	mov	r5,r16
 20039b4:	d9811b04 	addi	r6,sp,1132
 20039b8:	20037440 	call	2003744 <__sprint_r>
 20039bc:	1000b41e 	bne	r2,zero,2003c90 <___vfprintf_internal_r+0x518>
 20039c0:	bdfffc04 	addi	r23,r23,-16
 20039c4:	da011d17 	ldw	r8,1140(sp)
 20039c8:	d8c11c17 	ldw	r3,1136(sp)
 20039cc:	da400404 	addi	r9,sp,16
 20039d0:	e5ffef16 	blt	fp,r23,2003990 <__alt_mem_epcs_flash_controller+0xfdffa990>
 20039d4:	b021883a 	mov	r16,r22
 20039d8:	b82d883a 	mov	r22,r23
 20039dc:	902f883a 	mov	r23,r18
 20039e0:	dc813817 	ldw	r18,1248(sp)
 20039e4:	4dc00015 	stw	r23,0(r9)
 20039e8:	4d800115 	stw	r22,4(r9)
 20039ec:	4591883a 	add	r8,r8,r22
 20039f0:	18c00044 	addi	r3,r3,1
 20039f4:	da011d15 	stw	r8,1140(sp)
 20039f8:	d8c11c15 	stw	r3,1136(sp)
 20039fc:	008001c4 	movi	r2,7
 2003a00:	10c3fe16 	blt	r2,r3,20049fc <___vfprintf_internal_r+0x1284>
 2003a04:	4a400204 	addi	r9,r9,8
 2003a08:	0001f306 	br	20041d8 <___vfprintf_internal_r+0xa60>
 2003a0c:	1085883a 	add	r2,r2,r2
 2003a10:	1085883a 	add	r2,r2,r2
 2003a14:	01008034 	movhi	r4,512
 2003a18:	210e8a04 	addi	r4,r4,14888
 2003a1c:	1105883a 	add	r2,r2,r4
 2003a20:	10800017 	ldw	r2,0(r2)
 2003a24:	1000683a 	jmp	r2
 2003a28:	02004104 	movi	r8,260
 2003a2c:	020038f4 	movhi	r8,227
 2003a30:	020038f4 	movhi	r8,227
 2003a34:	0200411c 	xori	r8,zero,260
 2003a38:	020038f4 	movhi	r8,227
 2003a3c:	020038f4 	movhi	r8,227
 2003a40:	020038f4 	movhi	r8,227
 2003a44:	020038f4 	movhi	r8,227
 2003a48:	020038f4 	movhi	r8,227
 2003a4c:	020038f4 	movhi	r8,227
 2003a50:	02003fd4 	movui	r8,255
 2003a54:	02004168 	cmpgeui	r8,zero,261
 2003a58:	020038f4 	movhi	r8,227
 2003a5c:	02003b9c 	xori	r8,zero,238
 2003a60:	02003f3c 	xorhi	r8,zero,252
 2003a64:	020038f4 	movhi	r8,227
 2003a68:	02004128 	cmpgeui	r8,zero,260
 2003a6c:	02004134 	movhi	r8,260
 2003a70:	02004134 	movhi	r8,260
 2003a74:	02004134 	movhi	r8,260
 2003a78:	02004134 	movhi	r8,260
 2003a7c:	02004134 	movhi	r8,260
 2003a80:	02004134 	movhi	r8,260
 2003a84:	02004134 	movhi	r8,260
 2003a88:	02004134 	movhi	r8,260
 2003a8c:	02004134 	movhi	r8,260
 2003a90:	020038f4 	movhi	r8,227
 2003a94:	020038f4 	movhi	r8,227
 2003a98:	020038f4 	movhi	r8,227
 2003a9c:	020038f4 	movhi	r8,227
 2003aa0:	020038f4 	movhi	r8,227
 2003aa4:	020038f4 	movhi	r8,227
 2003aa8:	020038f4 	movhi	r8,227
 2003aac:	020038f4 	movhi	r8,227
 2003ab0:	020038f4 	movhi	r8,227
 2003ab4:	020038f4 	movhi	r8,227
 2003ab8:	02003d0c 	andi	r8,zero,244
 2003abc:	02003dcc 	andi	r8,zero,247
 2003ac0:	020038f4 	movhi	r8,227
 2003ac4:	02003dcc 	andi	r8,zero,247
 2003ac8:	020038f4 	movhi	r8,227
 2003acc:	020038f4 	movhi	r8,227
 2003ad0:	020038f4 	movhi	r8,227
 2003ad4:	020038f4 	movhi	r8,227
 2003ad8:	02003e60 	cmpeqi	r8,zero,249
 2003adc:	020038f4 	movhi	r8,227
 2003ae0:	020038f4 	movhi	r8,227
 2003ae4:	02003e6c 	andhi	r8,zero,249
 2003ae8:	020038f4 	movhi	r8,227
 2003aec:	020038f4 	movhi	r8,227
 2003af0:	020038f4 	movhi	r8,227
 2003af4:	020038f4 	movhi	r8,227
 2003af8:	020038f4 	movhi	r8,227
 2003afc:	02003ea4 	muli	r8,zero,250
 2003b00:	020038f4 	movhi	r8,227
 2003b04:	020038f4 	movhi	r8,227
 2003b08:	02003ee0 	cmpeqi	r8,zero,251
 2003b0c:	020038f4 	movhi	r8,227
 2003b10:	020038f4 	movhi	r8,227
 2003b14:	020038f4 	movhi	r8,227
 2003b18:	020038f4 	movhi	r8,227
 2003b1c:	020038f4 	movhi	r8,227
 2003b20:	020038f4 	movhi	r8,227
 2003b24:	020038f4 	movhi	r8,227
 2003b28:	020038f4 	movhi	r8,227
 2003b2c:	020038f4 	movhi	r8,227
 2003b30:	020038f4 	movhi	r8,227
 2003b34:	02004178 	rdprs	r8,zero,261
 2003b38:	020041ac 	andhi	r8,zero,262
 2003b3c:	02003dcc 	andi	r8,zero,247
 2003b40:	02003dcc 	andi	r8,zero,247
 2003b44:	02003dcc 	andi	r8,zero,247
 2003b48:	020040f8 	rdprs	r8,zero,259
 2003b4c:	020041ac 	andhi	r8,zero,262
 2003b50:	020038f4 	movhi	r8,227
 2003b54:	020038f4 	movhi	r8,227
 2003b58:	02003f84 	movi	r8,254
 2003b5c:	020038f4 	movhi	r8,227
 2003b60:	02003f9c 	xori	r8,zero,254
 2003b64:	020041b8 	rdprs	r8,zero,262
 2003b68:	02003ffc 	xorhi	r8,zero,255
 2003b6c:	0200404c 	andi	r8,zero,257
 2003b70:	020038f4 	movhi	r8,227
 2003b74:	02004058 	cmpnei	r8,zero,257
 2003b78:	020038f4 	movhi	r8,227
 2003b7c:	020041c4 	movi	r8,263
 2003b80:	020038f4 	movhi	r8,227
 2003b84:	020038f4 	movhi	r8,227
 2003b88:	020040bc 	xorhi	r8,zero,258
 2003b8c:	d9012e17 	ldw	r4,1208(sp)
 2003b90:	d8812d15 	stw	r2,1204(sp)
 2003b94:	0109c83a 	sub	r4,zero,r4
 2003b98:	d9012e15 	stw	r4,1208(sp)
 2003b9c:	84000114 	ori	r16,r16,4
 2003ba0:	ac800007 	ldb	r18,0(r21)
 2003ba4:	003f5006 	br	20038e8 <__alt_mem_epcs_flash_controller+0xfdffa8e8>
 2003ba8:	d9013017 	ldw	r4,1216(sp)
 2003bac:	d9412917 	ldw	r5,1188(sp)
 2003bb0:	2006e0c0 	call	2006e0c <__swsetup_r>
 2003bb4:	10003d1e 	bne	r2,zero,2003cac <___vfprintf_internal_r+0x534>
 2003bb8:	d8c12917 	ldw	r3,1188(sp)
 2003bbc:	1880030b 	ldhu	r2,12(r3)
 2003bc0:	00c00284 	movi	r3,10
 2003bc4:	1100068c 	andi	r4,r2,26
 2003bc8:	20ff101e 	bne	r4,r3,200380c <__alt_mem_epcs_flash_controller+0xfdffa80c>
 2003bcc:	d9012917 	ldw	r4,1188(sp)
 2003bd0:	20c0038b 	ldhu	r3,14(r4)
 2003bd4:	193fffcc 	andi	r4,r3,65535
 2003bd8:	2120001c 	xori	r4,r4,32768
 2003bdc:	21200004 	addi	r4,r4,-32768
 2003be0:	203f0a16 	blt	r4,zero,200380c <__alt_mem_epcs_flash_controller+0xfdffa80c>
 2003be4:	d9012917 	ldw	r4,1188(sp)
 2003be8:	d9c12d17 	ldw	r7,1204(sp)
 2003bec:	10bfff4c 	andi	r2,r2,65533
 2003bf0:	22800717 	ldw	r10,28(r4)
 2003bf4:	22400917 	ldw	r9,36(r4)
 2003bf8:	d9013017 	ldw	r4,1216(sp)
 2003bfc:	02010004 	movi	r8,1024
 2003c00:	d881070d 	sth	r2,1052(sp)
 2003c04:	d9410404 	addi	r5,sp,1040
 2003c08:	d8800404 	addi	r2,sp,16
 2003c0c:	800d883a 	mov	r6,r16
 2003c10:	d8c1078d 	sth	r3,1054(sp)
 2003c14:	da810b15 	stw	r10,1068(sp)
 2003c18:	da410d15 	stw	r9,1076(sp)
 2003c1c:	d8810415 	stw	r2,1040(sp)
 2003c20:	d8810815 	stw	r2,1056(sp)
 2003c24:	da010615 	stw	r8,1048(sp)
 2003c28:	da010915 	stw	r8,1060(sp)
 2003c2c:	d8010a15 	stw	zero,1064(sp)
 2003c30:	20037780 	call	2003778 <___vfprintf_internal_r>
 2003c34:	d8812c15 	stw	r2,1200(sp)
 2003c38:	10000416 	blt	r2,zero,2003c4c <___vfprintf_internal_r+0x4d4>
 2003c3c:	d9013017 	ldw	r4,1216(sp)
 2003c40:	d9410404 	addi	r5,sp,1040
 2003c44:	20024e40 	call	20024e4 <_fflush_r>
 2003c48:	1006501e 	bne	r2,zero,200558c <___vfprintf_internal_r+0x1e14>
 2003c4c:	d881070b 	ldhu	r2,1052(sp)
 2003c50:	1080100c 	andi	r2,r2,64
 2003c54:	10bfffcc 	andi	r2,r2,65535
 2003c58:	10a0001c 	xori	r2,r2,32768
 2003c5c:	10a00004 	addi	r2,r2,-32768
 2003c60:	10001426 	beq	r2,zero,2003cb4 <___vfprintf_internal_r+0x53c>
 2003c64:	d8c12917 	ldw	r3,1188(sp)
 2003c68:	1880030b 	ldhu	r2,12(r3)
 2003c6c:	10801014 	ori	r2,r2,64
 2003c70:	1880030d 	sth	r2,12(r3)
 2003c74:	00000f06 	br	2003cb4 <___vfprintf_internal_r+0x53c>
 2003c78:	d8811d17 	ldw	r2,1140(sp)
 2003c7c:	10000426 	beq	r2,zero,2003c90 <___vfprintf_internal_r+0x518>
 2003c80:	d9013017 	ldw	r4,1216(sp)
 2003c84:	d9412917 	ldw	r5,1188(sp)
 2003c88:	d9811b04 	addi	r6,sp,1132
 2003c8c:	20037440 	call	2003744 <__sprint_r>
 2003c90:	d8c12917 	ldw	r3,1188(sp)
 2003c94:	1880030b 	ldhu	r2,12(r3)
 2003c98:	1080100c 	andi	r2,r2,64
 2003c9c:	10bfffcc 	andi	r2,r2,65535
 2003ca0:	10a0001c 	xori	r2,r2,32768
 2003ca4:	10a00004 	addi	r2,r2,-32768
 2003ca8:	10000226 	beq	r2,zero,2003cb4 <___vfprintf_internal_r+0x53c>
 2003cac:	00bfffc4 	movi	r2,-1
 2003cb0:	d8812c15 	stw	r2,1200(sp)
 2003cb4:	d8812c17 	ldw	r2,1200(sp)
 2003cb8:	dfc14617 	ldw	ra,1304(sp)
 2003cbc:	df014517 	ldw	fp,1300(sp)
 2003cc0:	ddc14417 	ldw	r23,1296(sp)
 2003cc4:	dd814317 	ldw	r22,1292(sp)
 2003cc8:	dd414217 	ldw	r21,1288(sp)
 2003ccc:	dd014117 	ldw	r20,1284(sp)
 2003cd0:	dcc14017 	ldw	r19,1280(sp)
 2003cd4:	dc813f17 	ldw	r18,1276(sp)
 2003cd8:	dc413e17 	ldw	r17,1272(sp)
 2003cdc:	dc013d17 	ldw	r16,1268(sp)
 2003ce0:	dec14704 	addi	sp,sp,1308
 2003ce4:	f800283a 	ret
 2003ce8:	d9412917 	ldw	r5,1188(sp)
 2003cec:	8809883a 	mov	r4,r17
 2003cf0:	d9811b04 	addi	r6,sp,1132
 2003cf4:	20037440 	call	2003744 <__sprint_r>
 2003cf8:	103fe51e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 2003cfc:	da400404 	addi	r9,sp,16
 2003d00:	003eea06 	br	20038ac <__alt_mem_epcs_flash_controller+0xfdffa8ac>
 2003d04:	20027a00 	call	20027a0 <__sinit>
 2003d08:	003eb306 	br	20037d8 <__alt_mem_epcs_flash_controller+0xfdffa7d8>
 2003d0c:	e013883a 	mov	r9,fp
 2003d10:	84000414 	ori	r16,r16,16
 2003d14:	1839883a 	mov	fp,r3
 2003d18:	8080080c 	andi	r2,r16,32
 2003d1c:	10034426 	beq	r2,zero,2004a30 <___vfprintf_internal_r+0x12b8>
 2003d20:	d8c12d17 	ldw	r3,1204(sp)
 2003d24:	18800117 	ldw	r2,4(r3)
 2003d28:	1dc00017 	ldw	r23,0(r3)
 2003d2c:	18c00204 	addi	r3,r3,8
 2003d30:	d8c12d15 	stw	r3,1204(sp)
 2003d34:	102d883a 	mov	r22,r2
 2003d38:	1003020e 	bge	r2,zero,2004944 <___vfprintf_internal_r+0x11cc>
 2003d3c:	05efc83a 	sub	r23,zero,r23
 2003d40:	b804c03a 	cmpne	r2,r23,zero
 2003d44:	05adc83a 	sub	r22,zero,r22
 2003d48:	b0adc83a 	sub	r22,r22,r2
 2003d4c:	00800b44 	movi	r2,45
 2003d50:	d8812585 	stb	r2,1174(sp)
 2003d54:	00c00044 	movi	r3,1
 2003d58:	bd84b03a 	or	r2,r23,r22
 2003d5c:	e0000216 	blt	fp,zero,2003d68 <___vfprintf_internal_r+0x5f0>
 2003d60:	013fdfc4 	movi	r4,-129
 2003d64:	8120703a 	and	r16,r16,r4
 2003d68:	1001cc1e 	bne	r2,zero,200449c <___vfprintf_internal_r+0xd24>
 2003d6c:	e001cb1e 	bne	fp,zero,200449c <___vfprintf_internal_r+0xd24>
 2003d70:	18c03fcc 	andi	r3,r3,255
 2003d74:	1802ca1e 	bne	r3,zero,20048a0 <___vfprintf_internal_r+0x1128>
 2003d78:	8080004c 	andi	r2,r16,1
 2003d7c:	1002c826 	beq	r2,zero,20048a0 <___vfprintf_internal_r+0x1128>
 2003d80:	d8c13917 	ldw	r3,1252(sp)
 2003d84:	00800c04 	movi	r2,48
 2003d88:	d8810dc5 	stb	r2,1079(sp)
 2003d8c:	d8c12b15 	stw	r3,1196(sp)
 2003d90:	dcc10dc4 	addi	r19,sp,1079
 2003d94:	d8812b17 	ldw	r2,1196(sp)
 2003d98:	d8812815 	stw	r2,1184(sp)
 2003d9c:	1700010e 	bge	r2,fp,2003da4 <___vfprintf_internal_r+0x62c>
 2003da0:	df012815 	stw	fp,1184(sp)
 2003da4:	d8812583 	ldbu	r2,1174(sp)
 2003da8:	df013115 	stw	fp,1220(sp)
 2003dac:	10803fcc 	andi	r2,r2,255
 2003db0:	1080201c 	xori	r2,r2,128
 2003db4:	10bfe004 	addi	r2,r2,-128
 2003db8:	103ed726 	beq	r2,zero,2003918 <__alt_mem_epcs_flash_controller+0xfdffa918>
 2003dbc:	d8c12817 	ldw	r3,1184(sp)
 2003dc0:	18c00044 	addi	r3,r3,1
 2003dc4:	d8c12815 	stw	r3,1184(sp)
 2003dc8:	003ed306 	br	2003918 <__alt_mem_epcs_flash_controller+0xfdffa918>
 2003dcc:	8080020c 	andi	r2,r16,8
 2003dd0:	e013883a 	mov	r9,fp
 2003dd4:	1839883a 	mov	fp,r3
 2003dd8:	1003a626 	beq	r2,zero,2004c74 <___vfprintf_internal_r+0x14fc>
 2003ddc:	d9012d17 	ldw	r4,1204(sp)
 2003de0:	25800017 	ldw	r22,0(r4)
 2003de4:	25000117 	ldw	r20,4(r4)
 2003de8:	21000204 	addi	r4,r4,8
 2003dec:	d9012d15 	stw	r4,1204(sp)
 2003df0:	dd813315 	stw	r22,1228(sp)
 2003df4:	dd013415 	stw	r20,1232(sp)
 2003df8:	b009883a 	mov	r4,r22
 2003dfc:	a00b883a 	mov	r5,r20
 2003e00:	da413c15 	stw	r9,1264(sp)
 2003e04:	200b58c0 	call	200b58c <__isinfd>
 2003e08:	da413c17 	ldw	r9,1264(sp)
 2003e0c:	b009883a 	mov	r4,r22
 2003e10:	a00b883a 	mov	r5,r20
 2003e14:	10041d26 	beq	r2,zero,2004e8c <___vfprintf_internal_r+0x1714>
 2003e18:	000d883a 	mov	r6,zero
 2003e1c:	000f883a 	mov	r7,zero
 2003e20:	200fe280 	call	200fe28 <__ltdf2>
 2003e24:	da413c17 	ldw	r9,1264(sp)
 2003e28:	1004da16 	blt	r2,zero,2005194 <___vfprintf_internal_r+0x1a1c>
 2003e2c:	d8812583 	ldbu	r2,1174(sp)
 2003e30:	00c011c4 	movi	r3,71
 2003e34:	1c83d116 	blt	r3,r18,2004d7c <___vfprintf_internal_r+0x1604>
 2003e38:	04c08234 	movhi	r19,520
 2003e3c:	9cdb5104 	addi	r19,r19,27972
 2003e40:	00c000c4 	movi	r3,3
 2003e44:	d8c12815 	stw	r3,1184(sp)
 2003e48:	00ffdfc4 	movi	r3,-129
 2003e4c:	80e0703a 	and	r16,r16,r3
 2003e50:	d8c12817 	ldw	r3,1184(sp)
 2003e54:	d8013115 	stw	zero,1220(sp)
 2003e58:	d8c12b15 	stw	r3,1196(sp)
 2003e5c:	003fd306 	br	2003dac <__alt_mem_epcs_flash_controller+0xfdffadac>
 2003e60:	84000214 	ori	r16,r16,8
 2003e64:	ac800007 	ldb	r18,0(r21)
 2003e68:	003e9f06 	br	20038e8 <__alt_mem_epcs_flash_controller+0xfdffa8e8>
 2003e6c:	e013883a 	mov	r9,fp
 2003e70:	84000414 	ori	r16,r16,16
 2003e74:	1839883a 	mov	fp,r3
 2003e78:	8080080c 	andi	r2,r16,32
 2003e7c:	10031d26 	beq	r2,zero,2004af4 <___vfprintf_internal_r+0x137c>
 2003e80:	d8812d17 	ldw	r2,1204(sp)
 2003e84:	0007883a 	mov	r3,zero
 2003e88:	15c00017 	ldw	r23,0(r2)
 2003e8c:	15800117 	ldw	r22,4(r2)
 2003e90:	10800204 	addi	r2,r2,8
 2003e94:	d8812d15 	stw	r2,1204(sp)
 2003e98:	d8012585 	stb	zero,1174(sp)
 2003e9c:	bd84b03a 	or	r2,r23,r22
 2003ea0:	003fae06 	br	2003d5c <__alt_mem_epcs_flash_controller+0xfdffad5c>
 2003ea4:	e013883a 	mov	r9,fp
 2003ea8:	84000414 	ori	r16,r16,16
 2003eac:	1839883a 	mov	fp,r3
 2003eb0:	8080080c 	andi	r2,r16,32
 2003eb4:	1002e726 	beq	r2,zero,2004a54 <___vfprintf_internal_r+0x12dc>
 2003eb8:	d8c12d17 	ldw	r3,1204(sp)
 2003ebc:	d9012d17 	ldw	r4,1204(sp)
 2003ec0:	1dc00017 	ldw	r23,0(r3)
 2003ec4:	1d800117 	ldw	r22,4(r3)
 2003ec8:	21000204 	addi	r4,r4,8
 2003ecc:	00c00044 	movi	r3,1
 2003ed0:	d9012d15 	stw	r4,1204(sp)
 2003ed4:	bd84b03a 	or	r2,r23,r22
 2003ed8:	d8012585 	stb	zero,1174(sp)
 2003edc:	003f9f06 	br	2003d5c <__alt_mem_epcs_flash_controller+0xfdffad5c>
 2003ee0:	e013883a 	mov	r9,fp
 2003ee4:	1839883a 	mov	fp,r3
 2003ee8:	00c08234 	movhi	r3,520
 2003eec:	18db5504 	addi	r3,r3,27988
 2003ef0:	d8c13615 	stw	r3,1240(sp)
 2003ef4:	8080080c 	andi	r2,r16,32
 2003ef8:	10007726 	beq	r2,zero,20040d8 <___vfprintf_internal_r+0x960>
 2003efc:	d9012d17 	ldw	r4,1204(sp)
 2003f00:	25c00017 	ldw	r23,0(r4)
 2003f04:	25800117 	ldw	r22,4(r4)
 2003f08:	21000204 	addi	r4,r4,8
 2003f0c:	d9012d15 	stw	r4,1204(sp)
 2003f10:	8080004c 	andi	r2,r16,1
 2003f14:	1002c226 	beq	r2,zero,2004a20 <___vfprintf_internal_r+0x12a8>
 2003f18:	bd84b03a 	or	r2,r23,r22
 2003f1c:	10035d26 	beq	r2,zero,2004c94 <___vfprintf_internal_r+0x151c>
 2003f20:	00c00c04 	movi	r3,48
 2003f24:	d8c12505 	stb	r3,1172(sp)
 2003f28:	dc812545 	stb	r18,1173(sp)
 2003f2c:	84000094 	ori	r16,r16,2
 2003f30:	00c00084 	movi	r3,2
 2003f34:	d8012585 	stb	zero,1174(sp)
 2003f38:	003f8806 	br	2003d5c <__alt_mem_epcs_flash_controller+0xfdffad5c>
 2003f3c:	ac800007 	ldb	r18,0(r21)
 2003f40:	00c00a84 	movi	r3,42
 2003f44:	adc00044 	addi	r23,r21,1
 2003f48:	90c57526 	beq	r18,r3,2005520 <___vfprintf_internal_r+0x1da8>
 2003f4c:	95bff404 	addi	r22,r18,-48
 2003f50:	0009883a 	mov	r4,zero
 2003f54:	9d84ff36 	bltu	r19,r22,2005354 <___vfprintf_internal_r+0x1bdc>
 2003f58:	01400284 	movi	r5,10
 2003f5c:	2001f500 	call	2001f50 <__mulsi3>
 2003f60:	bc800007 	ldb	r18,0(r23)
 2003f64:	b089883a 	add	r4,r22,r2
 2003f68:	bdc00044 	addi	r23,r23,1
 2003f6c:	95bff404 	addi	r22,r18,-48
 2003f70:	9dbff92e 	bgeu	r19,r22,2003f58 <__alt_mem_epcs_flash_controller+0xfdffaf58>
 2003f74:	2007883a 	mov	r3,r4
 2003f78:	20044316 	blt	r4,zero,2005088 <___vfprintf_internal_r+0x1910>
 2003f7c:	b82b883a 	mov	r21,r23
 2003f80:	003e5a06 	br	20038ec <__alt_mem_epcs_flash_controller+0xfdffa8ec>
 2003f84:	ac800007 	ldb	r18,0(r21)
 2003f88:	01001b04 	movi	r4,108
 2003f8c:	a805883a 	mov	r2,r21
 2003f90:	91045526 	beq	r18,r4,20050e8 <___vfprintf_internal_r+0x1970>
 2003f94:	84000414 	ori	r16,r16,16
 2003f98:	003e5306 	br	20038e8 <__alt_mem_epcs_flash_controller+0xfdffa8e8>
 2003f9c:	8080080c 	andi	r2,r16,32
 2003fa0:	e013883a 	mov	r9,fp
 2003fa4:	10034026 	beq	r2,zero,2004ca8 <___vfprintf_internal_r+0x1530>
 2003fa8:	d9012d17 	ldw	r4,1204(sp)
 2003fac:	20800017 	ldw	r2,0(r4)
 2003fb0:	d9012c17 	ldw	r4,1200(sp)
 2003fb4:	2007d7fa 	srai	r3,r4,31
 2003fb8:	d9012d17 	ldw	r4,1204(sp)
 2003fbc:	10c00115 	stw	r3,4(r2)
 2003fc0:	21000104 	addi	r4,r4,4
 2003fc4:	d9012d15 	stw	r4,1204(sp)
 2003fc8:	d9012c17 	ldw	r4,1200(sp)
 2003fcc:	11000015 	stw	r4,0(r2)
 2003fd0:	003e1f06 	br	2003850 <__alt_mem_epcs_flash_controller+0xfdffa850>
 2003fd4:	d9012d17 	ldw	r4,1204(sp)
 2003fd8:	21000017 	ldw	r4,0(r4)
 2003fdc:	d9012e15 	stw	r4,1208(sp)
 2003fe0:	d9012d17 	ldw	r4,1204(sp)
 2003fe4:	20800104 	addi	r2,r4,4
 2003fe8:	d9012e17 	ldw	r4,1208(sp)
 2003fec:	203ee716 	blt	r4,zero,2003b8c <__alt_mem_epcs_flash_controller+0xfdffab8c>
 2003ff0:	d8812d15 	stw	r2,1204(sp)
 2003ff4:	ac800007 	ldb	r18,0(r21)
 2003ff8:	003e3b06 	br	20038e8 <__alt_mem_epcs_flash_controller+0xfdffa8e8>
 2003ffc:	e013883a 	mov	r9,fp
 2004000:	1839883a 	mov	fp,r3
 2004004:	d8c12d17 	ldw	r3,1204(sp)
 2004008:	00800c04 	movi	r2,48
 200400c:	01008234 	movhi	r4,520
 2004010:	211b5a04 	addi	r4,r4,28008
 2004014:	1dc00017 	ldw	r23,0(r3)
 2004018:	18c00104 	addi	r3,r3,4
 200401c:	d8812505 	stb	r2,1172(sp)
 2004020:	00801e04 	movi	r2,120
 2004024:	d8812545 	stb	r2,1173(sp)
 2004028:	d8c12d15 	stw	r3,1204(sp)
 200402c:	002d883a 	mov	r22,zero
 2004030:	84000094 	ori	r16,r16,2
 2004034:	d9013615 	stw	r4,1240(sp)
 2004038:	00c00084 	movi	r3,2
 200403c:	04801e04 	movi	r18,120
 2004040:	b805883a 	mov	r2,r23
 2004044:	d8012585 	stb	zero,1174(sp)
 2004048:	003f4406 	br	2003d5c <__alt_mem_epcs_flash_controller+0xfdffad5c>
 200404c:	84000814 	ori	r16,r16,32
 2004050:	ac800007 	ldb	r18,0(r21)
 2004054:	003e2406 	br	20038e8 <__alt_mem_epcs_flash_controller+0xfdffa8e8>
 2004058:	d8812d17 	ldw	r2,1204(sp)
 200405c:	d8012585 	stb	zero,1174(sp)
 2004060:	e013883a 	mov	r9,fp
 2004064:	14c00017 	ldw	r19,0(r2)
 2004068:	1839883a 	mov	fp,r3
 200406c:	15c00104 	addi	r23,r2,4
 2004070:	98045526 	beq	r19,zero,20051c8 <___vfprintf_internal_r+0x1a50>
 2004074:	9809883a 	mov	r4,r19
 2004078:	18043116 	blt	r3,zero,2005140 <___vfprintf_internal_r+0x19c8>
 200407c:	000b883a 	mov	r5,zero
 2004080:	180d883a 	mov	r6,r3
 2004084:	da413c15 	stw	r9,1264(sp)
 2004088:	20099080 	call	2009908 <memchr>
 200408c:	da413c17 	ldw	r9,1264(sp)
 2004090:	10047a26 	beq	r2,zero,200527c <___vfprintf_internal_r+0x1b04>
 2004094:	14c5c83a 	sub	r2,r2,r19
 2004098:	d8812b15 	stw	r2,1196(sp)
 200409c:	e083d40e 	bge	fp,r2,2004ff0 <___vfprintf_internal_r+0x1878>
 20040a0:	df012815 	stw	fp,1184(sp)
 20040a4:	e004e416 	blt	fp,zero,2005438 <___vfprintf_internal_r+0x1cc0>
 20040a8:	d8812583 	ldbu	r2,1174(sp)
 20040ac:	df012b15 	stw	fp,1196(sp)
 20040b0:	ddc12d15 	stw	r23,1204(sp)
 20040b4:	d8013115 	stw	zero,1220(sp)
 20040b8:	003f3c06 	br	2003dac <__alt_mem_epcs_flash_controller+0xfdffadac>
 20040bc:	00808234 	movhi	r2,520
 20040c0:	109b5a04 	addi	r2,r2,28008
 20040c4:	d8813615 	stw	r2,1240(sp)
 20040c8:	8080080c 	andi	r2,r16,32
 20040cc:	e013883a 	mov	r9,fp
 20040d0:	1839883a 	mov	fp,r3
 20040d4:	103f891e 	bne	r2,zero,2003efc <__alt_mem_epcs_flash_controller+0xfdffaefc>
 20040d8:	8080040c 	andi	r2,r16,16
 20040dc:	1002c326 	beq	r2,zero,2004bec <___vfprintf_internal_r+0x1474>
 20040e0:	d8812d17 	ldw	r2,1204(sp)
 20040e4:	002d883a 	mov	r22,zero
 20040e8:	15c00017 	ldw	r23,0(r2)
 20040ec:	10800104 	addi	r2,r2,4
 20040f0:	d8812d15 	stw	r2,1204(sp)
 20040f4:	003f8606 	br	2003f10 <__alt_mem_epcs_flash_controller+0xfdffaf10>
 20040f8:	84001014 	ori	r16,r16,64
 20040fc:	ac800007 	ldb	r18,0(r21)
 2004100:	003df906 	br	20038e8 <__alt_mem_epcs_flash_controller+0xfdffa8e8>
 2004104:	d8812587 	ldb	r2,1174(sp)
 2004108:	1002e51e 	bne	r2,zero,2004ca0 <___vfprintf_internal_r+0x1528>
 200410c:	00800804 	movi	r2,32
 2004110:	d8812585 	stb	r2,1174(sp)
 2004114:	ac800007 	ldb	r18,0(r21)
 2004118:	003df306 	br	20038e8 <__alt_mem_epcs_flash_controller+0xfdffa8e8>
 200411c:	84000054 	ori	r16,r16,1
 2004120:	ac800007 	ldb	r18,0(r21)
 2004124:	003df006 	br	20038e8 <__alt_mem_epcs_flash_controller+0xfdffa8e8>
 2004128:	84002014 	ori	r16,r16,128
 200412c:	ac800007 	ldb	r18,0(r21)
 2004130:	003ded06 	br	20038e8 <__alt_mem_epcs_flash_controller+0xfdffa8e8>
 2004134:	0009883a 	mov	r4,zero
 2004138:	95bff404 	addi	r22,r18,-48
 200413c:	182f883a 	mov	r23,r3
 2004140:	01400284 	movi	r5,10
 2004144:	2001f500 	call	2001f50 <__mulsi3>
 2004148:	ac800007 	ldb	r18,0(r21)
 200414c:	1589883a 	add	r4,r2,r22
 2004150:	ad400044 	addi	r21,r21,1
 2004154:	95bff404 	addi	r22,r18,-48
 2004158:	9dbff92e 	bgeu	r19,r22,2004140 <__alt_mem_epcs_flash_controller+0xfdffb140>
 200415c:	b807883a 	mov	r3,r23
 2004160:	d9012e15 	stw	r4,1208(sp)
 2004164:	003de106 	br	20038ec <__alt_mem_epcs_flash_controller+0xfdffa8ec>
 2004168:	00800ac4 	movi	r2,43
 200416c:	d8812585 	stb	r2,1174(sp)
 2004170:	ac800007 	ldb	r18,0(r21)
 2004174:	003ddc06 	br	20038e8 <__alt_mem_epcs_flash_controller+0xfdffa8e8>
 2004178:	d8c12d17 	ldw	r3,1204(sp)
 200417c:	d9012d17 	ldw	r4,1204(sp)
 2004180:	e013883a 	mov	r9,fp
 2004184:	18800017 	ldw	r2,0(r3)
 2004188:	21000104 	addi	r4,r4,4
 200418c:	00c00044 	movi	r3,1
 2004190:	d8c12815 	stw	r3,1184(sp)
 2004194:	d8012585 	stb	zero,1174(sp)
 2004198:	d8810405 	stb	r2,1040(sp)
 200419c:	d9012d15 	stw	r4,1204(sp)
 20041a0:	d8c12b15 	stw	r3,1196(sp)
 20041a4:	dcc10404 	addi	r19,sp,1040
 20041a8:	003dda06 	br	2003914 <__alt_mem_epcs_flash_controller+0xfdffa914>
 20041ac:	e013883a 	mov	r9,fp
 20041b0:	1839883a 	mov	fp,r3
 20041b4:	003ed806 	br	2003d18 <__alt_mem_epcs_flash_controller+0xfdffad18>
 20041b8:	e013883a 	mov	r9,fp
 20041bc:	1839883a 	mov	fp,r3
 20041c0:	003f2d06 	br	2003e78 <__alt_mem_epcs_flash_controller+0xfdffae78>
 20041c4:	e013883a 	mov	r9,fp
 20041c8:	1839883a 	mov	fp,r3
 20041cc:	003f3806 	br	2003eb0 <__alt_mem_epcs_flash_controller+0xfdffaeb0>
 20041d0:	da011d17 	ldw	r8,1140(sp)
 20041d4:	d8c11c17 	ldw	r3,1136(sp)
 20041d8:	d8812587 	ldb	r2,1174(sp)
 20041dc:	10000b26 	beq	r2,zero,200420c <___vfprintf_internal_r+0xa94>
 20041e0:	d8812584 	addi	r2,sp,1174
 20041e4:	48800015 	stw	r2,0(r9)
 20041e8:	00800044 	movi	r2,1
 20041ec:	48800115 	stw	r2,4(r9)
 20041f0:	4091883a 	add	r8,r8,r2
 20041f4:	1887883a 	add	r3,r3,r2
 20041f8:	da011d15 	stw	r8,1140(sp)
 20041fc:	d8c11c15 	stw	r3,1136(sp)
 2004200:	008001c4 	movi	r2,7
 2004204:	10c18e16 	blt	r2,r3,2004840 <___vfprintf_internal_r+0x10c8>
 2004208:	4a400204 	addi	r9,r9,8
 200420c:	d9012a17 	ldw	r4,1192(sp)
 2004210:	20000b26 	beq	r4,zero,2004240 <___vfprintf_internal_r+0xac8>
 2004214:	d8812504 	addi	r2,sp,1172
 2004218:	48800015 	stw	r2,0(r9)
 200421c:	00800084 	movi	r2,2
 2004220:	48800115 	stw	r2,4(r9)
 2004224:	4091883a 	add	r8,r8,r2
 2004228:	18c00044 	addi	r3,r3,1
 200422c:	da011d15 	stw	r8,1140(sp)
 2004230:	d8c11c15 	stw	r3,1136(sp)
 2004234:	008001c4 	movi	r2,7
 2004238:	10c17816 	blt	r2,r3,200481c <___vfprintf_internal_r+0x10a4>
 200423c:	4a400204 	addi	r9,r9,8
 2004240:	d9012f17 	ldw	r4,1212(sp)
 2004244:	00802004 	movi	r2,128
 2004248:	2080fc26 	beq	r4,r2,200463c <___vfprintf_internal_r+0xec4>
 200424c:	d8813117 	ldw	r2,1220(sp)
 2004250:	d9012b17 	ldw	r4,1196(sp)
 2004254:	112fc83a 	sub	r23,r2,r4
 2004258:	05c02a0e 	bge	zero,r23,2004304 <___vfprintf_internal_r+0xb8c>
 200425c:	07000404 	movi	fp,16
 2004260:	05008234 	movhi	r20,520
 2004264:	a51b6584 	addi	r20,r20,28054
 2004268:	e5c01d0e 	bge	fp,r23,20042e0 <___vfprintf_internal_r+0xb68>
 200426c:	dc812a15 	stw	r18,1192(sp)
 2004270:	058001c4 	movi	r22,7
 2004274:	a025883a 	mov	r18,r20
 2004278:	8029883a 	mov	r20,r16
 200427c:	dc012917 	ldw	r16,1188(sp)
 2004280:	00000306 	br	2004290 <___vfprintf_internal_r+0xb18>
 2004284:	bdfffc04 	addi	r23,r23,-16
 2004288:	4a400204 	addi	r9,r9,8
 200428c:	e5c0110e 	bge	fp,r23,20042d4 <___vfprintf_internal_r+0xb5c>
 2004290:	4c800015 	stw	r18,0(r9)
 2004294:	4f000115 	stw	fp,4(r9)
 2004298:	42000404 	addi	r8,r8,16
 200429c:	18c00044 	addi	r3,r3,1
 20042a0:	da011d15 	stw	r8,1140(sp)
 20042a4:	d8c11c15 	stw	r3,1136(sp)
 20042a8:	b0fff60e 	bge	r22,r3,2004284 <__alt_mem_epcs_flash_controller+0xfdffb284>
 20042ac:	8809883a 	mov	r4,r17
 20042b0:	800b883a 	mov	r5,r16
 20042b4:	d9811b04 	addi	r6,sp,1132
 20042b8:	20037440 	call	2003744 <__sprint_r>
 20042bc:	103e741e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 20042c0:	bdfffc04 	addi	r23,r23,-16
 20042c4:	da011d17 	ldw	r8,1140(sp)
 20042c8:	d8c11c17 	ldw	r3,1136(sp)
 20042cc:	da400404 	addi	r9,sp,16
 20042d0:	e5ffef16 	blt	fp,r23,2004290 <__alt_mem_epcs_flash_controller+0xfdffb290>
 20042d4:	a021883a 	mov	r16,r20
 20042d8:	9029883a 	mov	r20,r18
 20042dc:	dc812a17 	ldw	r18,1192(sp)
 20042e0:	4d000015 	stw	r20,0(r9)
 20042e4:	4dc00115 	stw	r23,4(r9)
 20042e8:	45d1883a 	add	r8,r8,r23
 20042ec:	18c00044 	addi	r3,r3,1
 20042f0:	da011d15 	stw	r8,1140(sp)
 20042f4:	d8c11c15 	stw	r3,1136(sp)
 20042f8:	008001c4 	movi	r2,7
 20042fc:	10c13e16 	blt	r2,r3,20047f8 <___vfprintf_internal_r+0x1080>
 2004300:	4a400204 	addi	r9,r9,8
 2004304:	8080400c 	andi	r2,r16,256
 2004308:	1000831e 	bne	r2,zero,2004518 <___vfprintf_internal_r+0xda0>
 200430c:	d8812b17 	ldw	r2,1196(sp)
 2004310:	4cc00015 	stw	r19,0(r9)
 2004314:	48800115 	stw	r2,4(r9)
 2004318:	4091883a 	add	r8,r8,r2
 200431c:	18c00044 	addi	r3,r3,1
 2004320:	da011d15 	stw	r8,1140(sp)
 2004324:	d8c11c15 	stw	r3,1136(sp)
 2004328:	008001c4 	movi	r2,7
 200432c:	10c05316 	blt	r2,r3,200447c <___vfprintf_internal_r+0xd04>
 2004330:	4a400204 	addi	r9,r9,8
 2004334:	8400010c 	andi	r16,r16,4
 2004338:	80002e26 	beq	r16,zero,20043f4 <___vfprintf_internal_r+0xc7c>
 200433c:	d8812e17 	ldw	r2,1208(sp)
 2004340:	d8c12817 	ldw	r3,1184(sp)
 2004344:	10e1c83a 	sub	r16,r2,r3
 2004348:	04002a0e 	bge	zero,r16,20043f4 <___vfprintf_internal_r+0xc7c>
 200434c:	04800404 	movi	r18,16
 2004350:	d8c11c17 	ldw	r3,1136(sp)
 2004354:	05c08234 	movhi	r23,520
 2004358:	bddb6184 	addi	r23,r23,28038
 200435c:	9400170e 	bge	r18,r16,20043bc <___vfprintf_internal_r+0xc44>
 2004360:	04c001c4 	movi	r19,7
 2004364:	dd012917 	ldw	r20,1188(sp)
 2004368:	00000306 	br	2004378 <___vfprintf_internal_r+0xc00>
 200436c:	843ffc04 	addi	r16,r16,-16
 2004370:	4a400204 	addi	r9,r9,8
 2004374:	9400110e 	bge	r18,r16,20043bc <___vfprintf_internal_r+0xc44>
 2004378:	4dc00015 	stw	r23,0(r9)
 200437c:	4c800115 	stw	r18,4(r9)
 2004380:	42000404 	addi	r8,r8,16
 2004384:	18c00044 	addi	r3,r3,1
 2004388:	da011d15 	stw	r8,1140(sp)
 200438c:	d8c11c15 	stw	r3,1136(sp)
 2004390:	98fff60e 	bge	r19,r3,200436c <__alt_mem_epcs_flash_controller+0xfdffb36c>
 2004394:	8809883a 	mov	r4,r17
 2004398:	a00b883a 	mov	r5,r20
 200439c:	d9811b04 	addi	r6,sp,1132
 20043a0:	20037440 	call	2003744 <__sprint_r>
 20043a4:	103e3a1e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 20043a8:	843ffc04 	addi	r16,r16,-16
 20043ac:	da011d17 	ldw	r8,1140(sp)
 20043b0:	d8c11c17 	ldw	r3,1136(sp)
 20043b4:	da400404 	addi	r9,sp,16
 20043b8:	943fef16 	blt	r18,r16,2004378 <__alt_mem_epcs_flash_controller+0xfdffb378>
 20043bc:	4dc00015 	stw	r23,0(r9)
 20043c0:	4c000115 	stw	r16,4(r9)
 20043c4:	8211883a 	add	r8,r16,r8
 20043c8:	18c00044 	addi	r3,r3,1
 20043cc:	da011d15 	stw	r8,1140(sp)
 20043d0:	d8c11c15 	stw	r3,1136(sp)
 20043d4:	008001c4 	movi	r2,7
 20043d8:	10c0060e 	bge	r2,r3,20043f4 <___vfprintf_internal_r+0xc7c>
 20043dc:	d9412917 	ldw	r5,1188(sp)
 20043e0:	8809883a 	mov	r4,r17
 20043e4:	d9811b04 	addi	r6,sp,1132
 20043e8:	20037440 	call	2003744 <__sprint_r>
 20043ec:	103e281e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 20043f0:	da011d17 	ldw	r8,1140(sp)
 20043f4:	dd012817 	ldw	r20,1184(sp)
 20043f8:	d9012e17 	ldw	r4,1208(sp)
 20043fc:	a100010e 	bge	r20,r4,2004404 <___vfprintf_internal_r+0xc8c>
 2004400:	2029883a 	mov	r20,r4
 2004404:	d8812c17 	ldw	r2,1200(sp)
 2004408:	1505883a 	add	r2,r2,r20
 200440c:	d8812c15 	stw	r2,1200(sp)
 2004410:	4000b91e 	bne	r8,zero,20046f8 <___vfprintf_internal_r+0xf80>
 2004414:	d8011c15 	stw	zero,1136(sp)
 2004418:	a8800007 	ldb	r2,0(r21)
 200441c:	da400404 	addi	r9,sp,16
 2004420:	103d0d1e 	bne	r2,zero,2003858 <__alt_mem_epcs_flash_controller+0xfdffa858>
 2004424:	a825883a 	mov	r18,r21
 2004428:	003d2306 	br	20038b8 <__alt_mem_epcs_flash_controller+0xfdffa8b8>
 200442c:	d9412917 	ldw	r5,1188(sp)
 2004430:	8809883a 	mov	r4,r17
 2004434:	d9811b04 	addi	r6,sp,1132
 2004438:	20037440 	call	2003744 <__sprint_r>
 200443c:	103e141e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 2004440:	da011d17 	ldw	r8,1140(sp)
 2004444:	da400404 	addi	r9,sp,16
 2004448:	8080004c 	andi	r2,r16,1
 200444c:	103fb926 	beq	r2,zero,2004334 <__alt_mem_epcs_flash_controller+0xfdffb334>
 2004450:	d8c11c17 	ldw	r3,1136(sp)
 2004454:	d9013717 	ldw	r4,1244(sp)
 2004458:	00800044 	movi	r2,1
 200445c:	48800115 	stw	r2,4(r9)
 2004460:	49000015 	stw	r4,0(r9)
 2004464:	4091883a 	add	r8,r8,r2
 2004468:	1887883a 	add	r3,r3,r2
 200446c:	da011d15 	stw	r8,1140(sp)
 2004470:	d8c11c15 	stw	r3,1136(sp)
 2004474:	008001c4 	movi	r2,7
 2004478:	10ffad0e 	bge	r2,r3,2004330 <__alt_mem_epcs_flash_controller+0xfdffb330>
 200447c:	d9412917 	ldw	r5,1188(sp)
 2004480:	8809883a 	mov	r4,r17
 2004484:	d9811b04 	addi	r6,sp,1132
 2004488:	20037440 	call	2003744 <__sprint_r>
 200448c:	103e001e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 2004490:	da400404 	addi	r9,sp,16
 2004494:	da011d17 	ldw	r8,1140(sp)
 2004498:	003fa606 	br	2004334 <__alt_mem_epcs_flash_controller+0xfdffb334>
 200449c:	18803fcc 	andi	r2,r3,255
 20044a0:	00c00044 	movi	r3,1
 20044a4:	10c10126 	beq	r2,r3,20048ac <___vfprintf_internal_r+0x1134>
 20044a8:	00c00084 	movi	r3,2
 20044ac:	10c0ed26 	beq	r2,r3,2004864 <___vfprintf_internal_r+0x10ec>
 20044b0:	d8c10dc4 	addi	r3,sp,1079
 20044b4:	b808d0fa 	srli	r4,r23,3
 20044b8:	b00a977a 	slli	r5,r22,29
 20044bc:	b02cd0fa 	srli	r22,r22,3
 20044c0:	bdc001cc 	andi	r23,r23,7
 20044c4:	b8800c04 	addi	r2,r23,48
 20044c8:	292eb03a 	or	r23,r5,r4
 20044cc:	18800005 	stb	r2,0(r3)
 20044d0:	bd88b03a 	or	r4,r23,r22
 20044d4:	1827883a 	mov	r19,r3
 20044d8:	18ffffc4 	addi	r3,r3,-1
 20044dc:	203ff51e 	bne	r4,zero,20044b4 <__alt_mem_epcs_flash_controller+0xfdffb4b4>
 20044e0:	8100004c 	andi	r4,r16,1
 20044e4:	980b883a 	mov	r5,r19
 20044e8:	20000726 	beq	r4,zero,2004508 <___vfprintf_internal_r+0xd90>
 20044ec:	10803fcc 	andi	r2,r2,255
 20044f0:	1080201c 	xori	r2,r2,128
 20044f4:	10bfe004 	addi	r2,r2,-128
 20044f8:	01000c04 	movi	r4,48
 20044fc:	11000226 	beq	r2,r4,2004508 <___vfprintf_internal_r+0xd90>
 2004500:	1827883a 	mov	r19,r3
 2004504:	293fffc5 	stb	r4,-1(r5)
 2004508:	d8812717 	ldw	r2,1180(sp)
 200450c:	14c5c83a 	sub	r2,r2,r19
 2004510:	d8812b15 	stw	r2,1196(sp)
 2004514:	003e1f06 	br	2003d94 <__alt_mem_epcs_flash_controller+0xfdffad94>
 2004518:	00801944 	movi	r2,101
 200451c:	14807c0e 	bge	r2,r18,2004710 <___vfprintf_internal_r+0xf98>
 2004520:	d9013317 	ldw	r4,1228(sp)
 2004524:	d9413417 	ldw	r5,1232(sp)
 2004528:	000d883a 	mov	r6,zero
 200452c:	000f883a 	mov	r7,zero
 2004530:	d8c13b15 	stw	r3,1260(sp)
 2004534:	da013a15 	stw	r8,1256(sp)
 2004538:	da413c15 	stw	r9,1264(sp)
 200453c:	200fd040 	call	200fd04 <__nedf2>
 2004540:	d8c13b17 	ldw	r3,1260(sp)
 2004544:	da013a17 	ldw	r8,1256(sp)
 2004548:	da413c17 	ldw	r9,1264(sp)
 200454c:	1001001e 	bne	r2,zero,2004950 <___vfprintf_internal_r+0x11d8>
 2004550:	00808234 	movhi	r2,520
 2004554:	109b6104 	addi	r2,r2,28036
 2004558:	48800015 	stw	r2,0(r9)
 200455c:	00800044 	movi	r2,1
 2004560:	48800115 	stw	r2,4(r9)
 2004564:	4091883a 	add	r8,r8,r2
 2004568:	1887883a 	add	r3,r3,r2
 200456c:	da011d15 	stw	r8,1140(sp)
 2004570:	d8c11c15 	stw	r3,1136(sp)
 2004574:	008001c4 	movi	r2,7
 2004578:	10c20316 	blt	r2,r3,2004d88 <___vfprintf_internal_r+0x1610>
 200457c:	4a400204 	addi	r9,r9,8
 2004580:	d8812417 	ldw	r2,1168(sp)
 2004584:	d8c13217 	ldw	r3,1224(sp)
 2004588:	10c00216 	blt	r2,r3,2004594 <___vfprintf_internal_r+0xe1c>
 200458c:	8080004c 	andi	r2,r16,1
 2004590:	103f6826 	beq	r2,zero,2004334 <__alt_mem_epcs_flash_controller+0xfdffb334>
 2004594:	d8c11c17 	ldw	r3,1136(sp)
 2004598:	d9013717 	ldw	r4,1244(sp)
 200459c:	00800044 	movi	r2,1
 20045a0:	48800115 	stw	r2,4(r9)
 20045a4:	49000015 	stw	r4,0(r9)
 20045a8:	4091883a 	add	r8,r8,r2
 20045ac:	1887883a 	add	r3,r3,r2
 20045b0:	da011d15 	stw	r8,1140(sp)
 20045b4:	d8c11c15 	stw	r3,1136(sp)
 20045b8:	008001c4 	movi	r2,7
 20045bc:	10c2ce16 	blt	r2,r3,20050f8 <___vfprintf_internal_r+0x1980>
 20045c0:	4a400204 	addi	r9,r9,8
 20045c4:	d8813217 	ldw	r2,1224(sp)
 20045c8:	14bfffc4 	addi	r18,r2,-1
 20045cc:	04bf590e 	bge	zero,r18,2004334 <__alt_mem_epcs_flash_controller+0xfdffb334>
 20045d0:	04c00404 	movi	r19,16
 20045d4:	d8c11c17 	ldw	r3,1136(sp)
 20045d8:	05008234 	movhi	r20,520
 20045dc:	a51b6584 	addi	r20,r20,28054
 20045e0:	9c818a0e 	bge	r19,r18,2004c0c <___vfprintf_internal_r+0x1494>
 20045e4:	058001c4 	movi	r22,7
 20045e8:	ddc12917 	ldw	r23,1188(sp)
 20045ec:	00000306 	br	20045fc <___vfprintf_internal_r+0xe84>
 20045f0:	4a400204 	addi	r9,r9,8
 20045f4:	94bffc04 	addi	r18,r18,-16
 20045f8:	9c81840e 	bge	r19,r18,2004c0c <___vfprintf_internal_r+0x1494>
 20045fc:	4d000015 	stw	r20,0(r9)
 2004600:	4cc00115 	stw	r19,4(r9)
 2004604:	42000404 	addi	r8,r8,16
 2004608:	18c00044 	addi	r3,r3,1
 200460c:	da011d15 	stw	r8,1140(sp)
 2004610:	d8c11c15 	stw	r3,1136(sp)
 2004614:	b0fff60e 	bge	r22,r3,20045f0 <__alt_mem_epcs_flash_controller+0xfdffb5f0>
 2004618:	8809883a 	mov	r4,r17
 200461c:	b80b883a 	mov	r5,r23
 2004620:	d9811b04 	addi	r6,sp,1132
 2004624:	20037440 	call	2003744 <__sprint_r>
 2004628:	103d991e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 200462c:	da011d17 	ldw	r8,1140(sp)
 2004630:	d8c11c17 	ldw	r3,1136(sp)
 2004634:	da400404 	addi	r9,sp,16
 2004638:	003fee06 	br	20045f4 <__alt_mem_epcs_flash_controller+0xfdffb5f4>
 200463c:	d8812e17 	ldw	r2,1208(sp)
 2004640:	d9012817 	ldw	r4,1184(sp)
 2004644:	112fc83a 	sub	r23,r2,r4
 2004648:	05ff000e 	bge	zero,r23,200424c <__alt_mem_epcs_flash_controller+0xfdffb24c>
 200464c:	07000404 	movi	fp,16
 2004650:	05008234 	movhi	r20,520
 2004654:	a51b6584 	addi	r20,r20,28054
 2004658:	e5c01d0e 	bge	fp,r23,20046d0 <___vfprintf_internal_r+0xf58>
 200465c:	dc812a15 	stw	r18,1192(sp)
 2004660:	058001c4 	movi	r22,7
 2004664:	a025883a 	mov	r18,r20
 2004668:	8029883a 	mov	r20,r16
 200466c:	dc012917 	ldw	r16,1188(sp)
 2004670:	00000306 	br	2004680 <___vfprintf_internal_r+0xf08>
 2004674:	bdfffc04 	addi	r23,r23,-16
 2004678:	4a400204 	addi	r9,r9,8
 200467c:	e5c0110e 	bge	fp,r23,20046c4 <___vfprintf_internal_r+0xf4c>
 2004680:	4c800015 	stw	r18,0(r9)
 2004684:	4f000115 	stw	fp,4(r9)
 2004688:	42000404 	addi	r8,r8,16
 200468c:	18c00044 	addi	r3,r3,1
 2004690:	da011d15 	stw	r8,1140(sp)
 2004694:	d8c11c15 	stw	r3,1136(sp)
 2004698:	b0fff60e 	bge	r22,r3,2004674 <__alt_mem_epcs_flash_controller+0xfdffb674>
 200469c:	8809883a 	mov	r4,r17
 20046a0:	800b883a 	mov	r5,r16
 20046a4:	d9811b04 	addi	r6,sp,1132
 20046a8:	20037440 	call	2003744 <__sprint_r>
 20046ac:	103d781e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 20046b0:	bdfffc04 	addi	r23,r23,-16
 20046b4:	da011d17 	ldw	r8,1140(sp)
 20046b8:	d8c11c17 	ldw	r3,1136(sp)
 20046bc:	da400404 	addi	r9,sp,16
 20046c0:	e5ffef16 	blt	fp,r23,2004680 <__alt_mem_epcs_flash_controller+0xfdffb680>
 20046c4:	a021883a 	mov	r16,r20
 20046c8:	9029883a 	mov	r20,r18
 20046cc:	dc812a17 	ldw	r18,1192(sp)
 20046d0:	4d000015 	stw	r20,0(r9)
 20046d4:	4dc00115 	stw	r23,4(r9)
 20046d8:	45d1883a 	add	r8,r8,r23
 20046dc:	18c00044 	addi	r3,r3,1
 20046e0:	da011d15 	stw	r8,1140(sp)
 20046e4:	d8c11c15 	stw	r3,1136(sp)
 20046e8:	008001c4 	movi	r2,7
 20046ec:	10c13616 	blt	r2,r3,2004bc8 <___vfprintf_internal_r+0x1450>
 20046f0:	4a400204 	addi	r9,r9,8
 20046f4:	003ed506 	br	200424c <__alt_mem_epcs_flash_controller+0xfdffb24c>
 20046f8:	d9412917 	ldw	r5,1188(sp)
 20046fc:	8809883a 	mov	r4,r17
 2004700:	d9811b04 	addi	r6,sp,1132
 2004704:	20037440 	call	2003744 <__sprint_r>
 2004708:	103f4226 	beq	r2,zero,2004414 <__alt_mem_epcs_flash_controller+0xfdffb414>
 200470c:	003d6006 	br	2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 2004710:	d9013217 	ldw	r4,1224(sp)
 2004714:	00800044 	movi	r2,1
 2004718:	4cc00015 	stw	r19,0(r9)
 200471c:	1101000e 	bge	r2,r4,2004b20 <___vfprintf_internal_r+0x13a8>
 2004720:	00800044 	movi	r2,1
 2004724:	48800115 	stw	r2,4(r9)
 2004728:	4091883a 	add	r8,r8,r2
 200472c:	1887883a 	add	r3,r3,r2
 2004730:	da011d15 	stw	r8,1140(sp)
 2004734:	d8c11c15 	stw	r3,1136(sp)
 2004738:	008001c4 	movi	r2,7
 200473c:	10c10c16 	blt	r2,r3,2004b70 <___vfprintf_internal_r+0x13f8>
 2004740:	4a400204 	addi	r9,r9,8
 2004744:	d8813717 	ldw	r2,1244(sp)
 2004748:	48800015 	stw	r2,0(r9)
 200474c:	00800044 	movi	r2,1
 2004750:	48800115 	stw	r2,4(r9)
 2004754:	4091883a 	add	r8,r8,r2
 2004758:	1887883a 	add	r3,r3,r2
 200475c:	da011d15 	stw	r8,1140(sp)
 2004760:	d8c11c15 	stw	r3,1136(sp)
 2004764:	008001c4 	movi	r2,7
 2004768:	10c10a16 	blt	r2,r3,2004b94 <___vfprintf_internal_r+0x141c>
 200476c:	4c800204 	addi	r18,r9,8
 2004770:	d9013317 	ldw	r4,1228(sp)
 2004774:	d9413417 	ldw	r5,1232(sp)
 2004778:	000d883a 	mov	r6,zero
 200477c:	000f883a 	mov	r7,zero
 2004780:	d8c13b15 	stw	r3,1260(sp)
 2004784:	da013a15 	stw	r8,1256(sp)
 2004788:	200fca80 	call	200fca8 <__eqdf2>
 200478c:	d8c13b17 	ldw	r3,1260(sp)
 2004790:	da013a17 	ldw	r8,1256(sp)
 2004794:	1000ba26 	beq	r2,zero,2004a80 <___vfprintf_internal_r+0x1308>
 2004798:	d9013217 	ldw	r4,1224(sp)
 200479c:	9cc00044 	addi	r19,r19,1
 20047a0:	94c00015 	stw	r19,0(r18)
 20047a4:	20bfffc4 	addi	r2,r4,-1
 20047a8:	90800115 	stw	r2,4(r18)
 20047ac:	4091883a 	add	r8,r8,r2
 20047b0:	18c00044 	addi	r3,r3,1
 20047b4:	da011d15 	stw	r8,1140(sp)
 20047b8:	d8c11c15 	stw	r3,1136(sp)
 20047bc:	008001c4 	movi	r2,7
 20047c0:	10c0e216 	blt	r2,r3,2004b4c <___vfprintf_internal_r+0x13d4>
 20047c4:	94800204 	addi	r18,r18,8
 20047c8:	d9013517 	ldw	r4,1236(sp)
 20047cc:	d8811fc4 	addi	r2,sp,1151
 20047d0:	90800015 	stw	r2,0(r18)
 20047d4:	91000115 	stw	r4,4(r18)
 20047d8:	4111883a 	add	r8,r8,r4
 20047dc:	18c00044 	addi	r3,r3,1
 20047e0:	da011d15 	stw	r8,1140(sp)
 20047e4:	d8c11c15 	stw	r3,1136(sp)
 20047e8:	008001c4 	movi	r2,7
 20047ec:	10ff2316 	blt	r2,r3,200447c <__alt_mem_epcs_flash_controller+0xfdffb47c>
 20047f0:	92400204 	addi	r9,r18,8
 20047f4:	003ecf06 	br	2004334 <__alt_mem_epcs_flash_controller+0xfdffb334>
 20047f8:	d9412917 	ldw	r5,1188(sp)
 20047fc:	8809883a 	mov	r4,r17
 2004800:	d9811b04 	addi	r6,sp,1132
 2004804:	20037440 	call	2003744 <__sprint_r>
 2004808:	103d211e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 200480c:	da011d17 	ldw	r8,1140(sp)
 2004810:	d8c11c17 	ldw	r3,1136(sp)
 2004814:	da400404 	addi	r9,sp,16
 2004818:	003eba06 	br	2004304 <__alt_mem_epcs_flash_controller+0xfdffb304>
 200481c:	d9412917 	ldw	r5,1188(sp)
 2004820:	8809883a 	mov	r4,r17
 2004824:	d9811b04 	addi	r6,sp,1132
 2004828:	20037440 	call	2003744 <__sprint_r>
 200482c:	103d181e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 2004830:	da011d17 	ldw	r8,1140(sp)
 2004834:	d8c11c17 	ldw	r3,1136(sp)
 2004838:	da400404 	addi	r9,sp,16
 200483c:	003e8006 	br	2004240 <__alt_mem_epcs_flash_controller+0xfdffb240>
 2004840:	d9412917 	ldw	r5,1188(sp)
 2004844:	8809883a 	mov	r4,r17
 2004848:	d9811b04 	addi	r6,sp,1132
 200484c:	20037440 	call	2003744 <__sprint_r>
 2004850:	103d0f1e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 2004854:	da011d17 	ldw	r8,1140(sp)
 2004858:	d8c11c17 	ldw	r3,1136(sp)
 200485c:	da400404 	addi	r9,sp,16
 2004860:	003e6a06 	br	200420c <__alt_mem_epcs_flash_controller+0xfdffb20c>
 2004864:	d9413617 	ldw	r5,1240(sp)
 2004868:	d8810dc4 	addi	r2,sp,1079
 200486c:	b8c003cc 	andi	r3,r23,15
 2004870:	b008973a 	slli	r4,r22,28
 2004874:	28c7883a 	add	r3,r5,r3
 2004878:	b82ed13a 	srli	r23,r23,4
 200487c:	18c00003 	ldbu	r3,0(r3)
 2004880:	b02cd13a 	srli	r22,r22,4
 2004884:	25eeb03a 	or	r23,r4,r23
 2004888:	10c00005 	stb	r3,0(r2)
 200488c:	bd86b03a 	or	r3,r23,r22
 2004890:	1027883a 	mov	r19,r2
 2004894:	10bfffc4 	addi	r2,r2,-1
 2004898:	183ff41e 	bne	r3,zero,200486c <__alt_mem_epcs_flash_controller+0xfdffb86c>
 200489c:	003f1a06 	br	2004508 <__alt_mem_epcs_flash_controller+0xfdffb508>
 20048a0:	d8012b15 	stw	zero,1196(sp)
 20048a4:	dcc10e04 	addi	r19,sp,1080
 20048a8:	003d3a06 	br	2003d94 <__alt_mem_epcs_flash_controller+0xfdffad94>
 20048ac:	b0025426 	beq	r22,zero,2005200 <___vfprintf_internal_r+0x1a88>
 20048b0:	b807883a 	mov	r3,r23
 20048b4:	d8810dc4 	addi	r2,sp,1079
 20048b8:	882f883a 	mov	r23,r17
 20048bc:	04c00244 	movi	r19,9
 20048c0:	8023883a 	mov	r17,r16
 20048c4:	da412815 	stw	r9,1184(sp)
 20048c8:	1821883a 	mov	r16,r3
 20048cc:	8009883a 	mov	r4,r16
 20048d0:	b00b883a 	mov	r5,r22
 20048d4:	01800284 	movi	r6,10
 20048d8:	000f883a 	mov	r7,zero
 20048dc:	1029883a 	mov	r20,r2
 20048e0:	200f1740 	call	200f174 <__umoddi3>
 20048e4:	10800c04 	addi	r2,r2,48
 20048e8:	8009883a 	mov	r4,r16
 20048ec:	b00b883a 	mov	r5,r22
 20048f0:	a0800005 	stb	r2,0(r20)
 20048f4:	01800284 	movi	r6,10
 20048f8:	000f883a 	mov	r7,zero
 20048fc:	200eb240 	call	200eb24 <__udivdi3>
 2004900:	1021883a 	mov	r16,r2
 2004904:	182d883a 	mov	r22,r3
 2004908:	a0bfffc4 	addi	r2,r20,-1
 200490c:	183fef1e 	bne	r3,zero,20048cc <__alt_mem_epcs_flash_controller+0xfdffb8cc>
 2004910:	9c3fee36 	bltu	r19,r16,20048cc <__alt_mem_epcs_flash_controller+0xfdffb8cc>
 2004914:	da412817 	ldw	r9,1184(sp)
 2004918:	8005883a 	mov	r2,r16
 200491c:	8821883a 	mov	r16,r17
 2004920:	b823883a 	mov	r17,r23
 2004924:	102f883a 	mov	r23,r2
 2004928:	d8812717 	ldw	r2,1180(sp)
 200492c:	a4ffffc4 	addi	r19,r20,-1
 2004930:	bdc00c04 	addi	r23,r23,48
 2004934:	14c5c83a 	sub	r2,r2,r19
 2004938:	a5ffffc5 	stb	r23,-1(r20)
 200493c:	d8812b15 	stw	r2,1196(sp)
 2004940:	003d1406 	br	2003d94 <__alt_mem_epcs_flash_controller+0xfdffad94>
 2004944:	00c00044 	movi	r3,1
 2004948:	bd84b03a 	or	r2,r23,r22
 200494c:	003d0306 	br	2003d5c <__alt_mem_epcs_flash_controller+0xfdffad5c>
 2004950:	dc812417 	ldw	r18,1168(sp)
 2004954:	0481140e 	bge	zero,r18,2004da8 <___vfprintf_internal_r+0x1630>
 2004958:	d9013217 	ldw	r4,1224(sp)
 200495c:	4cc00015 	stw	r19,0(r9)
 2004960:	9100ec16 	blt	r18,r4,2004d14 <___vfprintf_internal_r+0x159c>
 2004964:	49000115 	stw	r4,4(r9)
 2004968:	4111883a 	add	r8,r8,r4
 200496c:	18c00044 	addi	r3,r3,1
 2004970:	da011d15 	stw	r8,1140(sp)
 2004974:	d8c11c15 	stw	r3,1136(sp)
 2004978:	008001c4 	movi	r2,7
 200497c:	10c23616 	blt	r2,r3,2005258 <___vfprintf_internal_r+0x1ae0>
 2004980:	4a400204 	addi	r9,r9,8
 2004984:	d8813217 	ldw	r2,1224(sp)
 2004988:	90a5c83a 	sub	r18,r18,r2
 200498c:	04beae0e 	bge	zero,r18,2004448 <__alt_mem_epcs_flash_controller+0xfdffb448>
 2004990:	04c00404 	movi	r19,16
 2004994:	d8c11c17 	ldw	r3,1136(sp)
 2004998:	05008234 	movhi	r20,520
 200499c:	a51b6584 	addi	r20,r20,28054
 20049a0:	9c81dd0e 	bge	r19,r18,2005118 <___vfprintf_internal_r+0x19a0>
 20049a4:	058001c4 	movi	r22,7
 20049a8:	ddc12917 	ldw	r23,1188(sp)
 20049ac:	00000306 	br	20049bc <___vfprintf_internal_r+0x1244>
 20049b0:	4a400204 	addi	r9,r9,8
 20049b4:	94bffc04 	addi	r18,r18,-16
 20049b8:	9c81d70e 	bge	r19,r18,2005118 <___vfprintf_internal_r+0x19a0>
 20049bc:	4d000015 	stw	r20,0(r9)
 20049c0:	4cc00115 	stw	r19,4(r9)
 20049c4:	42000404 	addi	r8,r8,16
 20049c8:	18c00044 	addi	r3,r3,1
 20049cc:	da011d15 	stw	r8,1140(sp)
 20049d0:	d8c11c15 	stw	r3,1136(sp)
 20049d4:	b0fff60e 	bge	r22,r3,20049b0 <__alt_mem_epcs_flash_controller+0xfdffb9b0>
 20049d8:	8809883a 	mov	r4,r17
 20049dc:	b80b883a 	mov	r5,r23
 20049e0:	d9811b04 	addi	r6,sp,1132
 20049e4:	20037440 	call	2003744 <__sprint_r>
 20049e8:	103ca91e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 20049ec:	da011d17 	ldw	r8,1140(sp)
 20049f0:	d8c11c17 	ldw	r3,1136(sp)
 20049f4:	da400404 	addi	r9,sp,16
 20049f8:	003fee06 	br	20049b4 <__alt_mem_epcs_flash_controller+0xfdffb9b4>
 20049fc:	d9412917 	ldw	r5,1188(sp)
 2004a00:	8809883a 	mov	r4,r17
 2004a04:	d9811b04 	addi	r6,sp,1132
 2004a08:	20037440 	call	2003744 <__sprint_r>
 2004a0c:	103ca01e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 2004a10:	da011d17 	ldw	r8,1140(sp)
 2004a14:	d8c11c17 	ldw	r3,1136(sp)
 2004a18:	da400404 	addi	r9,sp,16
 2004a1c:	003dee06 	br	20041d8 <__alt_mem_epcs_flash_controller+0xfdffb1d8>
 2004a20:	00c00084 	movi	r3,2
 2004a24:	bd84b03a 	or	r2,r23,r22
 2004a28:	d8012585 	stb	zero,1174(sp)
 2004a2c:	003ccb06 	br	2003d5c <__alt_mem_epcs_flash_controller+0xfdffad5c>
 2004a30:	8080040c 	andi	r2,r16,16
 2004a34:	1000ae26 	beq	r2,zero,2004cf0 <___vfprintf_internal_r+0x1578>
 2004a38:	d9012d17 	ldw	r4,1204(sp)
 2004a3c:	25c00017 	ldw	r23,0(r4)
 2004a40:	21000104 	addi	r4,r4,4
 2004a44:	d9012d15 	stw	r4,1204(sp)
 2004a48:	b82dd7fa 	srai	r22,r23,31
 2004a4c:	b005883a 	mov	r2,r22
 2004a50:	003cb906 	br	2003d38 <__alt_mem_epcs_flash_controller+0xfdffad38>
 2004a54:	8080040c 	andi	r2,r16,16
 2004a58:	10007026 	beq	r2,zero,2004c1c <___vfprintf_internal_r+0x14a4>
 2004a5c:	d8812d17 	ldw	r2,1204(sp)
 2004a60:	002d883a 	mov	r22,zero
 2004a64:	00c00044 	movi	r3,1
 2004a68:	15c00017 	ldw	r23,0(r2)
 2004a6c:	10800104 	addi	r2,r2,4
 2004a70:	d8812d15 	stw	r2,1204(sp)
 2004a74:	d8012585 	stb	zero,1174(sp)
 2004a78:	b805883a 	mov	r2,r23
 2004a7c:	003cb706 	br	2003d5c <__alt_mem_epcs_flash_controller+0xfdffad5c>
 2004a80:	d8813217 	ldw	r2,1224(sp)
 2004a84:	14ffffc4 	addi	r19,r2,-1
 2004a88:	04ff4f0e 	bge	zero,r19,20047c8 <__alt_mem_epcs_flash_controller+0xfdffb7c8>
 2004a8c:	05800404 	movi	r22,16
 2004a90:	05008234 	movhi	r20,520
 2004a94:	a51b6584 	addi	r20,r20,28054
 2004a98:	b4c0470e 	bge	r22,r19,2004bb8 <___vfprintf_internal_r+0x1440>
 2004a9c:	05c001c4 	movi	r23,7
 2004aa0:	df012917 	ldw	fp,1188(sp)
 2004aa4:	00000306 	br	2004ab4 <___vfprintf_internal_r+0x133c>
 2004aa8:	94800204 	addi	r18,r18,8
 2004aac:	9cfffc04 	addi	r19,r19,-16
 2004ab0:	b4c0410e 	bge	r22,r19,2004bb8 <___vfprintf_internal_r+0x1440>
 2004ab4:	95000015 	stw	r20,0(r18)
 2004ab8:	95800115 	stw	r22,4(r18)
 2004abc:	42000404 	addi	r8,r8,16
 2004ac0:	18c00044 	addi	r3,r3,1
 2004ac4:	da011d15 	stw	r8,1140(sp)
 2004ac8:	d8c11c15 	stw	r3,1136(sp)
 2004acc:	b8fff60e 	bge	r23,r3,2004aa8 <__alt_mem_epcs_flash_controller+0xfdffbaa8>
 2004ad0:	8809883a 	mov	r4,r17
 2004ad4:	e00b883a 	mov	r5,fp
 2004ad8:	d9811b04 	addi	r6,sp,1132
 2004adc:	20037440 	call	2003744 <__sprint_r>
 2004ae0:	103c6b1e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 2004ae4:	da011d17 	ldw	r8,1140(sp)
 2004ae8:	d8c11c17 	ldw	r3,1136(sp)
 2004aec:	dc800404 	addi	r18,sp,16
 2004af0:	003fee06 	br	2004aac <__alt_mem_epcs_flash_controller+0xfdffbaac>
 2004af4:	8080040c 	andi	r2,r16,16
 2004af8:	10005326 	beq	r2,zero,2004c48 <___vfprintf_internal_r+0x14d0>
 2004afc:	d8c12d17 	ldw	r3,1204(sp)
 2004b00:	002d883a 	mov	r22,zero
 2004b04:	1dc00017 	ldw	r23,0(r3)
 2004b08:	18c00104 	addi	r3,r3,4
 2004b0c:	d8c12d15 	stw	r3,1204(sp)
 2004b10:	b805883a 	mov	r2,r23
 2004b14:	0007883a 	mov	r3,zero
 2004b18:	d8012585 	stb	zero,1174(sp)
 2004b1c:	003c8f06 	br	2003d5c <__alt_mem_epcs_flash_controller+0xfdffad5c>
 2004b20:	8088703a 	and	r4,r16,r2
 2004b24:	203efe1e 	bne	r4,zero,2004720 <__alt_mem_epcs_flash_controller+0xfdffb720>
 2004b28:	48800115 	stw	r2,4(r9)
 2004b2c:	42000044 	addi	r8,r8,1
 2004b30:	18c00044 	addi	r3,r3,1
 2004b34:	da011d15 	stw	r8,1140(sp)
 2004b38:	d8c11c15 	stw	r3,1136(sp)
 2004b3c:	008001c4 	movi	r2,7
 2004b40:	10c00216 	blt	r2,r3,2004b4c <___vfprintf_internal_r+0x13d4>
 2004b44:	4c800204 	addi	r18,r9,8
 2004b48:	003f1f06 	br	20047c8 <__alt_mem_epcs_flash_controller+0xfdffb7c8>
 2004b4c:	d9412917 	ldw	r5,1188(sp)
 2004b50:	8809883a 	mov	r4,r17
 2004b54:	d9811b04 	addi	r6,sp,1132
 2004b58:	20037440 	call	2003744 <__sprint_r>
 2004b5c:	103c4c1e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 2004b60:	dc800404 	addi	r18,sp,16
 2004b64:	da011d17 	ldw	r8,1140(sp)
 2004b68:	d8c11c17 	ldw	r3,1136(sp)
 2004b6c:	003f1606 	br	20047c8 <__alt_mem_epcs_flash_controller+0xfdffb7c8>
 2004b70:	d9412917 	ldw	r5,1188(sp)
 2004b74:	8809883a 	mov	r4,r17
 2004b78:	d9811b04 	addi	r6,sp,1132
 2004b7c:	20037440 	call	2003744 <__sprint_r>
 2004b80:	103c431e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 2004b84:	da011d17 	ldw	r8,1140(sp)
 2004b88:	d8c11c17 	ldw	r3,1136(sp)
 2004b8c:	da400404 	addi	r9,sp,16
 2004b90:	003eec06 	br	2004744 <__alt_mem_epcs_flash_controller+0xfdffb744>
 2004b94:	d9412917 	ldw	r5,1188(sp)
 2004b98:	8809883a 	mov	r4,r17
 2004b9c:	d9811b04 	addi	r6,sp,1132
 2004ba0:	20037440 	call	2003744 <__sprint_r>
 2004ba4:	103c3a1e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 2004ba8:	da011d17 	ldw	r8,1140(sp)
 2004bac:	d8c11c17 	ldw	r3,1136(sp)
 2004bb0:	dc800404 	addi	r18,sp,16
 2004bb4:	003eee06 	br	2004770 <__alt_mem_epcs_flash_controller+0xfdffb770>
 2004bb8:	95000015 	stw	r20,0(r18)
 2004bbc:	94c00115 	stw	r19,4(r18)
 2004bc0:	44d1883a 	add	r8,r8,r19
 2004bc4:	003efa06 	br	20047b0 <__alt_mem_epcs_flash_controller+0xfdffb7b0>
 2004bc8:	d9412917 	ldw	r5,1188(sp)
 2004bcc:	8809883a 	mov	r4,r17
 2004bd0:	d9811b04 	addi	r6,sp,1132
 2004bd4:	20037440 	call	2003744 <__sprint_r>
 2004bd8:	103c2d1e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 2004bdc:	da011d17 	ldw	r8,1140(sp)
 2004be0:	d8c11c17 	ldw	r3,1136(sp)
 2004be4:	da400404 	addi	r9,sp,16
 2004be8:	003d9806 	br	200424c <__alt_mem_epcs_flash_controller+0xfdffb24c>
 2004bec:	8080100c 	andi	r2,r16,64
 2004bf0:	10011626 	beq	r2,zero,200504c <___vfprintf_internal_r+0x18d4>
 2004bf4:	d8c12d17 	ldw	r3,1204(sp)
 2004bf8:	002d883a 	mov	r22,zero
 2004bfc:	1dc0000b 	ldhu	r23,0(r3)
 2004c00:	18c00104 	addi	r3,r3,4
 2004c04:	d8c12d15 	stw	r3,1204(sp)
 2004c08:	003cc106 	br	2003f10 <__alt_mem_epcs_flash_controller+0xfdffaf10>
 2004c0c:	4d000015 	stw	r20,0(r9)
 2004c10:	4c800115 	stw	r18,4(r9)
 2004c14:	4491883a 	add	r8,r8,r18
 2004c18:	003dc006 	br	200431c <__alt_mem_epcs_flash_controller+0xfdffb31c>
 2004c1c:	8080100c 	andi	r2,r16,64
 2004c20:	10010126 	beq	r2,zero,2005028 <___vfprintf_internal_r+0x18b0>
 2004c24:	d8c12d17 	ldw	r3,1204(sp)
 2004c28:	002d883a 	mov	r22,zero
 2004c2c:	1dc0000b 	ldhu	r23,0(r3)
 2004c30:	18c00104 	addi	r3,r3,4
 2004c34:	d8c12d15 	stw	r3,1204(sp)
 2004c38:	b805883a 	mov	r2,r23
 2004c3c:	00c00044 	movi	r3,1
 2004c40:	d8012585 	stb	zero,1174(sp)
 2004c44:	003c4506 	br	2003d5c <__alt_mem_epcs_flash_controller+0xfdffad5c>
 2004c48:	8080100c 	andi	r2,r16,64
 2004c4c:	10010526 	beq	r2,zero,2005064 <___vfprintf_internal_r+0x18ec>
 2004c50:	d9012d17 	ldw	r4,1204(sp)
 2004c54:	002d883a 	mov	r22,zero
 2004c58:	0007883a 	mov	r3,zero
 2004c5c:	25c0000b 	ldhu	r23,0(r4)
 2004c60:	21000104 	addi	r4,r4,4
 2004c64:	d9012d15 	stw	r4,1204(sp)
 2004c68:	b805883a 	mov	r2,r23
 2004c6c:	d8012585 	stb	zero,1174(sp)
 2004c70:	003c3a06 	br	2003d5c <__alt_mem_epcs_flash_controller+0xfdffad5c>
 2004c74:	d8812d17 	ldw	r2,1204(sp)
 2004c78:	15800017 	ldw	r22,0(r2)
 2004c7c:	15000117 	ldw	r20,4(r2)
 2004c80:	10800204 	addi	r2,r2,8
 2004c84:	d8812d15 	stw	r2,1204(sp)
 2004c88:	dd813315 	stw	r22,1228(sp)
 2004c8c:	dd013415 	stw	r20,1232(sp)
 2004c90:	003c5906 	br	2003df8 <__alt_mem_epcs_flash_controller+0xfdffadf8>
 2004c94:	00c00084 	movi	r3,2
 2004c98:	d8012585 	stb	zero,1174(sp)
 2004c9c:	003c2f06 	br	2003d5c <__alt_mem_epcs_flash_controller+0xfdffad5c>
 2004ca0:	ac800007 	ldb	r18,0(r21)
 2004ca4:	003b1006 	br	20038e8 <__alt_mem_epcs_flash_controller+0xfdffa8e8>
 2004ca8:	8080040c 	andi	r2,r16,16
 2004cac:	1000091e 	bne	r2,zero,2004cd4 <___vfprintf_internal_r+0x155c>
 2004cb0:	8400100c 	andi	r16,r16,64
 2004cb4:	80000726 	beq	r16,zero,2004cd4 <___vfprintf_internal_r+0x155c>
 2004cb8:	d8c12d17 	ldw	r3,1204(sp)
 2004cbc:	d9012c17 	ldw	r4,1200(sp)
 2004cc0:	18800017 	ldw	r2,0(r3)
 2004cc4:	18c00104 	addi	r3,r3,4
 2004cc8:	d8c12d15 	stw	r3,1204(sp)
 2004ccc:	1100000d 	sth	r4,0(r2)
 2004cd0:	003adf06 	br	2003850 <__alt_mem_epcs_flash_controller+0xfdffa850>
 2004cd4:	d8c12d17 	ldw	r3,1204(sp)
 2004cd8:	d9012c17 	ldw	r4,1200(sp)
 2004cdc:	18800017 	ldw	r2,0(r3)
 2004ce0:	18c00104 	addi	r3,r3,4
 2004ce4:	d8c12d15 	stw	r3,1204(sp)
 2004ce8:	11000015 	stw	r4,0(r2)
 2004cec:	003ad806 	br	2003850 <__alt_mem_epcs_flash_controller+0xfdffa850>
 2004cf0:	8080100c 	andi	r2,r16,64
 2004cf4:	1000c526 	beq	r2,zero,200500c <___vfprintf_internal_r+0x1894>
 2004cf8:	d8812d17 	ldw	r2,1204(sp)
 2004cfc:	15c0000f 	ldh	r23,0(r2)
 2004d00:	10800104 	addi	r2,r2,4
 2004d04:	d8812d15 	stw	r2,1204(sp)
 2004d08:	b82dd7fa 	srai	r22,r23,31
 2004d0c:	b005883a 	mov	r2,r22
 2004d10:	003c0906 	br	2003d38 <__alt_mem_epcs_flash_controller+0xfdffad38>
 2004d14:	4c800115 	stw	r18,4(r9)
 2004d18:	9211883a 	add	r8,r18,r8
 2004d1c:	18c00044 	addi	r3,r3,1
 2004d20:	da011d15 	stw	r8,1140(sp)
 2004d24:	d8c11c15 	stw	r3,1136(sp)
 2004d28:	008001c4 	movi	r2,7
 2004d2c:	10c14016 	blt	r2,r3,2005230 <___vfprintf_internal_r+0x1ab8>
 2004d30:	4a400204 	addi	r9,r9,8
 2004d34:	d8813717 	ldw	r2,1244(sp)
 2004d38:	9ca7883a 	add	r19,r19,r18
 2004d3c:	48800015 	stw	r2,0(r9)
 2004d40:	00800044 	movi	r2,1
 2004d44:	48800115 	stw	r2,4(r9)
 2004d48:	4091883a 	add	r8,r8,r2
 2004d4c:	1887883a 	add	r3,r3,r2
 2004d50:	da011d15 	stw	r8,1140(sp)
 2004d54:	d8c11c15 	stw	r3,1136(sp)
 2004d58:	008001c4 	movi	r2,7
 2004d5c:	10c12c16 	blt	r2,r3,2005210 <___vfprintf_internal_r+0x1a98>
 2004d60:	4a400204 	addi	r9,r9,8
 2004d64:	d9013217 	ldw	r4,1224(sp)
 2004d68:	da011d17 	ldw	r8,1140(sp)
 2004d6c:	d8c11c17 	ldw	r3,1136(sp)
 2004d70:	24a5c83a 	sub	r18,r4,r18
 2004d74:	4cc00015 	stw	r19,0(r9)
 2004d78:	003fa506 	br	2004c10 <__alt_mem_epcs_flash_controller+0xfdffbc10>
 2004d7c:	04c08234 	movhi	r19,520
 2004d80:	9cdb5204 	addi	r19,r19,27976
 2004d84:	003c2e06 	br	2003e40 <__alt_mem_epcs_flash_controller+0xfdffae40>
 2004d88:	d9412917 	ldw	r5,1188(sp)
 2004d8c:	8809883a 	mov	r4,r17
 2004d90:	d9811b04 	addi	r6,sp,1132
 2004d94:	20037440 	call	2003744 <__sprint_r>
 2004d98:	103bbd1e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 2004d9c:	da011d17 	ldw	r8,1140(sp)
 2004da0:	da400404 	addi	r9,sp,16
 2004da4:	003df606 	br	2004580 <__alt_mem_epcs_flash_controller+0xfdffb580>
 2004da8:	00808234 	movhi	r2,520
 2004dac:	109b6104 	addi	r2,r2,28036
 2004db0:	48800015 	stw	r2,0(r9)
 2004db4:	00800044 	movi	r2,1
 2004db8:	48800115 	stw	r2,4(r9)
 2004dbc:	4091883a 	add	r8,r8,r2
 2004dc0:	1887883a 	add	r3,r3,r2
 2004dc4:	da011d15 	stw	r8,1140(sp)
 2004dc8:	d8c11c15 	stw	r3,1136(sp)
 2004dcc:	008001c4 	movi	r2,7
 2004dd0:	10c0bc16 	blt	r2,r3,20050c4 <___vfprintf_internal_r+0x194c>
 2004dd4:	4a400204 	addi	r9,r9,8
 2004dd8:	9000041e 	bne	r18,zero,2004dec <___vfprintf_internal_r+0x1674>
 2004ddc:	d8c13217 	ldw	r3,1224(sp)
 2004de0:	1800021e 	bne	r3,zero,2004dec <___vfprintf_internal_r+0x1674>
 2004de4:	8080004c 	andi	r2,r16,1
 2004de8:	103d5226 	beq	r2,zero,2004334 <__alt_mem_epcs_flash_controller+0xfdffb334>
 2004dec:	d8c11c17 	ldw	r3,1136(sp)
 2004df0:	d9013717 	ldw	r4,1244(sp)
 2004df4:	00800044 	movi	r2,1
 2004df8:	48800115 	stw	r2,4(r9)
 2004dfc:	49000015 	stw	r4,0(r9)
 2004e00:	4091883a 	add	r8,r8,r2
 2004e04:	1887883a 	add	r3,r3,r2
 2004e08:	da011d15 	stw	r8,1140(sp)
 2004e0c:	d8c11c15 	stw	r3,1136(sp)
 2004e10:	008001c4 	movi	r2,7
 2004e14:	10c14516 	blt	r2,r3,200532c <___vfprintf_internal_r+0x1bb4>
 2004e18:	4a400204 	addi	r9,r9,8
 2004e1c:	04a5c83a 	sub	r18,zero,r18
 2004e20:	0480d70e 	bge	zero,r18,2005180 <___vfprintf_internal_r+0x1a08>
 2004e24:	05800404 	movi	r22,16
 2004e28:	05008234 	movhi	r20,520
 2004e2c:	a51b6584 	addi	r20,r20,28054
 2004e30:	b480db0e 	bge	r22,r18,20051a0 <___vfprintf_internal_r+0x1a28>
 2004e34:	05c001c4 	movi	r23,7
 2004e38:	df012917 	ldw	fp,1188(sp)
 2004e3c:	00000306 	br	2004e4c <___vfprintf_internal_r+0x16d4>
 2004e40:	4a400204 	addi	r9,r9,8
 2004e44:	94bffc04 	addi	r18,r18,-16
 2004e48:	b480d50e 	bge	r22,r18,20051a0 <___vfprintf_internal_r+0x1a28>
 2004e4c:	4d000015 	stw	r20,0(r9)
 2004e50:	4d800115 	stw	r22,4(r9)
 2004e54:	42000404 	addi	r8,r8,16
 2004e58:	18c00044 	addi	r3,r3,1
 2004e5c:	da011d15 	stw	r8,1140(sp)
 2004e60:	d8c11c15 	stw	r3,1136(sp)
 2004e64:	b8fff60e 	bge	r23,r3,2004e40 <__alt_mem_epcs_flash_controller+0xfdffbe40>
 2004e68:	8809883a 	mov	r4,r17
 2004e6c:	e00b883a 	mov	r5,fp
 2004e70:	d9811b04 	addi	r6,sp,1132
 2004e74:	20037440 	call	2003744 <__sprint_r>
 2004e78:	103b851e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 2004e7c:	da011d17 	ldw	r8,1140(sp)
 2004e80:	d8c11c17 	ldw	r3,1136(sp)
 2004e84:	da400404 	addi	r9,sp,16
 2004e88:	003fee06 	br	2004e44 <__alt_mem_epcs_flash_controller+0xfdffbe44>
 2004e8c:	da413c15 	stw	r9,1264(sp)
 2004e90:	200b5c40 	call	200b5c4 <__isnand>
 2004e94:	da413c17 	ldw	r9,1264(sp)
 2004e98:	10007e1e 	bne	r2,zero,2005094 <___vfprintf_internal_r+0x191c>
 2004e9c:	00bfffc4 	movi	r2,-1
 2004ea0:	e0816a26 	beq	fp,r2,200544c <___vfprintf_internal_r+0x1cd4>
 2004ea4:	008019c4 	movi	r2,103
 2004ea8:	90816526 	beq	r18,r2,2005440 <___vfprintf_internal_r+0x1cc8>
 2004eac:	008011c4 	movi	r2,71
 2004eb0:	90816326 	beq	r18,r2,2005440 <___vfprintf_internal_r+0x1cc8>
 2004eb4:	80c04014 	ori	r3,r16,256
 2004eb8:	d8c12a15 	stw	r3,1192(sp)
 2004ebc:	a0016516 	blt	r20,zero,2005454 <___vfprintf_internal_r+0x1cdc>
 2004ec0:	d8012f05 	stb	zero,1212(sp)
 2004ec4:	00801984 	movi	r2,102
 2004ec8:	9080f226 	beq	r18,r2,2005294 <___vfprintf_internal_r+0x1b1c>
 2004ecc:	00801184 	movi	r2,70
 2004ed0:	9080f026 	beq	r18,r2,2005294 <___vfprintf_internal_r+0x1b1c>
 2004ed4:	00801944 	movi	r2,101
 2004ed8:	90818d26 	beq	r18,r2,2005510 <___vfprintf_internal_r+0x1d98>
 2004edc:	00801144 	movi	r2,69
 2004ee0:	90818b26 	beq	r18,r2,2005510 <___vfprintf_internal_r+0x1d98>
 2004ee4:	e02f883a 	mov	r23,fp
 2004ee8:	d8812404 	addi	r2,sp,1168
 2004eec:	d8800115 	stw	r2,4(sp)
 2004ef0:	d8812304 	addi	r2,sp,1164
 2004ef4:	d8800215 	stw	r2,8(sp)
 2004ef8:	d8812204 	addi	r2,sp,1160
 2004efc:	ddc00015 	stw	r23,0(sp)
 2004f00:	d8800315 	stw	r2,12(sp)
 2004f04:	8809883a 	mov	r4,r17
 2004f08:	b00b883a 	mov	r5,r22
 2004f0c:	a00d883a 	mov	r6,r20
 2004f10:	01c00084 	movi	r7,2
 2004f14:	da413c15 	stw	r9,1264(sp)
 2004f18:	20072200 	call	2007220 <_dtoa_r>
 2004f1c:	1027883a 	mov	r19,r2
 2004f20:	008019c4 	movi	r2,103
 2004f24:	da413c17 	ldw	r9,1264(sp)
 2004f28:	9081951e 	bne	r18,r2,2005580 <___vfprintf_internal_r+0x1e08>
 2004f2c:	8080004c 	andi	r2,r16,1
 2004f30:	10017926 	beq	r2,zero,2005518 <___vfprintf_internal_r+0x1da0>
 2004f34:	00801184 	movi	r2,70
 2004f38:	9dc7883a 	add	r3,r19,r23
 2004f3c:	9080e626 	beq	r18,r2,20052d8 <___vfprintf_internal_r+0x1b60>
 2004f40:	b009883a 	mov	r4,r22
 2004f44:	a00b883a 	mov	r5,r20
 2004f48:	000d883a 	mov	r6,zero
 2004f4c:	000f883a 	mov	r7,zero
 2004f50:	d8c13b15 	stw	r3,1260(sp)
 2004f54:	da413c15 	stw	r9,1264(sp)
 2004f58:	200fca80 	call	200fca8 <__eqdf2>
 2004f5c:	d8c13b17 	ldw	r3,1260(sp)
 2004f60:	da413c17 	ldw	r9,1264(sp)
 2004f64:	10000726 	beq	r2,zero,2004f84 <___vfprintf_internal_r+0x180c>
 2004f68:	d8812217 	ldw	r2,1160(sp)
 2004f6c:	10c18a2e 	bgeu	r2,r3,2005598 <___vfprintf_internal_r+0x1e20>
 2004f70:	01000c04 	movi	r4,48
 2004f74:	11000005 	stb	r4,0(r2)
 2004f78:	10800044 	addi	r2,r2,1
 2004f7c:	d8812215 	stw	r2,1160(sp)
 2004f80:	10fffc1e 	bne	r2,r3,2004f74 <__alt_mem_epcs_flash_controller+0xfdffbf74>
 2004f84:	1cc7c83a 	sub	r3,r3,r19
 2004f88:	d8c13215 	stw	r3,1224(sp)
 2004f8c:	008019c4 	movi	r2,103
 2004f90:	9080fa26 	beq	r18,r2,200537c <___vfprintf_internal_r+0x1c04>
 2004f94:	008011c4 	movi	r2,71
 2004f98:	9080f826 	beq	r18,r2,200537c <___vfprintf_internal_r+0x1c04>
 2004f9c:	00801984 	movi	r2,102
 2004fa0:	90818e1e 	bne	r18,r2,20055dc <___vfprintf_internal_r+0x1e64>
 2004fa4:	d8812417 	ldw	r2,1168(sp)
 2004fa8:	d8812b15 	stw	r2,1196(sp)
 2004fac:	00817c0e 	bge	zero,r2,20055a0 <___vfprintf_internal_r+0x1e28>
 2004fb0:	e000021e 	bne	fp,zero,2004fbc <___vfprintf_internal_r+0x1844>
 2004fb4:	8400004c 	andi	r16,r16,1
 2004fb8:	80000426 	beq	r16,zero,2004fcc <___vfprintf_internal_r+0x1854>
 2004fbc:	d8812b17 	ldw	r2,1196(sp)
 2004fc0:	e2000044 	addi	r8,fp,1
 2004fc4:	1205883a 	add	r2,r2,r8
 2004fc8:	d8812b15 	stw	r2,1196(sp)
 2004fcc:	d8812815 	stw	r2,1184(sp)
 2004fd0:	10010b16 	blt	r2,zero,2005400 <___vfprintf_internal_r+0x1c88>
 2004fd4:	ddc12f07 	ldb	r23,1212(sp)
 2004fd8:	b800e426 	beq	r23,zero,200536c <___vfprintf_internal_r+0x1bf4>
 2004fdc:	00800b44 	movi	r2,45
 2004fe0:	d8812585 	stb	r2,1174(sp)
 2004fe4:	dc012a17 	ldw	r16,1192(sp)
 2004fe8:	d8013115 	stw	zero,1220(sp)
 2004fec:	003b7306 	br	2003dbc <__alt_mem_epcs_flash_controller+0xfdffadbc>
 2004ff0:	d8812b17 	ldw	r2,1196(sp)
 2004ff4:	d8812815 	stw	r2,1184(sp)
 2004ff8:	10005716 	blt	r2,zero,2005158 <___vfprintf_internal_r+0x19e0>
 2004ffc:	d8812583 	ldbu	r2,1174(sp)
 2005000:	ddc12d15 	stw	r23,1204(sp)
 2005004:	d8013115 	stw	zero,1220(sp)
 2005008:	003b6806 	br	2003dac <__alt_mem_epcs_flash_controller+0xfdffadac>
 200500c:	d8c12d17 	ldw	r3,1204(sp)
 2005010:	1dc00017 	ldw	r23,0(r3)
 2005014:	18c00104 	addi	r3,r3,4
 2005018:	d8c12d15 	stw	r3,1204(sp)
 200501c:	b82dd7fa 	srai	r22,r23,31
 2005020:	b005883a 	mov	r2,r22
 2005024:	003b4406 	br	2003d38 <__alt_mem_epcs_flash_controller+0xfdffad38>
 2005028:	d9012d17 	ldw	r4,1204(sp)
 200502c:	002d883a 	mov	r22,zero
 2005030:	00c00044 	movi	r3,1
 2005034:	25c00017 	ldw	r23,0(r4)
 2005038:	21000104 	addi	r4,r4,4
 200503c:	d9012d15 	stw	r4,1204(sp)
 2005040:	b805883a 	mov	r2,r23
 2005044:	d8012585 	stb	zero,1174(sp)
 2005048:	003b4406 	br	2003d5c <__alt_mem_epcs_flash_controller+0xfdffad5c>
 200504c:	d9012d17 	ldw	r4,1204(sp)
 2005050:	002d883a 	mov	r22,zero
 2005054:	25c00017 	ldw	r23,0(r4)
 2005058:	21000104 	addi	r4,r4,4
 200505c:	d9012d15 	stw	r4,1204(sp)
 2005060:	003bab06 	br	2003f10 <__alt_mem_epcs_flash_controller+0xfdffaf10>
 2005064:	d8812d17 	ldw	r2,1204(sp)
 2005068:	002d883a 	mov	r22,zero
 200506c:	0007883a 	mov	r3,zero
 2005070:	15c00017 	ldw	r23,0(r2)
 2005074:	10800104 	addi	r2,r2,4
 2005078:	d8812d15 	stw	r2,1204(sp)
 200507c:	d8012585 	stb	zero,1174(sp)
 2005080:	b805883a 	mov	r2,r23
 2005084:	003b3506 	br	2003d5c <__alt_mem_epcs_flash_controller+0xfdffad5c>
 2005088:	00ffffc4 	movi	r3,-1
 200508c:	b82b883a 	mov	r21,r23
 2005090:	003a1606 	br	20038ec <__alt_mem_epcs_flash_controller+0xfdffa8ec>
 2005094:	008011c4 	movi	r2,71
 2005098:	1480b116 	blt	r2,r18,2005360 <___vfprintf_internal_r+0x1be8>
 200509c:	04c08234 	movhi	r19,520
 20050a0:	9cdb5304 	addi	r19,r19,27980
 20050a4:	00c000c4 	movi	r3,3
 20050a8:	00bfdfc4 	movi	r2,-129
 20050ac:	80a0703a 	and	r16,r16,r2
 20050b0:	d8c12815 	stw	r3,1184(sp)
 20050b4:	d8812583 	ldbu	r2,1174(sp)
 20050b8:	d8c12b15 	stw	r3,1196(sp)
 20050bc:	d8013115 	stw	zero,1220(sp)
 20050c0:	003b3a06 	br	2003dac <__alt_mem_epcs_flash_controller+0xfdffadac>
 20050c4:	d9412917 	ldw	r5,1188(sp)
 20050c8:	8809883a 	mov	r4,r17
 20050cc:	d9811b04 	addi	r6,sp,1132
 20050d0:	20037440 	call	2003744 <__sprint_r>
 20050d4:	103aee1e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 20050d8:	dc812417 	ldw	r18,1168(sp)
 20050dc:	da011d17 	ldw	r8,1140(sp)
 20050e0:	da400404 	addi	r9,sp,16
 20050e4:	003f3c06 	br	2004dd8 <__alt_mem_epcs_flash_controller+0xfdffbdd8>
 20050e8:	ad400044 	addi	r21,r21,1
 20050ec:	84000814 	ori	r16,r16,32
 20050f0:	14800047 	ldb	r18,1(r2)
 20050f4:	0039fc06 	br	20038e8 <__alt_mem_epcs_flash_controller+0xfdffa8e8>
 20050f8:	d9412917 	ldw	r5,1188(sp)
 20050fc:	8809883a 	mov	r4,r17
 2005100:	d9811b04 	addi	r6,sp,1132
 2005104:	20037440 	call	2003744 <__sprint_r>
 2005108:	103ae11e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 200510c:	da011d17 	ldw	r8,1140(sp)
 2005110:	da400404 	addi	r9,sp,16
 2005114:	003d2b06 	br	20045c4 <__alt_mem_epcs_flash_controller+0xfdffb5c4>
 2005118:	4d000015 	stw	r20,0(r9)
 200511c:	4c800115 	stw	r18,4(r9)
 2005120:	4491883a 	add	r8,r8,r18
 2005124:	18c00044 	addi	r3,r3,1
 2005128:	da011d15 	stw	r8,1140(sp)
 200512c:	d8c11c15 	stw	r3,1136(sp)
 2005130:	008001c4 	movi	r2,7
 2005134:	10fcbd16 	blt	r2,r3,200442c <__alt_mem_epcs_flash_controller+0xfdffb42c>
 2005138:	4a400204 	addi	r9,r9,8
 200513c:	003cc206 	br	2004448 <__alt_mem_epcs_flash_controller+0xfdffb448>
 2005140:	da413c15 	stw	r9,1264(sp)
 2005144:	20036b80 	call	20036b8 <strlen>
 2005148:	d8812b15 	stw	r2,1196(sp)
 200514c:	d8812815 	stw	r2,1184(sp)
 2005150:	da413c17 	ldw	r9,1264(sp)
 2005154:	103fa90e 	bge	r2,zero,2004ffc <__alt_mem_epcs_flash_controller+0xfdffbffc>
 2005158:	d8012815 	stw	zero,1184(sp)
 200515c:	003fa706 	br	2004ffc <__alt_mem_epcs_flash_controller+0xfdffbffc>
 2005160:	d9412917 	ldw	r5,1188(sp)
 2005164:	8809883a 	mov	r4,r17
 2005168:	d9811b04 	addi	r6,sp,1132
 200516c:	20037440 	call	2003744 <__sprint_r>
 2005170:	103ac71e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 2005174:	da011d17 	ldw	r8,1140(sp)
 2005178:	d8c11c17 	ldw	r3,1136(sp)
 200517c:	da400404 	addi	r9,sp,16
 2005180:	d8813217 	ldw	r2,1224(sp)
 2005184:	4cc00015 	stw	r19,0(r9)
 2005188:	48800115 	stw	r2,4(r9)
 200518c:	4091883a 	add	r8,r8,r2
 2005190:	003c6206 	br	200431c <__alt_mem_epcs_flash_controller+0xfdffb31c>
 2005194:	00800b44 	movi	r2,45
 2005198:	d8812585 	stb	r2,1174(sp)
 200519c:	003b2406 	br	2003e30 <__alt_mem_epcs_flash_controller+0xfdffae30>
 20051a0:	4d000015 	stw	r20,0(r9)
 20051a4:	4c800115 	stw	r18,4(r9)
 20051a8:	4491883a 	add	r8,r8,r18
 20051ac:	18c00044 	addi	r3,r3,1
 20051b0:	da011d15 	stw	r8,1140(sp)
 20051b4:	d8c11c15 	stw	r3,1136(sp)
 20051b8:	008001c4 	movi	r2,7
 20051bc:	10ffe816 	blt	r2,r3,2005160 <__alt_mem_epcs_flash_controller+0xfdffc160>
 20051c0:	4a400204 	addi	r9,r9,8
 20051c4:	003fee06 	br	2005180 <__alt_mem_epcs_flash_controller+0xfdffc180>
 20051c8:	d8c12b15 	stw	r3,1196(sp)
 20051cc:	00800184 	movi	r2,6
 20051d0:	10c0062e 	bgeu	r2,r3,20051ec <___vfprintf_internal_r+0x1a74>
 20051d4:	d8812b15 	stw	r2,1196(sp)
 20051d8:	d8812815 	stw	r2,1184(sp)
 20051dc:	ddc12d15 	stw	r23,1204(sp)
 20051e0:	04c08234 	movhi	r19,520
 20051e4:	9cdb5f04 	addi	r19,r19,28028
 20051e8:	0039ca06 	br	2003914 <__alt_mem_epcs_flash_controller+0xfdffa914>
 20051ec:	d8812b17 	ldw	r2,1196(sp)
 20051f0:	d8812815 	stw	r2,1184(sp)
 20051f4:	103ff90e 	bge	r2,zero,20051dc <__alt_mem_epcs_flash_controller+0xfdffc1dc>
 20051f8:	d8012815 	stw	zero,1184(sp)
 20051fc:	003ff706 	br	20051dc <__alt_mem_epcs_flash_controller+0xfdffc1dc>
 2005200:	00800244 	movi	r2,9
 2005204:	15fdaa36 	bltu	r2,r23,20048b0 <__alt_mem_epcs_flash_controller+0xfdffb8b0>
 2005208:	dd010e04 	addi	r20,sp,1080
 200520c:	003dc606 	br	2004928 <__alt_mem_epcs_flash_controller+0xfdffb928>
 2005210:	d9412917 	ldw	r5,1188(sp)
 2005214:	8809883a 	mov	r4,r17
 2005218:	d9811b04 	addi	r6,sp,1132
 200521c:	20037440 	call	2003744 <__sprint_r>
 2005220:	103a9b1e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 2005224:	dc812417 	ldw	r18,1168(sp)
 2005228:	da400404 	addi	r9,sp,16
 200522c:	003ecd06 	br	2004d64 <__alt_mem_epcs_flash_controller+0xfdffbd64>
 2005230:	d9412917 	ldw	r5,1188(sp)
 2005234:	8809883a 	mov	r4,r17
 2005238:	d9811b04 	addi	r6,sp,1132
 200523c:	20037440 	call	2003744 <__sprint_r>
 2005240:	103a931e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 2005244:	dc812417 	ldw	r18,1168(sp)
 2005248:	da011d17 	ldw	r8,1140(sp)
 200524c:	d8c11c17 	ldw	r3,1136(sp)
 2005250:	da400404 	addi	r9,sp,16
 2005254:	003eb706 	br	2004d34 <__alt_mem_epcs_flash_controller+0xfdffbd34>
 2005258:	d9412917 	ldw	r5,1188(sp)
 200525c:	8809883a 	mov	r4,r17
 2005260:	d9811b04 	addi	r6,sp,1132
 2005264:	20037440 	call	2003744 <__sprint_r>
 2005268:	103a891e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 200526c:	dc812417 	ldw	r18,1168(sp)
 2005270:	da011d17 	ldw	r8,1140(sp)
 2005274:	da400404 	addi	r9,sp,16
 2005278:	003dc206 	br	2004984 <__alt_mem_epcs_flash_controller+0xfdffb984>
 200527c:	df012815 	stw	fp,1184(sp)
 2005280:	d8812583 	ldbu	r2,1174(sp)
 2005284:	df012b15 	stw	fp,1196(sp)
 2005288:	ddc12d15 	stw	r23,1204(sp)
 200528c:	d8013115 	stw	zero,1220(sp)
 2005290:	003ac606 	br	2003dac <__alt_mem_epcs_flash_controller+0xfdffadac>
 2005294:	d8812404 	addi	r2,sp,1168
 2005298:	d8800115 	stw	r2,4(sp)
 200529c:	d8812304 	addi	r2,sp,1164
 20052a0:	d8800215 	stw	r2,8(sp)
 20052a4:	d8812204 	addi	r2,sp,1160
 20052a8:	df000015 	stw	fp,0(sp)
 20052ac:	d8800315 	stw	r2,12(sp)
 20052b0:	8809883a 	mov	r4,r17
 20052b4:	b00b883a 	mov	r5,r22
 20052b8:	a00d883a 	mov	r6,r20
 20052bc:	01c000c4 	movi	r7,3
 20052c0:	da413c15 	stw	r9,1264(sp)
 20052c4:	20072200 	call	2007220 <_dtoa_r>
 20052c8:	da413c17 	ldw	r9,1264(sp)
 20052cc:	1027883a 	mov	r19,r2
 20052d0:	1707883a 	add	r3,r2,fp
 20052d4:	e02f883a 	mov	r23,fp
 20052d8:	99000007 	ldb	r4,0(r19)
 20052dc:	00800c04 	movi	r2,48
 20052e0:	20800326 	beq	r4,r2,20052f0 <___vfprintf_internal_r+0x1b78>
 20052e4:	da812417 	ldw	r10,1168(sp)
 20052e8:	1a87883a 	add	r3,r3,r10
 20052ec:	003f1406 	br	2004f40 <__alt_mem_epcs_flash_controller+0xfdffbf40>
 20052f0:	b009883a 	mov	r4,r22
 20052f4:	a00b883a 	mov	r5,r20
 20052f8:	000d883a 	mov	r6,zero
 20052fc:	000f883a 	mov	r7,zero
 2005300:	d8c13b15 	stw	r3,1260(sp)
 2005304:	da413c15 	stw	r9,1264(sp)
 2005308:	200fd040 	call	200fd04 <__nedf2>
 200530c:	d8c13b17 	ldw	r3,1260(sp)
 2005310:	da413c17 	ldw	r9,1264(sp)
 2005314:	103ff326 	beq	r2,zero,20052e4 <__alt_mem_epcs_flash_controller+0xfdffc2e4>
 2005318:	00800044 	movi	r2,1
 200531c:	15d5c83a 	sub	r10,r2,r23
 2005320:	da812415 	stw	r10,1168(sp)
 2005324:	1a87883a 	add	r3,r3,r10
 2005328:	003f0506 	br	2004f40 <__alt_mem_epcs_flash_controller+0xfdffbf40>
 200532c:	d9412917 	ldw	r5,1188(sp)
 2005330:	8809883a 	mov	r4,r17
 2005334:	d9811b04 	addi	r6,sp,1132
 2005338:	20037440 	call	2003744 <__sprint_r>
 200533c:	103a541e 	bne	r2,zero,2003c90 <__alt_mem_epcs_flash_controller+0xfdffac90>
 2005340:	dc812417 	ldw	r18,1168(sp)
 2005344:	da011d17 	ldw	r8,1140(sp)
 2005348:	d8c11c17 	ldw	r3,1136(sp)
 200534c:	da400404 	addi	r9,sp,16
 2005350:	003eb206 	br	2004e1c <__alt_mem_epcs_flash_controller+0xfdffbe1c>
 2005354:	b82b883a 	mov	r21,r23
 2005358:	0007883a 	mov	r3,zero
 200535c:	00396306 	br	20038ec <__alt_mem_epcs_flash_controller+0xfdffa8ec>
 2005360:	04c08234 	movhi	r19,520
 2005364:	9cdb5404 	addi	r19,r19,27984
 2005368:	003f4e06 	br	20050a4 <__alt_mem_epcs_flash_controller+0xfdffc0a4>
 200536c:	d8812583 	ldbu	r2,1174(sp)
 2005370:	dc012a17 	ldw	r16,1192(sp)
 2005374:	d8013115 	stw	zero,1220(sp)
 2005378:	003a8c06 	br	2003dac <__alt_mem_epcs_flash_controller+0xfdffadac>
 200537c:	d8812417 	ldw	r2,1168(sp)
 2005380:	d8812b15 	stw	r2,1196(sp)
 2005384:	1029883a 	mov	r20,r2
 2005388:	00bfff44 	movi	r2,-3
 200538c:	a0800116 	blt	r20,r2,2005394 <___vfprintf_internal_r+0x1c1c>
 2005390:	e5001d0e 	bge	fp,r20,2005408 <___vfprintf_internal_r+0x1c90>
 2005394:	94bfff84 	addi	r18,r18,-2
 2005398:	a53fffc4 	addi	r20,r20,-1
 200539c:	dd012415 	stw	r20,1168(sp)
 20053a0:	dc811fc5 	stb	r18,1151(sp)
 20053a4:	a0007216 	blt	r20,zero,2005570 <___vfprintf_internal_r+0x1df8>
 20053a8:	00800ac4 	movi	r2,43
 20053ac:	d8812005 	stb	r2,1152(sp)
 20053b0:	00800244 	movi	r2,9
 20053b4:	15003516 	blt	r2,r20,200548c <___vfprintf_internal_r+0x1d14>
 20053b8:	00800c04 	movi	r2,48
 20053bc:	a5000c04 	addi	r20,r20,48
 20053c0:	d8812045 	stb	r2,1153(sp)
 20053c4:	dd012085 	stb	r20,1154(sp)
 20053c8:	d8c120c4 	addi	r3,sp,1155
 20053cc:	d8811fc4 	addi	r2,sp,1151
 20053d0:	1885c83a 	sub	r2,r3,r2
 20053d4:	d8c13217 	ldw	r3,1224(sp)
 20053d8:	d8813515 	stw	r2,1236(sp)
 20053dc:	1885883a 	add	r2,r3,r2
 20053e0:	d8812b15 	stw	r2,1196(sp)
 20053e4:	00800044 	movi	r2,1
 20053e8:	10c0580e 	bge	r2,r3,200554c <___vfprintf_internal_r+0x1dd4>
 20053ec:	d8812b17 	ldw	r2,1196(sp)
 20053f0:	10800044 	addi	r2,r2,1
 20053f4:	d8812b15 	stw	r2,1196(sp)
 20053f8:	d8812815 	stw	r2,1184(sp)
 20053fc:	103ef50e 	bge	r2,zero,2004fd4 <__alt_mem_epcs_flash_controller+0xfdffbfd4>
 2005400:	d8012815 	stw	zero,1184(sp)
 2005404:	003ef306 	br	2004fd4 <__alt_mem_epcs_flash_controller+0xfdffbfd4>
 2005408:	d8812b17 	ldw	r2,1196(sp)
 200540c:	d8c13217 	ldw	r3,1224(sp)
 2005410:	10c01416 	blt	r2,r3,2005464 <___vfprintf_internal_r+0x1cec>
 2005414:	8400004c 	andi	r16,r16,1
 2005418:	80000326 	beq	r16,zero,2005428 <___vfprintf_internal_r+0x1cb0>
 200541c:	d8812b17 	ldw	r2,1196(sp)
 2005420:	10800044 	addi	r2,r2,1
 2005424:	d8812b15 	stw	r2,1196(sp)
 2005428:	d8812815 	stw	r2,1184(sp)
 200542c:	10001416 	blt	r2,zero,2005480 <___vfprintf_internal_r+0x1d08>
 2005430:	048019c4 	movi	r18,103
 2005434:	003ee706 	br	2004fd4 <__alt_mem_epcs_flash_controller+0xfdffbfd4>
 2005438:	d8012815 	stw	zero,1184(sp)
 200543c:	003b1a06 	br	20040a8 <__alt_mem_epcs_flash_controller+0xfdffb0a8>
 2005440:	e03e9c1e 	bne	fp,zero,2004eb4 <__alt_mem_epcs_flash_controller+0xfdffbeb4>
 2005444:	07000044 	movi	fp,1
 2005448:	003e9a06 	br	2004eb4 <__alt_mem_epcs_flash_controller+0xfdffbeb4>
 200544c:	07000184 	movi	fp,6
 2005450:	003e9806 	br	2004eb4 <__alt_mem_epcs_flash_controller+0xfdffbeb4>
 2005454:	00c00b44 	movi	r3,45
 2005458:	a520003c 	xorhi	r20,r20,32768
 200545c:	d8c12f05 	stb	r3,1212(sp)
 2005460:	003e9806 	br	2004ec4 <__alt_mem_epcs_flash_controller+0xfdffbec4>
 2005464:	05003f0e 	bge	zero,r20,2005564 <___vfprintf_internal_r+0x1dec>
 2005468:	05000044 	movi	r20,1
 200546c:	d8c13217 	ldw	r3,1224(sp)
 2005470:	a0e9883a 	add	r20,r20,r3
 2005474:	dd012b15 	stw	r20,1196(sp)
 2005478:	dd012815 	stw	r20,1184(sp)
 200547c:	a03fec0e 	bge	r20,zero,2005430 <__alt_mem_epcs_flash_controller+0xfdffc430>
 2005480:	d8012815 	stw	zero,1184(sp)
 2005484:	048019c4 	movi	r18,103
 2005488:	003ed206 	br	2004fd4 <__alt_mem_epcs_flash_controller+0xfdffbfd4>
 200548c:	d8c11f84 	addi	r3,sp,1150
 2005490:	102f883a 	mov	r23,r2
 2005494:	4839883a 	mov	fp,r9
 2005498:	a009883a 	mov	r4,r20
 200549c:	01400284 	movi	r5,10
 20054a0:	182d883a 	mov	r22,r3
 20054a4:	2001ee40 	call	2001ee4 <__modsi3>
 20054a8:	10800c04 	addi	r2,r2,48
 20054ac:	a009883a 	mov	r4,r20
 20054b0:	b0800005 	stb	r2,0(r22)
 20054b4:	01400284 	movi	r5,10
 20054b8:	2001e940 	call	2001e94 <__divsi3>
 20054bc:	1029883a 	mov	r20,r2
 20054c0:	b0ffffc4 	addi	r3,r22,-1
 20054c4:	b8bff416 	blt	r23,r2,2005498 <__alt_mem_epcs_flash_controller+0xfdffc498>
 20054c8:	11400c04 	addi	r5,r2,48
 20054cc:	b17fffc5 	stb	r5,-1(r22)
 20054d0:	d8811fc4 	addi	r2,sp,1151
 20054d4:	e013883a 	mov	r9,fp
 20054d8:	18803e2e 	bgeu	r3,r2,20055d4 <___vfprintf_internal_r+0x1e5c>
 20054dc:	b007883a 	mov	r3,r22
 20054e0:	d9012044 	addi	r4,sp,1153
 20054e4:	00000206 	br	20054f0 <___vfprintf_internal_r+0x1d78>
 20054e8:	19400003 	ldbu	r5,0(r3)
 20054ec:	18c00044 	addi	r3,r3,1
 20054f0:	21400005 	stb	r5,0(r4)
 20054f4:	21000044 	addi	r4,r4,1
 20054f8:	10fffb1e 	bne	r2,r3,20054e8 <__alt_mem_epcs_flash_controller+0xfdffc4e8>
 20054fc:	d8c12004 	addi	r3,sp,1152
 2005500:	1d87c83a 	sub	r3,r3,r22
 2005504:	d9012044 	addi	r4,sp,1153
 2005508:	20c7883a 	add	r3,r4,r3
 200550c:	003fb006 	br	20053d0 <__alt_mem_epcs_flash_controller+0xfdffc3d0>
 2005510:	e5c00044 	addi	r23,fp,1
 2005514:	003e7406 	br	2004ee8 <__alt_mem_epcs_flash_controller+0xfdffbee8>
 2005518:	d8c12217 	ldw	r3,1160(sp)
 200551c:	003e9906 	br	2004f84 <__alt_mem_epcs_flash_controller+0xfdffbf84>
 2005520:	d9012d17 	ldw	r4,1204(sp)
 2005524:	ac800043 	ldbu	r18,1(r21)
 2005528:	b82b883a 	mov	r21,r23
 200552c:	20c00017 	ldw	r3,0(r4)
 2005530:	20800104 	addi	r2,r4,4
 2005534:	d8812d15 	stw	r2,1204(sp)
 2005538:	18002116 	blt	r3,zero,20055c0 <___vfprintf_internal_r+0x1e48>
 200553c:	94803fcc 	andi	r18,r18,255
 2005540:	9480201c 	xori	r18,r18,128
 2005544:	94bfe004 	addi	r18,r18,-128
 2005548:	0038e706 	br	20038e8 <__alt_mem_epcs_flash_controller+0xfdffa8e8>
 200554c:	80a0703a 	and	r16,r16,r2
 2005550:	803fa61e 	bne	r16,zero,20053ec <__alt_mem_epcs_flash_controller+0xfdffc3ec>
 2005554:	d8812b17 	ldw	r2,1196(sp)
 2005558:	d8812815 	stw	r2,1184(sp)
 200555c:	103e9d0e 	bge	r2,zero,2004fd4 <__alt_mem_epcs_flash_controller+0xfdffbfd4>
 2005560:	003fa706 	br	2005400 <__alt_mem_epcs_flash_controller+0xfdffc400>
 2005564:	00800084 	movi	r2,2
 2005568:	1529c83a 	sub	r20,r2,r20
 200556c:	003fbf06 	br	200546c <__alt_mem_epcs_flash_controller+0xfdffc46c>
 2005570:	00800b44 	movi	r2,45
 2005574:	0529c83a 	sub	r20,zero,r20
 2005578:	d8812005 	stb	r2,1152(sp)
 200557c:	003f8c06 	br	20053b0 <__alt_mem_epcs_flash_controller+0xfdffc3b0>
 2005580:	008011c4 	movi	r2,71
 2005584:	90be6926 	beq	r18,r2,2004f2c <__alt_mem_epcs_flash_controller+0xfdffbf2c>
 2005588:	003e6a06 	br	2004f34 <__alt_mem_epcs_flash_controller+0xfdffbf34>
 200558c:	00bfffc4 	movi	r2,-1
 2005590:	d8812c15 	stw	r2,1200(sp)
 2005594:	0039ad06 	br	2003c4c <__alt_mem_epcs_flash_controller+0xfdffac4c>
 2005598:	1007883a 	mov	r3,r2
 200559c:	003e7906 	br	2004f84 <__alt_mem_epcs_flash_controller+0xfdffbf84>
 20055a0:	e000021e 	bne	fp,zero,20055ac <___vfprintf_internal_r+0x1e34>
 20055a4:	8400004c 	andi	r16,r16,1
 20055a8:	80000e26 	beq	r16,zero,20055e4 <___vfprintf_internal_r+0x1e6c>
 20055ac:	e7000084 	addi	fp,fp,2
 20055b0:	df012b15 	stw	fp,1196(sp)
 20055b4:	df012815 	stw	fp,1184(sp)
 20055b8:	e03e860e 	bge	fp,zero,2004fd4 <__alt_mem_epcs_flash_controller+0xfdffbfd4>
 20055bc:	003f9006 	br	2005400 <__alt_mem_epcs_flash_controller+0xfdffc400>
 20055c0:	94803fcc 	andi	r18,r18,255
 20055c4:	9480201c 	xori	r18,r18,128
 20055c8:	00ffffc4 	movi	r3,-1
 20055cc:	94bfe004 	addi	r18,r18,-128
 20055d0:	0038c506 	br	20038e8 <__alt_mem_epcs_flash_controller+0xfdffa8e8>
 20055d4:	d8c12044 	addi	r3,sp,1153
 20055d8:	003f7d06 	br	20053d0 <__alt_mem_epcs_flash_controller+0xfdffc3d0>
 20055dc:	dd012417 	ldw	r20,1168(sp)
 20055e0:	003f6d06 	br	2005398 <__alt_mem_epcs_flash_controller+0xfdffc398>
 20055e4:	00c00044 	movi	r3,1
 20055e8:	d8c12815 	stw	r3,1184(sp)
 20055ec:	d8c12b15 	stw	r3,1196(sp)
 20055f0:	003e7806 	br	2004fd4 <__alt_mem_epcs_flash_controller+0xfdffbfd4>

020055f4 <__vfprintf_internal>:
 20055f4:	00808274 	movhi	r2,521
 20055f8:	10a3b704 	addi	r2,r2,-28964
 20055fc:	2007883a 	mov	r3,r4
 2005600:	11000017 	ldw	r4,0(r2)
 2005604:	2805883a 	mov	r2,r5
 2005608:	300f883a 	mov	r7,r6
 200560c:	180b883a 	mov	r5,r3
 2005610:	100d883a 	mov	r6,r2
 2005614:	20037781 	jmpi	2003778 <___vfprintf_internal_r>

02005618 <__svfscanf_r>:
 2005618:	deff4c04 	addi	sp,sp,-720
 200561c:	ddc0b115 	stw	r23,708(sp)
 2005620:	dd00ae15 	stw	r20,696(sp)
 2005624:	dcc0ad15 	stw	r19,692(sp)
 2005628:	dc80ac15 	stw	r18,688(sp)
 200562c:	dc40ab15 	stw	r17,684(sp)
 2005630:	dc00aa15 	stw	r16,680(sp)
 2005634:	dfc0b315 	stw	ra,716(sp)
 2005638:	df00b215 	stw	fp,712(sp)
 200563c:	dd80b015 	stw	r22,704(sp)
 2005640:	dd40af15 	stw	r21,700(sp)
 2005644:	30800007 	ldb	r2,0(r6)
 2005648:	002f883a 	mov	r23,zero
 200564c:	d9c09c15 	stw	r7,624(sp)
 2005650:	d800a015 	stw	zero,640(sp)
 2005654:	d8009f15 	stw	zero,636(sp)
 2005658:	d8009e15 	stw	zero,632(sp)
 200565c:	d8809b15 	stw	r2,620(sp)
 2005660:	2023883a 	mov	r17,r4
 2005664:	04808274 	movhi	r18,521
 2005668:	94a3ba04 	addi	r18,r18,-28952
 200566c:	b829883a 	mov	r20,r23
 2005670:	2827883a 	mov	r19,r5
 2005674:	34000044 	addi	r16,r6,1
 2005678:	10002426 	beq	r2,zero,200570c <__svfscanf_r+0xf4>
 200567c:	95400017 	ldw	r21,0(r18)
 2005680:	a887883a 	add	r3,r21,r2
 2005684:	18c00003 	ldbu	r3,0(r3)
 2005688:	18c0020c 	andi	r3,r3,8
 200568c:	18c03fcc 	andi	r3,r3,255
 2005690:	18c0201c 	xori	r3,r3,128
 2005694:	18ffe004 	addi	r3,r3,-128
 2005698:	18002926 	beq	r3,zero,2005740 <__svfscanf_r+0x128>
 200569c:	98800117 	ldw	r2,4(r19)
 20056a0:	0080110e 	bge	zero,r2,20056e8 <__svfscanf_r+0xd0>
 20056a4:	98c00017 	ldw	r3,0(r19)
 20056a8:	91000017 	ldw	r4,0(r18)
 20056ac:	18800003 	ldbu	r2,0(r3)
 20056b0:	2085883a 	add	r2,r4,r2
 20056b4:	10800003 	ldbu	r2,0(r2)
 20056b8:	1080020c 	andi	r2,r2,8
 20056bc:	10803fcc 	andi	r2,r2,255
 20056c0:	1080201c 	xori	r2,r2,128
 20056c4:	10bfe004 	addi	r2,r2,-128
 20056c8:	10000b26 	beq	r2,zero,20056f8 <__svfscanf_r+0xe0>
 20056cc:	98800117 	ldw	r2,4(r19)
 20056d0:	18c00044 	addi	r3,r3,1
 20056d4:	98c00015 	stw	r3,0(r19)
 20056d8:	10bfffc4 	addi	r2,r2,-1
 20056dc:	98800115 	stw	r2,4(r19)
 20056e0:	a5000044 	addi	r20,r20,1
 20056e4:	00bfef16 	blt	zero,r2,20056a4 <__alt_mem_epcs_flash_controller+0xfdffc6a4>
 20056e8:	8809883a 	mov	r4,r17
 20056ec:	980b883a 	mov	r5,r19
 20056f0:	200b3a00 	call	200b3a0 <__srefill_r>
 20056f4:	103feb26 	beq	r2,zero,20056a4 <__alt_mem_epcs_flash_controller+0xfdffc6a4>
 20056f8:	800d883a 	mov	r6,r16
 20056fc:	30800007 	ldb	r2,0(r6)
 2005700:	34000044 	addi	r16,r6,1
 2005704:	d8809b15 	stw	r2,620(sp)
 2005708:	103fdc1e 	bne	r2,zero,200567c <__alt_mem_epcs_flash_controller+0xfdffc67c>
 200570c:	d8809e17 	ldw	r2,632(sp)
 2005710:	dfc0b317 	ldw	ra,716(sp)
 2005714:	df00b217 	ldw	fp,712(sp)
 2005718:	ddc0b117 	ldw	r23,708(sp)
 200571c:	dd80b017 	ldw	r22,704(sp)
 2005720:	dd40af17 	ldw	r21,700(sp)
 2005724:	dd00ae17 	ldw	r20,696(sp)
 2005728:	dcc0ad17 	ldw	r19,692(sp)
 200572c:	dc80ac17 	ldw	r18,688(sp)
 2005730:	dc40ab17 	ldw	r17,684(sp)
 2005734:	dc00aa17 	ldw	r16,680(sp)
 2005738:	dec0b404 	addi	sp,sp,720
 200573c:	f800283a 	ret
 2005740:	00c00944 	movi	r3,37
 2005744:	10c00e26 	beq	r2,r3,2005780 <__svfscanf_r+0x168>
 2005748:	98800117 	ldw	r2,4(r19)
 200574c:	0080e40e 	bge	zero,r2,2005ae0 <__svfscanf_r+0x4c8>
 2005750:	98800017 	ldw	r2,0(r19)
 2005754:	80ffffc7 	ldb	r3,-1(r16)
 2005758:	11000003 	ldbu	r4,0(r2)
 200575c:	20ffeb1e 	bne	r4,r3,200570c <__alt_mem_epcs_flash_controller+0xfdffc70c>
 2005760:	98c00117 	ldw	r3,4(r19)
 2005764:	10800044 	addi	r2,r2,1
 2005768:	98800015 	stw	r2,0(r19)
 200576c:	18bfffc4 	addi	r2,r3,-1
 2005770:	98800115 	stw	r2,4(r19)
 2005774:	a5000044 	addi	r20,r20,1
 2005778:	800d883a 	mov	r6,r16
 200577c:	003fdf06 	br	20056fc <__alt_mem_epcs_flash_controller+0xfdffc6fc>
 2005780:	0039883a 	mov	fp,zero
 2005784:	35c00043 	ldbu	r23,1(r6)
 2005788:	002d883a 	mov	r22,zero
 200578c:	00c01e04 	movi	r3,120
 2005790:	01801b04 	movi	r6,108
 2005794:	e009883a 	mov	r4,fp
 2005798:	b8803fcc 	andi	r2,r23,255
 200579c:	87000044 	addi	fp,r16,1
 20057a0:	18804f2e 	bgeu	r3,r2,20058e0 <__svfscanf_r+0x2c8>
 20057a4:	bdc03fcc 	andi	r23,r23,255
 20057a8:	bdc0201c 	xori	r23,r23,128
 20057ac:	bdffe004 	addi	r23,r23,-128
 20057b0:	adeb883a 	add	r21,r21,r23
 20057b4:	a8800003 	ldbu	r2,0(r21)
 20057b8:	df009d15 	stw	fp,628(sp)
 20057bc:	2039883a 	mov	fp,r4
 20057c0:	1080004c 	andi	r2,r2,1
 20057c4:	1002d926 	beq	r2,zero,200632c <__svfscanf_r+0xd14>
 20057c8:	b5800054 	ori	r22,r22,1
 20057cc:	00808074 	movhi	r2,513
 20057d0:	10b3aa04 	addi	r2,r2,-12632
 20057d4:	00c00284 	movi	r3,10
 20057d8:	d880a015 	stw	r2,640(sp)
 20057dc:	d8c09f15 	stw	r3,636(sp)
 20057e0:	040000c4 	movi	r16,3
 20057e4:	98800117 	ldw	r2,4(r19)
 20057e8:	0081bd0e 	bge	zero,r2,2005ee0 <__svfscanf_r+0x8c8>
 20057ec:	b080100c 	andi	r2,r22,64
 20057f0:	1000ce26 	beq	r2,zero,2005b2c <__svfscanf_r+0x514>
 20057f4:	00800084 	movi	r2,2
 20057f8:	80818426 	beq	r16,r2,2005e0c <__svfscanf_r+0x7f4>
 20057fc:	1400f716 	blt	r2,r16,2005bdc <__svfscanf_r+0x5c4>
 2005800:	00800044 	movi	r2,1
 2005804:	8080dc26 	beq	r16,r2,2005b78 <__svfscanf_r+0x560>
 2005808:	e000011e 	bne	fp,zero,2005810 <__svfscanf_r+0x1f8>
 200580c:	07000044 	movi	fp,1
 2005810:	b080004c 	andi	r2,r22,1
 2005814:	10022826 	beq	r2,zero,20060b8 <__svfscanf_r+0xaa0>
 2005818:	b5c0040c 	andi	r23,r22,16
 200581c:	b804601e 	bne	r23,zero,20069a0 <__svfscanf_r+0x1388>
 2005820:	d8c09c17 	ldw	r3,624(sp)
 2005824:	1d800017 	ldw	r22,0(r3)
 2005828:	18c00104 	addi	r3,r3,4
 200582c:	d8c09c15 	stw	r3,624(sp)
 2005830:	0021883a 	mov	r16,zero
 2005834:	dd409904 	addi	r21,sp,612
 2005838:	01008274 	movhi	r4,521
 200583c:	2123bb04 	addi	r4,r4,-28948
 2005840:	20800017 	ldw	r2,0(r4)
 2005844:	8080aa26 	beq	r16,r2,2005af0 <__svfscanf_r+0x4d8>
 2005848:	98800017 	ldw	r2,0(r19)
 200584c:	9a000117 	ldw	r8,4(r19)
 2005850:	d9400104 	addi	r5,sp,4
 2005854:	11c00003 	ldbu	r7,0(r2)
 2005858:	423fffc4 	addi	r8,r8,-1
 200585c:	10800044 	addi	r2,r2,1
 2005860:	2c07883a 	add	r3,r5,r16
 2005864:	a809883a 	mov	r4,r21
 2005868:	000b883a 	mov	r5,zero
 200586c:	01800204 	movi	r6,8
 2005870:	9a000115 	stw	r8,4(r19)
 2005874:	98800015 	stw	r2,0(r19)
 2005878:	19c00005 	stb	r7,0(r3)
 200587c:	84000044 	addi	r16,r16,1
 2005880:	20032cc0 	call	20032cc <memset>
 2005884:	8809883a 	mov	r4,r17
 2005888:	dd400015 	stw	r21,0(sp)
 200588c:	b00b883a 	mov	r5,r22
 2005890:	d9800104 	addi	r6,sp,4
 2005894:	800f883a 	mov	r7,r16
 2005898:	20098200 	call	2009820 <_mbrtowc_r>
 200589c:	00ffffc4 	movi	r3,-1
 20058a0:	10c09326 	beq	r2,r3,2005af0 <__svfscanf_r+0x4d8>
 20058a4:	1003281e 	bne	r2,zero,2006548 <__svfscanf_r+0xf30>
 20058a8:	b800011e 	bne	r23,zero,20058b0 <__svfscanf_r+0x298>
 20058ac:	b0000015 	stw	zero,0(r22)
 20058b0:	a429883a 	add	r20,r20,r16
 20058b4:	e73fffc4 	addi	fp,fp,-1
 20058b8:	b803281e 	bne	r23,zero,200655c <__svfscanf_r+0xf44>
 20058bc:	b5800104 	addi	r22,r22,4
 20058c0:	0021883a 	mov	r16,zero
 20058c4:	98800117 	ldw	r2,4(r19)
 20058c8:	00820b0e 	bge	zero,r2,20060f8 <__svfscanf_r+0xae0>
 20058cc:	e03fda1e 	bne	fp,zero,2005838 <__alt_mem_epcs_flash_controller+0xfdffc838>
 20058d0:	b8012226 	beq	r23,zero,2005d5c <__svfscanf_r+0x744>
 20058d4:	dc009d17 	ldw	r16,628(sp)
 20058d8:	800d883a 	mov	r6,r16
 20058dc:	003f8706 	br	20056fc <__alt_mem_epcs_flash_controller+0xfdffc6fc>
 20058e0:	1085883a 	add	r2,r2,r2
 20058e4:	1085883a 	add	r2,r2,r2
 20058e8:	01408034 	movhi	r5,512
 20058ec:	29563f04 	addi	r5,r5,22780
 20058f0:	1145883a 	add	r2,r2,r5
 20058f4:	10800017 	ldw	r2,0(r2)
 20058f8:	1000683a 	jmp	r2
 20058fc:	02005b10 	cmplti	r8,zero,364
 2005900:	020057a4 	muli	r8,zero,350
 2005904:	020057a4 	muli	r8,zero,350
 2005908:	020057a4 	muli	r8,zero,350
 200590c:	020057a4 	muli	r8,zero,350
 2005910:	020057a4 	muli	r8,zero,350
 2005914:	020057a4 	muli	r8,zero,350
 2005918:	020057a4 	muli	r8,zero,350
 200591c:	020057a4 	muli	r8,zero,350
 2005920:	020057a4 	muli	r8,zero,350
 2005924:	020057a4 	muli	r8,zero,350
 2005928:	020057a4 	muli	r8,zero,350
 200592c:	020057a4 	muli	r8,zero,350
 2005930:	020057a4 	muli	r8,zero,350
 2005934:	020057a4 	muli	r8,zero,350
 2005938:	020057a4 	muli	r8,zero,350
 200593c:	020057a4 	muli	r8,zero,350
 2005940:	020057a4 	muli	r8,zero,350
 2005944:	020057a4 	muli	r8,zero,350
 2005948:	020057a4 	muli	r8,zero,350
 200594c:	020057a4 	muli	r8,zero,350
 2005950:	020057a4 	muli	r8,zero,350
 2005954:	020057a4 	muli	r8,zero,350
 2005958:	020057a4 	muli	r8,zero,350
 200595c:	020057a4 	muli	r8,zero,350
 2005960:	020057a4 	muli	r8,zero,350
 2005964:	020057a4 	muli	r8,zero,350
 2005968:	020057a4 	muli	r8,zero,350
 200596c:	020057a4 	muli	r8,zero,350
 2005970:	020057a4 	muli	r8,zero,350
 2005974:	020057a4 	muli	r8,zero,350
 2005978:	020057a4 	muli	r8,zero,350
 200597c:	020057a4 	muli	r8,zero,350
 2005980:	020057a4 	muli	r8,zero,350
 2005984:	020057a4 	muli	r8,zero,350
 2005988:	020057a4 	muli	r8,zero,350
 200598c:	020057a4 	muli	r8,zero,350
 2005990:	020063e0 	cmpeqi	r8,zero,399
 2005994:	020057a4 	muli	r8,zero,350
 2005998:	020057a4 	muli	r8,zero,350
 200599c:	020057a4 	muli	r8,zero,350
 20059a0:	020057a4 	muli	r8,zero,350
 20059a4:	020063ec 	andhi	r8,zero,399
 20059a8:	020057a4 	muli	r8,zero,350
 20059ac:	020057a4 	muli	r8,zero,350
 20059b0:	020057a4 	muli	r8,zero,350
 20059b4:	020057a4 	muli	r8,zero,350
 20059b8:	020057a4 	muli	r8,zero,350
 20059bc:	0200637c 	xorhi	r8,zero,397
 20059c0:	0200637c 	xorhi	r8,zero,397
 20059c4:	0200637c 	xorhi	r8,zero,397
 20059c8:	0200637c 	xorhi	r8,zero,397
 20059cc:	0200637c 	xorhi	r8,zero,397
 20059d0:	0200637c 	xorhi	r8,zero,397
 20059d4:	0200637c 	xorhi	r8,zero,397
 20059d8:	0200637c 	xorhi	r8,zero,397
 20059dc:	0200637c 	xorhi	r8,zero,397
 20059e0:	0200637c 	xorhi	r8,zero,397
 20059e4:	020057a4 	muli	r8,zero,350
 20059e8:	020057a4 	muli	r8,zero,350
 20059ec:	020057a4 	muli	r8,zero,350
 20059f0:	020057a4 	muli	r8,zero,350
 20059f4:	020057a4 	muli	r8,zero,350
 20059f8:	020057a4 	muli	r8,zero,350
 20059fc:	020057a4 	muli	r8,zero,350
 2005a00:	020057a4 	muli	r8,zero,350
 2005a04:	020057a4 	muli	r8,zero,350
 2005a08:	020057a4 	muli	r8,zero,350
 2005a0c:	020063b4 	movhi	r8,398
 2005a10:	020063c0 	call	20063c <__alt_mem_sdram_controller-0x1dff9c4>
 2005a14:	020057a4 	muli	r8,zero,350
 2005a18:	020063c0 	call	20063c <__alt_mem_sdram_controller-0x1dff9c4>
 2005a1c:	020057a4 	muli	r8,zero,350
 2005a20:	020057a4 	muli	r8,zero,350
 2005a24:	020057a4 	muli	r8,zero,350
 2005a28:	020057a4 	muli	r8,zero,350
 2005a2c:	020063d0 	cmplti	r8,zero,399
 2005a30:	020057a4 	muli	r8,zero,350
 2005a34:	020057a4 	muli	r8,zero,350
 2005a38:	020063fc 	xorhi	r8,zero,399
 2005a3c:	020057a4 	muli	r8,zero,350
 2005a40:	020057a4 	muli	r8,zero,350
 2005a44:	020057a4 	muli	r8,zero,350
 2005a48:	020057a4 	muli	r8,zero,350
 2005a4c:	020057a4 	muli	r8,zero,350
 2005a50:	020057a4 	muli	r8,zero,350
 2005a54:	020057a4 	muli	r8,zero,350
 2005a58:	020057a4 	muli	r8,zero,350
 2005a5c:	02006424 	muli	r8,zero,400
 2005a60:	020057a4 	muli	r8,zero,350
 2005a64:	020057a4 	muli	r8,zero,350
 2005a68:	0200644c 	andi	r8,zero,401
 2005a6c:	020057a4 	muli	r8,zero,350
 2005a70:	020057a4 	muli	r8,zero,350
 2005a74:	020057a4 	muli	r8,zero,350
 2005a78:	020057a4 	muli	r8,zero,350
 2005a7c:	020057a4 	muli	r8,zero,350
 2005a80:	020057a4 	muli	r8,zero,350
 2005a84:	020057a4 	muli	r8,zero,350
 2005a88:	02006470 	cmpltui	r8,zero,401
 2005a8c:	02006484 	movi	r8,402
 2005a90:	020063c0 	call	20063c <__alt_mem_sdram_controller-0x1dff9c4>
 2005a94:	020063c0 	call	20063c <__alt_mem_sdram_controller-0x1dff9c4>
 2005a98:	020063c0 	call	20063c <__alt_mem_sdram_controller-0x1dff9c4>
 2005a9c:	02006490 	cmplti	r8,zero,402
 2005aa0:	020064a0 	cmpeqi	r8,zero,402
 2005aa4:	020057a4 	muli	r8,zero,350
 2005aa8:	020057a4 	muli	r8,zero,350
 2005aac:	020064c0 	call	20064c <__alt_mem_sdram_controller-0x1dff9b4>
 2005ab0:	020057a4 	muli	r8,zero,350
 2005ab4:	020064e0 	cmpeqi	r8,zero,403
 2005ab8:	02006514 	movui	r8,404
 2005abc:	02006520 	cmpeqi	r8,zero,404
 2005ac0:	020057a4 	muli	r8,zero,350
 2005ac4:	020057a4 	muli	r8,zero,350
 2005ac8:	02006348 	cmpgei	r8,zero,397
 2005acc:	020057a4 	muli	r8,zero,350
 2005ad0:	02006358 	cmpnei	r8,zero,397
 2005ad4:	020057a4 	muli	r8,zero,350
 2005ad8:	020057a4 	muli	r8,zero,350
 2005adc:	02006424 	muli	r8,zero,400
 2005ae0:	8809883a 	mov	r4,r17
 2005ae4:	980b883a 	mov	r5,r19
 2005ae8:	200b3a00 	call	200b3a0 <__srefill_r>
 2005aec:	103f1826 	beq	r2,zero,2005750 <__alt_mem_epcs_flash_controller+0xfdffc750>
 2005af0:	d8809e17 	ldw	r2,632(sp)
 2005af4:	10000626 	beq	r2,zero,2005b10 <__svfscanf_r+0x4f8>
 2005af8:	9880030b 	ldhu	r2,12(r19)
 2005afc:	1080100c 	andi	r2,r2,64
 2005b00:	10bfffcc 	andi	r2,r2,65535
 2005b04:	10a0001c 	xori	r2,r2,32768
 2005b08:	10a00004 	addi	r2,r2,-32768
 2005b0c:	103eff26 	beq	r2,zero,200570c <__alt_mem_epcs_flash_controller+0xfdffc70c>
 2005b10:	00bfffc4 	movi	r2,-1
 2005b14:	d8809e15 	stw	r2,632(sp)
 2005b18:	003efc06 	br	200570c <__alt_mem_epcs_flash_controller+0xfdffc70c>
 2005b1c:	8809883a 	mov	r4,r17
 2005b20:	980b883a 	mov	r5,r19
 2005b24:	200b3a00 	call	200b3a0 <__srefill_r>
 2005b28:	103ff11e 	bne	r2,zero,2005af0 <__alt_mem_epcs_flash_controller+0xfdffcaf0>
 2005b2c:	91400017 	ldw	r5,0(r18)
 2005b30:	98800017 	ldw	r2,0(r19)
 2005b34:	00000206 	br	2005b40 <__svfscanf_r+0x528>
 2005b38:	10800044 	addi	r2,r2,1
 2005b3c:	98800015 	stw	r2,0(r19)
 2005b40:	10c00003 	ldbu	r3,0(r2)
 2005b44:	28c7883a 	add	r3,r5,r3
 2005b48:	18c00003 	ldbu	r3,0(r3)
 2005b4c:	18c0020c 	andi	r3,r3,8
 2005b50:	18c03fcc 	andi	r3,r3,255
 2005b54:	18c0201c 	xori	r3,r3,128
 2005b58:	18ffe004 	addi	r3,r3,-128
 2005b5c:	183f2526 	beq	r3,zero,20057f4 <__alt_mem_epcs_flash_controller+0xfdffc7f4>
 2005b60:	98c00117 	ldw	r3,4(r19)
 2005b64:	a5000044 	addi	r20,r20,1
 2005b68:	18ffffc4 	addi	r3,r3,-1
 2005b6c:	98c00115 	stw	r3,4(r19)
 2005b70:	00fff116 	blt	zero,r3,2005b38 <__alt_mem_epcs_flash_controller+0xfdffcb38>
 2005b74:	003fe906 	br	2005b1c <__alt_mem_epcs_flash_controller+0xfdffcb1c>
 2005b78:	e000011e 	bne	fp,zero,2005b80 <__svfscanf_r+0x568>
 2005b7c:	073fffc4 	movi	fp,-1
 2005b80:	b580040c 	andi	r22,r22,16
 2005b84:	b0016826 	beq	r22,zero,2006128 <__svfscanf_r+0xb10>
 2005b88:	98800017 	ldw	r2,0(r19)
 2005b8c:	0021883a 	mov	r16,zero
 2005b90:	dd805884 	addi	r22,sp,354
 2005b94:	10c00003 	ldbu	r3,0(r2)
 2005b98:	b0c7883a 	add	r3,r22,r3
 2005b9c:	18c00007 	ldb	r3,0(r3)
 2005ba0:	18039726 	beq	r3,zero,2006a00 <__svfscanf_r+0x13e8>
 2005ba4:	98c00117 	ldw	r3,4(r19)
 2005ba8:	10800044 	addi	r2,r2,1
 2005bac:	84000044 	addi	r16,r16,1
 2005bb0:	18ffffc4 	addi	r3,r3,-1
 2005bb4:	98c00115 	stw	r3,4(r19)
 2005bb8:	98800015 	stw	r2,0(r19)
 2005bbc:	e4008f26 	beq	fp,r16,2005dfc <__svfscanf_r+0x7e4>
 2005bc0:	00fff416 	blt	zero,r3,2005b94 <__alt_mem_epcs_flash_controller+0xfdffcb94>
 2005bc4:	8809883a 	mov	r4,r17
 2005bc8:	980b883a 	mov	r5,r19
 2005bcc:	200b3a00 	call	200b3a0 <__srefill_r>
 2005bd0:	10008a1e 	bne	r2,zero,2005dfc <__svfscanf_r+0x7e4>
 2005bd4:	98800017 	ldw	r2,0(r19)
 2005bd8:	003fee06 	br	2005b94 <__alt_mem_epcs_flash_controller+0xfdffcb94>
 2005bdc:	008000c4 	movi	r2,3
 2005be0:	80806426 	beq	r16,r2,2005d74 <__svfscanf_r+0x75c>
 2005be4:	00800104 	movi	r2,4
 2005be8:	80bf071e 	bne	r16,r2,2005808 <__alt_mem_epcs_flash_controller+0xfdffc808>
 2005bec:	e0bfffc4 	addi	r2,fp,-1
 2005bf0:	01005704 	movi	r4,348
 2005bf4:	20814736 	bltu	r4,r2,2006114 <__svfscanf_r+0xafc>
 2005bf8:	0017883a 	mov	r11,zero
 2005bfc:	b581e014 	ori	r22,r22,1920
 2005c00:	0021883a 	mov	r16,zero
 2005c04:	d800a115 	stw	zero,644(sp)
 2005c08:	d800a315 	stw	zero,652(sp)
 2005c0c:	002b883a 	mov	r21,zero
 2005c10:	d800a215 	stw	zero,648(sp)
 2005c14:	ddc00104 	addi	r23,sp,4
 2005c18:	000d883a 	mov	r6,zero
 2005c1c:	00c01384 	movi	r3,78
 2005c20:	03810004 	movi	r14,1024
 2005c24:	033e1fc4 	movi	r12,-1921
 2005c28:	03ff5fc4 	movi	r15,-641
 2005c2c:	99c00017 	ldw	r7,0(r19)
 2005c30:	39400003 	ldbu	r5,0(r7)
 2005c34:	28bff544 	addi	r2,r5,-43
 2005c38:	10803fcc 	andi	r2,r2,255
 2005c3c:	1880c82e 	bgeu	r3,r2,2005f60 <__svfscanf_r+0x948>
 2005c40:	a8000226 	beq	r21,zero,2005c4c <__svfscanf_r+0x634>
 2005c44:	00bfbfc4 	movi	r2,-257
 2005c48:	b0ac703a 	and	r22,r22,r2
 2005c4c:	31bfffc4 	addi	r6,r6,-1
 2005c50:	00800044 	movi	r2,1
 2005c54:	1184092e 	bgeu	r2,r6,2006c7c <__svfscanf_r+0x1664>
 2005c58:	80803fcc 	andi	r2,r16,255
 2005c5c:	1080201c 	xori	r2,r2,128
 2005c60:	10bfe004 	addi	r2,r2,-128
 2005c64:	10ffffc4 	addi	r3,r2,-1
 2005c68:	01000184 	movi	r4,6
 2005c6c:	20c01036 	bltu	r4,r3,2005cb0 <__svfscanf_r+0x698>
 2005c70:	00c00084 	movi	r3,2
 2005c74:	1883f50e 	bge	r3,r2,2006c4c <__svfscanf_r+0x1634>
 2005c78:	00c000c4 	movi	r3,3
 2005c7c:	10c00c26 	beq	r2,r3,2005cb0 <__svfscanf_r+0x698>
 2005c80:	843fff04 	addi	r16,r16,-4
 2005c84:	84003fcc 	andi	r16,r16,255
 2005c88:	0438303a 	nor	fp,zero,r16
 2005c8c:	bf39883a 	add	fp,r23,fp
 2005c90:	bdffffc4 	addi	r23,r23,-1
 2005c94:	b9400007 	ldb	r5,0(r23)
 2005c98:	8809883a 	mov	r4,r17
 2005c9c:	980d883a 	mov	r6,r19
 2005ca0:	200dbac0 	call	200dbac <_ungetc_r>
 2005ca4:	bf3ffa1e 	bne	r23,fp,2005c90 <__alt_mem_epcs_flash_controller+0xfdffcc90>
 2005ca8:	a27fffc4 	addi	r9,r20,-1
 2005cac:	4c29c83a 	sub	r20,r9,r16
 2005cb0:	b080400c 	andi	r2,r22,256
 2005cb4:	10001326 	beq	r2,zero,2005d04 <__svfscanf_r+0x6ec>
 2005cb8:	b081000c 	andi	r2,r22,1024
 2005cbc:	1003d21e 	bne	r2,zero,2006c08 <__svfscanf_r+0x15f0>
 2005cc0:	b97fffc7 	ldb	r5,-1(r23)
 2005cc4:	00801944 	movi	r2,101
 2005cc8:	bc3fffc4 	addi	r16,r23,-1
 2005ccc:	a53fffc4 	addi	r20,r20,-1
 2005cd0:	28800826 	beq	r5,r2,2005cf4 <__svfscanf_r+0x6dc>
 2005cd4:	00801144 	movi	r2,69
 2005cd8:	28800626 	beq	r5,r2,2005cf4 <__svfscanf_r+0x6dc>
 2005cdc:	8809883a 	mov	r4,r17
 2005ce0:	980d883a 	mov	r6,r19
 2005ce4:	200dbac0 	call	200dbac <_ungetc_r>
 2005ce8:	b97fff87 	ldb	r5,-2(r23)
 2005cec:	bc3fff84 	addi	r16,r23,-2
 2005cf0:	a53fffc4 	addi	r20,r20,-1
 2005cf4:	8809883a 	mov	r4,r17
 2005cf8:	980d883a 	mov	r6,r19
 2005cfc:	200dbac0 	call	200dbac <_ungetc_r>
 2005d00:	802f883a 	mov	r23,r16
 2005d04:	b080040c 	andi	r2,r22,16
 2005d08:	103ef21e 	bne	r2,zero,20058d4 <__alt_mem_epcs_flash_controller+0xfdffc8d4>
 2005d0c:	b8000005 	stb	zero,0(r23)
 2005d10:	b0c1800c 	andi	r3,r22,1536
 2005d14:	00810004 	movi	r2,1024
 2005d18:	18837726 	beq	r3,r2,2006af8 <__svfscanf_r+0x14e0>
 2005d1c:	d8c0a317 	ldw	r3,652(sp)
 2005d20:	1803601e 	bne	r3,zero,2006aa4 <__svfscanf_r+0x148c>
 2005d24:	8809883a 	mov	r4,r17
 2005d28:	d9400104 	addi	r5,sp,4
 2005d2c:	000d883a 	mov	r6,zero
 2005d30:	200b8240 	call	200b824 <_strtod_r>
 2005d34:	102b883a 	mov	r21,r2
 2005d38:	b080004c 	andi	r2,r22,1
 2005d3c:	182f883a 	mov	r23,r3
 2005d40:	10031f26 	beq	r2,zero,20069c0 <__svfscanf_r+0x13a8>
 2005d44:	d9409c17 	ldw	r5,624(sp)
 2005d48:	28800017 	ldw	r2,0(r5)
 2005d4c:	29400104 	addi	r5,r5,4
 2005d50:	d9409c15 	stw	r5,624(sp)
 2005d54:	15400015 	stw	r21,0(r2)
 2005d58:	10c00115 	stw	r3,4(r2)
 2005d5c:	d8809e17 	ldw	r2,632(sp)
 2005d60:	dc009d17 	ldw	r16,628(sp)
 2005d64:	10800044 	addi	r2,r2,1
 2005d68:	d8809e15 	stw	r2,632(sp)
 2005d6c:	800d883a 	mov	r6,r16
 2005d70:	003e6206 	br	20056fc <__alt_mem_epcs_flash_controller+0xfdffc6fc>
 2005d74:	e0bfffc4 	addi	r2,fp,-1
 2005d78:	01005704 	movi	r4,348
 2005d7c:	2080e82e 	bgeu	r4,r2,2006120 <__svfscanf_r+0xb08>
 2005d80:	e0ffa8c4 	addi	r3,fp,-349
 2005d84:	07005744 	movi	fp,349
 2005d88:	da409f17 	ldw	r9,636(sp)
 2005d8c:	b5836014 	ori	r22,r22,3456
 2005d90:	0021883a 	mov	r16,zero
 2005d94:	dd400104 	addi	r21,sp,4
 2005d98:	05c01344 	movi	r23,77
 2005d9c:	01c08004 	movi	r7,512
 2005da0:	01bf7fc4 	movi	r6,-513
 2005da4:	9a000017 	ldw	r8,0(r19)
 2005da8:	41400003 	ldbu	r5,0(r8)
 2005dac:	28bff544 	addi	r2,r5,-43
 2005db0:	10803fcc 	andi	r2,r2,255
 2005db4:	b881eb2e 	bgeu	r23,r2,2006564 <__svfscanf_r+0xf4c>
 2005db8:	da409f15 	stw	r9,636(sp)
 2005dbc:	b080400c 	andi	r2,r22,256
 2005dc0:	10000926 	beq	r2,zero,2005de8 <__svfscanf_r+0x7d0>
 2005dc4:	d9400104 	addi	r5,sp,4
 2005dc8:	2d40052e 	bgeu	r5,r21,2005de0 <__svfscanf_r+0x7c8>
 2005dcc:	a97fffc7 	ldb	r5,-1(r21)
 2005dd0:	8809883a 	mov	r4,r17
 2005dd4:	980d883a 	mov	r6,r19
 2005dd8:	ad7fffc4 	addi	r21,r21,-1
 2005ddc:	200dbac0 	call	200dbac <_ungetc_r>
 2005de0:	d8800104 	addi	r2,sp,4
 2005de4:	157e4926 	beq	r2,r21,200570c <__alt_mem_epcs_flash_controller+0xfdffc70c>
 2005de8:	b080040c 	andi	r2,r22,16
 2005dec:	1002ac26 	beq	r2,zero,20068a0 <__svfscanf_r+0x1288>
 2005df0:	d8c00104 	addi	r3,sp,4
 2005df4:	a8ebc83a 	sub	r21,r21,r3
 2005df8:	ac21883a 	add	r16,r21,r16
 2005dfc:	a429883a 	add	r20,r20,r16
 2005e00:	dc009d17 	ldw	r16,628(sp)
 2005e04:	800d883a 	mov	r6,r16
 2005e08:	003e3c06 	br	20056fc <__alt_mem_epcs_flash_controller+0xfdffc6fc>
 2005e0c:	e000011e 	bne	fp,zero,2005e14 <__svfscanf_r+0x7fc>
 2005e10:	073fffc4 	movi	fp,-1
 2005e14:	b080004c 	andi	r2,r22,1
 2005e18:	b580040c 	andi	r22,r22,16
 2005e1c:	10003526 	beq	r2,zero,2005ef4 <__svfscanf_r+0x8dc>
 2005e20:	b002dd1e 	bne	r22,zero,2006998 <__svfscanf_r+0x1380>
 2005e24:	d8c09c17 	ldw	r3,624(sp)
 2005e28:	1d400017 	ldw	r21,0(r3)
 2005e2c:	18c00104 	addi	r3,r3,4
 2005e30:	d8c09c15 	stw	r3,624(sp)
 2005e34:	0021883a 	mov	r16,zero
 2005e38:	ddc09904 	addi	r23,sp,612
 2005e3c:	98c00017 	ldw	r3,0(r19)
 2005e40:	91400017 	ldw	r5,0(r18)
 2005e44:	18800003 	ldbu	r2,0(r3)
 2005e48:	11003fcc 	andi	r4,r2,255
 2005e4c:	2909883a 	add	r4,r5,r4
 2005e50:	21000003 	ldbu	r4,0(r4)
 2005e54:	2100020c 	andi	r4,r4,8
 2005e58:	21003fcc 	andi	r4,r4,255
 2005e5c:	2100201c 	xori	r4,r4,128
 2005e60:	213fe004 	addi	r4,r4,-128
 2005e64:	2002731e 	bne	r4,zero,2006834 <__svfscanf_r+0x121c>
 2005e68:	e0027226 	beq	fp,zero,2006834 <__svfscanf_r+0x121c>
 2005e6c:	01408274 	movhi	r5,521
 2005e70:	2963bb04 	addi	r5,r5,-28948
 2005e74:	29000017 	ldw	r4,0(r5)
 2005e78:	813f1d26 	beq	r16,r4,2005af0 <__alt_mem_epcs_flash_controller+0xfdffcaf0>
 2005e7c:	9a000117 	ldw	r8,4(r19)
 2005e80:	18c00044 	addi	r3,r3,1
 2005e84:	d9000104 	addi	r4,sp,4
 2005e88:	423fffc4 	addi	r8,r8,-1
 2005e8c:	240f883a 	add	r7,r4,r16
 2005e90:	000b883a 	mov	r5,zero
 2005e94:	b809883a 	mov	r4,r23
 2005e98:	01800204 	movi	r6,8
 2005e9c:	9a000115 	stw	r8,4(r19)
 2005ea0:	98c00015 	stw	r3,0(r19)
 2005ea4:	38800005 	stb	r2,0(r7)
 2005ea8:	84000044 	addi	r16,r16,1
 2005eac:	20032cc0 	call	20032cc <memset>
 2005eb0:	a80b883a 	mov	r5,r21
 2005eb4:	8809883a 	mov	r4,r17
 2005eb8:	ddc00015 	stw	r23,0(sp)
 2005ebc:	d9800104 	addi	r6,sp,4
 2005ec0:	800f883a 	mov	r7,r16
 2005ec4:	20098200 	call	2009820 <_mbrtowc_r>
 2005ec8:	017fffc4 	movi	r5,-1
 2005ecc:	117f0826 	beq	r2,r5,2005af0 <__alt_mem_epcs_flash_controller+0xfdffcaf0>
 2005ed0:	1002de1e 	bne	r2,zero,2006a4c <__svfscanf_r+0x1434>
 2005ed4:	a8000015 	stw	zero,0(r21)
 2005ed8:	0009883a 	mov	r4,zero
 2005edc:	0002de06 	br	2006a58 <__svfscanf_r+0x1440>
 2005ee0:	8809883a 	mov	r4,r17
 2005ee4:	980b883a 	mov	r5,r19
 2005ee8:	200b3a00 	call	200b3a0 <__srefill_r>
 2005eec:	103e3f26 	beq	r2,zero,20057ec <__alt_mem_epcs_flash_controller+0xfdffc7ec>
 2005ef0:	003eff06 	br	2005af0 <__alt_mem_epcs_flash_controller+0xfdffcaf0>
 2005ef4:	b0027e26 	beq	r22,zero,20068f0 <__svfscanf_r+0x12d8>
 2005ef8:	91400017 	ldw	r5,0(r18)
 2005efc:	98800017 	ldw	r2,0(r19)
 2005f00:	0021883a 	mov	r16,zero
 2005f04:	10c00003 	ldbu	r3,0(r2)
 2005f08:	28c7883a 	add	r3,r5,r3
 2005f0c:	18c00003 	ldbu	r3,0(r3)
 2005f10:	18c0020c 	andi	r3,r3,8
 2005f14:	18c03fcc 	andi	r3,r3,255
 2005f18:	18c0201c 	xori	r3,r3,128
 2005f1c:	18ffe004 	addi	r3,r3,-128
 2005f20:	183fb61e 	bne	r3,zero,2005dfc <__alt_mem_epcs_flash_controller+0xfdffcdfc>
 2005f24:	98c00117 	ldw	r3,4(r19)
 2005f28:	10800044 	addi	r2,r2,1
 2005f2c:	84000044 	addi	r16,r16,1
 2005f30:	18ffffc4 	addi	r3,r3,-1
 2005f34:	98c00115 	stw	r3,4(r19)
 2005f38:	98800015 	stw	r2,0(r19)
 2005f3c:	e43faf26 	beq	fp,r16,2005dfc <__alt_mem_epcs_flash_controller+0xfdffcdfc>
 2005f40:	00fff016 	blt	zero,r3,2005f04 <__alt_mem_epcs_flash_controller+0xfdffcf04>
 2005f44:	8809883a 	mov	r4,r17
 2005f48:	980b883a 	mov	r5,r19
 2005f4c:	200b3a00 	call	200b3a0 <__srefill_r>
 2005f50:	103faa1e 	bne	r2,zero,2005dfc <__alt_mem_epcs_flash_controller+0xfdffcdfc>
 2005f54:	91400017 	ldw	r5,0(r18)
 2005f58:	98800017 	ldw	r2,0(r19)
 2005f5c:	003fe906 	br	2005f04 <__alt_mem_epcs_flash_controller+0xfdffcf04>
 2005f60:	1085883a 	add	r2,r2,r2
 2005f64:	1085883a 	add	r2,r2,r2
 2005f68:	01008034 	movhi	r4,512
 2005f6c:	2117df04 	addi	r4,r4,24444
 2005f70:	1105883a 	add	r2,r2,r4
 2005f74:	10800017 	ldw	r2,0(r2)
 2005f78:	1000683a 	jmp	r2
 2005f7c:	0200621c 	xori	r8,zero,392
 2005f80:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2005f84:	0200621c 	xori	r8,zero,392
 2005f88:	02006208 	cmpgei	r8,zero,392
 2005f8c:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2005f90:	020061e4 	muli	r8,zero,391
 2005f94:	02006198 	cmpnei	r8,zero,390
 2005f98:	02006198 	cmpnei	r8,zero,390
 2005f9c:	02006198 	cmpnei	r8,zero,390
 2005fa0:	02006198 	cmpnei	r8,zero,390
 2005fa4:	02006198 	cmpnei	r8,zero,390
 2005fa8:	02006198 	cmpnei	r8,zero,390
 2005fac:	02006198 	cmpnei	r8,zero,390
 2005fb0:	02006198 	cmpnei	r8,zero,390
 2005fb4:	02006198 	cmpnei	r8,zero,390
 2005fb8:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2005fbc:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2005fc0:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2005fc4:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2005fc8:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2005fcc:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2005fd0:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2005fd4:	02006300 	call	200630 <__alt_mem_sdram_controller-0x1dff9d0>
 2005fd8:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2005fdc:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2005fe0:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2005fe4:	020062c4 	movi	r8,395
 2005fe8:	02006310 	cmplti	r8,zero,396
 2005fec:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2005ff0:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2005ff4:	0200629c 	xori	r8,zero,394
 2005ff8:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2005ffc:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006000:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006004:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006008:	02006268 	cmpgeui	r8,zero,393
 200600c:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006010:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006014:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006018:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 200601c:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006020:	0200624c 	andi	r8,zero,393
 2006024:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006028:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 200602c:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006030:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006034:	02006230 	cmpltui	r8,zero,392
 2006038:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 200603c:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006040:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006044:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006048:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 200604c:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006050:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006054:	02006300 	call	200630 <__alt_mem_sdram_controller-0x1dff9d0>
 2006058:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 200605c:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006060:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006064:	020062c4 	movi	r8,395
 2006068:	02006310 	cmplti	r8,zero,396
 200606c:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006070:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006074:	0200629c 	xori	r8,zero,394
 2006078:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 200607c:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006080:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006084:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006088:	02006268 	cmpgeui	r8,zero,393
 200608c:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006090:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006094:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 2006098:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 200609c:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 20060a0:	0200624c 	andi	r8,zero,393
 20060a4:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 20060a8:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 20060ac:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 20060b0:	02005c40 	call	2005c4 <__alt_mem_sdram_controller-0x1dffa3c>
 20060b4:	02006230 	cmpltui	r8,zero,392
 20060b8:	b580040c 	andi	r22,r22,16
 20060bc:	b0025226 	beq	r22,zero,2006a08 <__svfscanf_r+0x13f0>
 20060c0:	0021883a 	mov	r16,zero
 20060c4:	98800117 	ldw	r2,4(r19)
 20060c8:	17026f0e 	bge	r2,fp,2006a88 <__svfscanf_r+0x1470>
 20060cc:	98c00017 	ldw	r3,0(r19)
 20060d0:	8809883a 	mov	r4,r17
 20060d4:	980b883a 	mov	r5,r19
 20060d8:	1887883a 	add	r3,r3,r2
 20060dc:	98c00015 	stw	r3,0(r19)
 20060e0:	80a1883a 	add	r16,r16,r2
 20060e4:	e0b9c83a 	sub	fp,fp,r2
 20060e8:	200b3a00 	call	200b3a0 <__srefill_r>
 20060ec:	103ff526 	beq	r2,zero,20060c4 <__alt_mem_epcs_flash_controller+0xfdffd0c4>
 20060f0:	803f421e 	bne	r16,zero,2005dfc <__alt_mem_epcs_flash_controller+0xfdffcdfc>
 20060f4:	003e7e06 	br	2005af0 <__alt_mem_epcs_flash_controller+0xfdffcaf0>
 20060f8:	8809883a 	mov	r4,r17
 20060fc:	980b883a 	mov	r5,r19
 2006100:	200b3a00 	call	200b3a0 <__srefill_r>
 2006104:	103df126 	beq	r2,zero,20058cc <__alt_mem_epcs_flash_controller+0xfdffc8cc>
 2006108:	803e791e 	bne	r16,zero,2005af0 <__alt_mem_epcs_flash_controller+0xfdffcaf0>
 200610c:	b83f1326 	beq	r23,zero,2005d5c <__alt_mem_epcs_flash_controller+0xfdffcd5c>
 2006110:	003df006 	br	20058d4 <__alt_mem_epcs_flash_controller+0xfdffc8d4>
 2006114:	e2ffa8c4 	addi	r11,fp,-349
 2006118:	07005744 	movi	fp,349
 200611c:	003eb706 	br	2005bfc <__alt_mem_epcs_flash_controller+0xfdffcbfc>
 2006120:	0007883a 	mov	r3,zero
 2006124:	003f1806 	br	2005d88 <__alt_mem_epcs_flash_controller+0xfdffcd88>
 2006128:	d8c09c17 	ldw	r3,624(sp)
 200612c:	98800017 	ldw	r2,0(r19)
 2006130:	dd805884 	addi	r22,sp,354
 2006134:	1c000017 	ldw	r16,0(r3)
 2006138:	1dc00104 	addi	r23,r3,4
 200613c:	802b883a 	mov	r21,r16
 2006140:	10c00003 	ldbu	r3,0(r2)
 2006144:	b0c7883a 	add	r3,r22,r3
 2006148:	18c00007 	ldb	r3,0(r3)
 200614c:	1801c226 	beq	r3,zero,2006858 <__svfscanf_r+0x1240>
 2006150:	98c00117 	ldw	r3,4(r19)
 2006154:	10800044 	addi	r2,r2,1
 2006158:	ad400044 	addi	r21,r21,1
 200615c:	18ffffc4 	addi	r3,r3,-1
 2006160:	98c00115 	stw	r3,4(r19)
 2006164:	10ffffc3 	ldbu	r3,-1(r2)
 2006168:	e73fffc4 	addi	fp,fp,-1
 200616c:	a8ffffc5 	stb	r3,-1(r21)
 2006170:	98800015 	stw	r2,0(r19)
 2006174:	e001b826 	beq	fp,zero,2006858 <__svfscanf_r+0x1240>
 2006178:	98c00117 	ldw	r3,4(r19)
 200617c:	00fff016 	blt	zero,r3,2006140 <__alt_mem_epcs_flash_controller+0xfdffd140>
 2006180:	8809883a 	mov	r4,r17
 2006184:	980b883a 	mov	r5,r19
 2006188:	200b3a00 	call	200b3a0 <__srefill_r>
 200618c:	1001b11e 	bne	r2,zero,2006854 <__svfscanf_r+0x123c>
 2006190:	98800017 	ldw	r2,0(r19)
 2006194:	003fea06 	br	2006140 <__alt_mem_epcs_flash_controller+0xfdffd140>
 2006198:	80803fcc 	andi	r2,r16,255
 200619c:	1080201c 	xori	r2,r2,128
 20061a0:	10bfe004 	addi	r2,r2,-128
 20061a4:	3085883a 	add	r2,r6,r2
 20061a8:	103ea51e 	bne	r2,zero,2005c40 <__alt_mem_epcs_flash_controller+0xfdffcc40>
 20061ac:	00bf9fc4 	movi	r2,-385
 20061b0:	b0ac703a 	and	r22,r22,r2
 20061b4:	b9400005 	stb	r5,0(r23)
 20061b8:	bdc00044 	addi	r23,r23,1
 20061bc:	98800117 	ldw	r2,4(r19)
 20061c0:	e73fffc4 	addi	fp,fp,-1
 20061c4:	a5000044 	addi	r20,r20,1
 20061c8:	10bfffc4 	addi	r2,r2,-1
 20061cc:	98800115 	stw	r2,4(r19)
 20061d0:	00816d0e 	bge	zero,r2,2006788 <__svfscanf_r+0x1170>
 20061d4:	39c00044 	addi	r7,r7,1
 20061d8:	99c00015 	stw	r7,0(r19)
 20061dc:	e03e931e 	bne	fp,zero,2005c2c <__alt_mem_epcs_flash_controller+0xfdffcc2c>
 20061e0:	003e9706 	br	2005c40 <__alt_mem_epcs_flash_controller+0xfdffcc40>
 20061e4:	b080400c 	andi	r2,r22,256
 20061e8:	103feb26 	beq	r2,zero,2006198 <__alt_mem_epcs_flash_controller+0xfdffd198>
 20061ec:	00bfdfc4 	movi	r2,-129
 20061f0:	b0ac703a 	and	r22,r22,r2
 20061f4:	ad400044 	addi	r21,r21,1
 20061f8:	583ff026 	beq	r11,zero,20061bc <__alt_mem_epcs_flash_controller+0xfdffd1bc>
 20061fc:	5affffc4 	addi	r11,r11,-1
 2006200:	e7000044 	addi	fp,fp,1
 2006204:	003fed06 	br	20061bc <__alt_mem_epcs_flash_controller+0xfdffd1bc>
 2006208:	b080800c 	andi	r2,r22,512
 200620c:	103e8c26 	beq	r2,zero,2005c40 <__alt_mem_epcs_flash_controller+0xfdffcc40>
 2006210:	b3ec703a 	and	r22,r22,r15
 2006214:	dd40a215 	stw	r21,648(sp)
 2006218:	003fe606 	br	20061b4 <__alt_mem_epcs_flash_controller+0xfdffd1b4>
 200621c:	b080200c 	andi	r2,r22,128
 2006220:	103e8726 	beq	r2,zero,2005c40 <__alt_mem_epcs_flash_controller+0xfdffcc40>
 2006224:	00bfdfc4 	movi	r2,-129
 2006228:	b0ac703a 	and	r22,r22,r2
 200622c:	003fe106 	br	20061b4 <__alt_mem_epcs_flash_controller+0xfdffd1b4>
 2006230:	81003fcc 	andi	r4,r16,255
 2006234:	2100201c 	xori	r4,r4,128
 2006238:	213fe004 	addi	r4,r4,-128
 200623c:	008001c4 	movi	r2,7
 2006240:	20be7f1e 	bne	r4,r2,2005c40 <__alt_mem_epcs_flash_controller+0xfdffcc40>
 2006244:	04000204 	movi	r16,8
 2006248:	003fda06 	br	20061b4 <__alt_mem_epcs_flash_controller+0xfdffd1b4>
 200624c:	81003fcc 	andi	r4,r16,255
 2006250:	2100201c 	xori	r4,r4,128
 2006254:	213fe004 	addi	r4,r4,-128
 2006258:	00800184 	movi	r2,6
 200625c:	20be781e 	bne	r4,r2,2005c40 <__alt_mem_epcs_flash_controller+0xfdffcc40>
 2006260:	040001c4 	movi	r16,7
 2006264:	003fd306 	br	20061b4 <__alt_mem_epcs_flash_controller+0xfdffd1b4>
 2006268:	3001891e 	bne	r6,zero,2006890 <__svfscanf_r+0x1278>
 200626c:	b101c00c 	andi	r4,r22,1792
 2006270:	0081c004 	movi	r2,1792
 2006274:	20821d26 	beq	r4,r2,2006aec <__svfscanf_r+0x14d4>
 2006278:	80803fcc 	andi	r2,r16,255
 200627c:	1080201c 	xori	r2,r2,128
 2006280:	10bfe004 	addi	r2,r2,-128
 2006284:	01000044 	movi	r4,1
 2006288:	11000226 	beq	r2,r4,2006294 <__svfscanf_r+0xc7c>
 200628c:	01000104 	movi	r4,4
 2006290:	113e6b1e 	bne	r2,r4,2005c40 <__alt_mem_epcs_flash_controller+0xfdffcc40>
 2006294:	84000044 	addi	r16,r16,1
 2006298:	003fc606 	br	20061b4 <__alt_mem_epcs_flash_controller+0xfdffd1b4>
 200629c:	80803fcc 	andi	r2,r16,255
 20062a0:	1080201c 	xori	r2,r2,128
 20062a4:	10bfe004 	addi	r2,r2,-128
 20062a8:	1001731e 	bne	r2,zero,2006878 <__svfscanf_r+0x1260>
 20062ac:	b101c00c 	andi	r4,r22,1792
 20062b0:	0081c004 	movi	r2,1792
 20062b4:	20be621e 	bne	r4,r2,2005c40 <__alt_mem_epcs_flash_controller+0xfdffcc40>
 20062b8:	b32c703a 	and	r22,r22,r12
 20062bc:	04000044 	movi	r16,1
 20062c0:	003fbc06 	br	20061b4 <__alt_mem_epcs_flash_controller+0xfdffd1b4>
 20062c4:	b081400c 	andi	r2,r22,1280
 20062c8:	13800326 	beq	r2,r14,20062d8 <__svfscanf_r+0xcc0>
 20062cc:	b081000c 	andi	r2,r22,1024
 20062d0:	103e5b26 	beq	r2,zero,2005c40 <__alt_mem_epcs_flash_controller+0xfdffcc40>
 20062d4:	a83e5d26 	beq	r21,zero,2005c4c <__alt_mem_epcs_flash_controller+0xfdffcc4c>
 20062d8:	b080800c 	andi	r2,r22,512
 20062dc:	1000041e 	bne	r2,zero,20062f0 <__svfscanf_r+0xcd8>
 20062e0:	d880a217 	ldw	r2,648(sp)
 20062e4:	ddc0a115 	stw	r23,644(sp)
 20062e8:	a8abc83a 	sub	r21,r21,r2
 20062ec:	dd40a315 	stw	r21,652(sp)
 20062f0:	b32c703a 	and	r22,r22,r12
 20062f4:	b5806014 	ori	r22,r22,384
 20062f8:	002b883a 	mov	r21,zero
 20062fc:	003fad06 	br	20061b4 <__alt_mem_epcs_flash_controller+0xfdffd1b4>
 2006300:	00800044 	movi	r2,1
 2006304:	30be4e1e 	bne	r6,r2,2005c40 <__alt_mem_epcs_flash_controller+0xfdffcc40>
 2006308:	01800084 	movi	r6,2
 200630c:	003fa906 	br	20061b4 <__alt_mem_epcs_flash_controller+0xfdffd1b4>
 2006310:	81003fcc 	andi	r4,r16,255
 2006314:	2100201c 	xori	r4,r4,128
 2006318:	213fe004 	addi	r4,r4,-128
 200631c:	00800084 	movi	r2,2
 2006320:	20be471e 	bne	r4,r2,2005c40 <__alt_mem_epcs_flash_controller+0xfdffcc40>
 2006324:	040000c4 	movi	r16,3
 2006328:	003fa206 	br	20061b4 <__alt_mem_epcs_flash_controller+0xfdffd1b4>
 200632c:	01408074 	movhi	r5,513
 2006330:	2973aa04 	addi	r5,r5,-12632
 2006334:	00800284 	movi	r2,10
 2006338:	d940a015 	stw	r5,640(sp)
 200633c:	d8809f15 	stw	r2,636(sp)
 2006340:	040000c4 	movi	r16,3
 2006344:	003d2706 	br	20057e4 <__alt_mem_epcs_flash_controller+0xfdffc7e4>
 2006348:	df009d15 	stw	fp,628(sp)
 200634c:	04000084 	movi	r16,2
 2006350:	2039883a 	mov	fp,r4
 2006354:	003d2306 	br	20057e4 <__alt_mem_epcs_flash_controller+0xfdffc7e4>
 2006358:	00808074 	movhi	r2,513
 200635c:	10b51804 	addi	r2,r2,-11168
 2006360:	00c00284 	movi	r3,10
 2006364:	df009d15 	stw	fp,628(sp)
 2006368:	d880a015 	stw	r2,640(sp)
 200636c:	2039883a 	mov	fp,r4
 2006370:	d8c09f15 	stw	r3,636(sp)
 2006374:	040000c4 	movi	r16,3
 2006378:	003d1a06 	br	20057e4 <__alt_mem_epcs_flash_controller+0xfdffc7e4>
 200637c:	bdc03fcc 	andi	r23,r23,255
 2006380:	01400284 	movi	r5,10
 2006384:	bdc0201c 	xori	r23,r23,128
 2006388:	d8c0a815 	stw	r3,672(sp)
 200638c:	d980a915 	stw	r6,676(sp)
 2006390:	bdffe004 	addi	r23,r23,-128
 2006394:	2001f500 	call	2001f50 <__mulsi3>
 2006398:	15c5883a 	add	r2,r2,r23
 200639c:	113ff404 	addi	r4,r2,-48
 20063a0:	85c00043 	ldbu	r23,1(r16)
 20063a4:	d8c0a817 	ldw	r3,672(sp)
 20063a8:	e021883a 	mov	r16,fp
 20063ac:	d980a917 	ldw	r6,676(sp)
 20063b0:	003cf906 	br	2005798 <__alt_mem_epcs_flash_controller+0xfdffc798>
 20063b4:	df009d15 	stw	fp,628(sp)
 20063b8:	2039883a 	mov	fp,r4
 20063bc:	003d0206 	br	20057c8 <__alt_mem_epcs_flash_controller+0xfdffc7c8>
 20063c0:	df009d15 	stw	fp,628(sp)
 20063c4:	04000104 	movi	r16,4
 20063c8:	2039883a 	mov	fp,r4
 20063cc:	003d0506 	br	20057e4 <__alt_mem_epcs_flash_controller+0xfdffc7e4>
 20063d0:	85c00043 	ldbu	r23,1(r16)
 20063d4:	b5800094 	ori	r22,r22,2
 20063d8:	e021883a 	mov	r16,fp
 20063dc:	003cee06 	br	2005798 <__alt_mem_epcs_flash_controller+0xfdffc798>
 20063e0:	df009d15 	stw	fp,628(sp)
 20063e4:	e021883a 	mov	r16,fp
 20063e8:	003cd706 	br	2005748 <__alt_mem_epcs_flash_controller+0xfdffc748>
 20063ec:	85c00043 	ldbu	r23,1(r16)
 20063f0:	b5800414 	ori	r22,r22,16
 20063f4:	e021883a 	mov	r16,fp
 20063f8:	003ce706 	br	2005798 <__alt_mem_epcs_flash_controller+0xfdffc798>
 20063fc:	df009d15 	stw	fp,628(sp)
 2006400:	b5800054 	ori	r22,r22,1
 2006404:	2039883a 	mov	fp,r4
 2006408:	01008074 	movhi	r4,513
 200640c:	21351804 	addi	r4,r4,-11168
 2006410:	01400204 	movi	r5,8
 2006414:	d900a015 	stw	r4,640(sp)
 2006418:	d9409f15 	stw	r5,636(sp)
 200641c:	040000c4 	movi	r16,3
 2006420:	003cf006 	br	20057e4 <__alt_mem_epcs_flash_controller+0xfdffc7e4>
 2006424:	df009d15 	stw	fp,628(sp)
 2006428:	01400404 	movi	r5,16
 200642c:	2039883a 	mov	fp,r4
 2006430:	01008074 	movhi	r4,513
 2006434:	21351804 	addi	r4,r4,-11168
 2006438:	b5808014 	ori	r22,r22,512
 200643c:	d900a015 	stw	r4,640(sp)
 2006440:	d9409f15 	stw	r5,636(sp)
 2006444:	040000c4 	movi	r16,3
 2006448:	003ce606 	br	20057e4 <__alt_mem_epcs_flash_controller+0xfdffc7e4>
 200644c:	df009d15 	stw	fp,628(sp)
 2006450:	d9409d17 	ldw	r5,628(sp)
 2006454:	2039883a 	mov	fp,r4
 2006458:	d9005884 	addi	r4,sp,354
 200645c:	200b5f00 	call	200b5f0 <__sccl>
 2006460:	d8809d15 	stw	r2,628(sp)
 2006464:	b5801014 	ori	r22,r22,64
 2006468:	04000044 	movi	r16,1
 200646c:	003cdd06 	br	20057e4 <__alt_mem_epcs_flash_controller+0xfdffc7e4>
 2006470:	df009d15 	stw	fp,628(sp)
 2006474:	b5801014 	ori	r22,r22,64
 2006478:	2039883a 	mov	fp,r4
 200647c:	0021883a 	mov	r16,zero
 2006480:	003cd806 	br	20057e4 <__alt_mem_epcs_flash_controller+0xfdffc7e4>
 2006484:	df009d15 	stw	fp,628(sp)
 2006488:	2039883a 	mov	fp,r4
 200648c:	003ccf06 	br	20057cc <__alt_mem_epcs_flash_controller+0xfdffc7cc>
 2006490:	85c00043 	ldbu	r23,1(r16)
 2006494:	b5800114 	ori	r22,r22,4
 2006498:	e021883a 	mov	r16,fp
 200649c:	003cbe06 	br	2005798 <__alt_mem_epcs_flash_controller+0xfdffc798>
 20064a0:	df009d15 	stw	fp,628(sp)
 20064a4:	2039883a 	mov	fp,r4
 20064a8:	01008074 	movhi	r4,513
 20064ac:	2133aa04 	addi	r4,r4,-12632
 20064b0:	d900a015 	stw	r4,640(sp)
 20064b4:	d8009f15 	stw	zero,636(sp)
 20064b8:	040000c4 	movi	r16,3
 20064bc:	003cc906 	br	20057e4 <__alt_mem_epcs_flash_controller+0xfdffc7e4>
 20064c0:	85c00043 	ldbu	r23,1(r16)
 20064c4:	b8803fcc 	andi	r2,r23,255
 20064c8:	1080201c 	xori	r2,r2,128
 20064cc:	10bfe004 	addi	r2,r2,-128
 20064d0:	11818f26 	beq	r2,r6,2006b10 <__svfscanf_r+0x14f8>
 20064d4:	b5800054 	ori	r22,r22,1
 20064d8:	e021883a 	mov	r16,fp
 20064dc:	003cae06 	br	2005798 <__alt_mem_epcs_flash_controller+0xfdffc798>
 20064e0:	df009d15 	stw	fp,628(sp)
 20064e4:	b080040c 	andi	r2,r22,16
 20064e8:	103cfa1e 	bne	r2,zero,20058d4 <__alt_mem_epcs_flash_controller+0xfdffc8d4>
 20064ec:	b080010c 	andi	r2,r22,4
 20064f0:	10018b26 	beq	r2,zero,2006b20 <__svfscanf_r+0x1508>
 20064f4:	d9009c17 	ldw	r4,624(sp)
 20064f8:	e021883a 	mov	r16,fp
 20064fc:	800d883a 	mov	r6,r16
 2006500:	20800017 	ldw	r2,0(r4)
 2006504:	21000104 	addi	r4,r4,4
 2006508:	d9009c15 	stw	r4,624(sp)
 200650c:	1500000d 	sth	r20,0(r2)
 2006510:	003c7a06 	br	20056fc <__alt_mem_epcs_flash_controller+0xfdffc6fc>
 2006514:	df009d15 	stw	fp,628(sp)
 2006518:	2039883a 	mov	fp,r4
 200651c:	003fba06 	br	2006408 <__alt_mem_epcs_flash_controller+0xfdffd408>
 2006520:	00808074 	movhi	r2,513
 2006524:	10b51804 	addi	r2,r2,-11168
 2006528:	00c00404 	movi	r3,16
 200652c:	df009d15 	stw	fp,628(sp)
 2006530:	b5808814 	ori	r22,r22,544
 2006534:	2039883a 	mov	fp,r4
 2006538:	d880a015 	stw	r2,640(sp)
 200653c:	d8c09f15 	stw	r3,636(sp)
 2006540:	040000c4 	movi	r16,3
 2006544:	003ca706 	br	20057e4 <__alt_mem_epcs_flash_controller+0xfdffc7e4>
 2006548:	013fff84 	movi	r4,-2
 200654c:	113cdd26 	beq	r2,r4,20058c4 <__alt_mem_epcs_flash_controller+0xfdffc8c4>
 2006550:	a429883a 	add	r20,r20,r16
 2006554:	e73fffc4 	addi	fp,fp,-1
 2006558:	b83cd826 	beq	r23,zero,20058bc <__alt_mem_epcs_flash_controller+0xfdffc8bc>
 200655c:	0021883a 	mov	r16,zero
 2006560:	003cd806 	br	20058c4 <__alt_mem_epcs_flash_controller+0xfdffc8c4>
 2006564:	1085883a 	add	r2,r2,r2
 2006568:	1085883a 	add	r2,r2,r2
 200656c:	01008034 	movhi	r4,512
 2006570:	21196004 	addi	r4,r4,25984
 2006574:	1105883a 	add	r2,r2,r4
 2006578:	10800017 	ldw	r2,0(r2)
 200657c:	1000683a 	jmp	r2
 2006580:	02006774 	movhi	r8,413
 2006584:	02005db8 	rdprs	r8,zero,374
 2006588:	02006774 	movhi	r8,413
 200658c:	02005db8 	rdprs	r8,zero,374
 2006590:	02005db8 	rdprs	r8,zero,374
 2006594:	0200674c 	andi	r8,zero,413
 2006598:	0200672c 	andhi	r8,zero,412
 200659c:	0200672c 	andhi	r8,zero,412
 20065a0:	0200672c 	andhi	r8,zero,412
 20065a4:	0200672c 	andhi	r8,zero,412
 20065a8:	0200672c 	andhi	r8,zero,412
 20065ac:	0200672c 	andhi	r8,zero,412
 20065b0:	0200672c 	andhi	r8,zero,412
 20065b4:	0200670c 	andi	r8,zero,412
 20065b8:	0200670c 	andi	r8,zero,412
 20065bc:	02005db8 	rdprs	r8,zero,374
 20065c0:	02005db8 	rdprs	r8,zero,374
 20065c4:	02005db8 	rdprs	r8,zero,374
 20065c8:	02005db8 	rdprs	r8,zero,374
 20065cc:	02005db8 	rdprs	r8,zero,374
 20065d0:	02005db8 	rdprs	r8,zero,374
 20065d4:	02005db8 	rdprs	r8,zero,374
 20065d8:	020066f8 	rdprs	r8,zero,411
 20065dc:	020066f8 	rdprs	r8,zero,411
 20065e0:	020066f8 	rdprs	r8,zero,411
 20065e4:	020066f8 	rdprs	r8,zero,411
 20065e8:	020066f8 	rdprs	r8,zero,411
 20065ec:	020066f8 	rdprs	r8,zero,411
 20065f0:	02005db8 	rdprs	r8,zero,374
 20065f4:	02005db8 	rdprs	r8,zero,374
 20065f8:	02005db8 	rdprs	r8,zero,374
 20065fc:	02005db8 	rdprs	r8,zero,374
 2006600:	02005db8 	rdprs	r8,zero,374
 2006604:	02005db8 	rdprs	r8,zero,374
 2006608:	02005db8 	rdprs	r8,zero,374
 200660c:	02005db8 	rdprs	r8,zero,374
 2006610:	02005db8 	rdprs	r8,zero,374
 2006614:	02005db8 	rdprs	r8,zero,374
 2006618:	02005db8 	rdprs	r8,zero,374
 200661c:	02005db8 	rdprs	r8,zero,374
 2006620:	02005db8 	rdprs	r8,zero,374
 2006624:	02005db8 	rdprs	r8,zero,374
 2006628:	02005db8 	rdprs	r8,zero,374
 200662c:	02005db8 	rdprs	r8,zero,374
 2006630:	02005db8 	rdprs	r8,zero,374
 2006634:	020066b8 	rdprs	r8,zero,410
 2006638:	02005db8 	rdprs	r8,zero,374
 200663c:	02005db8 	rdprs	r8,zero,374
 2006640:	02005db8 	rdprs	r8,zero,374
 2006644:	02005db8 	rdprs	r8,zero,374
 2006648:	02005db8 	rdprs	r8,zero,374
 200664c:	02005db8 	rdprs	r8,zero,374
 2006650:	02005db8 	rdprs	r8,zero,374
 2006654:	02005db8 	rdprs	r8,zero,374
 2006658:	020066f8 	rdprs	r8,zero,411
 200665c:	020066f8 	rdprs	r8,zero,411
 2006660:	020066f8 	rdprs	r8,zero,411
 2006664:	020066f8 	rdprs	r8,zero,411
 2006668:	020066f8 	rdprs	r8,zero,411
 200666c:	020066f8 	rdprs	r8,zero,411
 2006670:	02005db8 	rdprs	r8,zero,374
 2006674:	02005db8 	rdprs	r8,zero,374
 2006678:	02005db8 	rdprs	r8,zero,374
 200667c:	02005db8 	rdprs	r8,zero,374
 2006680:	02005db8 	rdprs	r8,zero,374
 2006684:	02005db8 	rdprs	r8,zero,374
 2006688:	02005db8 	rdprs	r8,zero,374
 200668c:	02005db8 	rdprs	r8,zero,374
 2006690:	02005db8 	rdprs	r8,zero,374
 2006694:	02005db8 	rdprs	r8,zero,374
 2006698:	02005db8 	rdprs	r8,zero,374
 200669c:	02005db8 	rdprs	r8,zero,374
 20066a0:	02005db8 	rdprs	r8,zero,374
 20066a4:	02005db8 	rdprs	r8,zero,374
 20066a8:	02005db8 	rdprs	r8,zero,374
 20066ac:	02005db8 	rdprs	r8,zero,374
 20066b0:	02005db8 	rdprs	r8,zero,374
 20066b4:	020066b8 	rdprs	r8,zero,410
 20066b8:	b081800c 	andi	r2,r22,1536
 20066bc:	11fdbe1e 	bne	r2,r7,2005db8 <__alt_mem_epcs_flash_controller+0xfdffcdb8>
 20066c0:	b1ac703a 	and	r22,r22,r6
 20066c4:	b5814014 	ori	r22,r22,1280
 20066c8:	02400404 	movi	r9,16
 20066cc:	a9400005 	stb	r5,0(r21)
 20066d0:	ad400044 	addi	r21,r21,1
 20066d4:	98800117 	ldw	r2,4(r19)
 20066d8:	10bfffc4 	addi	r2,r2,-1
 20066dc:	98800115 	stw	r2,4(r19)
 20066e0:	00803b0e 	bge	zero,r2,20067d0 <__svfscanf_r+0x11b8>
 20066e4:	42000044 	addi	r8,r8,1
 20066e8:	9a000015 	stw	r8,0(r19)
 20066ec:	e73fffc4 	addi	fp,fp,-1
 20066f0:	e03dac1e 	bne	fp,zero,2005da4 <__alt_mem_epcs_flash_controller+0xfdffcda4>
 20066f4:	003db006 	br	2005db8 <__alt_mem_epcs_flash_controller+0xfdffcdb8>
 20066f8:	00800284 	movi	r2,10
 20066fc:	127dae0e 	bge	r2,r9,2005db8 <__alt_mem_epcs_flash_controller+0xfdffcdb8>
 2006700:	00bd1fc4 	movi	r2,-2945
 2006704:	b0ac703a 	and	r22,r22,r2
 2006708:	003ff006 	br	20066cc <__alt_mem_epcs_flash_controller+0xfdffd6cc>
 200670c:	4a53883a 	add	r9,r9,r9
 2006710:	01008234 	movhi	r4,520
 2006714:	211b6b84 	addi	r4,r4,28078
 2006718:	2245883a 	add	r2,r4,r9
 200671c:	1240000f 	ldh	r9,0(r2)
 2006720:	00800204 	movi	r2,8
 2006724:	127ff616 	blt	r2,r9,2006700 <__alt_mem_epcs_flash_controller+0xfdffd700>
 2006728:	003da306 	br	2005db8 <__alt_mem_epcs_flash_controller+0xfdffcdb8>
 200672c:	4a53883a 	add	r9,r9,r9
 2006730:	01008234 	movhi	r4,520
 2006734:	211b6b84 	addi	r4,r4,28078
 2006738:	2245883a 	add	r2,r4,r9
 200673c:	1240000f 	ldh	r9,0(r2)
 2006740:	00bd1fc4 	movi	r2,-2945
 2006744:	b0ac703a 	and	r22,r22,r2
 2006748:	003fe006 	br	20066cc <__alt_mem_epcs_flash_controller+0xfdffd6cc>
 200674c:	b082000c 	andi	r2,r22,2048
 2006750:	103fde26 	beq	r2,zero,20066cc <__alt_mem_epcs_flash_controller+0xfdffd6cc>
 2006754:	4800021e 	bne	r9,zero,2006760 <__svfscanf_r+0x1148>
 2006758:	b5808014 	ori	r22,r22,512
 200675c:	02400204 	movi	r9,8
 2006760:	b081000c 	andi	r2,r22,1024
 2006764:	10009f26 	beq	r2,zero,20069e4 <__svfscanf_r+0x13cc>
 2006768:	00be9fc4 	movi	r2,-1409
 200676c:	b0ac703a 	and	r22,r22,r2
 2006770:	003fd606 	br	20066cc <__alt_mem_epcs_flash_controller+0xfdffd6cc>
 2006774:	b080200c 	andi	r2,r22,128
 2006778:	103d8f26 	beq	r2,zero,2005db8 <__alt_mem_epcs_flash_controller+0xfdffcdb8>
 200677c:	00bfdfc4 	movi	r2,-129
 2006780:	b0ac703a 	and	r22,r22,r2
 2006784:	003fd106 	br	20066cc <__alt_mem_epcs_flash_controller+0xfdffd6cc>
 2006788:	8809883a 	mov	r4,r17
 200678c:	980b883a 	mov	r5,r19
 2006790:	d8c0a815 	stw	r3,672(sp)
 2006794:	d980a915 	stw	r6,676(sp)
 2006798:	dac0a715 	stw	r11,668(sp)
 200679c:	db00a515 	stw	r12,660(sp)
 20067a0:	db80a415 	stw	r14,656(sp)
 20067a4:	dbc0a615 	stw	r15,664(sp)
 20067a8:	200b3a00 	call	200b3a0 <__srefill_r>
 20067ac:	d8c0a817 	ldw	r3,672(sp)
 20067b0:	d980a917 	ldw	r6,676(sp)
 20067b4:	dac0a717 	ldw	r11,668(sp)
 20067b8:	db00a517 	ldw	r12,660(sp)
 20067bc:	db80a417 	ldw	r14,656(sp)
 20067c0:	dbc0a617 	ldw	r15,664(sp)
 20067c4:	103d1e1e 	bne	r2,zero,2005c40 <__alt_mem_epcs_flash_controller+0xfdffcc40>
 20067c8:	e03d181e 	bne	fp,zero,2005c2c <__alt_mem_epcs_flash_controller+0xfdffcc2c>
 20067cc:	003d1c06 	br	2005c40 <__alt_mem_epcs_flash_controller+0xfdffcc40>
 20067d0:	8809883a 	mov	r4,r17
 20067d4:	980b883a 	mov	r5,r19
 20067d8:	d8c0a815 	stw	r3,672(sp)
 20067dc:	d980a915 	stw	r6,676(sp)
 20067e0:	d9c0a415 	stw	r7,656(sp)
 20067e4:	da40a515 	stw	r9,660(sp)
 20067e8:	200b3a00 	call	200b3a0 <__srefill_r>
 20067ec:	d8c0a817 	ldw	r3,672(sp)
 20067f0:	d980a917 	ldw	r6,676(sp)
 20067f4:	d9c0a417 	ldw	r7,656(sp)
 20067f8:	da40a517 	ldw	r9,660(sp)
 20067fc:	103fbb26 	beq	r2,zero,20066ec <__alt_mem_epcs_flash_controller+0xfdffd6ec>
 2006800:	003d6d06 	br	2005db8 <__alt_mem_epcs_flash_controller+0xfdffcdb8>
 2006804:	a429883a 	add	r20,r20,r16
 2006808:	e73fffc4 	addi	fp,fp,-1
 200680c:	b000fc1e 	bne	r22,zero,2006c00 <__svfscanf_r+0x15e8>
 2006810:	ad400104 	addi	r21,r21,4
 2006814:	0021883a 	mov	r16,zero
 2006818:	98800117 	ldw	r2,4(r19)
 200681c:	00bd8716 	blt	zero,r2,2005e3c <__alt_mem_epcs_flash_controller+0xfdffce3c>
 2006820:	8809883a 	mov	r4,r17
 2006824:	980b883a 	mov	r5,r19
 2006828:	200b3a00 	call	200b3a0 <__srefill_r>
 200682c:	103d8326 	beq	r2,zero,2005e3c <__alt_mem_epcs_flash_controller+0xfdffce3c>
 2006830:	803caf1e 	bne	r16,zero,2005af0 <__alt_mem_epcs_flash_controller+0xfdffcaf0>
 2006834:	b03c271e 	bne	r22,zero,20058d4 <__alt_mem_epcs_flash_controller+0xfdffc8d4>
 2006838:	d8809e17 	ldw	r2,632(sp)
 200683c:	dc009d17 	ldw	r16,628(sp)
 2006840:	a8000015 	stw	zero,0(r21)
 2006844:	10800044 	addi	r2,r2,1
 2006848:	d8809e15 	stw	r2,632(sp)
 200684c:	800d883a 	mov	r6,r16
 2006850:	003baa06 	br	20056fc <__alt_mem_epcs_flash_controller+0xfdffc6fc>
 2006854:	857ca626 	beq	r16,r21,2005af0 <__alt_mem_epcs_flash_controller+0xfdffcaf0>
 2006858:	ac21c83a 	sub	r16,r21,r16
 200685c:	803bab26 	beq	r16,zero,200570c <__alt_mem_epcs_flash_controller+0xfdffc70c>
 2006860:	d8809e17 	ldw	r2,632(sp)
 2006864:	a8000005 	stb	zero,0(r21)
 2006868:	ddc09c15 	stw	r23,624(sp)
 200686c:	10800044 	addi	r2,r2,1
 2006870:	d8809e15 	stw	r2,632(sp)
 2006874:	003d6106 	br	2005dfc <__alt_mem_epcs_flash_controller+0xfdffcdfc>
 2006878:	010000c4 	movi	r4,3
 200687c:	113e8526 	beq	r2,r4,2006294 <__alt_mem_epcs_flash_controller+0xfdffd294>
 2006880:	01000144 	movi	r4,5
 2006884:	113cee1e 	bne	r2,r4,2005c40 <__alt_mem_epcs_flash_controller+0xfdffcc40>
 2006888:	84000044 	addi	r16,r16,1
 200688c:	003e4906 	br	20061b4 <__alt_mem_epcs_flash_controller+0xfdffd1b4>
 2006890:	00800084 	movi	r2,2
 2006894:	30be781e 	bne	r6,r2,2006278 <__alt_mem_epcs_flash_controller+0xfdffd278>
 2006898:	018000c4 	movi	r6,3
 200689c:	003e4506 	br	20061b4 <__alt_mem_epcs_flash_controller+0xfdffd1b4>
 20068a0:	d8c0a017 	ldw	r3,640(sp)
 20068a4:	d9c09f17 	ldw	r7,636(sp)
 20068a8:	8809883a 	mov	r4,r17
 20068ac:	d9400104 	addi	r5,sp,4
 20068b0:	000d883a 	mov	r6,zero
 20068b4:	a8000005 	stb	zero,0(r21)
 20068b8:	183ee83a 	callr	r3
 20068bc:	b0c0080c 	andi	r3,r22,32
 20068c0:	1800391e 	bne	r3,zero,20069a8 <__svfscanf_r+0x1390>
 20068c4:	b0c0010c 	andi	r3,r22,4
 20068c8:	1800ac26 	beq	r3,zero,2006b7c <__svfscanf_r+0x1564>
 20068cc:	d9409c17 	ldw	r5,624(sp)
 20068d0:	28c00017 	ldw	r3,0(r5)
 20068d4:	29400104 	addi	r5,r5,4
 20068d8:	d9409c15 	stw	r5,624(sp)
 20068dc:	1880000d 	sth	r2,0(r3)
 20068e0:	d8809e17 	ldw	r2,632(sp)
 20068e4:	10800044 	addi	r2,r2,1
 20068e8:	d8809e15 	stw	r2,632(sp)
 20068ec:	003d4006 	br	2005df0 <__alt_mem_epcs_flash_controller+0xfdffcdf0>
 20068f0:	d8c09c17 	ldw	r3,624(sp)
 20068f4:	98800017 	ldw	r2,0(r19)
 20068f8:	1d400017 	ldw	r21,0(r3)
 20068fc:	1d800104 	addi	r22,r3,4
 2006900:	a821883a 	mov	r16,r21
 2006904:	10c00003 	ldbu	r3,0(r2)
 2006908:	91400017 	ldw	r5,0(r18)
 200690c:	28c7883a 	add	r3,r5,r3
 2006910:	18c00003 	ldbu	r3,0(r3)
 2006914:	18c0020c 	andi	r3,r3,8
 2006918:	18c03fcc 	andi	r3,r3,255
 200691c:	18c0201c 	xori	r3,r3,128
 2006920:	18ffe004 	addi	r3,r3,-128
 2006924:	1800121e 	bne	r3,zero,2006970 <__svfscanf_r+0x1358>
 2006928:	98c00117 	ldw	r3,4(r19)
 200692c:	10800044 	addi	r2,r2,1
 2006930:	84000044 	addi	r16,r16,1
 2006934:	18ffffc4 	addi	r3,r3,-1
 2006938:	98c00115 	stw	r3,4(r19)
 200693c:	10ffffc3 	ldbu	r3,-1(r2)
 2006940:	e73fffc4 	addi	fp,fp,-1
 2006944:	80ffffc5 	stb	r3,-1(r16)
 2006948:	98800015 	stw	r2,0(r19)
 200694c:	e0000826 	beq	fp,zero,2006970 <__svfscanf_r+0x1358>
 2006950:	98c00117 	ldw	r3,4(r19)
 2006954:	00ffeb16 	blt	zero,r3,2006904 <__alt_mem_epcs_flash_controller+0xfdffd904>
 2006958:	8809883a 	mov	r4,r17
 200695c:	980b883a 	mov	r5,r19
 2006960:	200b3a00 	call	200b3a0 <__srefill_r>
 2006964:	1000021e 	bne	r2,zero,2006970 <__svfscanf_r+0x1358>
 2006968:	98800017 	ldw	r2,0(r19)
 200696c:	003fe506 	br	2006904 <__alt_mem_epcs_flash_controller+0xfdffd904>
 2006970:	d8809e17 	ldw	r2,632(sp)
 2006974:	856bc83a 	sub	r21,r16,r21
 2006978:	80000005 	stb	zero,0(r16)
 200697c:	dc009d17 	ldw	r16,628(sp)
 2006980:	10800044 	addi	r2,r2,1
 2006984:	a569883a 	add	r20,r20,r21
 2006988:	d8809e15 	stw	r2,632(sp)
 200698c:	dd809c15 	stw	r22,624(sp)
 2006990:	800d883a 	mov	r6,r16
 2006994:	003b5906 	br	20056fc <__alt_mem_epcs_flash_controller+0xfdffc6fc>
 2006998:	dd409b04 	addi	r21,sp,620
 200699c:	003d2506 	br	2005e34 <__alt_mem_epcs_flash_controller+0xfdffce34>
 20069a0:	002d883a 	mov	r22,zero
 20069a4:	003ba206 	br	2005830 <__alt_mem_epcs_flash_controller+0xfdffc830>
 20069a8:	d9009c17 	ldw	r4,624(sp)
 20069ac:	20c00017 	ldw	r3,0(r4)
 20069b0:	21000104 	addi	r4,r4,4
 20069b4:	d9009c15 	stw	r4,624(sp)
 20069b8:	18800015 	stw	r2,0(r3)
 20069bc:	003fc806 	br	20068e0 <__alt_mem_epcs_flash_controller+0xfdffd8e0>
 20069c0:	b280008c 	andi	r10,r22,2
 20069c4:	50008126 	beq	r10,zero,2006bcc <__svfscanf_r+0x15b4>
 20069c8:	d8c09c17 	ldw	r3,624(sp)
 20069cc:	18800017 	ldw	r2,0(r3)
 20069d0:	18c00104 	addi	r3,r3,4
 20069d4:	d8c09c15 	stw	r3,624(sp)
 20069d8:	15400015 	stw	r21,0(r2)
 20069dc:	15c00115 	stw	r23,4(r2)
 20069e0:	003cde06 	br	2005d5c <__alt_mem_epcs_flash_controller+0xfdffcd5c>
 20069e4:	00bf1fc4 	movi	r2,-897
 20069e8:	b0ac703a 	and	r22,r22,r2
 20069ec:	18000226 	beq	r3,zero,20069f8 <__svfscanf_r+0x13e0>
 20069f0:	18ffffc4 	addi	r3,r3,-1
 20069f4:	e7000044 	addi	fp,fp,1
 20069f8:	84000044 	addi	r16,r16,1
 20069fc:	003f3506 	br	20066d4 <__alt_mem_epcs_flash_controller+0xfdffd6d4>
 2006a00:	803cfe1e 	bne	r16,zero,2005dfc <__alt_mem_epcs_flash_controller+0xfdffcdfc>
 2006a04:	003b4106 	br	200570c <__alt_mem_epcs_flash_controller+0xfdffc70c>
 2006a08:	d8c09c17 	ldw	r3,624(sp)
 2006a0c:	01400044 	movi	r5,1
 2006a10:	e00d883a 	mov	r6,fp
 2006a14:	19000017 	ldw	r4,0(r3)
 2006a18:	980f883a 	mov	r7,r19
 2006a1c:	2008bc80 	call	2008bc8 <fread>
 2006a20:	d9009c17 	ldw	r4,624(sp)
 2006a24:	20c00104 	addi	r3,r4,4
 2006a28:	103c3126 	beq	r2,zero,2005af0 <__alt_mem_epcs_flash_controller+0xfdffcaf0>
 2006a2c:	1529883a 	add	r20,r2,r20
 2006a30:	d8809e17 	ldw	r2,632(sp)
 2006a34:	dc009d17 	ldw	r16,628(sp)
 2006a38:	d8c09c15 	stw	r3,624(sp)
 2006a3c:	10800044 	addi	r2,r2,1
 2006a40:	d8809e15 	stw	r2,632(sp)
 2006a44:	800d883a 	mov	r6,r16
 2006a48:	003b2c06 	br	20056fc <__alt_mem_epcs_flash_controller+0xfdffc6fc>
 2006a4c:	00ffff84 	movi	r3,-2
 2006a50:	10ff7126 	beq	r2,r3,2006818 <__alt_mem_epcs_flash_controller+0xfdffd818>
 2006a54:	a9000017 	ldw	r4,0(r21)
 2006a58:	20094f80 	call	20094f8 <iswspace>
 2006a5c:	103f6926 	beq	r2,zero,2006804 <__alt_mem_epcs_flash_controller+0xfdffd804>
 2006a60:	803f7426 	beq	r16,zero,2006834 <__alt_mem_epcs_flash_controller+0xfdffd834>
 2006a64:	843fffc4 	addi	r16,r16,-1
 2006a68:	d9000104 	addi	r4,sp,4
 2006a6c:	2405883a 	add	r2,r4,r16
 2006a70:	11400003 	ldbu	r5,0(r2)
 2006a74:	8809883a 	mov	r4,r17
 2006a78:	980d883a 	mov	r6,r19
 2006a7c:	200dbac0 	call	200dbac <_ungetc_r>
 2006a80:	803ff81e 	bne	r16,zero,2006a64 <__alt_mem_epcs_flash_controller+0xfdffda64>
 2006a84:	003f6b06 	br	2006834 <__alt_mem_epcs_flash_controller+0xfdffd834>
 2006a88:	99000017 	ldw	r4,0(r19)
 2006a8c:	1705c83a 	sub	r2,r2,fp
 2006a90:	8721883a 	add	r16,r16,fp
 2006a94:	2707883a 	add	r3,r4,fp
 2006a98:	98800115 	stw	r2,4(r19)
 2006a9c:	98c00015 	stw	r3,0(r19)
 2006aa0:	003cd606 	br	2005dfc <__alt_mem_epcs_flash_controller+0xfdffcdfc>
 2006aa4:	d880a117 	ldw	r2,644(sp)
 2006aa8:	000d883a 	mov	r6,zero
 2006aac:	8809883a 	mov	r4,r17
 2006ab0:	11400044 	addi	r5,r2,1
 2006ab4:	01c00284 	movi	r7,10
 2006ab8:	200cea80 	call	200cea8 <_strtol_r>
 2006abc:	d8c0a317 	ldw	r3,652(sp)
 2006ac0:	10cdc83a 	sub	r6,r2,r3
 2006ac4:	d900a117 	ldw	r4,644(sp)
 2006ac8:	d88055c4 	addi	r2,sp,343
 2006acc:	20800236 	bltu	r4,r2,2006ad8 <__svfscanf_r+0x14c0>
 2006ad0:	d9005584 	addi	r4,sp,342
 2006ad4:	d900a115 	stw	r4,644(sp)
 2006ad8:	d900a117 	ldw	r4,644(sp)
 2006adc:	01408234 	movhi	r5,520
 2006ae0:	295b6a04 	addi	r5,r5,28072
 2006ae4:	200b7140 	call	200b714 <sprintf>
 2006ae8:	003c8e06 	br	2005d24 <__alt_mem_epcs_flash_controller+0xfdffcd24>
 2006aec:	b32c703a 	and	r22,r22,r12
 2006af0:	01800044 	movi	r6,1
 2006af4:	003daf06 	br	20061b4 <__alt_mem_epcs_flash_controller+0xfdffd1b4>
 2006af8:	d8c0a217 	ldw	r3,648(sp)
 2006afc:	a8ebc83a 	sub	r21,r21,r3
 2006b00:	054dc83a 	sub	r6,zero,r21
 2006b04:	a83c8726 	beq	r21,zero,2005d24 <__alt_mem_epcs_flash_controller+0xfdffcd24>
 2006b08:	ddc0a115 	stw	r23,644(sp)
 2006b0c:	003fed06 	br	2006ac4 <__alt_mem_epcs_flash_controller+0xfdffdac4>
 2006b10:	85c00083 	ldbu	r23,2(r16)
 2006b14:	b5800094 	ori	r22,r22,2
 2006b18:	84000084 	addi	r16,r16,2
 2006b1c:	003b1e06 	br	2005798 <__alt_mem_epcs_flash_controller+0xfdffc798>
 2006b20:	b080004c 	andi	r2,r22,1
 2006b24:	10000d1e 	bne	r2,zero,2006b5c <__svfscanf_r+0x1544>
 2006b28:	b580008c 	andi	r22,r22,2
 2006b2c:	b0000b26 	beq	r22,zero,2006b5c <__svfscanf_r+0x1544>
 2006b30:	d8c09c17 	ldw	r3,624(sp)
 2006b34:	d9009c17 	ldw	r4,624(sp)
 2006b38:	dc009d17 	ldw	r16,628(sp)
 2006b3c:	18800017 	ldw	r2,0(r3)
 2006b40:	a007d7fa 	srai	r3,r20,31
 2006b44:	21000104 	addi	r4,r4,4
 2006b48:	15000015 	stw	r20,0(r2)
 2006b4c:	10c00115 	stw	r3,4(r2)
 2006b50:	d9009c15 	stw	r4,624(sp)
 2006b54:	800d883a 	mov	r6,r16
 2006b58:	003ae806 	br	20056fc <__alt_mem_epcs_flash_controller+0xfdffc6fc>
 2006b5c:	d9409c17 	ldw	r5,624(sp)
 2006b60:	dc009d17 	ldw	r16,628(sp)
 2006b64:	28800017 	ldw	r2,0(r5)
 2006b68:	29400104 	addi	r5,r5,4
 2006b6c:	d9409c15 	stw	r5,624(sp)
 2006b70:	15000015 	stw	r20,0(r2)
 2006b74:	800d883a 	mov	r6,r16
 2006b78:	003ae006 	br	20056fc <__alt_mem_epcs_flash_controller+0xfdffc6fc>
 2006b7c:	b0c0004c 	andi	r3,r22,1
 2006b80:	183f891e 	bne	r3,zero,20069a8 <__alt_mem_epcs_flash_controller+0xfdffd9a8>
 2006b84:	b580008c 	andi	r22,r22,2
 2006b88:	b03f8726 	beq	r22,zero,20069a8 <__alt_mem_epcs_flash_controller+0xfdffd9a8>
 2006b8c:	d940a017 	ldw	r5,640(sp)
 2006b90:	00808074 	movhi	r2,513
 2006b94:	10b51804 	addi	r2,r2,-11168
 2006b98:	8809883a 	mov	r4,r17
 2006b9c:	28802626 	beq	r5,r2,2006c38 <__svfscanf_r+0x1620>
 2006ba0:	d9c09f17 	ldw	r7,636(sp)
 2006ba4:	d9400104 	addi	r5,sp,4
 2006ba8:	000d883a 	mov	r6,zero
 2006bac:	200d1300 	call	200d130 <_strtoll_r>
 2006bb0:	d9409c17 	ldw	r5,624(sp)
 2006bb4:	29000017 	ldw	r4,0(r5)
 2006bb8:	29400104 	addi	r5,r5,4
 2006bbc:	d9409c15 	stw	r5,624(sp)
 2006bc0:	20800015 	stw	r2,0(r4)
 2006bc4:	20c00115 	stw	r3,4(r4)
 2006bc8:	003f4506 	br	20068e0 <__alt_mem_epcs_flash_controller+0xfdffd8e0>
 2006bcc:	d8809c17 	ldw	r2,624(sp)
 2006bd0:	a809883a 	mov	r4,r21
 2006bd4:	180b883a 	mov	r5,r3
 2006bd8:	14000104 	addi	r16,r2,4
 2006bdc:	15800017 	ldw	r22,0(r2)
 2006be0:	200b5c40 	call	200b5c4 <__isnand>
 2006be4:	1000311e 	bne	r2,zero,2006cac <__svfscanf_r+0x1694>
 2006be8:	a809883a 	mov	r4,r21
 2006bec:	b80b883a 	mov	r5,r23
 2006bf0:	200fee00 	call	200fee0 <__truncdfsf2>
 2006bf4:	b0800015 	stw	r2,0(r22)
 2006bf8:	dc009c15 	stw	r16,624(sp)
 2006bfc:	003c5706 	br	2005d5c <__alt_mem_epcs_flash_controller+0xfdffcd5c>
 2006c00:	0021883a 	mov	r16,zero
 2006c04:	003f0406 	br	2006818 <__alt_mem_epcs_flash_controller+0xfdffd818>
 2006c08:	d9400104 	addi	r5,sp,4
 2006c0c:	9821883a 	mov	r16,r19
 2006c10:	2dfabe2e 	bgeu	r5,r23,200570c <__alt_mem_epcs_flash_controller+0xfdffc70c>
 2006c14:	bcbfffc4 	addi	r18,r23,-1
 2006c18:	dcc000c4 	addi	r19,sp,3
 2006c1c:	91400007 	ldb	r5,0(r18)
 2006c20:	8809883a 	mov	r4,r17
 2006c24:	94bfffc4 	addi	r18,r18,-1
 2006c28:	800d883a 	mov	r6,r16
 2006c2c:	200dbac0 	call	200dbac <_ungetc_r>
 2006c30:	94fffa1e 	bne	r18,r19,2006c1c <__alt_mem_epcs_flash_controller+0xfdffdc1c>
 2006c34:	003ab506 	br	200570c <__alt_mem_epcs_flash_controller+0xfdffc70c>
 2006c38:	d9c09f17 	ldw	r7,636(sp)
 2006c3c:	d9400104 	addi	r5,sp,4
 2006c40:	000d883a 	mov	r6,zero
 2006c44:	200d7280 	call	200d728 <_strtoull_r>
 2006c48:	003fd906 	br	2006bb0 <__alt_mem_epcs_flash_controller+0xfdffdbb0>
 2006c4c:	d9000104 	addi	r4,sp,4
 2006c50:	9821883a 	mov	r16,r19
 2006c54:	25faad2e 	bgeu	r4,r23,200570c <__alt_mem_epcs_flash_controller+0xfdffc70c>
 2006c58:	bcbfffc4 	addi	r18,r23,-1
 2006c5c:	dcc000c4 	addi	r19,sp,3
 2006c60:	91400007 	ldb	r5,0(r18)
 2006c64:	8809883a 	mov	r4,r17
 2006c68:	94bfffc4 	addi	r18,r18,-1
 2006c6c:	800d883a 	mov	r6,r16
 2006c70:	200dbac0 	call	200dbac <_ungetc_r>
 2006c74:	94fffa1e 	bne	r18,r19,2006c60 <__alt_mem_epcs_flash_controller+0xfdffdc60>
 2006c78:	003aa406 	br	200570c <__alt_mem_epcs_flash_controller+0xfdffc70c>
 2006c7c:	d8c00104 	addi	r3,sp,4
 2006c80:	9821883a 	mov	r16,r19
 2006c84:	1dfaa12e 	bgeu	r3,r23,200570c <__alt_mem_epcs_flash_controller+0xfdffc70c>
 2006c88:	bcbfffc4 	addi	r18,r23,-1
 2006c8c:	dcc000c4 	addi	r19,sp,3
 2006c90:	91400007 	ldb	r5,0(r18)
 2006c94:	8809883a 	mov	r4,r17
 2006c98:	94bfffc4 	addi	r18,r18,-1
 2006c9c:	800d883a 	mov	r6,r16
 2006ca0:	200dbac0 	call	200dbac <_ungetc_r>
 2006ca4:	94fffa1e 	bne	r18,r19,2006c90 <__alt_mem_epcs_flash_controller+0xfdffdc90>
 2006ca8:	003a9806 	br	200570c <__alt_mem_epcs_flash_controller+0xfdffc70c>
 2006cac:	0009883a 	mov	r4,zero
 2006cb0:	200b6b40 	call	200b6b4 <nanf>
 2006cb4:	b0800015 	stw	r2,0(r22)
 2006cb8:	dc009c15 	stw	r16,624(sp)
 2006cbc:	003c2706 	br	2005d5c <__alt_mem_epcs_flash_controller+0xfdffcd5c>

02006cc0 <_vfscanf_r>:
 2006cc0:	defffb04 	addi	sp,sp,-20
 2006cc4:	dc000315 	stw	r16,12(sp)
 2006cc8:	dfc00415 	stw	ra,16(sp)
 2006ccc:	2021883a 	mov	r16,r4
 2006cd0:	20000926 	beq	r4,zero,2006cf8 <_vfscanf_r+0x38>
 2006cd4:	20800e17 	ldw	r2,56(r4)
 2006cd8:	1000071e 	bne	r2,zero,2006cf8 <_vfscanf_r+0x38>
 2006cdc:	d9400015 	stw	r5,0(sp)
 2006ce0:	d9800115 	stw	r6,4(sp)
 2006ce4:	d9c00215 	stw	r7,8(sp)
 2006ce8:	20027a00 	call	20027a0 <__sinit>
 2006cec:	d9c00217 	ldw	r7,8(sp)
 2006cf0:	d9800117 	ldw	r6,4(sp)
 2006cf4:	d9400017 	ldw	r5,0(sp)
 2006cf8:	8009883a 	mov	r4,r16
 2006cfc:	dfc00417 	ldw	ra,16(sp)
 2006d00:	dc000317 	ldw	r16,12(sp)
 2006d04:	dec00504 	addi	sp,sp,20
 2006d08:	20056181 	jmpi	2005618 <__svfscanf_r>

02006d0c <__svfscanf>:
 2006d0c:	00808274 	movhi	r2,521
 2006d10:	10a3b704 	addi	r2,r2,-28964
 2006d14:	2007883a 	mov	r3,r4
 2006d18:	11000017 	ldw	r4,0(r2)
 2006d1c:	2805883a 	mov	r2,r5
 2006d20:	300f883a 	mov	r7,r6
 2006d24:	180b883a 	mov	r5,r3
 2006d28:	100d883a 	mov	r6,r2
 2006d2c:	20056181 	jmpi	2005618 <__svfscanf_r>

02006d30 <vfscanf>:
 2006d30:	defffb04 	addi	sp,sp,-20
 2006d34:	dc000115 	stw	r16,4(sp)
 2006d38:	04008274 	movhi	r16,521
 2006d3c:	8423b704 	addi	r16,r16,-28964
 2006d40:	80800017 	ldw	r2,0(r16)
 2006d44:	dc800315 	stw	r18,12(sp)
 2006d48:	dc400215 	stw	r17,8(sp)
 2006d4c:	dfc00415 	stw	ra,16(sp)
 2006d50:	2025883a 	mov	r18,r4
 2006d54:	2823883a 	mov	r17,r5
 2006d58:	300f883a 	mov	r7,r6
 2006d5c:	10000726 	beq	r2,zero,2006d7c <vfscanf+0x4c>
 2006d60:	10c00e17 	ldw	r3,56(r2)
 2006d64:	1800051e 	bne	r3,zero,2006d7c <vfscanf+0x4c>
 2006d68:	1009883a 	mov	r4,r2
 2006d6c:	d9800015 	stw	r6,0(sp)
 2006d70:	20027a00 	call	20027a0 <__sinit>
 2006d74:	80800017 	ldw	r2,0(r16)
 2006d78:	d9c00017 	ldw	r7,0(sp)
 2006d7c:	1009883a 	mov	r4,r2
 2006d80:	900b883a 	mov	r5,r18
 2006d84:	880d883a 	mov	r6,r17
 2006d88:	dfc00417 	ldw	ra,16(sp)
 2006d8c:	dc800317 	ldw	r18,12(sp)
 2006d90:	dc400217 	ldw	r17,8(sp)
 2006d94:	dc000117 	ldw	r16,4(sp)
 2006d98:	dec00504 	addi	sp,sp,20
 2006d9c:	20056181 	jmpi	2005618 <__svfscanf_r>

02006da0 <_write_r>:
 2006da0:	defffd04 	addi	sp,sp,-12
 2006da4:	dc400115 	stw	r17,4(sp)
 2006da8:	dc000015 	stw	r16,0(sp)
 2006dac:	2023883a 	mov	r17,r4
 2006db0:	04008274 	movhi	r16,521
 2006db4:	842afb04 	addi	r16,r16,-21524
 2006db8:	2809883a 	mov	r4,r5
 2006dbc:	300b883a 	mov	r5,r6
 2006dc0:	380d883a 	mov	r6,r7
 2006dc4:	dfc00215 	stw	ra,8(sp)
 2006dc8:	80000015 	stw	zero,0(r16)
 2006dcc:	2010fac0 	call	2010fac <write>
 2006dd0:	00ffffc4 	movi	r3,-1
 2006dd4:	10c00526 	beq	r2,r3,2006dec <_write_r+0x4c>
 2006dd8:	dfc00217 	ldw	ra,8(sp)
 2006ddc:	dc400117 	ldw	r17,4(sp)
 2006de0:	dc000017 	ldw	r16,0(sp)
 2006de4:	dec00304 	addi	sp,sp,12
 2006de8:	f800283a 	ret
 2006dec:	80c00017 	ldw	r3,0(r16)
 2006df0:	183ff926 	beq	r3,zero,2006dd8 <__alt_mem_epcs_flash_controller+0xfdffddd8>
 2006df4:	88c00015 	stw	r3,0(r17)
 2006df8:	dfc00217 	ldw	ra,8(sp)
 2006dfc:	dc400117 	ldw	r17,4(sp)
 2006e00:	dc000017 	ldw	r16,0(sp)
 2006e04:	dec00304 	addi	sp,sp,12
 2006e08:	f800283a 	ret

02006e0c <__swsetup_r>:
 2006e0c:	00808274 	movhi	r2,521
 2006e10:	10a3b704 	addi	r2,r2,-28964
 2006e14:	10800017 	ldw	r2,0(r2)
 2006e18:	defffd04 	addi	sp,sp,-12
 2006e1c:	dc400115 	stw	r17,4(sp)
 2006e20:	dc000015 	stw	r16,0(sp)
 2006e24:	dfc00215 	stw	ra,8(sp)
 2006e28:	2023883a 	mov	r17,r4
 2006e2c:	2821883a 	mov	r16,r5
 2006e30:	10000226 	beq	r2,zero,2006e3c <__swsetup_r+0x30>
 2006e34:	10c00e17 	ldw	r3,56(r2)
 2006e38:	18003d26 	beq	r3,zero,2006f30 <__swsetup_r+0x124>
 2006e3c:	8080030b 	ldhu	r2,12(r16)
 2006e40:	10c0020c 	andi	r3,r2,8
 2006e44:	18ffffcc 	andi	r3,r3,65535
 2006e48:	18e0001c 	xori	r3,r3,32768
 2006e4c:	18e00004 	addi	r3,r3,-32768
 2006e50:	18001226 	beq	r3,zero,2006e9c <__swsetup_r+0x90>
 2006e54:	80c00417 	ldw	r3,16(r16)
 2006e58:	18001f26 	beq	r3,zero,2006ed8 <__swsetup_r+0xcc>
 2006e5c:	1100004c 	andi	r4,r2,1
 2006e60:	2000261e 	bne	r4,zero,2006efc <__swsetup_r+0xf0>
 2006e64:	1080008c 	andi	r2,r2,2
 2006e68:	10bfffcc 	andi	r2,r2,65535
 2006e6c:	10a0001c 	xori	r2,r2,32768
 2006e70:	10a00004 	addi	r2,r2,-32768
 2006e74:	1000311e 	bne	r2,zero,2006f3c <__swsetup_r+0x130>
 2006e78:	80800517 	ldw	r2,20(r16)
 2006e7c:	80800215 	stw	r2,8(r16)
 2006e80:	18002326 	beq	r3,zero,2006f10 <__swsetup_r+0x104>
 2006e84:	0005883a 	mov	r2,zero
 2006e88:	dfc00217 	ldw	ra,8(sp)
 2006e8c:	dc400117 	ldw	r17,4(sp)
 2006e90:	dc000017 	ldw	r16,0(sp)
 2006e94:	dec00304 	addi	sp,sp,12
 2006e98:	f800283a 	ret
 2006e9c:	10c0040c 	andi	r3,r2,16
 2006ea0:	18ffffcc 	andi	r3,r3,65535
 2006ea4:	18e0001c 	xori	r3,r3,32768
 2006ea8:	18e00004 	addi	r3,r3,-32768
 2006eac:	18001e26 	beq	r3,zero,2006f28 <__swsetup_r+0x11c>
 2006eb0:	10c0010c 	andi	r3,r2,4
 2006eb4:	18ffffcc 	andi	r3,r3,65535
 2006eb8:	18e0001c 	xori	r3,r3,32768
 2006ebc:	18e00004 	addi	r3,r3,-32768
 2006ec0:	1800211e 	bne	r3,zero,2006f48 <__swsetup_r+0x13c>
 2006ec4:	80c00417 	ldw	r3,16(r16)
 2006ec8:	11400214 	ori	r5,r2,8
 2006ecc:	8140030d 	sth	r5,12(r16)
 2006ed0:	2805883a 	mov	r2,r5
 2006ed4:	183fe11e 	bne	r3,zero,2006e5c <__alt_mem_epcs_flash_controller+0xfdffde5c>
 2006ed8:	1140a00c 	andi	r5,r2,640
 2006edc:	01008004 	movi	r4,512
 2006ee0:	293fde26 	beq	r5,r4,2006e5c <__alt_mem_epcs_flash_controller+0xfdffde5c>
 2006ee4:	8809883a 	mov	r4,r17
 2006ee8:	800b883a 	mov	r5,r16
 2006eec:	20096780 	call	2009678 <__smakebuf_r>
 2006ef0:	8080030b 	ldhu	r2,12(r16)
 2006ef4:	80c00417 	ldw	r3,16(r16)
 2006ef8:	003fd806 	br	2006e5c <__alt_mem_epcs_flash_controller+0xfdffde5c>
 2006efc:	80800517 	ldw	r2,20(r16)
 2006f00:	80000215 	stw	zero,8(r16)
 2006f04:	0085c83a 	sub	r2,zero,r2
 2006f08:	80800615 	stw	r2,24(r16)
 2006f0c:	183fdd1e 	bne	r3,zero,2006e84 <__alt_mem_epcs_flash_controller+0xfdffde84>
 2006f10:	8080030b 	ldhu	r2,12(r16)
 2006f14:	1080200c 	andi	r2,r2,128
 2006f18:	10bfffcc 	andi	r2,r2,65535
 2006f1c:	10a0001c 	xori	r2,r2,32768
 2006f20:	10a00004 	addi	r2,r2,-32768
 2006f24:	103fd826 	beq	r2,zero,2006e88 <__alt_mem_epcs_flash_controller+0xfdffde88>
 2006f28:	00bfffc4 	movi	r2,-1
 2006f2c:	003fd606 	br	2006e88 <__alt_mem_epcs_flash_controller+0xfdffde88>
 2006f30:	1009883a 	mov	r4,r2
 2006f34:	20027a00 	call	20027a0 <__sinit>
 2006f38:	003fc006 	br	2006e3c <__alt_mem_epcs_flash_controller+0xfdffde3c>
 2006f3c:	0005883a 	mov	r2,zero
 2006f40:	80800215 	stw	r2,8(r16)
 2006f44:	003fce06 	br	2006e80 <__alt_mem_epcs_flash_controller+0xfdffde80>
 2006f48:	81400c17 	ldw	r5,48(r16)
 2006f4c:	28000626 	beq	r5,zero,2006f68 <__swsetup_r+0x15c>
 2006f50:	80c01004 	addi	r3,r16,64
 2006f54:	28c00326 	beq	r5,r3,2006f64 <__swsetup_r+0x158>
 2006f58:	8809883a 	mov	r4,r17
 2006f5c:	2008d440 	call	2008d44 <_free_r>
 2006f60:	8080030b 	ldhu	r2,12(r16)
 2006f64:	80000c15 	stw	zero,48(r16)
 2006f68:	80c00417 	ldw	r3,16(r16)
 2006f6c:	013ff6c4 	movi	r4,-37
 2006f70:	2084703a 	and	r2,r4,r2
 2006f74:	80000115 	stw	zero,4(r16)
 2006f78:	80c00015 	stw	r3,0(r16)
 2006f7c:	003fd206 	br	2006ec8 <__alt_mem_epcs_flash_controller+0xfdffdec8>

02006f80 <_close_r>:
 2006f80:	defffd04 	addi	sp,sp,-12
 2006f84:	dc400115 	stw	r17,4(sp)
 2006f88:	dc000015 	stw	r16,0(sp)
 2006f8c:	2023883a 	mov	r17,r4
 2006f90:	04008274 	movhi	r16,521
 2006f94:	842afb04 	addi	r16,r16,-21524
 2006f98:	2809883a 	mov	r4,r5
 2006f9c:	dfc00215 	stw	ra,8(sp)
 2006fa0:	80000015 	stw	zero,0(r16)
 2006fa4:	20105980 	call	2010598 <close>
 2006fa8:	00ffffc4 	movi	r3,-1
 2006fac:	10c00526 	beq	r2,r3,2006fc4 <_close_r+0x44>
 2006fb0:	dfc00217 	ldw	ra,8(sp)
 2006fb4:	dc400117 	ldw	r17,4(sp)
 2006fb8:	dc000017 	ldw	r16,0(sp)
 2006fbc:	dec00304 	addi	sp,sp,12
 2006fc0:	f800283a 	ret
 2006fc4:	80c00017 	ldw	r3,0(r16)
 2006fc8:	183ff926 	beq	r3,zero,2006fb0 <__alt_mem_epcs_flash_controller+0xfdffdfb0>
 2006fcc:	88c00015 	stw	r3,0(r17)
 2006fd0:	dfc00217 	ldw	ra,8(sp)
 2006fd4:	dc400117 	ldw	r17,4(sp)
 2006fd8:	dc000017 	ldw	r16,0(sp)
 2006fdc:	dec00304 	addi	sp,sp,12
 2006fe0:	f800283a 	ret

02006fe4 <quorem>:
 2006fe4:	defff204 	addi	sp,sp,-56
 2006fe8:	dd000815 	stw	r20,32(sp)
 2006fec:	20800417 	ldw	r2,16(r4)
 2006ff0:	2d000417 	ldw	r20,16(r5)
 2006ff4:	dcc00715 	stw	r19,28(sp)
 2006ff8:	dfc00d15 	stw	ra,52(sp)
 2006ffc:	df000c15 	stw	fp,48(sp)
 2007000:	ddc00b15 	stw	r23,44(sp)
 2007004:	dd800a15 	stw	r22,40(sp)
 2007008:	dd400915 	stw	r21,36(sp)
 200700c:	dc800615 	stw	r18,24(sp)
 2007010:	dc400515 	stw	r17,20(sp)
 2007014:	dc000415 	stw	r16,16(sp)
 2007018:	d9400015 	stw	r5,0(sp)
 200701c:	2027883a 	mov	r19,r4
 2007020:	15007d16 	blt	r2,r20,2007218 <quorem+0x234>
 2007024:	a0800104 	addi	r2,r20,4
 2007028:	1085883a 	add	r2,r2,r2
 200702c:	1085883a 	add	r2,r2,r2
 2007030:	28ad883a 	add	r22,r5,r2
 2007034:	2085883a 	add	r2,r4,r2
 2007038:	10800017 	ldw	r2,0(r2)
 200703c:	b1400017 	ldw	r5,0(r22)
 2007040:	a53fffc4 	addi	r20,r20,-1
 2007044:	1009883a 	mov	r4,r2
 2007048:	29400044 	addi	r5,r5,1
 200704c:	d8800115 	stw	r2,4(sp)
 2007050:	2001f400 	call	2001f40 <__udivsi3>
 2007054:	1025883a 	mov	r18,r2
 2007058:	d8800017 	ldw	r2,0(sp)
 200705c:	9f000504 	addi	fp,r19,20
 2007060:	14000504 	addi	r16,r2,20
 2007064:	90003626 	beq	r18,zero,2007140 <quorem+0x15c>
 2007068:	802b883a 	mov	r21,r16
 200706c:	e023883a 	mov	r17,fp
 2007070:	0007883a 	mov	r3,zero
 2007074:	002f883a 	mov	r23,zero
 2007078:	a9800017 	ldw	r6,0(r21)
 200707c:	900b883a 	mov	r5,r18
 2007080:	d8c00315 	stw	r3,12(sp)
 2007084:	313fffcc 	andi	r4,r6,65535
 2007088:	d9800215 	stw	r6,8(sp)
 200708c:	2001f500 	call	2001f50 <__mulsi3>
 2007090:	d9800217 	ldw	r6,8(sp)
 2007094:	d8c00317 	ldw	r3,12(sp)
 2007098:	900b883a 	mov	r5,r18
 200709c:	3008d43a 	srli	r4,r6,16
 20070a0:	1887883a 	add	r3,r3,r2
 20070a4:	d8c00315 	stw	r3,12(sp)
 20070a8:	2001f500 	call	2001f50 <__mulsi3>
 20070ac:	89400017 	ldw	r5,0(r17)
 20070b0:	d8c00317 	ldw	r3,12(sp)
 20070b4:	ad400104 	addi	r21,r21,4
 20070b8:	293fffcc 	andi	r4,r5,65535
 20070bc:	1810d43a 	srli	r8,r3,16
 20070c0:	25c9883a 	add	r4,r4,r23
 20070c4:	18ffffcc 	andi	r3,r3,65535
 20070c8:	20c9c83a 	sub	r4,r4,r3
 20070cc:	280cd43a 	srli	r6,r5,16
 20070d0:	4085883a 	add	r2,r8,r2
 20070d4:	2007d43a 	srai	r3,r4,16
 20070d8:	117fffcc 	andi	r5,r2,65535
 20070dc:	314bc83a 	sub	r5,r6,r5
 20070e0:	28cb883a 	add	r5,r5,r3
 20070e4:	8940008d 	sth	r5,2(r17)
 20070e8:	8900000d 	sth	r4,0(r17)
 20070ec:	1006d43a 	srli	r3,r2,16
 20070f0:	282fd43a 	srai	r23,r5,16
 20070f4:	8c400104 	addi	r17,r17,4
 20070f8:	b57fdf2e 	bgeu	r22,r21,2007078 <__alt_mem_epcs_flash_controller+0xfdffe078>
 20070fc:	d8c00117 	ldw	r3,4(sp)
 2007100:	18000f1e 	bne	r3,zero,2007140 <quorem+0x15c>
 2007104:	a0800144 	addi	r2,r20,5
 2007108:	1085883a 	add	r2,r2,r2
 200710c:	1085883a 	add	r2,r2,r2
 2007110:	9887883a 	add	r3,r19,r2
 2007114:	18bfff04 	addi	r2,r3,-4
 2007118:	e080082e 	bgeu	fp,r2,200713c <quorem+0x158>
 200711c:	18ffff17 	ldw	r3,-4(r3)
 2007120:	18000326 	beq	r3,zero,2007130 <quorem+0x14c>
 2007124:	00000506 	br	200713c <quorem+0x158>
 2007128:	10c00017 	ldw	r3,0(r2)
 200712c:	1800031e 	bne	r3,zero,200713c <quorem+0x158>
 2007130:	10bfff04 	addi	r2,r2,-4
 2007134:	a53fffc4 	addi	r20,r20,-1
 2007138:	e0bffb36 	bltu	fp,r2,2007128 <__alt_mem_epcs_flash_controller+0xfdffe128>
 200713c:	9d000415 	stw	r20,16(r19)
 2007140:	d9400017 	ldw	r5,0(sp)
 2007144:	9809883a 	mov	r4,r19
 2007148:	200a6180 	call	200a618 <__mcmp>
 200714c:	10002516 	blt	r2,zero,20071e4 <quorem+0x200>
 2007150:	94800044 	addi	r18,r18,1
 2007154:	e007883a 	mov	r3,fp
 2007158:	000d883a 	mov	r6,zero
 200715c:	18800017 	ldw	r2,0(r3)
 2007160:	82000017 	ldw	r8,0(r16)
 2007164:	84000104 	addi	r16,r16,4
 2007168:	11ffffcc 	andi	r7,r2,65535
 200716c:	413fffcc 	andi	r4,r8,65535
 2007170:	398d883a 	add	r6,r7,r6
 2007174:	310fc83a 	sub	r7,r6,r4
 2007178:	4010d43a 	srli	r8,r8,16
 200717c:	100cd43a 	srli	r6,r2,16
 2007180:	3809d43a 	srai	r4,r7,16
 2007184:	19c0000d 	sth	r7,0(r3)
 2007188:	320dc83a 	sub	r6,r6,r8
 200718c:	310d883a 	add	r6,r6,r4
 2007190:	1980008d 	sth	r6,2(r3)
 2007194:	300dd43a 	srai	r6,r6,16
 2007198:	18c00104 	addi	r3,r3,4
 200719c:	b43fef2e 	bgeu	r22,r16,200715c <__alt_mem_epcs_flash_controller+0xfdffe15c>
 20071a0:	a0800144 	addi	r2,r20,5
 20071a4:	1085883a 	add	r2,r2,r2
 20071a8:	1085883a 	add	r2,r2,r2
 20071ac:	9885883a 	add	r2,r19,r2
 20071b0:	10c00017 	ldw	r3,0(r2)
 20071b4:	18000b1e 	bne	r3,zero,20071e4 <quorem+0x200>
 20071b8:	10ffff04 	addi	r3,r2,-4
 20071bc:	e0c0082e 	bgeu	fp,r3,20071e0 <quorem+0x1fc>
 20071c0:	10bfff17 	ldw	r2,-4(r2)
 20071c4:	10000326 	beq	r2,zero,20071d4 <quorem+0x1f0>
 20071c8:	00000506 	br	20071e0 <quorem+0x1fc>
 20071cc:	18800017 	ldw	r2,0(r3)
 20071d0:	1000031e 	bne	r2,zero,20071e0 <quorem+0x1fc>
 20071d4:	18ffff04 	addi	r3,r3,-4
 20071d8:	a53fffc4 	addi	r20,r20,-1
 20071dc:	e0fffb36 	bltu	fp,r3,20071cc <__alt_mem_epcs_flash_controller+0xfdffe1cc>
 20071e0:	9d000415 	stw	r20,16(r19)
 20071e4:	9005883a 	mov	r2,r18
 20071e8:	dfc00d17 	ldw	ra,52(sp)
 20071ec:	df000c17 	ldw	fp,48(sp)
 20071f0:	ddc00b17 	ldw	r23,44(sp)
 20071f4:	dd800a17 	ldw	r22,40(sp)
 20071f8:	dd400917 	ldw	r21,36(sp)
 20071fc:	dd000817 	ldw	r20,32(sp)
 2007200:	dcc00717 	ldw	r19,28(sp)
 2007204:	dc800617 	ldw	r18,24(sp)
 2007208:	dc400517 	ldw	r17,20(sp)
 200720c:	dc000417 	ldw	r16,16(sp)
 2007210:	dec00e04 	addi	sp,sp,56
 2007214:	f800283a 	ret
 2007218:	0005883a 	mov	r2,zero
 200721c:	003ff206 	br	20071e8 <__alt_mem_epcs_flash_controller+0xfdffe1e8>

02007220 <_dtoa_r>:
 2007220:	20801017 	ldw	r2,64(r4)
 2007224:	deffdf04 	addi	sp,sp,-132
 2007228:	dcc01a15 	stw	r19,104(sp)
 200722c:	dc801915 	stw	r18,100(sp)
 2007230:	dc401815 	stw	r17,96(sp)
 2007234:	dc001715 	stw	r16,92(sp)
 2007238:	dfc02015 	stw	ra,128(sp)
 200723c:	df001f15 	stw	fp,124(sp)
 2007240:	ddc01e15 	stw	r23,120(sp)
 2007244:	dd801d15 	stw	r22,116(sp)
 2007248:	dd401c15 	stw	r21,112(sp)
 200724c:	dd001b15 	stw	r20,108(sp)
 2007250:	d9400315 	stw	r5,12(sp)
 2007254:	d9c00415 	stw	r7,16(sp)
 2007258:	2021883a 	mov	r16,r4
 200725c:	3025883a 	mov	r18,r6
 2007260:	dcc02317 	ldw	r19,140(sp)
 2007264:	3023883a 	mov	r17,r6
 2007268:	10000826 	beq	r2,zero,200728c <_dtoa_r+0x6c>
 200726c:	20c01117 	ldw	r3,68(r4)
 2007270:	01800044 	movi	r6,1
 2007274:	100b883a 	mov	r5,r2
 2007278:	30cc983a 	sll	r6,r6,r3
 200727c:	10c00115 	stw	r3,4(r2)
 2007280:	11800215 	stw	r6,8(r2)
 2007284:	2009d740 	call	2009d74 <_Bfree>
 2007288:	80001015 	stw	zero,64(r16)
 200728c:	90002f16 	blt	r18,zero,200734c <_dtoa_r+0x12c>
 2007290:	98000015 	stw	zero,0(r19)
 2007294:	90dffc2c 	andhi	r3,r18,32752
 2007298:	009ffc34 	movhi	r2,32752
 200729c:	18801c26 	beq	r3,r2,2007310 <_dtoa_r+0xf0>
 20072a0:	d9000317 	ldw	r4,12(sp)
 20072a4:	880b883a 	mov	r5,r17
 20072a8:	000d883a 	mov	r6,zero
 20072ac:	000f883a 	mov	r7,zero
 20072b0:	200fd040 	call	200fd04 <__nedf2>
 20072b4:	10002c1e 	bne	r2,zero,2007368 <_dtoa_r+0x148>
 20072b8:	d9002217 	ldw	r4,136(sp)
 20072bc:	d9c02417 	ldw	r7,144(sp)
 20072c0:	00800044 	movi	r2,1
 20072c4:	20800015 	stw	r2,0(r4)
 20072c8:	38019426 	beq	r7,zero,200791c <_dtoa_r+0x6fc>
 20072cc:	00808234 	movhi	r2,520
 20072d0:	109b6144 	addi	r2,r2,28037
 20072d4:	38800015 	stw	r2,0(r7)
 20072d8:	15ffffc4 	addi	r23,r2,-1
 20072dc:	b805883a 	mov	r2,r23
 20072e0:	dfc02017 	ldw	ra,128(sp)
 20072e4:	df001f17 	ldw	fp,124(sp)
 20072e8:	ddc01e17 	ldw	r23,120(sp)
 20072ec:	dd801d17 	ldw	r22,116(sp)
 20072f0:	dd401c17 	ldw	r21,112(sp)
 20072f4:	dd001b17 	ldw	r20,108(sp)
 20072f8:	dcc01a17 	ldw	r19,104(sp)
 20072fc:	dc801917 	ldw	r18,100(sp)
 2007300:	dc401817 	ldw	r17,96(sp)
 2007304:	dc001717 	ldw	r16,92(sp)
 2007308:	dec02104 	addi	sp,sp,132
 200730c:	f800283a 	ret
 2007310:	d8c02217 	ldw	r3,136(sp)
 2007314:	d9000317 	ldw	r4,12(sp)
 2007318:	0089c3c4 	movi	r2,9999
 200731c:	18800015 	stw	r2,0(r3)
 2007320:	20016c26 	beq	r4,zero,20078d4 <_dtoa_r+0x6b4>
 2007324:	05c08234 	movhi	r23,520
 2007328:	bddc1804 	addi	r23,r23,28768
 200732c:	d9c02417 	ldw	r7,144(sp)
 2007330:	383fea26 	beq	r7,zero,20072dc <__alt_mem_epcs_flash_controller+0xfdffe2dc>
 2007334:	b88000c7 	ldb	r2,3(r23)
 2007338:	10016d1e 	bne	r2,zero,20078f0 <_dtoa_r+0x6d0>
 200733c:	b88000c4 	addi	r2,r23,3
 2007340:	d8c02417 	ldw	r3,144(sp)
 2007344:	18800015 	stw	r2,0(r3)
 2007348:	003fe406 	br	20072dc <__alt_mem_epcs_flash_controller+0xfdffe2dc>
 200734c:	04600034 	movhi	r17,32768
 2007350:	8c7fffc4 	addi	r17,r17,-1
 2007354:	9462703a 	and	r17,r18,r17
 2007358:	00800044 	movi	r2,1
 200735c:	98800015 	stw	r2,0(r19)
 2007360:	8825883a 	mov	r18,r17
 2007364:	003fcb06 	br	2007294 <__alt_mem_epcs_flash_controller+0xfdffe294>
 2007368:	d9400317 	ldw	r5,12(sp)
 200736c:	9028d53a 	srli	r20,r18,20
 2007370:	d8800204 	addi	r2,sp,8
 2007374:	d8800015 	stw	r2,0(sp)
 2007378:	8009883a 	mov	r4,r16
 200737c:	880d883a 	mov	r6,r17
 2007380:	d9c00104 	addi	r7,sp,4
 2007384:	200a9c00 	call	200a9c0 <__d2b>
 2007388:	a501ffcc 	andi	r20,r20,2047
 200738c:	1039883a 	mov	fp,r2
 2007390:	a001591e 	bne	r20,zero,20078f8 <_dtoa_r+0x6d8>
 2007394:	dd400217 	ldw	r21,8(sp)
 2007398:	dd000117 	ldw	r20,4(sp)
 200739c:	00befbc4 	movi	r2,-1041
 20073a0:	ad29883a 	add	r20,r21,r20
 20073a4:	a082d216 	blt	r20,r2,2007ef0 <_dtoa_r+0xcd0>
 20073a8:	d8c00317 	ldw	r3,12(sp)
 20073ac:	013f0384 	movi	r4,-1010
 20073b0:	2509c83a 	sub	r4,r4,r20
 20073b4:	a0810484 	addi	r2,r20,1042
 20073b8:	9124983a 	sll	r18,r18,r4
 20073bc:	1884d83a 	srl	r2,r3,r2
 20073c0:	9088b03a 	or	r4,r18,r2
 20073c4:	200ff400 	call	200ff40 <__floatunsidf>
 20073c8:	1009883a 	mov	r4,r2
 20073cc:	017f8434 	movhi	r5,65040
 20073d0:	00800044 	movi	r2,1
 20073d4:	194b883a 	add	r5,r3,r5
 20073d8:	a53fffc4 	addi	r20,r20,-1
 20073dc:	d8800f15 	stw	r2,60(sp)
 20073e0:	000d883a 	mov	r6,zero
 20073e4:	01cffe34 	movhi	r7,16376
 20073e8:	200fc480 	call	200fc48 <__subdf3>
 20073ec:	1009883a 	mov	r4,r2
 20073f0:	180b883a 	mov	r5,r3
 20073f4:	0198dbf4 	movhi	r6,25455
 20073f8:	3190d844 	addi	r6,r6,17249
 20073fc:	01cff4f4 	movhi	r7,16339
 2007400:	39e1e9c4 	addi	r7,r7,-30809
 2007404:	20017f00 	call	20017f0 <__muldf3>
 2007408:	180b883a 	mov	r5,r3
 200740c:	01a2d874 	movhi	r6,35681
 2007410:	31b22cc4 	addi	r6,r6,-14157
 2007414:	01cff1f4 	movhi	r7,16327
 2007418:	39e28a04 	addi	r7,r7,-30168
 200741c:	1009883a 	mov	r4,r2
 2007420:	200fbf40 	call	200fbf4 <__adddf3>
 2007424:	a009883a 	mov	r4,r20
 2007428:	1027883a 	mov	r19,r2
 200742c:	1825883a 	mov	r18,r3
 2007430:	2001c880 	call	2001c88 <__floatsidf>
 2007434:	1009883a 	mov	r4,r2
 2007438:	180b883a 	mov	r5,r3
 200743c:	019427f4 	movhi	r6,20639
 2007440:	319e7ec4 	addi	r6,r6,31227
 2007444:	01cff4f4 	movhi	r7,16339
 2007448:	39d104c4 	addi	r7,r7,17427
 200744c:	20017f00 	call	20017f0 <__muldf3>
 2007450:	9809883a 	mov	r4,r19
 2007454:	900b883a 	mov	r5,r18
 2007458:	100d883a 	mov	r6,r2
 200745c:	180f883a 	mov	r7,r3
 2007460:	200fbf40 	call	200fbf4 <__adddf3>
 2007464:	1009883a 	mov	r4,r2
 2007468:	180b883a 	mov	r5,r3
 200746c:	1027883a 	mov	r19,r2
 2007470:	1825883a 	mov	r18,r3
 2007474:	2001d5c0 	call	2001d5c <__fixdfsi>
 2007478:	9809883a 	mov	r4,r19
 200747c:	900b883a 	mov	r5,r18
 2007480:	000d883a 	mov	r6,zero
 2007484:	000f883a 	mov	r7,zero
 2007488:	d8800615 	stw	r2,24(sp)
 200748c:	200fe280 	call	200fe28 <__ltdf2>
 2007490:	10027e16 	blt	r2,zero,2007e8c <_dtoa_r+0xc6c>
 2007494:	d8c00617 	ldw	r3,24(sp)
 2007498:	00800584 	movi	r2,22
 200749c:	10c26c36 	bltu	r2,r3,2007e50 <_dtoa_r+0xc30>
 20074a0:	180490fa 	slli	r2,r3,3
 20074a4:	00c08234 	movhi	r3,520
 20074a8:	18dc3d04 	addi	r3,r3,28916
 20074ac:	d9800317 	ldw	r6,12(sp)
 20074b0:	1885883a 	add	r2,r3,r2
 20074b4:	11000017 	ldw	r4,0(r2)
 20074b8:	11400117 	ldw	r5,4(r2)
 20074bc:	880f883a 	mov	r7,r17
 20074c0:	200fd600 	call	200fd60 <__gtdf2>
 20074c4:	00828f0e 	bge	zero,r2,2007f04 <_dtoa_r+0xce4>
 20074c8:	d8800617 	ldw	r2,24(sp)
 20074cc:	d8000d15 	stw	zero,52(sp)
 20074d0:	10bfffc4 	addi	r2,r2,-1
 20074d4:	d8800615 	stw	r2,24(sp)
 20074d8:	ad29c83a 	sub	r20,r21,r20
 20074dc:	a53fffc4 	addi	r20,r20,-1
 20074e0:	a0026616 	blt	r20,zero,2007e7c <_dtoa_r+0xc5c>
 20074e4:	dd000715 	stw	r20,28(sp)
 20074e8:	d8000815 	stw	zero,32(sp)
 20074ec:	d8800617 	ldw	r2,24(sp)
 20074f0:	10025a16 	blt	r2,zero,2007e5c <_dtoa_r+0xc3c>
 20074f4:	d8c00717 	ldw	r3,28(sp)
 20074f8:	d8800b15 	stw	r2,44(sp)
 20074fc:	d8000a15 	stw	zero,40(sp)
 2007500:	1887883a 	add	r3,r3,r2
 2007504:	d8c00715 	stw	r3,28(sp)
 2007508:	d9c00417 	ldw	r7,16(sp)
 200750c:	00800244 	movi	r2,9
 2007510:	11c10536 	bltu	r2,r7,2007928 <_dtoa_r+0x708>
 2007514:	00800144 	movi	r2,5
 2007518:	11c4c60e 	bge	r2,r7,2008834 <_dtoa_r+0x1614>
 200751c:	39ffff04 	addi	r7,r7,-4
 2007520:	d9c00415 	stw	r7,16(sp)
 2007524:	0027883a 	mov	r19,zero
 2007528:	d9c00417 	ldw	r7,16(sp)
 200752c:	008000c4 	movi	r2,3
 2007530:	3883a226 	beq	r7,r2,20083bc <_dtoa_r+0x119c>
 2007534:	11c2bc16 	blt	r2,r7,2008028 <_dtoa_r+0xe08>
 2007538:	00800084 	movi	r2,2
 200753c:	3880fb1e 	bne	r7,r2,200792c <_dtoa_r+0x70c>
 2007540:	d8000c15 	stw	zero,48(sp)
 2007544:	d9002117 	ldw	r4,132(sp)
 2007548:	0103ae0e 	bge	zero,r4,2008404 <_dtoa_r+0x11e4>
 200754c:	2025883a 	mov	r18,r4
 2007550:	d9000e15 	stw	r4,56(sp)
 2007554:	d9000915 	stw	r4,36(sp)
 2007558:	80001115 	stw	zero,68(r16)
 200755c:	008005c4 	movi	r2,23
 2007560:	1484b22e 	bgeu	r2,r18,200882c <_dtoa_r+0x160c>
 2007564:	00c00044 	movi	r3,1
 2007568:	00800104 	movi	r2,4
 200756c:	1085883a 	add	r2,r2,r2
 2007570:	11000504 	addi	r4,r2,20
 2007574:	180b883a 	mov	r5,r3
 2007578:	18c00044 	addi	r3,r3,1
 200757c:	913ffb2e 	bgeu	r18,r4,200756c <__alt_mem_epcs_flash_controller+0xfdffe56c>
 2007580:	81401115 	stw	r5,68(r16)
 2007584:	8009883a 	mov	r4,r16
 2007588:	2009ccc0 	call	2009ccc <_Balloc>
 200758c:	102f883a 	mov	r23,r2
 2007590:	80801015 	stw	r2,64(r16)
 2007594:	00800384 	movi	r2,14
 2007598:	1480f036 	bltu	r2,r18,200795c <_dtoa_r+0x73c>
 200759c:	9800ef26 	beq	r19,zero,200795c <_dtoa_r+0x73c>
 20075a0:	d8800617 	ldw	r2,24(sp)
 20075a4:	00839c0e 	bge	zero,r2,2008418 <_dtoa_r+0x11f8>
 20075a8:	d8c00617 	ldw	r3,24(sp)
 20075ac:	108003cc 	andi	r2,r2,15
 20075b0:	100490fa 	slli	r2,r2,3
 20075b4:	182bd13a 	srai	r21,r3,4
 20075b8:	00c08234 	movhi	r3,520
 20075bc:	18dc3d04 	addi	r3,r3,28916
 20075c0:	1885883a 	add	r2,r3,r2
 20075c4:	a8c0040c 	andi	r3,r21,16
 20075c8:	12800017 	ldw	r10,0(r2)
 20075cc:	15800117 	ldw	r22,4(r2)
 20075d0:	18038726 	beq	r3,zero,20083f0 <_dtoa_r+0x11d0>
 20075d4:	00808234 	movhi	r2,520
 20075d8:	109c3304 	addi	r2,r2,28876
 20075dc:	11800817 	ldw	r6,32(r2)
 20075e0:	11c00917 	ldw	r7,36(r2)
 20075e4:	d9000317 	ldw	r4,12(sp)
 20075e8:	880b883a 	mov	r5,r17
 20075ec:	da801515 	stw	r10,84(sp)
 20075f0:	2001ad40 	call	2001ad4 <__divdf3>
 20075f4:	da801517 	ldw	r10,84(sp)
 20075f8:	d8801015 	stw	r2,64(sp)
 20075fc:	1829883a 	mov	r20,r3
 2007600:	ad4003cc 	andi	r21,r21,15
 2007604:	048000c4 	movi	r18,3
 2007608:	a8001126 	beq	r21,zero,2007650 <_dtoa_r+0x430>
 200760c:	04c08234 	movhi	r19,520
 2007610:	9cdc3304 	addi	r19,r19,28876
 2007614:	5005883a 	mov	r2,r10
 2007618:	b007883a 	mov	r3,r22
 200761c:	a980004c 	andi	r6,r21,1
 2007620:	1009883a 	mov	r4,r2
 2007624:	a82bd07a 	srai	r21,r21,1
 2007628:	180b883a 	mov	r5,r3
 200762c:	30000426 	beq	r6,zero,2007640 <_dtoa_r+0x420>
 2007630:	99800017 	ldw	r6,0(r19)
 2007634:	99c00117 	ldw	r7,4(r19)
 2007638:	94800044 	addi	r18,r18,1
 200763c:	20017f00 	call	20017f0 <__muldf3>
 2007640:	9cc00204 	addi	r19,r19,8
 2007644:	a83ff51e 	bne	r21,zero,200761c <__alt_mem_epcs_flash_controller+0xfdffe61c>
 2007648:	1015883a 	mov	r10,r2
 200764c:	182d883a 	mov	r22,r3
 2007650:	d9001017 	ldw	r4,64(sp)
 2007654:	a00b883a 	mov	r5,r20
 2007658:	500d883a 	mov	r6,r10
 200765c:	b00f883a 	mov	r7,r22
 2007660:	2001ad40 	call	2001ad4 <__divdf3>
 2007664:	1027883a 	mov	r19,r2
 2007668:	1829883a 	mov	r20,r3
 200766c:	d8c00d17 	ldw	r3,52(sp)
 2007670:	18000626 	beq	r3,zero,200768c <_dtoa_r+0x46c>
 2007674:	9809883a 	mov	r4,r19
 2007678:	a00b883a 	mov	r5,r20
 200767c:	000d883a 	mov	r6,zero
 2007680:	01cffc34 	movhi	r7,16368
 2007684:	200fe280 	call	200fe28 <__ltdf2>
 2007688:	10040e16 	blt	r2,zero,20086c4 <_dtoa_r+0x14a4>
 200768c:	9009883a 	mov	r4,r18
 2007690:	2001c880 	call	2001c88 <__floatsidf>
 2007694:	1009883a 	mov	r4,r2
 2007698:	180b883a 	mov	r5,r3
 200769c:	980d883a 	mov	r6,r19
 20076a0:	a00f883a 	mov	r7,r20
 20076a4:	20017f00 	call	20017f0 <__muldf3>
 20076a8:	1009883a 	mov	r4,r2
 20076ac:	180b883a 	mov	r5,r3
 20076b0:	000d883a 	mov	r6,zero
 20076b4:	01d00734 	movhi	r7,16412
 20076b8:	200fbf40 	call	200fbf4 <__adddf3>
 20076bc:	057f3034 	movhi	r21,64704
 20076c0:	1d6b883a 	add	r21,r3,r21
 20076c4:	d8c00917 	ldw	r3,36(sp)
 20076c8:	1025883a 	mov	r18,r2
 20076cc:	18031f26 	beq	r3,zero,200834c <_dtoa_r+0x112c>
 20076d0:	d8800617 	ldw	r2,24(sp)
 20076d4:	dac00917 	ldw	r11,36(sp)
 20076d8:	d8801315 	stw	r2,76(sp)
 20076dc:	d8c00c17 	ldw	r3,48(sp)
 20076e0:	18039026 	beq	r3,zero,2008524 <_dtoa_r+0x1304>
 20076e4:	58bfffc4 	addi	r2,r11,-1
 20076e8:	100490fa 	slli	r2,r2,3
 20076ec:	00c08234 	movhi	r3,520
 20076f0:	18dc3d04 	addi	r3,r3,28916
 20076f4:	0009883a 	mov	r4,zero
 20076f8:	1885883a 	add	r2,r3,r2
 20076fc:	11800017 	ldw	r6,0(r2)
 2007700:	11c00117 	ldw	r7,4(r2)
 2007704:	014ff834 	movhi	r5,16352
 2007708:	dac01615 	stw	r11,88(sp)
 200770c:	2001ad40 	call	2001ad4 <__divdf3>
 2007710:	900d883a 	mov	r6,r18
 2007714:	a80f883a 	mov	r7,r21
 2007718:	1009883a 	mov	r4,r2
 200771c:	180b883a 	mov	r5,r3
 2007720:	200fc480 	call	200fc48 <__subdf3>
 2007724:	a00b883a 	mov	r5,r20
 2007728:	9809883a 	mov	r4,r19
 200772c:	182b883a 	mov	r21,r3
 2007730:	d8801015 	stw	r2,64(sp)
 2007734:	2001d5c0 	call	2001d5c <__fixdfsi>
 2007738:	1009883a 	mov	r4,r2
 200773c:	d8801515 	stw	r2,84(sp)
 2007740:	2001c880 	call	2001c88 <__floatsidf>
 2007744:	9809883a 	mov	r4,r19
 2007748:	a00b883a 	mov	r5,r20
 200774c:	100d883a 	mov	r6,r2
 2007750:	180f883a 	mov	r7,r3
 2007754:	200fc480 	call	200fc48 <__subdf3>
 2007758:	da401517 	ldw	r9,84(sp)
 200775c:	d9001017 	ldw	r4,64(sp)
 2007760:	a80b883a 	mov	r5,r21
 2007764:	4d000c04 	addi	r20,r9,48
 2007768:	bd000005 	stb	r20,0(r23)
 200776c:	100d883a 	mov	r6,r2
 2007770:	180f883a 	mov	r7,r3
 2007774:	bd800044 	addi	r22,r23,1
 2007778:	1025883a 	mov	r18,r2
 200777c:	1827883a 	mov	r19,r3
 2007780:	200fd600 	call	200fd60 <__gtdf2>
 2007784:	00842216 	blt	zero,r2,2008810 <_dtoa_r+0x15f0>
 2007788:	0009883a 	mov	r4,zero
 200778c:	014ffc34 	movhi	r5,16368
 2007790:	900d883a 	mov	r6,r18
 2007794:	980f883a 	mov	r7,r19
 2007798:	200fc480 	call	200fc48 <__subdf3>
 200779c:	d9001017 	ldw	r4,64(sp)
 20077a0:	a80b883a 	mov	r5,r21
 20077a4:	100d883a 	mov	r6,r2
 20077a8:	180f883a 	mov	r7,r3
 20077ac:	200fd600 	call	200fd60 <__gtdf2>
 20077b0:	dac01617 	ldw	r11,88(sp)
 20077b4:	00841316 	blt	zero,r2,2008804 <_dtoa_r+0x15e4>
 20077b8:	00800044 	movi	r2,1
 20077bc:	12c0670e 	bge	r2,r11,200795c <_dtoa_r+0x73c>
 20077c0:	bad7883a 	add	r11,r23,r11
 20077c4:	df001115 	stw	fp,68(sp)
 20077c8:	dc401215 	stw	r17,72(sp)
 20077cc:	5839883a 	mov	fp,r11
 20077d0:	dc401017 	ldw	r17,64(sp)
 20077d4:	00000806 	br	20077f8 <_dtoa_r+0x5d8>
 20077d8:	200fc480 	call	200fc48 <__subdf3>
 20077dc:	1009883a 	mov	r4,r2
 20077e0:	180b883a 	mov	r5,r3
 20077e4:	880d883a 	mov	r6,r17
 20077e8:	a80f883a 	mov	r7,r21
 20077ec:	200fe280 	call	200fe28 <__ltdf2>
 20077f0:	1003ee16 	blt	r2,zero,20087ac <_dtoa_r+0x158c>
 20077f4:	b703f126 	beq	r22,fp,20087bc <_dtoa_r+0x159c>
 20077f8:	8809883a 	mov	r4,r17
 20077fc:	a80b883a 	mov	r5,r21
 2007800:	000d883a 	mov	r6,zero
 2007804:	01d00934 	movhi	r7,16420
 2007808:	20017f00 	call	20017f0 <__muldf3>
 200780c:	000d883a 	mov	r6,zero
 2007810:	01d00934 	movhi	r7,16420
 2007814:	9009883a 	mov	r4,r18
 2007818:	980b883a 	mov	r5,r19
 200781c:	1023883a 	mov	r17,r2
 2007820:	182b883a 	mov	r21,r3
 2007824:	20017f00 	call	20017f0 <__muldf3>
 2007828:	180b883a 	mov	r5,r3
 200782c:	1009883a 	mov	r4,r2
 2007830:	1825883a 	mov	r18,r3
 2007834:	1027883a 	mov	r19,r2
 2007838:	2001d5c0 	call	2001d5c <__fixdfsi>
 200783c:	1009883a 	mov	r4,r2
 2007840:	1029883a 	mov	r20,r2
 2007844:	2001c880 	call	2001c88 <__floatsidf>
 2007848:	9809883a 	mov	r4,r19
 200784c:	900b883a 	mov	r5,r18
 2007850:	100d883a 	mov	r6,r2
 2007854:	180f883a 	mov	r7,r3
 2007858:	200fc480 	call	200fc48 <__subdf3>
 200785c:	a5000c04 	addi	r20,r20,48
 2007860:	b5000005 	stb	r20,0(r22)
 2007864:	1009883a 	mov	r4,r2
 2007868:	180b883a 	mov	r5,r3
 200786c:	880d883a 	mov	r6,r17
 2007870:	a80f883a 	mov	r7,r21
 2007874:	1025883a 	mov	r18,r2
 2007878:	1827883a 	mov	r19,r3
 200787c:	200fe280 	call	200fe28 <__ltdf2>
 2007880:	b5800044 	addi	r22,r22,1
 2007884:	0009883a 	mov	r4,zero
 2007888:	014ffc34 	movhi	r5,16368
 200788c:	900d883a 	mov	r6,r18
 2007890:	980f883a 	mov	r7,r19
 2007894:	103fd00e 	bge	r2,zero,20077d8 <__alt_mem_epcs_flash_controller+0xfdffe7d8>
 2007898:	d9001317 	ldw	r4,76(sp)
 200789c:	df001117 	ldw	fp,68(sp)
 20078a0:	d9000615 	stw	r4,24(sp)
 20078a4:	8009883a 	mov	r4,r16
 20078a8:	e00b883a 	mov	r5,fp
 20078ac:	2009d740 	call	2009d74 <_Bfree>
 20078b0:	d9c00617 	ldw	r7,24(sp)
 20078b4:	d8c02217 	ldw	r3,136(sp)
 20078b8:	d9002417 	ldw	r4,144(sp)
 20078bc:	b0000005 	stb	zero,0(r22)
 20078c0:	38800044 	addi	r2,r7,1
 20078c4:	18800015 	stw	r2,0(r3)
 20078c8:	203e8426 	beq	r4,zero,20072dc <__alt_mem_epcs_flash_controller+0xfdffe2dc>
 20078cc:	25800015 	stw	r22,0(r4)
 20078d0:	003e8206 	br	20072dc <__alt_mem_epcs_flash_controller+0xfdffe2dc>
 20078d4:	00800434 	movhi	r2,16
 20078d8:	10bfffc4 	addi	r2,r2,-1
 20078dc:	90a4703a 	and	r18,r18,r2
 20078e0:	903e901e 	bne	r18,zero,2007324 <__alt_mem_epcs_flash_controller+0xfdffe324>
 20078e4:	05c08234 	movhi	r23,520
 20078e8:	bddc1504 	addi	r23,r23,28756
 20078ec:	003e8f06 	br	200732c <__alt_mem_epcs_flash_controller+0xfdffe32c>
 20078f0:	b8800204 	addi	r2,r23,8
 20078f4:	003e9206 	br	2007340 <__alt_mem_epcs_flash_controller+0xfdffe340>
 20078f8:	01400434 	movhi	r5,16
 20078fc:	297fffc4 	addi	r5,r5,-1
 2007900:	894a703a 	and	r5,r17,r5
 2007904:	d9000317 	ldw	r4,12(sp)
 2007908:	294ffc34 	orhi	r5,r5,16368
 200790c:	a53f0044 	addi	r20,r20,-1023
 2007910:	dd400217 	ldw	r21,8(sp)
 2007914:	d8000f15 	stw	zero,60(sp)
 2007918:	003eb106 	br	20073e0 <__alt_mem_epcs_flash_controller+0xfdffe3e0>
 200791c:	05c08234 	movhi	r23,520
 2007920:	bddb6104 	addi	r23,r23,28036
 2007924:	003e6d06 	br	20072dc <__alt_mem_epcs_flash_controller+0xfdffe2dc>
 2007928:	d8000415 	stw	zero,16(sp)
 200792c:	80001115 	stw	zero,68(r16)
 2007930:	8009883a 	mov	r4,r16
 2007934:	000b883a 	mov	r5,zero
 2007938:	2009ccc0 	call	2009ccc <_Balloc>
 200793c:	01ffffc4 	movi	r7,-1
 2007940:	102f883a 	mov	r23,r2
 2007944:	80801015 	stw	r2,64(r16)
 2007948:	00800044 	movi	r2,1
 200794c:	d9c00915 	stw	r7,36(sp)
 2007950:	d8002115 	stw	zero,132(sp)
 2007954:	d9c00e15 	stw	r7,56(sp)
 2007958:	d8800c15 	stw	r2,48(sp)
 200795c:	d8800117 	ldw	r2,4(sp)
 2007960:	10008b16 	blt	r2,zero,2007b90 <_dtoa_r+0x970>
 2007964:	d9000617 	ldw	r4,24(sp)
 2007968:	00c00384 	movi	r3,14
 200796c:	19008816 	blt	r3,r4,2007b90 <_dtoa_r+0x970>
 2007970:	200490fa 	slli	r2,r4,3
 2007974:	d9c02117 	ldw	r7,132(sp)
 2007978:	00c08234 	movhi	r3,520
 200797c:	18dc3d04 	addi	r3,r3,28916
 2007980:	1885883a 	add	r2,r3,r2
 2007984:	14800017 	ldw	r18,0(r2)
 2007988:	14c00117 	ldw	r19,4(r2)
 200798c:	3801c916 	blt	r7,zero,20080b4 <_dtoa_r+0xe94>
 2007990:	d9000317 	ldw	r4,12(sp)
 2007994:	900d883a 	mov	r6,r18
 2007998:	980f883a 	mov	r7,r19
 200799c:	880b883a 	mov	r5,r17
 20079a0:	2001ad40 	call	2001ad4 <__divdf3>
 20079a4:	180b883a 	mov	r5,r3
 20079a8:	1009883a 	mov	r4,r2
 20079ac:	2001d5c0 	call	2001d5c <__fixdfsi>
 20079b0:	1009883a 	mov	r4,r2
 20079b4:	102b883a 	mov	r21,r2
 20079b8:	2001c880 	call	2001c88 <__floatsidf>
 20079bc:	1009883a 	mov	r4,r2
 20079c0:	180b883a 	mov	r5,r3
 20079c4:	900d883a 	mov	r6,r18
 20079c8:	980f883a 	mov	r7,r19
 20079cc:	20017f00 	call	20017f0 <__muldf3>
 20079d0:	d9000317 	ldw	r4,12(sp)
 20079d4:	880b883a 	mov	r5,r17
 20079d8:	100d883a 	mov	r6,r2
 20079dc:	180f883a 	mov	r7,r3
 20079e0:	200fc480 	call	200fc48 <__subdf3>
 20079e4:	d9c00917 	ldw	r7,36(sp)
 20079e8:	1009883a 	mov	r4,r2
 20079ec:	a8800c04 	addi	r2,r21,48
 20079f0:	b8800005 	stb	r2,0(r23)
 20079f4:	01800044 	movi	r6,1
 20079f8:	180b883a 	mov	r5,r3
 20079fc:	2005883a 	mov	r2,r4
 2007a00:	bd800044 	addi	r22,r23,1
 2007a04:	39803726 	beq	r7,r6,2007ae4 <_dtoa_r+0x8c4>
 2007a08:	000d883a 	mov	r6,zero
 2007a0c:	01d00934 	movhi	r7,16420
 2007a10:	20017f00 	call	20017f0 <__muldf3>
 2007a14:	1009883a 	mov	r4,r2
 2007a18:	180b883a 	mov	r5,r3
 2007a1c:	000d883a 	mov	r6,zero
 2007a20:	000f883a 	mov	r7,zero
 2007a24:	1029883a 	mov	r20,r2
 2007a28:	1823883a 	mov	r17,r3
 2007a2c:	200fca80 	call	200fca8 <__eqdf2>
 2007a30:	103f9c26 	beq	r2,zero,20078a4 <__alt_mem_epcs_flash_controller+0xfdffe8a4>
 2007a34:	dd400917 	ldw	r21,36(sp)
 2007a38:	dc000415 	stw	r16,16(sp)
 2007a3c:	00000906 	br	2007a64 <_dtoa_r+0x844>
 2007a40:	20017f00 	call	20017f0 <__muldf3>
 2007a44:	1009883a 	mov	r4,r2
 2007a48:	180b883a 	mov	r5,r3
 2007a4c:	000d883a 	mov	r6,zero
 2007a50:	000f883a 	mov	r7,zero
 2007a54:	1029883a 	mov	r20,r2
 2007a58:	1823883a 	mov	r17,r3
 2007a5c:	200fca80 	call	200fca8 <__eqdf2>
 2007a60:	10022926 	beq	r2,zero,2008308 <_dtoa_r+0x10e8>
 2007a64:	900d883a 	mov	r6,r18
 2007a68:	980f883a 	mov	r7,r19
 2007a6c:	a009883a 	mov	r4,r20
 2007a70:	880b883a 	mov	r5,r17
 2007a74:	2001ad40 	call	2001ad4 <__divdf3>
 2007a78:	180b883a 	mov	r5,r3
 2007a7c:	1009883a 	mov	r4,r2
 2007a80:	2001d5c0 	call	2001d5c <__fixdfsi>
 2007a84:	1009883a 	mov	r4,r2
 2007a88:	1021883a 	mov	r16,r2
 2007a8c:	2001c880 	call	2001c88 <__floatsidf>
 2007a90:	1009883a 	mov	r4,r2
 2007a94:	180b883a 	mov	r5,r3
 2007a98:	900d883a 	mov	r6,r18
 2007a9c:	980f883a 	mov	r7,r19
 2007aa0:	20017f00 	call	20017f0 <__muldf3>
 2007aa4:	a009883a 	mov	r4,r20
 2007aa8:	880b883a 	mov	r5,r17
 2007aac:	100d883a 	mov	r6,r2
 2007ab0:	180f883a 	mov	r7,r3
 2007ab4:	200fc480 	call	200fc48 <__subdf3>
 2007ab8:	82400c04 	addi	r9,r16,48
 2007abc:	b2400005 	stb	r9,0(r22)
 2007ac0:	b5800044 	addi	r22,r22,1
 2007ac4:	b5d3c83a 	sub	r9,r22,r23
 2007ac8:	000d883a 	mov	r6,zero
 2007acc:	01d00934 	movhi	r7,16420
 2007ad0:	1009883a 	mov	r4,r2
 2007ad4:	180b883a 	mov	r5,r3
 2007ad8:	aa7fd91e 	bne	r21,r9,2007a40 <__alt_mem_epcs_flash_controller+0xfdffea40>
 2007adc:	802b883a 	mov	r21,r16
 2007ae0:	dc000417 	ldw	r16,16(sp)
 2007ae4:	1009883a 	mov	r4,r2
 2007ae8:	180b883a 	mov	r5,r3
 2007aec:	100d883a 	mov	r6,r2
 2007af0:	180f883a 	mov	r7,r3
 2007af4:	200fbf40 	call	200fbf4 <__adddf3>
 2007af8:	9009883a 	mov	r4,r18
 2007afc:	980b883a 	mov	r5,r19
 2007b00:	100d883a 	mov	r6,r2
 2007b04:	180f883a 	mov	r7,r3
 2007b08:	1023883a 	mov	r17,r2
 2007b0c:	1829883a 	mov	r20,r3
 2007b10:	200fe280 	call	200fe28 <__ltdf2>
 2007b14:	10000816 	blt	r2,zero,2007b38 <_dtoa_r+0x918>
 2007b18:	9009883a 	mov	r4,r18
 2007b1c:	980b883a 	mov	r5,r19
 2007b20:	880d883a 	mov	r6,r17
 2007b24:	a00f883a 	mov	r7,r20
 2007b28:	200fd040 	call	200fd04 <__nedf2>
 2007b2c:	103f5d1e 	bne	r2,zero,20078a4 <__alt_mem_epcs_flash_controller+0xfdffe8a4>
 2007b30:	ad40004c 	andi	r21,r21,1
 2007b34:	a83f5b26 	beq	r21,zero,20078a4 <__alt_mem_epcs_flash_controller+0xfdffe8a4>
 2007b38:	b53fffc3 	ldbu	r20,-1(r22)
 2007b3c:	b0ffff84 	addi	r3,r22,-2
 2007b40:	01400e44 	movi	r5,57
 2007b44:	00000306 	br	2007b54 <_dtoa_r+0x934>
 2007b48:	1d000003 	ldbu	r20,0(r3)
 2007b4c:	102d883a 	mov	r22,r2
 2007b50:	18ffffc4 	addi	r3,r3,-1
 2007b54:	a1003fcc 	andi	r4,r20,255
 2007b58:	2100201c 	xori	r4,r4,128
 2007b5c:	213fe004 	addi	r4,r4,-128
 2007b60:	b0bfffc4 	addi	r2,r22,-1
 2007b64:	2142ca1e 	bne	r4,r5,2008690 <_dtoa_r+0x1470>
 2007b68:	b8bff71e 	bne	r23,r2,2007b48 <__alt_mem_epcs_flash_controller+0xfdffeb48>
 2007b6c:	d8800617 	ldw	r2,24(sp)
 2007b70:	05000c44 	movi	r20,49
 2007b74:	10800044 	addi	r2,r2,1
 2007b78:	d8800615 	stw	r2,24(sp)
 2007b7c:	00800c04 	movi	r2,48
 2007b80:	b8800005 	stb	r2,0(r23)
 2007b84:	b805883a 	mov	r2,r23
 2007b88:	15000005 	stb	r20,0(r2)
 2007b8c:	003f4506 	br	20078a4 <__alt_mem_epcs_flash_controller+0xfdffe8a4>
 2007b90:	d9c00c17 	ldw	r7,48(sp)
 2007b94:	3800c926 	beq	r7,zero,2007ebc <_dtoa_r+0xc9c>
 2007b98:	d9c00417 	ldw	r7,16(sp)
 2007b9c:	00c00044 	movi	r3,1
 2007ba0:	19c16c0e 	bge	r3,r7,2008154 <_dtoa_r+0xf34>
 2007ba4:	d9000917 	ldw	r4,36(sp)
 2007ba8:	d9c00a17 	ldw	r7,40(sp)
 2007bac:	24ffffc4 	addi	r19,r4,-1
 2007bb0:	3cc20716 	blt	r7,r19,20083d0 <_dtoa_r+0x11b0>
 2007bb4:	3ce7c83a 	sub	r19,r7,r19
 2007bb8:	d9c00917 	ldw	r7,36(sp)
 2007bbc:	3802ae16 	blt	r7,zero,2008678 <_dtoa_r+0x1458>
 2007bc0:	dc800817 	ldw	r18,32(sp)
 2007bc4:	d8800917 	ldw	r2,36(sp)
 2007bc8:	d8c00817 	ldw	r3,32(sp)
 2007bcc:	d9c00717 	ldw	r7,28(sp)
 2007bd0:	8009883a 	mov	r4,r16
 2007bd4:	1887883a 	add	r3,r3,r2
 2007bd8:	388f883a 	add	r7,r7,r2
 2007bdc:	01400044 	movi	r5,1
 2007be0:	d8c00815 	stw	r3,32(sp)
 2007be4:	d9c00715 	stw	r7,28(sp)
 2007be8:	200a0fc0 	call	200a0fc <__i2b>
 2007bec:	102b883a 	mov	r21,r2
 2007bf0:	90000a26 	beq	r18,zero,2007c1c <_dtoa_r+0x9fc>
 2007bf4:	d8800717 	ldw	r2,28(sp)
 2007bf8:	0080080e 	bge	zero,r2,2007c1c <_dtoa_r+0x9fc>
 2007bfc:	90812b16 	blt	r18,r2,20080ac <_dtoa_r+0xe8c>
 2007c00:	d8c00817 	ldw	r3,32(sp)
 2007c04:	d9000717 	ldw	r4,28(sp)
 2007c08:	90a5c83a 	sub	r18,r18,r2
 2007c0c:	1887c83a 	sub	r3,r3,r2
 2007c10:	2089c83a 	sub	r4,r4,r2
 2007c14:	d8c00815 	stw	r3,32(sp)
 2007c18:	d9000715 	stw	r4,28(sp)
 2007c1c:	d9c00a17 	ldw	r7,40(sp)
 2007c20:	01c0140e 	bge	zero,r7,2007c74 <_dtoa_r+0xa54>
 2007c24:	d8800c17 	ldw	r2,48(sp)
 2007c28:	1001de26 	beq	r2,zero,20083a4 <_dtoa_r+0x1184>
 2007c2c:	04c00e0e 	bge	zero,r19,2007c68 <_dtoa_r+0xa48>
 2007c30:	a80b883a 	mov	r5,r21
 2007c34:	8009883a 	mov	r4,r16
 2007c38:	980d883a 	mov	r6,r19
 2007c3c:	200a3900 	call	200a390 <__pow5mult>
 2007c40:	e00d883a 	mov	r6,fp
 2007c44:	8009883a 	mov	r4,r16
 2007c48:	100b883a 	mov	r5,r2
 2007c4c:	102b883a 	mov	r21,r2
 2007c50:	200a1380 	call	200a138 <__multiply>
 2007c54:	1029883a 	mov	r20,r2
 2007c58:	e00b883a 	mov	r5,fp
 2007c5c:	8009883a 	mov	r4,r16
 2007c60:	2009d740 	call	2009d74 <_Bfree>
 2007c64:	a039883a 	mov	fp,r20
 2007c68:	d8c00a17 	ldw	r3,40(sp)
 2007c6c:	1ccdc83a 	sub	r6,r3,r19
 2007c70:	3001291e 	bne	r6,zero,2008118 <_dtoa_r+0xef8>
 2007c74:	8009883a 	mov	r4,r16
 2007c78:	01400044 	movi	r5,1
 2007c7c:	200a0fc0 	call	200a0fc <__i2b>
 2007c80:	d9000b17 	ldw	r4,44(sp)
 2007c84:	1029883a 	mov	r20,r2
 2007c88:	0100050e 	bge	zero,r4,2007ca0 <_dtoa_r+0xa80>
 2007c8c:	d9800b17 	ldw	r6,44(sp)
 2007c90:	8009883a 	mov	r4,r16
 2007c94:	100b883a 	mov	r5,r2
 2007c98:	200a3900 	call	200a390 <__pow5mult>
 2007c9c:	1029883a 	mov	r20,r2
 2007ca0:	d9c00417 	ldw	r7,16(sp)
 2007ca4:	00800044 	movi	r2,1
 2007ca8:	11c0f00e 	bge	r2,r7,200806c <_dtoa_r+0xe4c>
 2007cac:	0023883a 	mov	r17,zero
 2007cb0:	d8800b17 	ldw	r2,44(sp)
 2007cb4:	1001741e 	bne	r2,zero,2008288 <_dtoa_r+0x1068>
 2007cb8:	00800044 	movi	r2,1
 2007cbc:	d8c00717 	ldw	r3,28(sp)
 2007cc0:	10c5883a 	add	r2,r2,r3
 2007cc4:	108007cc 	andi	r2,r2,31
 2007cc8:	10008026 	beq	r2,zero,2007ecc <_dtoa_r+0xcac>
 2007ccc:	01000804 	movi	r4,32
 2007cd0:	2089c83a 	sub	r4,r4,r2
 2007cd4:	00c00104 	movi	r3,4
 2007cd8:	1902d00e 	bge	r3,r4,200881c <_dtoa_r+0x15fc>
 2007cdc:	d9000817 	ldw	r4,32(sp)
 2007ce0:	d9c00717 	ldw	r7,28(sp)
 2007ce4:	00c00704 	movi	r3,28
 2007ce8:	1885c83a 	sub	r2,r3,r2
 2007cec:	2089883a 	add	r4,r4,r2
 2007cf0:	388f883a 	add	r7,r7,r2
 2007cf4:	d9000815 	stw	r4,32(sp)
 2007cf8:	90a5883a 	add	r18,r18,r2
 2007cfc:	d9c00715 	stw	r7,28(sp)
 2007d00:	d9c00817 	ldw	r7,32(sp)
 2007d04:	01c0050e 	bge	zero,r7,2007d1c <_dtoa_r+0xafc>
 2007d08:	e00b883a 	mov	r5,fp
 2007d0c:	8009883a 	mov	r4,r16
 2007d10:	380d883a 	mov	r6,r7
 2007d14:	200a4bc0 	call	200a4bc <__lshift>
 2007d18:	1039883a 	mov	fp,r2
 2007d1c:	d8800717 	ldw	r2,28(sp)
 2007d20:	0080050e 	bge	zero,r2,2007d38 <_dtoa_r+0xb18>
 2007d24:	a00b883a 	mov	r5,r20
 2007d28:	8009883a 	mov	r4,r16
 2007d2c:	100d883a 	mov	r6,r2
 2007d30:	200a4bc0 	call	200a4bc <__lshift>
 2007d34:	1029883a 	mov	r20,r2
 2007d38:	d8c00d17 	ldw	r3,52(sp)
 2007d3c:	1801401e 	bne	r3,zero,2008240 <_dtoa_r+0x1020>
 2007d40:	d8800917 	ldw	r2,36(sp)
 2007d44:	00815a0e 	bge	zero,r2,20082b0 <_dtoa_r+0x1090>
 2007d48:	d8c00c17 	ldw	r3,48(sp)
 2007d4c:	18006f1e 	bne	r3,zero,2007f0c <_dtoa_r+0xcec>
 2007d50:	b823883a 	mov	r17,r23
 2007d54:	dc800917 	ldw	r18,36(sp)
 2007d58:	00000206 	br	2007d64 <_dtoa_r+0xb44>
 2007d5c:	2009d9c0 	call	2009d9c <__multadd>
 2007d60:	1039883a 	mov	fp,r2
 2007d64:	e009883a 	mov	r4,fp
 2007d68:	a00b883a 	mov	r5,r20
 2007d6c:	2006fe40 	call	2006fe4 <quorem>
 2007d70:	10800c04 	addi	r2,r2,48
 2007d74:	88800005 	stb	r2,0(r17)
 2007d78:	8c400044 	addi	r17,r17,1
 2007d7c:	8dc7c83a 	sub	r3,r17,r23
 2007d80:	8009883a 	mov	r4,r16
 2007d84:	e00b883a 	mov	r5,fp
 2007d88:	01800284 	movi	r6,10
 2007d8c:	000f883a 	mov	r7,zero
 2007d90:	1cbff216 	blt	r3,r18,2007d5c <__alt_mem_epcs_flash_controller+0xfdffed5c>
 2007d94:	dd800917 	ldw	r22,36(sp)
 2007d98:	1007883a 	mov	r3,r2
 2007d9c:	05823a0e 	bge	zero,r22,2008688 <_dtoa_r+0x1468>
 2007da0:	bdad883a 	add	r22,r23,r22
 2007da4:	0023883a 	mov	r17,zero
 2007da8:	e00b883a 	mov	r5,fp
 2007dac:	01800044 	movi	r6,1
 2007db0:	8009883a 	mov	r4,r16
 2007db4:	d8c01515 	stw	r3,84(sp)
 2007db8:	200a4bc0 	call	200a4bc <__lshift>
 2007dbc:	1009883a 	mov	r4,r2
 2007dc0:	a00b883a 	mov	r5,r20
 2007dc4:	1039883a 	mov	fp,r2
 2007dc8:	200a6180 	call	200a618 <__mcmp>
 2007dcc:	d8c01517 	ldw	r3,84(sp)
 2007dd0:	0080d60e 	bge	zero,r2,200812c <_dtoa_r+0xf0c>
 2007dd4:	b13fffc3 	ldbu	r4,-1(r22)
 2007dd8:	b0ffff84 	addi	r3,r22,-2
 2007ddc:	01800e44 	movi	r6,57
 2007de0:	00000306 	br	2007df0 <_dtoa_r+0xbd0>
 2007de4:	19000003 	ldbu	r4,0(r3)
 2007de8:	102d883a 	mov	r22,r2
 2007dec:	18ffffc4 	addi	r3,r3,-1
 2007df0:	21403fcc 	andi	r5,r4,255
 2007df4:	2940201c 	xori	r5,r5,128
 2007df8:	297fe004 	addi	r5,r5,-128
 2007dfc:	b0bfffc4 	addi	r2,r22,-1
 2007e00:	2981a71e 	bne	r5,r6,20084a0 <_dtoa_r+0x1280>
 2007e04:	b8bff71e 	bne	r23,r2,2007de4 <__alt_mem_epcs_flash_controller+0xfdffede4>
 2007e08:	d8800617 	ldw	r2,24(sp)
 2007e0c:	10800044 	addi	r2,r2,1
 2007e10:	d8800615 	stw	r2,24(sp)
 2007e14:	00800c44 	movi	r2,49
 2007e18:	b8800005 	stb	r2,0(r23)
 2007e1c:	8009883a 	mov	r4,r16
 2007e20:	a00b883a 	mov	r5,r20
 2007e24:	2009d740 	call	2009d74 <_Bfree>
 2007e28:	a83e9e26 	beq	r21,zero,20078a4 <__alt_mem_epcs_flash_controller+0xfdffe8a4>
 2007e2c:	88000426 	beq	r17,zero,2007e40 <_dtoa_r+0xc20>
 2007e30:	8d400326 	beq	r17,r21,2007e40 <_dtoa_r+0xc20>
 2007e34:	8009883a 	mov	r4,r16
 2007e38:	880b883a 	mov	r5,r17
 2007e3c:	2009d740 	call	2009d74 <_Bfree>
 2007e40:	8009883a 	mov	r4,r16
 2007e44:	a80b883a 	mov	r5,r21
 2007e48:	2009d740 	call	2009d74 <_Bfree>
 2007e4c:	003e9506 	br	20078a4 <__alt_mem_epcs_flash_controller+0xfdffe8a4>
 2007e50:	00c00044 	movi	r3,1
 2007e54:	d8c00d15 	stw	r3,52(sp)
 2007e58:	003d9f06 	br	20074d8 <__alt_mem_epcs_flash_controller+0xfdffe4d8>
 2007e5c:	d9000817 	ldw	r4,32(sp)
 2007e60:	d8800617 	ldw	r2,24(sp)
 2007e64:	d8000b15 	stw	zero,44(sp)
 2007e68:	2089c83a 	sub	r4,r4,r2
 2007e6c:	0087c83a 	sub	r3,zero,r2
 2007e70:	d9000815 	stw	r4,32(sp)
 2007e74:	d8c00a15 	stw	r3,40(sp)
 2007e78:	003da306 	br	2007508 <__alt_mem_epcs_flash_controller+0xfdffe508>
 2007e7c:	0529c83a 	sub	r20,zero,r20
 2007e80:	dd000815 	stw	r20,32(sp)
 2007e84:	d8000715 	stw	zero,28(sp)
 2007e88:	003d9806 	br	20074ec <__alt_mem_epcs_flash_controller+0xfdffe4ec>
 2007e8c:	d9000617 	ldw	r4,24(sp)
 2007e90:	2001c880 	call	2001c88 <__floatsidf>
 2007e94:	1009883a 	mov	r4,r2
 2007e98:	180b883a 	mov	r5,r3
 2007e9c:	980d883a 	mov	r6,r19
 2007ea0:	900f883a 	mov	r7,r18
 2007ea4:	200fca80 	call	200fca8 <__eqdf2>
 2007ea8:	103d7a26 	beq	r2,zero,2007494 <__alt_mem_epcs_flash_controller+0xfdffe494>
 2007eac:	d8800617 	ldw	r2,24(sp)
 2007eb0:	10bfffc4 	addi	r2,r2,-1
 2007eb4:	d8800615 	stw	r2,24(sp)
 2007eb8:	003d7606 	br	2007494 <__alt_mem_epcs_flash_controller+0xfdffe494>
 2007ebc:	dcc00a17 	ldw	r19,40(sp)
 2007ec0:	dc800817 	ldw	r18,32(sp)
 2007ec4:	002b883a 	mov	r21,zero
 2007ec8:	003f4906 	br	2007bf0 <__alt_mem_epcs_flash_controller+0xfdffebf0>
 2007ecc:	00800704 	movi	r2,28
 2007ed0:	d8c00817 	ldw	r3,32(sp)
 2007ed4:	d9000717 	ldw	r4,28(sp)
 2007ed8:	90a5883a 	add	r18,r18,r2
 2007edc:	1887883a 	add	r3,r3,r2
 2007ee0:	2089883a 	add	r4,r4,r2
 2007ee4:	d8c00815 	stw	r3,32(sp)
 2007ee8:	d9000715 	stw	r4,28(sp)
 2007eec:	003f8406 	br	2007d00 <__alt_mem_epcs_flash_controller+0xfdffed00>
 2007ef0:	d9c00317 	ldw	r7,12(sp)
 2007ef4:	013efb84 	movi	r4,-1042
 2007ef8:	2509c83a 	sub	r4,r4,r20
 2007efc:	3908983a 	sll	r4,r7,r4
 2007f00:	003d3006 	br	20073c4 <__alt_mem_epcs_flash_controller+0xfdffe3c4>
 2007f04:	d8000d15 	stw	zero,52(sp)
 2007f08:	003d7306 	br	20074d8 <__alt_mem_epcs_flash_controller+0xfdffe4d8>
 2007f0c:	0480050e 	bge	zero,r18,2007f24 <_dtoa_r+0xd04>
 2007f10:	a80b883a 	mov	r5,r21
 2007f14:	8009883a 	mov	r4,r16
 2007f18:	900d883a 	mov	r6,r18
 2007f1c:	200a4bc0 	call	200a4bc <__lshift>
 2007f20:	102b883a 	mov	r21,r2
 2007f24:	8801611e 	bne	r17,zero,20084ac <_dtoa_r+0x128c>
 2007f28:	a827883a 	mov	r19,r21
 2007f2c:	d8c00317 	ldw	r3,12(sp)
 2007f30:	d9000917 	ldw	r4,36(sp)
 2007f34:	b8bfffc4 	addi	r2,r23,-1
 2007f38:	18c0004c 	andi	r3,r3,1
 2007f3c:	1105883a 	add	r2,r2,r4
 2007f40:	b825883a 	mov	r18,r23
 2007f44:	d8800515 	stw	r2,20(sp)
 2007f48:	a823883a 	mov	r17,r21
 2007f4c:	d8c00315 	stw	r3,12(sp)
 2007f50:	ddc00715 	stw	r23,28(sp)
 2007f54:	e009883a 	mov	r4,fp
 2007f58:	a00b883a 	mov	r5,r20
 2007f5c:	2006fe40 	call	2006fe4 <quorem>
 2007f60:	e009883a 	mov	r4,fp
 2007f64:	880b883a 	mov	r5,r17
 2007f68:	102d883a 	mov	r22,r2
 2007f6c:	200a6180 	call	200a618 <__mcmp>
 2007f70:	980d883a 	mov	r6,r19
 2007f74:	8009883a 	mov	r4,r16
 2007f78:	a00b883a 	mov	r5,r20
 2007f7c:	102b883a 	mov	r21,r2
 2007f80:	200a6700 	call	200a670 <__mdiff>
 2007f84:	100d883a 	mov	r6,r2
 2007f88:	10800317 	ldw	r2,12(r2)
 2007f8c:	b5c00c04 	addi	r23,r22,48
 2007f90:	10008c26 	beq	r2,zero,20081c4 <_dtoa_r+0xfa4>
 2007f94:	8009883a 	mov	r4,r16
 2007f98:	300b883a 	mov	r5,r6
 2007f9c:	2009d740 	call	2009d74 <_Bfree>
 2007fa0:	00800044 	movi	r2,1
 2007fa4:	a8007116 	blt	r21,zero,200816c <_dtoa_r+0xf4c>
 2007fa8:	a800041e 	bne	r21,zero,2007fbc <_dtoa_r+0xd9c>
 2007fac:	d9c00417 	ldw	r7,16(sp)
 2007fb0:	3800021e 	bne	r7,zero,2007fbc <_dtoa_r+0xd9c>
 2007fb4:	d8c00317 	ldw	r3,12(sp)
 2007fb8:	18006c26 	beq	r3,zero,200816c <_dtoa_r+0xf4c>
 2007fbc:	00814c16 	blt	zero,r2,20084f0 <_dtoa_r+0x12d0>
 2007fc0:	d8c00517 	ldw	r3,20(sp)
 2007fc4:	95400044 	addi	r21,r18,1
 2007fc8:	95c00005 	stb	r23,0(r18)
 2007fcc:	a82d883a 	mov	r22,r21
 2007fd0:	90c14d26 	beq	r18,r3,2008508 <_dtoa_r+0x12e8>
 2007fd4:	e00b883a 	mov	r5,fp
 2007fd8:	8009883a 	mov	r4,r16
 2007fdc:	01800284 	movi	r6,10
 2007fe0:	000f883a 	mov	r7,zero
 2007fe4:	2009d9c0 	call	2009d9c <__multadd>
 2007fe8:	1039883a 	mov	fp,r2
 2007fec:	8cc08b26 	beq	r17,r19,200821c <_dtoa_r+0xffc>
 2007ff0:	880b883a 	mov	r5,r17
 2007ff4:	01800284 	movi	r6,10
 2007ff8:	000f883a 	mov	r7,zero
 2007ffc:	8009883a 	mov	r4,r16
 2008000:	2009d9c0 	call	2009d9c <__multadd>
 2008004:	980b883a 	mov	r5,r19
 2008008:	8009883a 	mov	r4,r16
 200800c:	01800284 	movi	r6,10
 2008010:	000f883a 	mov	r7,zero
 2008014:	1023883a 	mov	r17,r2
 2008018:	2009d9c0 	call	2009d9c <__multadd>
 200801c:	1027883a 	mov	r19,r2
 2008020:	a825883a 	mov	r18,r21
 2008024:	003fcb06 	br	2007f54 <__alt_mem_epcs_flash_controller+0xfdffef54>
 2008028:	d9c00417 	ldw	r7,16(sp)
 200802c:	00800104 	movi	r2,4
 2008030:	3880e426 	beq	r7,r2,20083c4 <_dtoa_r+0x11a4>
 2008034:	00800144 	movi	r2,5
 2008038:	38be3c1e 	bne	r7,r2,200792c <__alt_mem_epcs_flash_controller+0xfdffe92c>
 200803c:	00c00044 	movi	r3,1
 2008040:	d8c00c15 	stw	r3,48(sp)
 2008044:	d9c02117 	ldw	r7,132(sp)
 2008048:	d8800617 	ldw	r2,24(sp)
 200804c:	388f883a 	add	r7,r7,r2
 2008050:	3c800044 	addi	r18,r7,1
 2008054:	d9c00e15 	stw	r7,56(sp)
 2008058:	dc800915 	stw	r18,36(sp)
 200805c:	04bd3e16 	blt	zero,r18,2007558 <__alt_mem_epcs_flash_controller+0xfdffe558>
 2008060:	80001115 	stw	zero,68(r16)
 2008064:	000b883a 	mov	r5,zero
 2008068:	003d4606 	br	2007584 <__alt_mem_epcs_flash_controller+0xfdffe584>
 200806c:	d8c00317 	ldw	r3,12(sp)
 2008070:	183f0e1e 	bne	r3,zero,2007cac <__alt_mem_epcs_flash_controller+0xfdffecac>
 2008074:	00c00434 	movhi	r3,16
 2008078:	18ffffc4 	addi	r3,r3,-1
 200807c:	88c6703a 	and	r3,r17,r3
 2008080:	183f0a1e 	bne	r3,zero,2007cac <__alt_mem_epcs_flash_controller+0xfdffecac>
 2008084:	8c5ffc2c 	andhi	r17,r17,32752
 2008088:	883f0826 	beq	r17,zero,2007cac <__alt_mem_epcs_flash_controller+0xfdffecac>
 200808c:	d9000817 	ldw	r4,32(sp)
 2008090:	d9c00717 	ldw	r7,28(sp)
 2008094:	1023883a 	mov	r17,r2
 2008098:	2089883a 	add	r4,r4,r2
 200809c:	388f883a 	add	r7,r7,r2
 20080a0:	d9000815 	stw	r4,32(sp)
 20080a4:	d9c00715 	stw	r7,28(sp)
 20080a8:	003f0106 	br	2007cb0 <__alt_mem_epcs_flash_controller+0xfdffecb0>
 20080ac:	9005883a 	mov	r2,r18
 20080b0:	003ed306 	br	2007c00 <__alt_mem_epcs_flash_controller+0xfdffec00>
 20080b4:	d8800917 	ldw	r2,36(sp)
 20080b8:	00be3516 	blt	zero,r2,2007990 <__alt_mem_epcs_flash_controller+0xfdffe990>
 20080bc:	1000b61e 	bne	r2,zero,2008398 <_dtoa_r+0x1178>
 20080c0:	9009883a 	mov	r4,r18
 20080c4:	980b883a 	mov	r5,r19
 20080c8:	000d883a 	mov	r6,zero
 20080cc:	01d00534 	movhi	r7,16404
 20080d0:	20017f00 	call	20017f0 <__muldf3>
 20080d4:	d9800317 	ldw	r6,12(sp)
 20080d8:	1009883a 	mov	r4,r2
 20080dc:	180b883a 	mov	r5,r3
 20080e0:	880f883a 	mov	r7,r17
 20080e4:	200fdc40 	call	200fdc4 <__gedf2>
 20080e8:	0029883a 	mov	r20,zero
 20080ec:	002b883a 	mov	r21,zero
 20080f0:	10007e16 	blt	r2,zero,20082ec <_dtoa_r+0x10cc>
 20080f4:	d8802117 	ldw	r2,132(sp)
 20080f8:	b82d883a 	mov	r22,r23
 20080fc:	0084303a 	nor	r2,zero,r2
 2008100:	d8800615 	stw	r2,24(sp)
 2008104:	8009883a 	mov	r4,r16
 2008108:	a00b883a 	mov	r5,r20
 200810c:	2009d740 	call	2009d74 <_Bfree>
 2008110:	a83f4b1e 	bne	r21,zero,2007e40 <__alt_mem_epcs_flash_controller+0xfdffee40>
 2008114:	003de306 	br	20078a4 <__alt_mem_epcs_flash_controller+0xfdffe8a4>
 2008118:	e00b883a 	mov	r5,fp
 200811c:	8009883a 	mov	r4,r16
 2008120:	200a3900 	call	200a390 <__pow5mult>
 2008124:	1039883a 	mov	fp,r2
 2008128:	003ed206 	br	2007c74 <__alt_mem_epcs_flash_controller+0xfdffec74>
 200812c:	1000021e 	bne	r2,zero,2008138 <_dtoa_r+0xf18>
 2008130:	18c0004c 	andi	r3,r3,1
 2008134:	183f271e 	bne	r3,zero,2007dd4 <__alt_mem_epcs_flash_controller+0xfdffedd4>
 2008138:	01000c04 	movi	r4,48
 200813c:	00000106 	br	2008144 <_dtoa_r+0xf24>
 2008140:	102d883a 	mov	r22,r2
 2008144:	b0bfffc4 	addi	r2,r22,-1
 2008148:	10c00007 	ldb	r3,0(r2)
 200814c:	193ffc26 	beq	r3,r4,2008140 <__alt_mem_epcs_flash_controller+0xfdfff140>
 2008150:	003f3206 	br	2007e1c <__alt_mem_epcs_flash_controller+0xfdffee1c>
 2008154:	d8c00f17 	ldw	r3,60(sp)
 2008158:	18015026 	beq	r3,zero,200869c <_dtoa_r+0x147c>
 200815c:	10810cc4 	addi	r2,r2,1075
 2008160:	dcc00a17 	ldw	r19,40(sp)
 2008164:	dc800817 	ldw	r18,32(sp)
 2008168:	003e9706 	br	2007bc8 <__alt_mem_epcs_flash_controller+0xfdffebc8>
 200816c:	b807883a 	mov	r3,r23
 2008170:	182b883a 	mov	r21,r3
 2008174:	ddc00717 	ldw	r23,28(sp)
 2008178:	00800e0e 	bge	zero,r2,20081b4 <_dtoa_r+0xf94>
 200817c:	e00b883a 	mov	r5,fp
 2008180:	01800044 	movi	r6,1
 2008184:	8009883a 	mov	r4,r16
 2008188:	d8c01515 	stw	r3,84(sp)
 200818c:	200a4bc0 	call	200a4bc <__lshift>
 2008190:	1009883a 	mov	r4,r2
 2008194:	a00b883a 	mov	r5,r20
 2008198:	1039883a 	mov	fp,r2
 200819c:	200a6180 	call	200a618 <__mcmp>
 20081a0:	d8c01517 	ldw	r3,84(sp)
 20081a4:	0081880e 	bge	zero,r2,20087c8 <_dtoa_r+0x15a8>
 20081a8:	00800e44 	movi	r2,57
 20081ac:	b0c00c44 	addi	r3,r22,49
 20081b0:	a8816326 	beq	r21,r2,2008740 <_dtoa_r+0x1520>
 20081b4:	90c00005 	stb	r3,0(r18)
 20081b8:	95800044 	addi	r22,r18,1
 20081bc:	982b883a 	mov	r21,r19
 20081c0:	003f1606 	br	2007e1c <__alt_mem_epcs_flash_controller+0xfdffee1c>
 20081c4:	300b883a 	mov	r5,r6
 20081c8:	e009883a 	mov	r4,fp
 20081cc:	d9801515 	stw	r6,84(sp)
 20081d0:	200a6180 	call	200a618 <__mcmp>
 20081d4:	d9801517 	ldw	r6,84(sp)
 20081d8:	8009883a 	mov	r4,r16
 20081dc:	d8801515 	stw	r2,84(sp)
 20081e0:	300b883a 	mov	r5,r6
 20081e4:	2009d740 	call	2009d74 <_Bfree>
 20081e8:	d8801517 	ldw	r2,84(sp)
 20081ec:	103f6d1e 	bne	r2,zero,2007fa4 <__alt_mem_epcs_flash_controller+0xfdffefa4>
 20081f0:	d9c00417 	ldw	r7,16(sp)
 20081f4:	383f6b1e 	bne	r7,zero,2007fa4 <__alt_mem_epcs_flash_controller+0xfdffefa4>
 20081f8:	d8c00317 	ldw	r3,12(sp)
 20081fc:	183f691e 	bne	r3,zero,2007fa4 <__alt_mem_epcs_flash_controller+0xfdffefa4>
 2008200:	b807883a 	mov	r3,r23
 2008204:	00800e44 	movi	r2,57
 2008208:	ddc00717 	ldw	r23,28(sp)
 200820c:	18814c26 	beq	r3,r2,2008740 <_dtoa_r+0x1520>
 2008210:	057fe80e 	bge	zero,r21,20081b4 <__alt_mem_epcs_flash_controller+0xfdfff1b4>
 2008214:	b0c00c44 	addi	r3,r22,49
 2008218:	003fe606 	br	20081b4 <__alt_mem_epcs_flash_controller+0xfdfff1b4>
 200821c:	880b883a 	mov	r5,r17
 2008220:	8009883a 	mov	r4,r16
 2008224:	01800284 	movi	r6,10
 2008228:	000f883a 	mov	r7,zero
 200822c:	2009d9c0 	call	2009d9c <__multadd>
 2008230:	1023883a 	mov	r17,r2
 2008234:	1027883a 	mov	r19,r2
 2008238:	a825883a 	mov	r18,r21
 200823c:	003f4506 	br	2007f54 <__alt_mem_epcs_flash_controller+0xfdffef54>
 2008240:	e009883a 	mov	r4,fp
 2008244:	a00b883a 	mov	r5,r20
 2008248:	200a6180 	call	200a618 <__mcmp>
 200824c:	103ebc0e 	bge	r2,zero,2007d40 <__alt_mem_epcs_flash_controller+0xfdffed40>
 2008250:	e00b883a 	mov	r5,fp
 2008254:	8009883a 	mov	r4,r16
 2008258:	01800284 	movi	r6,10
 200825c:	000f883a 	mov	r7,zero
 2008260:	2009d9c0 	call	2009d9c <__multadd>
 2008264:	1039883a 	mov	fp,r2
 2008268:	d8800617 	ldw	r2,24(sp)
 200826c:	d8c00c17 	ldw	r3,48(sp)
 2008270:	10bfffc4 	addi	r2,r2,-1
 2008274:	d8800615 	stw	r2,24(sp)
 2008278:	1801571e 	bne	r3,zero,20087d8 <_dtoa_r+0x15b8>
 200827c:	d9c00e17 	ldw	r7,56(sp)
 2008280:	d9c00915 	stw	r7,36(sp)
 2008284:	003eae06 	br	2007d40 <__alt_mem_epcs_flash_controller+0xfdffed40>
 2008288:	a0800417 	ldw	r2,16(r20)
 200828c:	10800104 	addi	r2,r2,4
 2008290:	1085883a 	add	r2,r2,r2
 2008294:	1085883a 	add	r2,r2,r2
 2008298:	a085883a 	add	r2,r20,r2
 200829c:	11000017 	ldw	r4,0(r2)
 20082a0:	2009fe40 	call	2009fe4 <__hi0bits>
 20082a4:	00c00804 	movi	r3,32
 20082a8:	1885c83a 	sub	r2,r3,r2
 20082ac:	003e8306 	br	2007cbc <__alt_mem_epcs_flash_controller+0xfdffecbc>
 20082b0:	d9c00417 	ldw	r7,16(sp)
 20082b4:	00800084 	movi	r2,2
 20082b8:	11fea30e 	bge	r2,r7,2007d48 <__alt_mem_epcs_flash_controller+0xfdffed48>
 20082bc:	d8800917 	ldw	r2,36(sp)
 20082c0:	103f8c1e 	bne	r2,zero,20080f4 <__alt_mem_epcs_flash_controller+0xfdfff0f4>
 20082c4:	a00b883a 	mov	r5,r20
 20082c8:	8009883a 	mov	r4,r16
 20082cc:	01800144 	movi	r6,5
 20082d0:	000f883a 	mov	r7,zero
 20082d4:	2009d9c0 	call	2009d9c <__multadd>
 20082d8:	e009883a 	mov	r4,fp
 20082dc:	100b883a 	mov	r5,r2
 20082e0:	1029883a 	mov	r20,r2
 20082e4:	200a6180 	call	200a618 <__mcmp>
 20082e8:	00bf820e 	bge	zero,r2,20080f4 <__alt_mem_epcs_flash_controller+0xfdfff0f4>
 20082ec:	00800c44 	movi	r2,49
 20082f0:	b8800005 	stb	r2,0(r23)
 20082f4:	d8800617 	ldw	r2,24(sp)
 20082f8:	bd800044 	addi	r22,r23,1
 20082fc:	10800044 	addi	r2,r2,1
 2008300:	d8800615 	stw	r2,24(sp)
 2008304:	003f7f06 	br	2008104 <__alt_mem_epcs_flash_controller+0xfdfff104>
 2008308:	dc000417 	ldw	r16,16(sp)
 200830c:	003d6506 	br	20078a4 <__alt_mem_epcs_flash_controller+0xfdffe8a4>
 2008310:	9009883a 	mov	r4,r18
 2008314:	2001c880 	call	2001c88 <__floatsidf>
 2008318:	1009883a 	mov	r4,r2
 200831c:	180b883a 	mov	r5,r3
 2008320:	980d883a 	mov	r6,r19
 2008324:	a00f883a 	mov	r7,r20
 2008328:	20017f00 	call	20017f0 <__muldf3>
 200832c:	1009883a 	mov	r4,r2
 2008330:	180b883a 	mov	r5,r3
 2008334:	000d883a 	mov	r6,zero
 2008338:	01d00734 	movhi	r7,16412
 200833c:	200fbf40 	call	200fbf4 <__adddf3>
 2008340:	057f3034 	movhi	r21,64704
 2008344:	1025883a 	mov	r18,r2
 2008348:	1d6b883a 	add	r21,r3,r21
 200834c:	9809883a 	mov	r4,r19
 2008350:	a00b883a 	mov	r5,r20
 2008354:	000d883a 	mov	r6,zero
 2008358:	01d00534 	movhi	r7,16404
 200835c:	200fc480 	call	200fc48 <__subdf3>
 2008360:	1009883a 	mov	r4,r2
 2008364:	180b883a 	mov	r5,r3
 2008368:	900d883a 	mov	r6,r18
 200836c:	a80f883a 	mov	r7,r21
 2008370:	1027883a 	mov	r19,r2
 2008374:	1829883a 	mov	r20,r3
 2008378:	200fd600 	call	200fd60 <__gtdf2>
 200837c:	00806616 	blt	zero,r2,2008518 <_dtoa_r+0x12f8>
 2008380:	a9e0003c 	xorhi	r7,r21,32768
 2008384:	9809883a 	mov	r4,r19
 2008388:	a00b883a 	mov	r5,r20
 200838c:	900d883a 	mov	r6,r18
 2008390:	200fe280 	call	200fe28 <__ltdf2>
 2008394:	103d710e 	bge	r2,zero,200795c <__alt_mem_epcs_flash_controller+0xfdffe95c>
 2008398:	0029883a 	mov	r20,zero
 200839c:	002b883a 	mov	r21,zero
 20083a0:	003f5406 	br	20080f4 <__alt_mem_epcs_flash_controller+0xfdfff0f4>
 20083a4:	d9800a17 	ldw	r6,40(sp)
 20083a8:	e00b883a 	mov	r5,fp
 20083ac:	8009883a 	mov	r4,r16
 20083b0:	200a3900 	call	200a390 <__pow5mult>
 20083b4:	1039883a 	mov	fp,r2
 20083b8:	003e2e06 	br	2007c74 <__alt_mem_epcs_flash_controller+0xfdffec74>
 20083bc:	d8000c15 	stw	zero,48(sp)
 20083c0:	003f2006 	br	2008044 <__alt_mem_epcs_flash_controller+0xfdfff044>
 20083c4:	00800044 	movi	r2,1
 20083c8:	d8800c15 	stw	r2,48(sp)
 20083cc:	003c5d06 	br	2007544 <__alt_mem_epcs_flash_controller+0xfdffe544>
 20083d0:	d8c00a17 	ldw	r3,40(sp)
 20083d4:	d9000b17 	ldw	r4,44(sp)
 20083d8:	dcc00a15 	stw	r19,40(sp)
 20083dc:	98c5c83a 	sub	r2,r19,r3
 20083e0:	2089883a 	add	r4,r4,r2
 20083e4:	d9000b15 	stw	r4,44(sp)
 20083e8:	0027883a 	mov	r19,zero
 20083ec:	003df206 	br	2007bb8 <__alt_mem_epcs_flash_controller+0xfdffebb8>
 20083f0:	d9000317 	ldw	r4,12(sp)
 20083f4:	8829883a 	mov	r20,r17
 20083f8:	04800084 	movi	r18,2
 20083fc:	d9001015 	stw	r4,64(sp)
 2008400:	003c8106 	br	2007608 <__alt_mem_epcs_flash_controller+0xfdffe608>
 2008404:	04800044 	movi	r18,1
 2008408:	dc800e15 	stw	r18,56(sp)
 200840c:	dc800915 	stw	r18,36(sp)
 2008410:	dc802115 	stw	r18,132(sp)
 2008414:	003f1206 	br	2008060 <__alt_mem_epcs_flash_controller+0xfdfff060>
 2008418:	d8800617 	ldw	r2,24(sp)
 200841c:	00abc83a 	sub	r21,zero,r2
 2008420:	a800a426 	beq	r21,zero,20086b4 <_dtoa_r+0x1494>
 2008424:	a88003cc 	andi	r2,r21,15
 2008428:	100490fa 	slli	r2,r2,3
 200842c:	00c08234 	movhi	r3,520
 2008430:	18dc3d04 	addi	r3,r3,28916
 2008434:	d9000317 	ldw	r4,12(sp)
 2008438:	1885883a 	add	r2,r3,r2
 200843c:	11800017 	ldw	r6,0(r2)
 2008440:	11c00117 	ldw	r7,4(r2)
 2008444:	a82bd13a 	srai	r21,r21,4
 2008448:	880b883a 	mov	r5,r17
 200844c:	20017f00 	call	20017f0 <__muldf3>
 2008450:	1027883a 	mov	r19,r2
 2008454:	1829883a 	mov	r20,r3
 2008458:	a800e826 	beq	r21,zero,20087fc <_dtoa_r+0x15dc>
 200845c:	05808234 	movhi	r22,520
 2008460:	b59c3304 	addi	r22,r22,28876
 2008464:	04800084 	movi	r18,2
 2008468:	a980004c 	andi	r6,r21,1
 200846c:	1009883a 	mov	r4,r2
 2008470:	a82bd07a 	srai	r21,r21,1
 2008474:	180b883a 	mov	r5,r3
 2008478:	30000426 	beq	r6,zero,200848c <_dtoa_r+0x126c>
 200847c:	b1800017 	ldw	r6,0(r22)
 2008480:	b1c00117 	ldw	r7,4(r22)
 2008484:	94800044 	addi	r18,r18,1
 2008488:	20017f00 	call	20017f0 <__muldf3>
 200848c:	b5800204 	addi	r22,r22,8
 2008490:	a83ff51e 	bne	r21,zero,2008468 <__alt_mem_epcs_flash_controller+0xfdfff468>
 2008494:	1027883a 	mov	r19,r2
 2008498:	1829883a 	mov	r20,r3
 200849c:	003c7306 	br	200766c <__alt_mem_epcs_flash_controller+0xfdffe66c>
 20084a0:	21000044 	addi	r4,r4,1
 20084a4:	11000005 	stb	r4,0(r2)
 20084a8:	003e5c06 	br	2007e1c <__alt_mem_epcs_flash_controller+0xfdffee1c>
 20084ac:	a9400117 	ldw	r5,4(r21)
 20084b0:	8009883a 	mov	r4,r16
 20084b4:	2009ccc0 	call	2009ccc <_Balloc>
 20084b8:	a9800417 	ldw	r6,16(r21)
 20084bc:	11000304 	addi	r4,r2,12
 20084c0:	a9400304 	addi	r5,r21,12
 20084c4:	31800084 	addi	r6,r6,2
 20084c8:	318d883a 	add	r6,r6,r6
 20084cc:	318d883a 	add	r6,r6,r6
 20084d0:	1023883a 	mov	r17,r2
 20084d4:	2009a000 	call	2009a00 <memcpy>
 20084d8:	8009883a 	mov	r4,r16
 20084dc:	880b883a 	mov	r5,r17
 20084e0:	01800044 	movi	r6,1
 20084e4:	200a4bc0 	call	200a4bc <__lshift>
 20084e8:	1027883a 	mov	r19,r2
 20084ec:	003e8f06 	br	2007f2c <__alt_mem_epcs_flash_controller+0xfdffef2c>
 20084f0:	b807883a 	mov	r3,r23
 20084f4:	00800e44 	movi	r2,57
 20084f8:	ddc00717 	ldw	r23,28(sp)
 20084fc:	18809026 	beq	r3,r2,2008740 <_dtoa_r+0x1520>
 2008500:	18c00044 	addi	r3,r3,1
 2008504:	003f2b06 	br	20081b4 <__alt_mem_epcs_flash_controller+0xfdfff1b4>
 2008508:	b807883a 	mov	r3,r23
 200850c:	982b883a 	mov	r21,r19
 2008510:	ddc00717 	ldw	r23,28(sp)
 2008514:	003e2406 	br	2007da8 <__alt_mem_epcs_flash_controller+0xfdffeda8>
 2008518:	0029883a 	mov	r20,zero
 200851c:	002b883a 	mov	r21,zero
 2008520:	003f7206 	br	20082ec <__alt_mem_epcs_flash_controller+0xfdfff2ec>
 2008524:	593fffc4 	addi	r4,r11,-1
 2008528:	200490fa 	slli	r2,r4,3
 200852c:	00c08234 	movhi	r3,520
 2008530:	18dc3d04 	addi	r3,r3,28916
 2008534:	d9001015 	stw	r4,64(sp)
 2008538:	1885883a 	add	r2,r3,r2
 200853c:	11000017 	ldw	r4,0(r2)
 2008540:	11400117 	ldw	r5,4(r2)
 2008544:	900d883a 	mov	r6,r18
 2008548:	a80f883a 	mov	r7,r21
 200854c:	dac01615 	stw	r11,88(sp)
 2008550:	20017f00 	call	20017f0 <__muldf3>
 2008554:	a00b883a 	mov	r5,r20
 2008558:	9809883a 	mov	r4,r19
 200855c:	d8c01215 	stw	r3,72(sp)
 2008560:	d8801115 	stw	r2,68(sp)
 2008564:	2001d5c0 	call	2001d5c <__fixdfsi>
 2008568:	1009883a 	mov	r4,r2
 200856c:	1025883a 	mov	r18,r2
 2008570:	2001c880 	call	2001c88 <__floatsidf>
 2008574:	9809883a 	mov	r4,r19
 2008578:	a00b883a 	mov	r5,r20
 200857c:	100d883a 	mov	r6,r2
 2008580:	180f883a 	mov	r7,r3
 2008584:	94800c04 	addi	r18,r18,48
 2008588:	200fc480 	call	200fc48 <__subdf3>
 200858c:	bc800005 	stb	r18,0(r23)
 2008590:	dac01617 	ldw	r11,88(sp)
 2008594:	102b883a 	mov	r21,r2
 2008598:	00800044 	movi	r2,1
 200859c:	bd800044 	addi	r22,r23,1
 20085a0:	1815883a 	mov	r10,r3
 20085a4:	58802226 	beq	r11,r2,2008630 <_dtoa_r+0x1410>
 20085a8:	bad7883a 	add	r11,r23,r11
 20085ac:	dc001415 	stw	r16,80(sp)
 20085b0:	a805883a 	mov	r2,r21
 20085b4:	b027883a 	mov	r19,r22
 20085b8:	5821883a 	mov	r16,r11
 20085bc:	882b883a 	mov	r21,r17
 20085c0:	000d883a 	mov	r6,zero
 20085c4:	01d00934 	movhi	r7,16420
 20085c8:	1009883a 	mov	r4,r2
 20085cc:	180b883a 	mov	r5,r3
 20085d0:	20017f00 	call	20017f0 <__muldf3>
 20085d4:	180b883a 	mov	r5,r3
 20085d8:	1009883a 	mov	r4,r2
 20085dc:	1829883a 	mov	r20,r3
 20085e0:	1023883a 	mov	r17,r2
 20085e4:	2001d5c0 	call	2001d5c <__fixdfsi>
 20085e8:	1009883a 	mov	r4,r2
 20085ec:	1025883a 	mov	r18,r2
 20085f0:	2001c880 	call	2001c88 <__floatsidf>
 20085f4:	8809883a 	mov	r4,r17
 20085f8:	a00b883a 	mov	r5,r20
 20085fc:	100d883a 	mov	r6,r2
 2008600:	180f883a 	mov	r7,r3
 2008604:	94800c04 	addi	r18,r18,48
 2008608:	200fc480 	call	200fc48 <__subdf3>
 200860c:	9cc00044 	addi	r19,r19,1
 2008610:	9cbfffc5 	stb	r18,-1(r19)
 2008614:	9c3fea1e 	bne	r19,r16,20085c0 <__alt_mem_epcs_flash_controller+0xfdfff5c0>
 2008618:	1815883a 	mov	r10,r3
 200861c:	d8c01017 	ldw	r3,64(sp)
 2008620:	dc001417 	ldw	r16,80(sp)
 2008624:	a823883a 	mov	r17,r21
 2008628:	b0ed883a 	add	r22,r22,r3
 200862c:	102b883a 	mov	r21,r2
 2008630:	d9001117 	ldw	r4,68(sp)
 2008634:	d9401217 	ldw	r5,72(sp)
 2008638:	000d883a 	mov	r6,zero
 200863c:	01cff834 	movhi	r7,16352
 2008640:	da801515 	stw	r10,84(sp)
 2008644:	200fbf40 	call	200fbf4 <__adddf3>
 2008648:	da801517 	ldw	r10,84(sp)
 200864c:	1009883a 	mov	r4,r2
 2008650:	180b883a 	mov	r5,r3
 2008654:	500f883a 	mov	r7,r10
 2008658:	a80d883a 	mov	r6,r21
 200865c:	200fe280 	call	200fe28 <__ltdf2>
 2008660:	da801517 	ldw	r10,84(sp)
 2008664:	10003b0e 	bge	r2,zero,2008754 <_dtoa_r+0x1534>
 2008668:	d9c01317 	ldw	r7,76(sp)
 200866c:	b53fffc3 	ldbu	r20,-1(r22)
 2008670:	d9c00615 	stw	r7,24(sp)
 2008674:	003d3106 	br	2007b3c <__alt_mem_epcs_flash_controller+0xfdffeb3c>
 2008678:	d8800817 	ldw	r2,32(sp)
 200867c:	11e5c83a 	sub	r18,r2,r7
 2008680:	0005883a 	mov	r2,zero
 2008684:	003d5006 	br	2007bc8 <__alt_mem_epcs_flash_controller+0xfdffebc8>
 2008688:	05800044 	movi	r22,1
 200868c:	003dc406 	br	2007da0 <__alt_mem_epcs_flash_controller+0xfdffeda0>
 2008690:	a5000044 	addi	r20,r20,1
 2008694:	15000005 	stb	r20,0(r2)
 2008698:	003c8206 	br	20078a4 <__alt_mem_epcs_flash_controller+0xfdffe8a4>
 200869c:	d8800217 	ldw	r2,8(sp)
 20086a0:	00c00d84 	movi	r3,54
 20086a4:	dcc00a17 	ldw	r19,40(sp)
 20086a8:	1885c83a 	sub	r2,r3,r2
 20086ac:	dc800817 	ldw	r18,32(sp)
 20086b0:	003d4506 	br	2007bc8 <__alt_mem_epcs_flash_controller+0xfdffebc8>
 20086b4:	dcc00317 	ldw	r19,12(sp)
 20086b8:	8829883a 	mov	r20,r17
 20086bc:	04800084 	movi	r18,2
 20086c0:	003bea06 	br	200766c <__alt_mem_epcs_flash_controller+0xfdffe66c>
 20086c4:	d9000917 	ldw	r4,36(sp)
 20086c8:	203f1126 	beq	r4,zero,2008310 <__alt_mem_epcs_flash_controller+0xfdfff310>
 20086cc:	d9c00e17 	ldw	r7,56(sp)
 20086d0:	01fca20e 	bge	zero,r7,200795c <__alt_mem_epcs_flash_controller+0xfdffe95c>
 20086d4:	a00b883a 	mov	r5,r20
 20086d8:	9809883a 	mov	r4,r19
 20086dc:	000d883a 	mov	r6,zero
 20086e0:	01d00934 	movhi	r7,16420
 20086e4:	20017f00 	call	20017f0 <__muldf3>
 20086e8:	91000044 	addi	r4,r18,1
 20086ec:	1027883a 	mov	r19,r2
 20086f0:	1829883a 	mov	r20,r3
 20086f4:	2001c880 	call	2001c88 <__floatsidf>
 20086f8:	9809883a 	mov	r4,r19
 20086fc:	a00b883a 	mov	r5,r20
 2008700:	100d883a 	mov	r6,r2
 2008704:	180f883a 	mov	r7,r3
 2008708:	20017f00 	call	20017f0 <__muldf3>
 200870c:	1009883a 	mov	r4,r2
 2008710:	180b883a 	mov	r5,r3
 2008714:	000d883a 	mov	r6,zero
 2008718:	01d00734 	movhi	r7,16412
 200871c:	200fbf40 	call	200fbf4 <__adddf3>
 2008720:	1025883a 	mov	r18,r2
 2008724:	d8800617 	ldw	r2,24(sp)
 2008728:	057f3034 	movhi	r21,64704
 200872c:	1d6b883a 	add	r21,r3,r21
 2008730:	10bfffc4 	addi	r2,r2,-1
 2008734:	d8801315 	stw	r2,76(sp)
 2008738:	dac00e17 	ldw	r11,56(sp)
 200873c:	003be706 	br	20076dc <__alt_mem_epcs_flash_controller+0xfdffe6dc>
 2008740:	01000e44 	movi	r4,57
 2008744:	91000005 	stb	r4,0(r18)
 2008748:	95800044 	addi	r22,r18,1
 200874c:	982b883a 	mov	r21,r19
 2008750:	003da106 	br	2007dd8 <__alt_mem_epcs_flash_controller+0xfdffedd8>
 2008754:	d9801117 	ldw	r6,68(sp)
 2008758:	d9c01217 	ldw	r7,72(sp)
 200875c:	0009883a 	mov	r4,zero
 2008760:	014ff834 	movhi	r5,16352
 2008764:	da801515 	stw	r10,84(sp)
 2008768:	200fc480 	call	200fc48 <__subdf3>
 200876c:	da801517 	ldw	r10,84(sp)
 2008770:	1009883a 	mov	r4,r2
 2008774:	180b883a 	mov	r5,r3
 2008778:	a80d883a 	mov	r6,r21
 200877c:	500f883a 	mov	r7,r10
 2008780:	200fd600 	call	200fd60 <__gtdf2>
 2008784:	00bc750e 	bge	zero,r2,200795c <__alt_mem_epcs_flash_controller+0xfdffe95c>
 2008788:	01000c04 	movi	r4,48
 200878c:	00000106 	br	2008794 <_dtoa_r+0x1574>
 2008790:	102d883a 	mov	r22,r2
 2008794:	b0bfffc4 	addi	r2,r22,-1
 2008798:	10c00007 	ldb	r3,0(r2)
 200879c:	193ffc26 	beq	r3,r4,2008790 <__alt_mem_epcs_flash_controller+0xfdfff790>
 20087a0:	d8801317 	ldw	r2,76(sp)
 20087a4:	d8800615 	stw	r2,24(sp)
 20087a8:	003c3e06 	br	20078a4 <__alt_mem_epcs_flash_controller+0xfdffe8a4>
 20087ac:	d9001317 	ldw	r4,76(sp)
 20087b0:	df001117 	ldw	fp,68(sp)
 20087b4:	d9000615 	stw	r4,24(sp)
 20087b8:	003ce006 	br	2007b3c <__alt_mem_epcs_flash_controller+0xfdffeb3c>
 20087bc:	df001117 	ldw	fp,68(sp)
 20087c0:	dc401217 	ldw	r17,72(sp)
 20087c4:	003c6506 	br	200795c <__alt_mem_epcs_flash_controller+0xfdffe95c>
 20087c8:	103e7a1e 	bne	r2,zero,20081b4 <__alt_mem_epcs_flash_controller+0xfdfff1b4>
 20087cc:	1880004c 	andi	r2,r3,1
 20087d0:	103e7826 	beq	r2,zero,20081b4 <__alt_mem_epcs_flash_controller+0xfdfff1b4>
 20087d4:	003e7406 	br	20081a8 <__alt_mem_epcs_flash_controller+0xfdfff1a8>
 20087d8:	8009883a 	mov	r4,r16
 20087dc:	a80b883a 	mov	r5,r21
 20087e0:	01800284 	movi	r6,10
 20087e4:	000f883a 	mov	r7,zero
 20087e8:	2009d9c0 	call	2009d9c <__multadd>
 20087ec:	d9000e17 	ldw	r4,56(sp)
 20087f0:	102b883a 	mov	r21,r2
 20087f4:	d9000915 	stw	r4,36(sp)
 20087f8:	003d5106 	br	2007d40 <__alt_mem_epcs_flash_controller+0xfdffed40>
 20087fc:	04800084 	movi	r18,2
 2008800:	003b9a06 	br	200766c <__alt_mem_epcs_flash_controller+0xfdffe66c>
 2008804:	d8c01317 	ldw	r3,76(sp)
 2008808:	d8c00615 	stw	r3,24(sp)
 200880c:	003ccb06 	br	2007b3c <__alt_mem_epcs_flash_controller+0xfdffeb3c>
 2008810:	d8c01317 	ldw	r3,76(sp)
 2008814:	d8c00615 	stw	r3,24(sp)
 2008818:	003c2206 	br	20078a4 <__alt_mem_epcs_flash_controller+0xfdffe8a4>
 200881c:	20fd3826 	beq	r4,r3,2007d00 <__alt_mem_epcs_flash_controller+0xfdffed00>
 2008820:	00c00f04 	movi	r3,60
 2008824:	1885c83a 	sub	r2,r3,r2
 2008828:	003da906 	br	2007ed0 <__alt_mem_epcs_flash_controller+0xfdffeed0>
 200882c:	000b883a 	mov	r5,zero
 2008830:	003b5406 	br	2007584 <__alt_mem_epcs_flash_controller+0xfdffe584>
 2008834:	04c00044 	movi	r19,1
 2008838:	003b3b06 	br	2007528 <__alt_mem_epcs_flash_controller+0xfdffe528>

0200883c <_fclose_r>:
 200883c:	defffc04 	addi	sp,sp,-16
 2008840:	dc400115 	stw	r17,4(sp)
 2008844:	dc000015 	stw	r16,0(sp)
 2008848:	dfc00315 	stw	ra,12(sp)
 200884c:	dc800215 	stw	r18,8(sp)
 2008850:	2821883a 	mov	r16,r5
 2008854:	2023883a 	mov	r17,r4
 2008858:	28003426 	beq	r5,zero,200892c <_fclose_r+0xf0>
 200885c:	20029a80 	call	20029a8 <__sfp_lock_acquire>
 2008860:	88000226 	beq	r17,zero,200886c <_fclose_r+0x30>
 2008864:	88800e17 	ldw	r2,56(r17)
 2008868:	10003826 	beq	r2,zero,200894c <_fclose_r+0x110>
 200886c:	8080030f 	ldh	r2,12(r16)
 2008870:	10002526 	beq	r2,zero,2008908 <_fclose_r+0xcc>
 2008874:	8809883a 	mov	r4,r17
 2008878:	800b883a 	mov	r5,r16
 200887c:	20024e40 	call	20024e4 <_fflush_r>
 2008880:	1025883a 	mov	r18,r2
 2008884:	80800b17 	ldw	r2,44(r16)
 2008888:	10000426 	beq	r2,zero,200889c <_fclose_r+0x60>
 200888c:	81400717 	ldw	r5,28(r16)
 2008890:	8809883a 	mov	r4,r17
 2008894:	103ee83a 	callr	r2
 2008898:	10003516 	blt	r2,zero,2008970 <_fclose_r+0x134>
 200889c:	8080030b 	ldhu	r2,12(r16)
 20088a0:	1080200c 	andi	r2,r2,128
 20088a4:	10bfffcc 	andi	r2,r2,65535
 20088a8:	10a0001c 	xori	r2,r2,32768
 20088ac:	10a00004 	addi	r2,r2,-32768
 20088b0:	10002b1e 	bne	r2,zero,2008960 <_fclose_r+0x124>
 20088b4:	81400c17 	ldw	r5,48(r16)
 20088b8:	28000526 	beq	r5,zero,20088d0 <_fclose_r+0x94>
 20088bc:	80801004 	addi	r2,r16,64
 20088c0:	28800226 	beq	r5,r2,20088cc <_fclose_r+0x90>
 20088c4:	8809883a 	mov	r4,r17
 20088c8:	2008d440 	call	2008d44 <_free_r>
 20088cc:	80000c15 	stw	zero,48(r16)
 20088d0:	81401117 	ldw	r5,68(r16)
 20088d4:	28000326 	beq	r5,zero,20088e4 <_fclose_r+0xa8>
 20088d8:	8809883a 	mov	r4,r17
 20088dc:	2008d440 	call	2008d44 <_free_r>
 20088e0:	80001115 	stw	zero,68(r16)
 20088e4:	8000030d 	sth	zero,12(r16)
 20088e8:	20029ac0 	call	20029ac <__sfp_lock_release>
 20088ec:	9005883a 	mov	r2,r18
 20088f0:	dfc00317 	ldw	ra,12(sp)
 20088f4:	dc800217 	ldw	r18,8(sp)
 20088f8:	dc400117 	ldw	r17,4(sp)
 20088fc:	dc000017 	ldw	r16,0(sp)
 2008900:	dec00404 	addi	sp,sp,16
 2008904:	f800283a 	ret
 2008908:	20029ac0 	call	20029ac <__sfp_lock_release>
 200890c:	0025883a 	mov	r18,zero
 2008910:	9005883a 	mov	r2,r18
 2008914:	dfc00317 	ldw	ra,12(sp)
 2008918:	dc800217 	ldw	r18,8(sp)
 200891c:	dc400117 	ldw	r17,4(sp)
 2008920:	dc000017 	ldw	r16,0(sp)
 2008924:	dec00404 	addi	sp,sp,16
 2008928:	f800283a 	ret
 200892c:	0025883a 	mov	r18,zero
 2008930:	9005883a 	mov	r2,r18
 2008934:	dfc00317 	ldw	ra,12(sp)
 2008938:	dc800217 	ldw	r18,8(sp)
 200893c:	dc400117 	ldw	r17,4(sp)
 2008940:	dc000017 	ldw	r16,0(sp)
 2008944:	dec00404 	addi	sp,sp,16
 2008948:	f800283a 	ret
 200894c:	8809883a 	mov	r4,r17
 2008950:	20027a00 	call	20027a0 <__sinit>
 2008954:	8080030f 	ldh	r2,12(r16)
 2008958:	103fc61e 	bne	r2,zero,2008874 <__alt_mem_epcs_flash_controller+0xfdfff874>
 200895c:	003fea06 	br	2008908 <__alt_mem_epcs_flash_controller+0xfdfff908>
 2008960:	81400417 	ldw	r5,16(r16)
 2008964:	8809883a 	mov	r4,r17
 2008968:	2008d440 	call	2008d44 <_free_r>
 200896c:	003fd106 	br	20088b4 <__alt_mem_epcs_flash_controller+0xfdfff8b4>
 2008970:	04bfffc4 	movi	r18,-1
 2008974:	003fc906 	br	200889c <__alt_mem_epcs_flash_controller+0xfdfff89c>

02008978 <fclose>:
 2008978:	00808274 	movhi	r2,521
 200897c:	10a3b704 	addi	r2,r2,-28964
 2008980:	200b883a 	mov	r5,r4
 2008984:	11000017 	ldw	r4,0(r2)
 2008988:	200883c1 	jmpi	200883c <_fclose_r>

0200898c <_fread_r>:
 200898c:	defff504 	addi	sp,sp,-44
 2008990:	dd000515 	stw	r20,20(sp)
 2008994:	dcc00415 	stw	r19,16(sp)
 2008998:	2029883a 	mov	r20,r4
 200899c:	2827883a 	mov	r19,r5
 20089a0:	3809883a 	mov	r4,r7
 20089a4:	300b883a 	mov	r5,r6
 20089a8:	ddc00815 	stw	r23,32(sp)
 20089ac:	dd800715 	stw	r22,28(sp)
 20089b0:	dd400615 	stw	r21,24(sp)
 20089b4:	dc000115 	stw	r16,4(sp)
 20089b8:	dfc00a15 	stw	ra,40(sp)
 20089bc:	df000915 	stw	fp,36(sp)
 20089c0:	dc800315 	stw	r18,12(sp)
 20089c4:	dc400215 	stw	r17,8(sp)
 20089c8:	302f883a 	mov	r23,r6
 20089cc:	382b883a 	mov	r21,r7
 20089d0:	2001f500 	call	2001f50 <__mulsi3>
 20089d4:	102d883a 	mov	r22,r2
 20089d8:	dc000b17 	ldw	r16,44(sp)
 20089dc:	10002e26 	beq	r2,zero,2008a98 <_fread_r+0x10c>
 20089e0:	a0000226 	beq	r20,zero,20089ec <_fread_r+0x60>
 20089e4:	a0800e17 	ldw	r2,56(r20)
 20089e8:	10006726 	beq	r2,zero,2008b88 <_fread_r+0x1fc>
 20089ec:	84400117 	ldw	r17,4(r16)
 20089f0:	88002b16 	blt	r17,zero,2008aa0 <_fread_r+0x114>
 20089f4:	8080030b 	ldhu	r2,12(r16)
 20089f8:	8807883a 	mov	r3,r17
 20089fc:	1080008c 	andi	r2,r2,2
 2008a00:	10bfffcc 	andi	r2,r2,65535
 2008a04:	10a0001c 	xori	r2,r2,32768
 2008a08:	10a00004 	addi	r2,r2,-32768
 2008a0c:	10002d1e 	bne	r2,zero,2008ac4 <_fread_r+0x138>
 2008a10:	b025883a 	mov	r18,r22
 2008a14:	00000106 	br	2008a1c <_fread_r+0x90>
 2008a18:	84400117 	ldw	r17,4(r16)
 2008a1c:	9809883a 	mov	r4,r19
 2008a20:	880d883a 	mov	r6,r17
 2008a24:	81400017 	ldw	r5,0(r16)
 2008a28:	8c805c2e 	bgeu	r17,r18,2008b9c <_fread_r+0x210>
 2008a2c:	2009a000 	call	2009a00 <memcpy>
 2008a30:	80800017 	ldw	r2,0(r16)
 2008a34:	9c67883a 	add	r19,r19,r17
 2008a38:	9465c83a 	sub	r18,r18,r17
 2008a3c:	1463883a 	add	r17,r2,r17
 2008a40:	a009883a 	mov	r4,r20
 2008a44:	800b883a 	mov	r5,r16
 2008a48:	84400015 	stw	r17,0(r16)
 2008a4c:	200b3a00 	call	200b3a0 <__srefill_r>
 2008a50:	103ff126 	beq	r2,zero,2008a18 <__alt_mem_epcs_flash_controller+0xfdfffa18>
 2008a54:	b489c83a 	sub	r4,r22,r18
 2008a58:	b80b883a 	mov	r5,r23
 2008a5c:	2001f400 	call	2001f40 <__udivsi3>
 2008a60:	102b883a 	mov	r21,r2
 2008a64:	a805883a 	mov	r2,r21
 2008a68:	dfc00a17 	ldw	ra,40(sp)
 2008a6c:	df000917 	ldw	fp,36(sp)
 2008a70:	ddc00817 	ldw	r23,32(sp)
 2008a74:	dd800717 	ldw	r22,28(sp)
 2008a78:	dd400617 	ldw	r21,24(sp)
 2008a7c:	dd000517 	ldw	r20,20(sp)
 2008a80:	dcc00417 	ldw	r19,16(sp)
 2008a84:	dc800317 	ldw	r18,12(sp)
 2008a88:	dc400217 	ldw	r17,8(sp)
 2008a8c:	dc000117 	ldw	r16,4(sp)
 2008a90:	dec00b04 	addi	sp,sp,44
 2008a94:	f800283a 	ret
 2008a98:	002b883a 	mov	r21,zero
 2008a9c:	003ff106 	br	2008a64 <__alt_mem_epcs_flash_controller+0xfdfffa64>
 2008aa0:	8080030b 	ldhu	r2,12(r16)
 2008aa4:	80000115 	stw	zero,4(r16)
 2008aa8:	0007883a 	mov	r3,zero
 2008aac:	1080008c 	andi	r2,r2,2
 2008ab0:	10bfffcc 	andi	r2,r2,65535
 2008ab4:	10a0001c 	xori	r2,r2,32768
 2008ab8:	10a00004 	addi	r2,r2,-32768
 2008abc:	0023883a 	mov	r17,zero
 2008ac0:	103fd326 	beq	r2,zero,2008a10 <__alt_mem_epcs_flash_controller+0xfdfffa10>
 2008ac4:	1823883a 	mov	r17,r3
 2008ac8:	b0c0012e 	bgeu	r22,r3,2008ad0 <_fread_r+0x144>
 2008acc:	b023883a 	mov	r17,r22
 2008ad0:	81400017 	ldw	r5,0(r16)
 2008ad4:	9809883a 	mov	r4,r19
 2008ad8:	880d883a 	mov	r6,r17
 2008adc:	2009a000 	call	2009a00 <memcpy>
 2008ae0:	80800117 	ldw	r2,4(r16)
 2008ae4:	84800017 	ldw	r18,0(r16)
 2008ae8:	81400c17 	ldw	r5,48(r16)
 2008aec:	1445c83a 	sub	r2,r2,r17
 2008af0:	9465883a 	add	r18,r18,r17
 2008af4:	84800015 	stw	r18,0(r16)
 2008af8:	80800115 	stw	r2,4(r16)
 2008afc:	9c67883a 	add	r19,r19,r17
 2008b00:	b463c83a 	sub	r17,r22,r17
 2008b04:	28002e26 	beq	r5,zero,2008bc0 <_fread_r+0x234>
 2008b08:	883fd626 	beq	r17,zero,2008a64 <__alt_mem_epcs_flash_controller+0xfdfffa64>
 2008b0c:	80801004 	addi	r2,r16,64
 2008b10:	28800326 	beq	r5,r2,2008b20 <_fread_r+0x194>
 2008b14:	a009883a 	mov	r4,r20
 2008b18:	2008d440 	call	2008d44 <_free_r>
 2008b1c:	84800017 	ldw	r18,0(r16)
 2008b20:	80000c15 	stw	zero,48(r16)
 2008b24:	80c00517 	ldw	r3,20(r16)
 2008b28:	87000417 	ldw	fp,16(r16)
 2008b2c:	d8c00015 	stw	r3,0(sp)
 2008b30:	00000106 	br	2008b38 <_fread_r+0x1ac>
 2008b34:	883fcb26 	beq	r17,zero,2008a64 <__alt_mem_epcs_flash_controller+0xfdfffa64>
 2008b38:	84c00415 	stw	r19,16(r16)
 2008b3c:	84400515 	stw	r17,20(r16)
 2008b40:	84c00015 	stw	r19,0(r16)
 2008b44:	a009883a 	mov	r4,r20
 2008b48:	800b883a 	mov	r5,r16
 2008b4c:	200b3a00 	call	200b3a0 <__srefill_r>
 2008b50:	d8c00017 	ldw	r3,0(sp)
 2008b54:	81000117 	ldw	r4,4(r16)
 2008b58:	87000415 	stw	fp,16(r16)
 2008b5c:	80c00515 	stw	r3,20(r16)
 2008b60:	84800015 	stw	r18,0(r16)
 2008b64:	80000115 	stw	zero,4(r16)
 2008b68:	8923c83a 	sub	r17,r17,r4
 2008b6c:	9927883a 	add	r19,r19,r4
 2008b70:	103ff026 	beq	r2,zero,2008b34 <__alt_mem_epcs_flash_controller+0xfdfffb34>
 2008b74:	b449c83a 	sub	r4,r22,r17
 2008b78:	b80b883a 	mov	r5,r23
 2008b7c:	2001f400 	call	2001f40 <__udivsi3>
 2008b80:	102b883a 	mov	r21,r2
 2008b84:	003fb706 	br	2008a64 <__alt_mem_epcs_flash_controller+0xfdfffa64>
 2008b88:	a009883a 	mov	r4,r20
 2008b8c:	20027a00 	call	20027a0 <__sinit>
 2008b90:	84400117 	ldw	r17,4(r16)
 2008b94:	883f970e 	bge	r17,zero,20089f4 <__alt_mem_epcs_flash_controller+0xfdfff9f4>
 2008b98:	003fc106 	br	2008aa0 <__alt_mem_epcs_flash_controller+0xfdfffaa0>
 2008b9c:	900d883a 	mov	r6,r18
 2008ba0:	2009a000 	call	2009a00 <memcpy>
 2008ba4:	80800117 	ldw	r2,4(r16)
 2008ba8:	80c00017 	ldw	r3,0(r16)
 2008bac:	1485c83a 	sub	r2,r2,r18
 2008bb0:	1ca5883a 	add	r18,r3,r18
 2008bb4:	80800115 	stw	r2,4(r16)
 2008bb8:	84800015 	stw	r18,0(r16)
 2008bbc:	003fa906 	br	2008a64 <__alt_mem_epcs_flash_controller+0xfdfffa64>
 2008bc0:	883fd81e 	bne	r17,zero,2008b24 <__alt_mem_epcs_flash_controller+0xfdfffb24>
 2008bc4:	003fa706 	br	2008a64 <__alt_mem_epcs_flash_controller+0xfdfffa64>

02008bc8 <fread>:
 2008bc8:	00808274 	movhi	r2,521
 2008bcc:	10a3b704 	addi	r2,r2,-28964
 2008bd0:	2011883a 	mov	r8,r4
 2008bd4:	11000017 	ldw	r4,0(r2)
 2008bd8:	defffe04 	addi	sp,sp,-8
 2008bdc:	2807883a 	mov	r3,r5
 2008be0:	3005883a 	mov	r2,r6
 2008be4:	d9c00015 	stw	r7,0(sp)
 2008be8:	400b883a 	mov	r5,r8
 2008bec:	180d883a 	mov	r6,r3
 2008bf0:	100f883a 	mov	r7,r2
 2008bf4:	dfc00115 	stw	ra,4(sp)
 2008bf8:	200898c0 	call	200898c <_fread_r>
 2008bfc:	dfc00117 	ldw	ra,4(sp)
 2008c00:	dec00204 	addi	sp,sp,8
 2008c04:	f800283a 	ret

02008c08 <_malloc_trim_r>:
 2008c08:	defffb04 	addi	sp,sp,-20
 2008c0c:	dcc00315 	stw	r19,12(sp)
 2008c10:	dc800215 	stw	r18,8(sp)
 2008c14:	dc400115 	stw	r17,4(sp)
 2008c18:	dc000015 	stw	r16,0(sp)
 2008c1c:	2827883a 	mov	r19,r5
 2008c20:	dfc00415 	stw	ra,16(sp)
 2008c24:	04408234 	movhi	r17,520
 2008c28:	8c5df304 	addi	r17,r17,30668
 2008c2c:	2021883a 	mov	r16,r4
 2008c30:	2010b0c0 	call	2010b0c <__malloc_lock>
 2008c34:	88800217 	ldw	r2,8(r17)
 2008c38:	14800117 	ldw	r18,4(r2)
 2008c3c:	00bfff04 	movi	r2,-4
 2008c40:	90a4703a 	and	r18,r18,r2
 2008c44:	9083fbc4 	addi	r2,r18,4079
 2008c48:	14e7c83a 	sub	r19,r2,r19
 2008c4c:	9826d33a 	srli	r19,r19,12
 2008c50:	0083ffc4 	movi	r2,4095
 2008c54:	9cffffc4 	addi	r19,r19,-1
 2008c58:	9826933a 	slli	r19,r19,12
 2008c5c:	14c0060e 	bge	r2,r19,2008c78 <_malloc_trim_r+0x70>
 2008c60:	8009883a 	mov	r4,r16
 2008c64:	000b883a 	mov	r5,zero
 2008c68:	20034a80 	call	20034a8 <_sbrk_r>
 2008c6c:	88c00217 	ldw	r3,8(r17)
 2008c70:	1c87883a 	add	r3,r3,r18
 2008c74:	10c00a26 	beq	r2,r3,2008ca0 <_malloc_trim_r+0x98>
 2008c78:	8009883a 	mov	r4,r16
 2008c7c:	2010b2c0 	call	2010b2c <__malloc_unlock>
 2008c80:	0005883a 	mov	r2,zero
 2008c84:	dfc00417 	ldw	ra,16(sp)
 2008c88:	dcc00317 	ldw	r19,12(sp)
 2008c8c:	dc800217 	ldw	r18,8(sp)
 2008c90:	dc400117 	ldw	r17,4(sp)
 2008c94:	dc000017 	ldw	r16,0(sp)
 2008c98:	dec00504 	addi	sp,sp,20
 2008c9c:	f800283a 	ret
 2008ca0:	8009883a 	mov	r4,r16
 2008ca4:	04cbc83a 	sub	r5,zero,r19
 2008ca8:	20034a80 	call	20034a8 <_sbrk_r>
 2008cac:	00ffffc4 	movi	r3,-1
 2008cb0:	10c01326 	beq	r2,r3,2008d00 <_malloc_trim_r+0xf8>
 2008cb4:	00808274 	movhi	r2,521
 2008cb8:	10ab0d04 	addi	r2,r2,-21452
 2008cbc:	11000017 	ldw	r4,0(r2)
 2008cc0:	88c00217 	ldw	r3,8(r17)
 2008cc4:	94e5c83a 	sub	r18,r18,r19
 2008cc8:	94800054 	ori	r18,r18,1
 2008ccc:	24e7c83a 	sub	r19,r4,r19
 2008cd0:	1c800115 	stw	r18,4(r3)
 2008cd4:	8009883a 	mov	r4,r16
 2008cd8:	14c00015 	stw	r19,0(r2)
 2008cdc:	2010b2c0 	call	2010b2c <__malloc_unlock>
 2008ce0:	00800044 	movi	r2,1
 2008ce4:	dfc00417 	ldw	ra,16(sp)
 2008ce8:	dcc00317 	ldw	r19,12(sp)
 2008cec:	dc800217 	ldw	r18,8(sp)
 2008cf0:	dc400117 	ldw	r17,4(sp)
 2008cf4:	dc000017 	ldw	r16,0(sp)
 2008cf8:	dec00504 	addi	sp,sp,20
 2008cfc:	f800283a 	ret
 2008d00:	8009883a 	mov	r4,r16
 2008d04:	000b883a 	mov	r5,zero
 2008d08:	20034a80 	call	20034a8 <_sbrk_r>
 2008d0c:	88c00217 	ldw	r3,8(r17)
 2008d10:	014003c4 	movi	r5,15
 2008d14:	10c9c83a 	sub	r4,r2,r3
 2008d18:	293fd70e 	bge	r5,r4,2008c78 <__alt_mem_epcs_flash_controller+0xfdfffc78>
 2008d1c:	01408274 	movhi	r5,521
 2008d20:	2963b804 	addi	r5,r5,-28960
 2008d24:	29400017 	ldw	r5,0(r5)
 2008d28:	21000054 	ori	r4,r4,1
 2008d2c:	19000115 	stw	r4,4(r3)
 2008d30:	1145c83a 	sub	r2,r2,r5
 2008d34:	01408274 	movhi	r5,521
 2008d38:	296b0d04 	addi	r5,r5,-21452
 2008d3c:	28800015 	stw	r2,0(r5)
 2008d40:	003fcd06 	br	2008c78 <__alt_mem_epcs_flash_controller+0xfdfffc78>

02008d44 <_free_r>:
 2008d44:	defffd04 	addi	sp,sp,-12
 2008d48:	dc400115 	stw	r17,4(sp)
 2008d4c:	dc000015 	stw	r16,0(sp)
 2008d50:	dfc00215 	stw	ra,8(sp)
 2008d54:	2821883a 	mov	r16,r5
 2008d58:	2023883a 	mov	r17,r4
 2008d5c:	28004b26 	beq	r5,zero,2008e8c <_free_r+0x148>
 2008d60:	2010b0c0 	call	2010b0c <__malloc_lock>
 2008d64:	823fff17 	ldw	r8,-4(r16)
 2008d68:	00bfff84 	movi	r2,-2
 2008d6c:	81bffe04 	addi	r6,r16,-8
 2008d70:	4084703a 	and	r2,r8,r2
 2008d74:	3087883a 	add	r3,r6,r2
 2008d78:	01408234 	movhi	r5,520
 2008d7c:	295df304 	addi	r5,r5,30668
 2008d80:	1a400117 	ldw	r9,4(r3)
 2008d84:	29000217 	ldw	r4,8(r5)
 2008d88:	01ffff04 	movi	r7,-4
 2008d8c:	49ce703a 	and	r7,r9,r7
 2008d90:	20c06526 	beq	r4,r3,2008f28 <_free_r+0x1e4>
 2008d94:	19c00115 	stw	r7,4(r3)
 2008d98:	4200004c 	andi	r8,r8,1
 2008d9c:	40003026 	beq	r8,zero,2008e60 <_free_r+0x11c>
 2008da0:	0009883a 	mov	r4,zero
 2008da4:	19d1883a 	add	r8,r3,r7
 2008da8:	42000117 	ldw	r8,4(r8)
 2008dac:	4200004c 	andi	r8,r8,1
 2008db0:	4000061e 	bne	r8,zero,2008dcc <_free_r+0x88>
 2008db4:	11c5883a 	add	r2,r2,r7
 2008db8:	19c00217 	ldw	r7,8(r3)
 2008dbc:	20004e26 	beq	r4,zero,2008ef8 <_free_r+0x1b4>
 2008dc0:	18c00317 	ldw	r3,12(r3)
 2008dc4:	38c00315 	stw	r3,12(r7)
 2008dc8:	19c00215 	stw	r7,8(r3)
 2008dcc:	11c00054 	ori	r7,r2,1
 2008dd0:	3087883a 	add	r3,r6,r2
 2008dd4:	31c00115 	stw	r7,4(r6)
 2008dd8:	18800015 	stw	r2,0(r3)
 2008ddc:	20001a1e 	bne	r4,zero,2008e48 <_free_r+0x104>
 2008de0:	00c07fc4 	movi	r3,511
 2008de4:	18802e2e 	bgeu	r3,r2,2008ea0 <_free_r+0x15c>
 2008de8:	1006d27a 	srli	r3,r2,9
 2008dec:	01000104 	movi	r4,4
 2008df0:	20c06636 	bltu	r4,r3,2008f8c <_free_r+0x248>
 2008df4:	1008d1ba 	srli	r4,r2,6
 2008df8:	21000e04 	addi	r4,r4,56
 2008dfc:	210f883a 	add	r7,r4,r4
 2008e00:	39cf883a 	add	r7,r7,r7
 2008e04:	39cf883a 	add	r7,r7,r7
 2008e08:	29cf883a 	add	r7,r5,r7
 2008e0c:	38c00217 	ldw	r3,8(r7)
 2008e10:	01408234 	movhi	r5,520
 2008e14:	295df304 	addi	r5,r5,30668
 2008e18:	19c06126 	beq	r3,r7,2008fa0 <_free_r+0x25c>
 2008e1c:	013fff04 	movi	r4,-4
 2008e20:	19400117 	ldw	r5,4(r3)
 2008e24:	290a703a 	and	r5,r5,r4
 2008e28:	1140022e 	bgeu	r2,r5,2008e34 <_free_r+0xf0>
 2008e2c:	18c00217 	ldw	r3,8(r3)
 2008e30:	38fffb1e 	bne	r7,r3,2008e20 <__alt_mem_epcs_flash_controller+0xfdfffe20>
 2008e34:	18800317 	ldw	r2,12(r3)
 2008e38:	30800315 	stw	r2,12(r6)
 2008e3c:	30c00215 	stw	r3,8(r6)
 2008e40:	11800215 	stw	r6,8(r2)
 2008e44:	19800315 	stw	r6,12(r3)
 2008e48:	8809883a 	mov	r4,r17
 2008e4c:	dfc00217 	ldw	ra,8(sp)
 2008e50:	dc400117 	ldw	r17,4(sp)
 2008e54:	dc000017 	ldw	r16,0(sp)
 2008e58:	dec00304 	addi	sp,sp,12
 2008e5c:	2010b2c1 	jmpi	2010b2c <__malloc_unlock>
 2008e60:	813ffe17 	ldw	r4,-8(r16)
 2008e64:	2a400204 	addi	r9,r5,8
 2008e68:	310dc83a 	sub	r6,r6,r4
 2008e6c:	32000217 	ldw	r8,8(r6)
 2008e70:	1105883a 	add	r2,r2,r4
 2008e74:	42404326 	beq	r8,r9,2008f84 <_free_r+0x240>
 2008e78:	32400317 	ldw	r9,12(r6)
 2008e7c:	0009883a 	mov	r4,zero
 2008e80:	42400315 	stw	r9,12(r8)
 2008e84:	4a000215 	stw	r8,8(r9)
 2008e88:	003fc606 	br	2008da4 <__alt_mem_epcs_flash_controller+0xfdfffda4>
 2008e8c:	dfc00217 	ldw	ra,8(sp)
 2008e90:	dc400117 	ldw	r17,4(sp)
 2008e94:	dc000017 	ldw	r16,0(sp)
 2008e98:	dec00304 	addi	sp,sp,12
 2008e9c:	f800283a 	ret
 2008ea0:	1004d0fa 	srli	r2,r2,3
 2008ea4:	02000044 	movi	r8,1
 2008ea8:	29c00117 	ldw	r7,4(r5)
 2008eac:	1087883a 	add	r3,r2,r2
 2008eb0:	18c7883a 	add	r3,r3,r3
 2008eb4:	1005d0ba 	srai	r2,r2,2
 2008eb8:	18c7883a 	add	r3,r3,r3
 2008ebc:	28c7883a 	add	r3,r5,r3
 2008ec0:	19000217 	ldw	r4,8(r3)
 2008ec4:	4084983a 	sll	r2,r8,r2
 2008ec8:	30c00315 	stw	r3,12(r6)
 2008ecc:	31000215 	stw	r4,8(r6)
 2008ed0:	11c4b03a 	or	r2,r2,r7
 2008ed4:	21800315 	stw	r6,12(r4)
 2008ed8:	8809883a 	mov	r4,r17
 2008edc:	28800115 	stw	r2,4(r5)
 2008ee0:	19800215 	stw	r6,8(r3)
 2008ee4:	dfc00217 	ldw	ra,8(sp)
 2008ee8:	dc400117 	ldw	r17,4(sp)
 2008eec:	dc000017 	ldw	r16,0(sp)
 2008ef0:	dec00304 	addi	sp,sp,12
 2008ef4:	2010b2c1 	jmpi	2010b2c <__malloc_unlock>
 2008ef8:	02008234 	movhi	r8,520
 2008efc:	421df504 	addi	r8,r8,30676
 2008f00:	3a3faf1e 	bne	r7,r8,2008dc0 <__alt_mem_epcs_flash_controller+0xfdfffdc0>
 2008f04:	29800515 	stw	r6,20(r5)
 2008f08:	29800415 	stw	r6,16(r5)
 2008f0c:	11000054 	ori	r4,r2,1
 2008f10:	3087883a 	add	r3,r6,r2
 2008f14:	31c00315 	stw	r7,12(r6)
 2008f18:	31c00215 	stw	r7,8(r6)
 2008f1c:	31000115 	stw	r4,4(r6)
 2008f20:	18800015 	stw	r2,0(r3)
 2008f24:	003fc806 	br	2008e48 <__alt_mem_epcs_flash_controller+0xfdfffe48>
 2008f28:	4200004c 	andi	r8,r8,1
 2008f2c:	3885883a 	add	r2,r7,r2
 2008f30:	4000071e 	bne	r8,zero,2008f50 <_free_r+0x20c>
 2008f34:	81fffe17 	ldw	r7,-8(r16)
 2008f38:	31cdc83a 	sub	r6,r6,r7
 2008f3c:	30c00317 	ldw	r3,12(r6)
 2008f40:	31000217 	ldw	r4,8(r6)
 2008f44:	11c5883a 	add	r2,r2,r7
 2008f48:	20c00315 	stw	r3,12(r4)
 2008f4c:	19000215 	stw	r4,8(r3)
 2008f50:	00c08274 	movhi	r3,521
 2008f54:	18e3b904 	addi	r3,r3,-28956
 2008f58:	18c00017 	ldw	r3,0(r3)
 2008f5c:	11000054 	ori	r4,r2,1
 2008f60:	31000115 	stw	r4,4(r6)
 2008f64:	29800215 	stw	r6,8(r5)
 2008f68:	10ffb736 	bltu	r2,r3,2008e48 <__alt_mem_epcs_flash_controller+0xfdfffe48>
 2008f6c:	00808274 	movhi	r2,521
 2008f70:	10aafa04 	addi	r2,r2,-21528
 2008f74:	11400017 	ldw	r5,0(r2)
 2008f78:	8809883a 	mov	r4,r17
 2008f7c:	2008c080 	call	2008c08 <_malloc_trim_r>
 2008f80:	003fb106 	br	2008e48 <__alt_mem_epcs_flash_controller+0xfdfffe48>
 2008f84:	01000044 	movi	r4,1
 2008f88:	003f8606 	br	2008da4 <__alt_mem_epcs_flash_controller+0xfdfffda4>
 2008f8c:	01000504 	movi	r4,20
 2008f90:	20c00b36 	bltu	r4,r3,2008fc0 <_free_r+0x27c>
 2008f94:	190016c4 	addi	r4,r3,91
 2008f98:	210f883a 	add	r7,r4,r4
 2008f9c:	003f9806 	br	2008e00 <__alt_mem_epcs_flash_controller+0xfdfffe00>
 2008fa0:	2009d0ba 	srai	r4,r4,2
 2008fa4:	00800044 	movi	r2,1
 2008fa8:	29c00117 	ldw	r7,4(r5)
 2008fac:	1108983a 	sll	r4,r2,r4
 2008fb0:	1805883a 	mov	r2,r3
 2008fb4:	21c8b03a 	or	r4,r4,r7
 2008fb8:	29000115 	stw	r4,4(r5)
 2008fbc:	003f9e06 	br	2008e38 <__alt_mem_epcs_flash_controller+0xfdfffe38>
 2008fc0:	01001504 	movi	r4,84
 2008fc4:	20c00436 	bltu	r4,r3,2008fd8 <_free_r+0x294>
 2008fc8:	1008d33a 	srli	r4,r2,12
 2008fcc:	21001b84 	addi	r4,r4,110
 2008fd0:	210f883a 	add	r7,r4,r4
 2008fd4:	003f8a06 	br	2008e00 <__alt_mem_epcs_flash_controller+0xfdfffe00>
 2008fd8:	01005504 	movi	r4,340
 2008fdc:	20c00436 	bltu	r4,r3,2008ff0 <_free_r+0x2ac>
 2008fe0:	1008d3fa 	srli	r4,r2,15
 2008fe4:	21001dc4 	addi	r4,r4,119
 2008fe8:	210f883a 	add	r7,r4,r4
 2008fec:	003f8406 	br	2008e00 <__alt_mem_epcs_flash_controller+0xfdfffe00>
 2008ff0:	01015504 	movi	r4,1364
 2008ff4:	20c00436 	bltu	r4,r3,2009008 <_free_r+0x2c4>
 2008ff8:	1008d4ba 	srli	r4,r2,18
 2008ffc:	21001f04 	addi	r4,r4,124
 2009000:	210f883a 	add	r7,r4,r4
 2009004:	003f7e06 	br	2008e00 <__alt_mem_epcs_flash_controller+0xfdfffe00>
 2009008:	01c03f04 	movi	r7,252
 200900c:	01001f84 	movi	r4,126
 2009010:	003f7b06 	br	2008e00 <__alt_mem_epcs_flash_controller+0xfdfffe00>

02009014 <__sfvwrite_r>:
 2009014:	30800217 	ldw	r2,8(r6)
 2009018:	defff504 	addi	sp,sp,-44
 200901c:	dd400615 	stw	r21,24(sp)
 2009020:	dd000515 	stw	r20,20(sp)
 2009024:	dc000115 	stw	r16,4(sp)
 2009028:	dfc00a15 	stw	ra,40(sp)
 200902c:	df000915 	stw	fp,36(sp)
 2009030:	ddc00815 	stw	r23,32(sp)
 2009034:	dd800715 	stw	r22,28(sp)
 2009038:	dcc00415 	stw	r19,16(sp)
 200903c:	dc800315 	stw	r18,12(sp)
 2009040:	dc400215 	stw	r17,8(sp)
 2009044:	3029883a 	mov	r20,r6
 2009048:	202b883a 	mov	r21,r4
 200904c:	2821883a 	mov	r16,r5
 2009050:	10002126 	beq	r2,zero,20090d8 <__sfvwrite_r+0xc4>
 2009054:	2880030b 	ldhu	r2,12(r5)
 2009058:	10c0020c 	andi	r3,r2,8
 200905c:	18ffffcc 	andi	r3,r3,65535
 2009060:	18e0001c 	xori	r3,r3,32768
 2009064:	18e00004 	addi	r3,r3,-32768
 2009068:	18002826 	beq	r3,zero,200910c <__sfvwrite_r+0xf8>
 200906c:	28c00417 	ldw	r3,16(r5)
 2009070:	18002626 	beq	r3,zero,200910c <__sfvwrite_r+0xf8>
 2009074:	10c0008c 	andi	r3,r2,2
 2009078:	18ffffcc 	andi	r3,r3,65535
 200907c:	18e0001c 	xori	r3,r3,32768
 2009080:	18e00004 	addi	r3,r3,-32768
 2009084:	a4400017 	ldw	r17,0(r20)
 2009088:	18002b26 	beq	r3,zero,2009138 <__sfvwrite_r+0x124>
 200908c:	0027883a 	mov	r19,zero
 2009090:	0025883a 	mov	r18,zero
 2009094:	05810004 	movi	r22,1024
 2009098:	980d883a 	mov	r6,r19
 200909c:	a809883a 	mov	r4,r21
 20090a0:	90004f26 	beq	r18,zero,20091e0 <__sfvwrite_r+0x1cc>
 20090a4:	900f883a 	mov	r7,r18
 20090a8:	81400717 	ldw	r5,28(r16)
 20090ac:	b480012e 	bgeu	r22,r18,20090b4 <__sfvwrite_r+0xa0>
 20090b0:	01c10004 	movi	r7,1024
 20090b4:	80800917 	ldw	r2,36(r16)
 20090b8:	103ee83a 	callr	r2
 20090bc:	0080540e 	bge	zero,r2,2009210 <__sfvwrite_r+0x1fc>
 20090c0:	a0c00217 	ldw	r3,8(r20)
 20090c4:	98a7883a 	add	r19,r19,r2
 20090c8:	90a5c83a 	sub	r18,r18,r2
 20090cc:	1885c83a 	sub	r2,r3,r2
 20090d0:	a0800215 	stw	r2,8(r20)
 20090d4:	103ff01e 	bne	r2,zero,2009098 <__alt_mem_epcs_flash_controller+0xfe000098>
 20090d8:	0005883a 	mov	r2,zero
 20090dc:	dfc00a17 	ldw	ra,40(sp)
 20090e0:	df000917 	ldw	fp,36(sp)
 20090e4:	ddc00817 	ldw	r23,32(sp)
 20090e8:	dd800717 	ldw	r22,28(sp)
 20090ec:	dd400617 	ldw	r21,24(sp)
 20090f0:	dd000517 	ldw	r20,20(sp)
 20090f4:	dcc00417 	ldw	r19,16(sp)
 20090f8:	dc800317 	ldw	r18,12(sp)
 20090fc:	dc400217 	ldw	r17,8(sp)
 2009100:	dc000117 	ldw	r16,4(sp)
 2009104:	dec00b04 	addi	sp,sp,44
 2009108:	f800283a 	ret
 200910c:	a809883a 	mov	r4,r21
 2009110:	800b883a 	mov	r5,r16
 2009114:	2006e0c0 	call	2006e0c <__swsetup_r>
 2009118:	1000f01e 	bne	r2,zero,20094dc <__sfvwrite_r+0x4c8>
 200911c:	8080030b 	ldhu	r2,12(r16)
 2009120:	a4400017 	ldw	r17,0(r20)
 2009124:	10c0008c 	andi	r3,r2,2
 2009128:	18ffffcc 	andi	r3,r3,65535
 200912c:	18e0001c 	xori	r3,r3,32768
 2009130:	18e00004 	addi	r3,r3,-32768
 2009134:	183fd51e 	bne	r3,zero,200908c <__alt_mem_epcs_flash_controller+0xfe00008c>
 2009138:	10c0004c 	andi	r3,r2,1
 200913c:	002d883a 	mov	r22,zero
 2009140:	1800381e 	bne	r3,zero,2009224 <__sfvwrite_r+0x210>
 2009144:	0025883a 	mov	r18,zero
 2009148:	90002126 	beq	r18,zero,20091d0 <__sfvwrite_r+0x1bc>
 200914c:	10c0800c 	andi	r3,r2,512
 2009150:	18ffffcc 	andi	r3,r3,65535
 2009154:	18e0001c 	xori	r3,r3,32768
 2009158:	18e00004 	addi	r3,r3,-32768
 200915c:	84c00217 	ldw	r19,8(r16)
 2009160:	18006b26 	beq	r3,zero,2009310 <__sfvwrite_r+0x2fc>
 2009164:	980f883a 	mov	r7,r19
 2009168:	94c08636 	bltu	r18,r19,2009384 <__sfvwrite_r+0x370>
 200916c:	10c1200c 	andi	r3,r2,1152
 2009170:	18009f1e 	bne	r3,zero,20093f0 <__sfvwrite_r+0x3dc>
 2009174:	81000017 	ldw	r4,0(r16)
 2009178:	982f883a 	mov	r23,r19
 200917c:	9039883a 	mov	fp,r18
 2009180:	9027883a 	mov	r19,r18
 2009184:	380d883a 	mov	r6,r7
 2009188:	b00b883a 	mov	r5,r22
 200918c:	d9c00015 	stw	r7,0(sp)
 2009190:	2009b400 	call	2009b40 <memmove>
 2009194:	d9c00017 	ldw	r7,0(sp)
 2009198:	81000217 	ldw	r4,8(r16)
 200919c:	80800017 	ldw	r2,0(r16)
 20091a0:	25efc83a 	sub	r23,r4,r23
 20091a4:	11cf883a 	add	r7,r2,r7
 20091a8:	85c00215 	stw	r23,8(r16)
 20091ac:	81c00015 	stw	r7,0(r16)
 20091b0:	a0800217 	ldw	r2,8(r20)
 20091b4:	b72d883a 	add	r22,r22,fp
 20091b8:	9725c83a 	sub	r18,r18,fp
 20091bc:	14e7c83a 	sub	r19,r2,r19
 20091c0:	a4c00215 	stw	r19,8(r20)
 20091c4:	983fc426 	beq	r19,zero,20090d8 <__alt_mem_epcs_flash_controller+0xfe0000d8>
 20091c8:	8080030b 	ldhu	r2,12(r16)
 20091cc:	903fdf1e 	bne	r18,zero,200914c <__alt_mem_epcs_flash_controller+0xfe00014c>
 20091d0:	8d800017 	ldw	r22,0(r17)
 20091d4:	8c800117 	ldw	r18,4(r17)
 20091d8:	8c400204 	addi	r17,r17,8
 20091dc:	003fda06 	br	2009148 <__alt_mem_epcs_flash_controller+0xfe000148>
 20091e0:	8cc00017 	ldw	r19,0(r17)
 20091e4:	8c800117 	ldw	r18,4(r17)
 20091e8:	8c400204 	addi	r17,r17,8
 20091ec:	003faa06 	br	2009098 <__alt_mem_epcs_flash_controller+0xfe000098>
 20091f0:	200ad880 	call	200ad88 <_realloc_r>
 20091f4:	102f883a 	mov	r23,r2
 20091f8:	10009f1e 	bne	r2,zero,2009478 <__sfvwrite_r+0x464>
 20091fc:	81400417 	ldw	r5,16(r16)
 2009200:	a809883a 	mov	r4,r21
 2009204:	2008d440 	call	2008d44 <_free_r>
 2009208:	00800304 	movi	r2,12
 200920c:	a8800015 	stw	r2,0(r21)
 2009210:	80c0030b 	ldhu	r3,12(r16)
 2009214:	00bfffc4 	movi	r2,-1
 2009218:	18c01014 	ori	r3,r3,64
 200921c:	80c0030d 	sth	r3,12(r16)
 2009220:	003fae06 	br	20090dc <__alt_mem_epcs_flash_controller+0xfe0000dc>
 2009224:	0007883a 	mov	r3,zero
 2009228:	0039883a 	mov	fp,zero
 200922c:	0025883a 	mov	r18,zero
 2009230:	90001e26 	beq	r18,zero,20092ac <__sfvwrite_r+0x298>
 2009234:	18006526 	beq	r3,zero,20093cc <__sfvwrite_r+0x3b8>
 2009238:	b02f883a 	mov	r23,r22
 200923c:	9580012e 	bgeu	r18,r22,2009244 <__sfvwrite_r+0x230>
 2009240:	902f883a 	mov	r23,r18
 2009244:	81000017 	ldw	r4,0(r16)
 2009248:	80800417 	ldw	r2,16(r16)
 200924c:	84c00217 	ldw	r19,8(r16)
 2009250:	81c00517 	ldw	r7,20(r16)
 2009254:	1100022e 	bgeu	r2,r4,2009260 <__sfvwrite_r+0x24c>
 2009258:	99e7883a 	add	r19,r19,r7
 200925c:	9dc01816 	blt	r19,r23,20092c0 <__sfvwrite_r+0x2ac>
 2009260:	b9c03b16 	blt	r23,r7,2009350 <__sfvwrite_r+0x33c>
 2009264:	80800917 	ldw	r2,36(r16)
 2009268:	81400717 	ldw	r5,28(r16)
 200926c:	a809883a 	mov	r4,r21
 2009270:	d8c00015 	stw	r3,0(sp)
 2009274:	e00d883a 	mov	r6,fp
 2009278:	103ee83a 	callr	r2
 200927c:	1027883a 	mov	r19,r2
 2009280:	d8c00017 	ldw	r3,0(sp)
 2009284:	00bfe20e 	bge	zero,r2,2009210 <__alt_mem_epcs_flash_controller+0xfe000210>
 2009288:	b4edc83a 	sub	r22,r22,r19
 200928c:	b0001a26 	beq	r22,zero,20092f8 <__sfvwrite_r+0x2e4>
 2009290:	a0800217 	ldw	r2,8(r20)
 2009294:	e4f9883a 	add	fp,fp,r19
 2009298:	94e5c83a 	sub	r18,r18,r19
 200929c:	14e7c83a 	sub	r19,r2,r19
 20092a0:	a4c00215 	stw	r19,8(r20)
 20092a4:	983f8c26 	beq	r19,zero,20090d8 <__alt_mem_epcs_flash_controller+0xfe0000d8>
 20092a8:	903fe21e 	bne	r18,zero,2009234 <__alt_mem_epcs_flash_controller+0xfe000234>
 20092ac:	8f000017 	ldw	fp,0(r17)
 20092b0:	8c800117 	ldw	r18,4(r17)
 20092b4:	0007883a 	mov	r3,zero
 20092b8:	8c400204 	addi	r17,r17,8
 20092bc:	003fdc06 	br	2009230 <__alt_mem_epcs_flash_controller+0xfe000230>
 20092c0:	e00b883a 	mov	r5,fp
 20092c4:	980d883a 	mov	r6,r19
 20092c8:	d8c00015 	stw	r3,0(sp)
 20092cc:	2009b400 	call	2009b40 <memmove>
 20092d0:	80800017 	ldw	r2,0(r16)
 20092d4:	a809883a 	mov	r4,r21
 20092d8:	800b883a 	mov	r5,r16
 20092dc:	14c5883a 	add	r2,r2,r19
 20092e0:	80800015 	stw	r2,0(r16)
 20092e4:	20024e40 	call	20024e4 <_fflush_r>
 20092e8:	d8c00017 	ldw	r3,0(sp)
 20092ec:	103fc81e 	bne	r2,zero,2009210 <__alt_mem_epcs_flash_controller+0xfe000210>
 20092f0:	b4edc83a 	sub	r22,r22,r19
 20092f4:	b03fe61e 	bne	r22,zero,2009290 <__alt_mem_epcs_flash_controller+0xfe000290>
 20092f8:	a809883a 	mov	r4,r21
 20092fc:	800b883a 	mov	r5,r16
 2009300:	20024e40 	call	20024e4 <_fflush_r>
 2009304:	103fc21e 	bne	r2,zero,2009210 <__alt_mem_epcs_flash_controller+0xfe000210>
 2009308:	0007883a 	mov	r3,zero
 200930c:	003fe006 	br	2009290 <__alt_mem_epcs_flash_controller+0xfe000290>
 2009310:	81000017 	ldw	r4,0(r16)
 2009314:	80800417 	ldw	r2,16(r16)
 2009318:	1100022e 	bgeu	r2,r4,2009324 <__sfvwrite_r+0x310>
 200931c:	9839883a 	mov	fp,r19
 2009320:	9c806036 	bltu	r19,r18,20094a4 <__sfvwrite_r+0x490>
 2009324:	81c00517 	ldw	r7,20(r16)
 2009328:	91c01c36 	bltu	r18,r7,200939c <__sfvwrite_r+0x388>
 200932c:	80800917 	ldw	r2,36(r16)
 2009330:	81400717 	ldw	r5,28(r16)
 2009334:	a809883a 	mov	r4,r21
 2009338:	b00d883a 	mov	r6,r22
 200933c:	103ee83a 	callr	r2
 2009340:	1027883a 	mov	r19,r2
 2009344:	00bfb20e 	bge	zero,r2,2009210 <__alt_mem_epcs_flash_controller+0xfe000210>
 2009348:	1039883a 	mov	fp,r2
 200934c:	003f9806 	br	20091b0 <__alt_mem_epcs_flash_controller+0xfe0001b0>
 2009350:	b80d883a 	mov	r6,r23
 2009354:	e00b883a 	mov	r5,fp
 2009358:	d8c00015 	stw	r3,0(sp)
 200935c:	2009b400 	call	2009b40 <memmove>
 2009360:	80800217 	ldw	r2,8(r16)
 2009364:	81000017 	ldw	r4,0(r16)
 2009368:	b827883a 	mov	r19,r23
 200936c:	15c5c83a 	sub	r2,r2,r23
 2009370:	25ef883a 	add	r23,r4,r23
 2009374:	80800215 	stw	r2,8(r16)
 2009378:	85c00015 	stw	r23,0(r16)
 200937c:	d8c00017 	ldw	r3,0(sp)
 2009380:	003fc106 	br	2009288 <__alt_mem_epcs_flash_controller+0xfe000288>
 2009384:	81000017 	ldw	r4,0(r16)
 2009388:	902f883a 	mov	r23,r18
 200938c:	9039883a 	mov	fp,r18
 2009390:	9027883a 	mov	r19,r18
 2009394:	900f883a 	mov	r7,r18
 2009398:	003f7a06 	br	2009184 <__alt_mem_epcs_flash_controller+0xfe000184>
 200939c:	b00b883a 	mov	r5,r22
 20093a0:	900d883a 	mov	r6,r18
 20093a4:	2009b400 	call	2009b40 <memmove>
 20093a8:	80c00217 	ldw	r3,8(r16)
 20093ac:	80800017 	ldw	r2,0(r16)
 20093b0:	9027883a 	mov	r19,r18
 20093b4:	1c87c83a 	sub	r3,r3,r18
 20093b8:	1485883a 	add	r2,r2,r18
 20093bc:	80c00215 	stw	r3,8(r16)
 20093c0:	80800015 	stw	r2,0(r16)
 20093c4:	9039883a 	mov	fp,r18
 20093c8:	003f7906 	br	20091b0 <__alt_mem_epcs_flash_controller+0xfe0001b0>
 20093cc:	e009883a 	mov	r4,fp
 20093d0:	01400284 	movi	r5,10
 20093d4:	900d883a 	mov	r6,r18
 20093d8:	20099080 	call	2009908 <memchr>
 20093dc:	10003c26 	beq	r2,zero,20094d0 <__sfvwrite_r+0x4bc>
 20093e0:	15800044 	addi	r22,r2,1
 20093e4:	b72dc83a 	sub	r22,r22,fp
 20093e8:	00c00044 	movi	r3,1
 20093ec:	003f9206 	br	2009238 <__alt_mem_epcs_flash_controller+0xfe000238>
 20093f0:	81000517 	ldw	r4,20(r16)
 20093f4:	81400417 	ldw	r5,16(r16)
 20093f8:	80c00017 	ldw	r3,0(r16)
 20093fc:	210d883a 	add	r6,r4,r4
 2009400:	3109883a 	add	r4,r6,r4
 2009404:	2026d7fa 	srli	r19,r4,31
 2009408:	1979c83a 	sub	fp,r3,r5
 200940c:	e1800044 	addi	r6,fp,1
 2009410:	9909883a 	add	r4,r19,r4
 2009414:	2027d07a 	srai	r19,r4,1
 2009418:	3489883a 	add	r4,r6,r18
 200941c:	980d883a 	mov	r6,r19
 2009420:	9900022e 	bgeu	r19,r4,200942c <__sfvwrite_r+0x418>
 2009424:	2027883a 	mov	r19,r4
 2009428:	200d883a 	mov	r6,r4
 200942c:	1081000c 	andi	r2,r2,1024
 2009430:	10bfffcc 	andi	r2,r2,65535
 2009434:	10a0001c 	xori	r2,r2,32768
 2009438:	10a00004 	addi	r2,r2,-32768
 200943c:	a809883a 	mov	r4,r21
 2009440:	103f6b26 	beq	r2,zero,20091f0 <__alt_mem_epcs_flash_controller+0xfe0001f0>
 2009444:	300b883a 	mov	r5,r6
 2009448:	2002b480 	call	2002b48 <_malloc_r>
 200944c:	102f883a 	mov	r23,r2
 2009450:	103f6d26 	beq	r2,zero,2009208 <__alt_mem_epcs_flash_controller+0xfe000208>
 2009454:	81400417 	ldw	r5,16(r16)
 2009458:	1009883a 	mov	r4,r2
 200945c:	e00d883a 	mov	r6,fp
 2009460:	2009a000 	call	2009a00 <memcpy>
 2009464:	8080030b 	ldhu	r2,12(r16)
 2009468:	00fedfc4 	movi	r3,-1153
 200946c:	10c4703a 	and	r2,r2,r3
 2009470:	10802014 	ori	r2,r2,128
 2009474:	8080030d 	sth	r2,12(r16)
 2009478:	bf09883a 	add	r4,r23,fp
 200947c:	9f07c83a 	sub	r3,r19,fp
 2009480:	85c00415 	stw	r23,16(r16)
 2009484:	84c00515 	stw	r19,20(r16)
 2009488:	81000015 	stw	r4,0(r16)
 200948c:	902f883a 	mov	r23,r18
 2009490:	80c00215 	stw	r3,8(r16)
 2009494:	9039883a 	mov	fp,r18
 2009498:	9027883a 	mov	r19,r18
 200949c:	900f883a 	mov	r7,r18
 20094a0:	003f3806 	br	2009184 <__alt_mem_epcs_flash_controller+0xfe000184>
 20094a4:	b00b883a 	mov	r5,r22
 20094a8:	980d883a 	mov	r6,r19
 20094ac:	2009b400 	call	2009b40 <memmove>
 20094b0:	80800017 	ldw	r2,0(r16)
 20094b4:	a809883a 	mov	r4,r21
 20094b8:	800b883a 	mov	r5,r16
 20094bc:	14c5883a 	add	r2,r2,r19
 20094c0:	80800015 	stw	r2,0(r16)
 20094c4:	20024e40 	call	20024e4 <_fflush_r>
 20094c8:	103f3926 	beq	r2,zero,20091b0 <__alt_mem_epcs_flash_controller+0xfe0001b0>
 20094cc:	003f5006 	br	2009210 <__alt_mem_epcs_flash_controller+0xfe000210>
 20094d0:	95800044 	addi	r22,r18,1
 20094d4:	00c00044 	movi	r3,1
 20094d8:	003f5706 	br	2009238 <__alt_mem_epcs_flash_controller+0xfe000238>
 20094dc:	80c0030b 	ldhu	r3,12(r16)
 20094e0:	00bfffc4 	movi	r2,-1
 20094e4:	18c01014 	ori	r3,r3,64
 20094e8:	80c0030d 	sth	r3,12(r16)
 20094ec:	00c00244 	movi	r3,9
 20094f0:	a8c00015 	stw	r3,0(r21)
 20094f4:	003ef906 	br	20090dc <__alt_mem_epcs_flash_controller+0xfe0000dc>

020094f8 <iswspace>:
 20094f8:	00803fc4 	movi	r2,255
 20094fc:	11000a36 	bltu	r2,r4,2009528 <iswspace+0x30>
 2009500:	00808274 	movhi	r2,521
 2009504:	10a3ba04 	addi	r2,r2,-28952
 2009508:	10800017 	ldw	r2,0(r2)
 200950c:	1109883a 	add	r4,r2,r4
 2009510:	20800003 	ldbu	r2,0(r4)
 2009514:	1080020c 	andi	r2,r2,8
 2009518:	10803fcc 	andi	r2,r2,255
 200951c:	1080201c 	xori	r2,r2,128
 2009520:	10bfe004 	addi	r2,r2,-128
 2009524:	f800283a 	ret
 2009528:	0005883a 	mov	r2,zero
 200952c:	f800283a 	ret

02009530 <_setlocale_r>:
 2009530:	defffc04 	addi	sp,sp,-16
 2009534:	dc800215 	stw	r18,8(sp)
 2009538:	dc400115 	stw	r17,4(sp)
 200953c:	dc000015 	stw	r16,0(sp)
 2009540:	dfc00315 	stw	ra,12(sp)
 2009544:	3021883a 	mov	r16,r6
 2009548:	2023883a 	mov	r17,r4
 200954c:	2825883a 	mov	r18,r5
 2009550:	30001626 	beq	r6,zero,20095ac <_setlocale_r+0x7c>
 2009554:	3009883a 	mov	r4,r6
 2009558:	01408234 	movhi	r5,520
 200955c:	295b4f04 	addi	r5,r5,27964
 2009560:	200b7800 	call	200b780 <strcmp>
 2009564:	10000a1e 	bne	r2,zero,2009590 <_setlocale_r+0x60>
 2009568:	8c800c15 	stw	r18,48(r17)
 200956c:	8c000d15 	stw	r16,52(r17)
 2009570:	00808234 	movhi	r2,520
 2009574:	109b4f04 	addi	r2,r2,27964
 2009578:	dfc00317 	ldw	ra,12(sp)
 200957c:	dc800217 	ldw	r18,8(sp)
 2009580:	dc400117 	ldw	r17,4(sp)
 2009584:	dc000017 	ldw	r16,0(sp)
 2009588:	dec00404 	addi	sp,sp,16
 200958c:	f800283a 	ret
 2009590:	8009883a 	mov	r4,r16
 2009594:	01408074 	movhi	r5,513
 2009598:	294fea04 	addi	r5,r5,16296
 200959c:	200b7800 	call	200b780 <strcmp>
 20095a0:	103ff126 	beq	r2,zero,2009568 <__alt_mem_epcs_flash_controller+0xfe000568>
 20095a4:	0005883a 	mov	r2,zero
 20095a8:	003ff306 	br	2009578 <__alt_mem_epcs_flash_controller+0xfe000578>
 20095ac:	00808234 	movhi	r2,520
 20095b0:	109b4f04 	addi	r2,r2,27964
 20095b4:	dfc00317 	ldw	ra,12(sp)
 20095b8:	dc800217 	ldw	r18,8(sp)
 20095bc:	dc400117 	ldw	r17,4(sp)
 20095c0:	dc000017 	ldw	r16,0(sp)
 20095c4:	dec00404 	addi	sp,sp,16
 20095c8:	f800283a 	ret

020095cc <__locale_charset>:
 20095cc:	00808234 	movhi	r2,520
 20095d0:	109c1904 	addi	r2,r2,28772
 20095d4:	f800283a 	ret

020095d8 <_localeconv_r>:
 20095d8:	00808234 	movhi	r2,520
 20095dc:	109c1d04 	addi	r2,r2,28788
 20095e0:	f800283a 	ret

020095e4 <setlocale>:
 20095e4:	00c08274 	movhi	r3,521
 20095e8:	18e3b704 	addi	r3,r3,-28964
 20095ec:	2005883a 	mov	r2,r4
 20095f0:	19000017 	ldw	r4,0(r3)
 20095f4:	280d883a 	mov	r6,r5
 20095f8:	100b883a 	mov	r5,r2
 20095fc:	20095301 	jmpi	2009530 <_setlocale_r>

02009600 <localeconv>:
 2009600:	00808234 	movhi	r2,520
 2009604:	109c1d04 	addi	r2,r2,28788
 2009608:	f800283a 	ret

0200960c <_lseek_r>:
 200960c:	defffd04 	addi	sp,sp,-12
 2009610:	dc400115 	stw	r17,4(sp)
 2009614:	dc000015 	stw	r16,0(sp)
 2009618:	2023883a 	mov	r17,r4
 200961c:	04008274 	movhi	r16,521
 2009620:	842afb04 	addi	r16,r16,-21524
 2009624:	2809883a 	mov	r4,r5
 2009628:	300b883a 	mov	r5,r6
 200962c:	380d883a 	mov	r6,r7
 2009630:	dfc00215 	stw	ra,8(sp)
 2009634:	80000015 	stw	zero,0(r16)
 2009638:	20109c00 	call	20109c0 <lseek>
 200963c:	00ffffc4 	movi	r3,-1
 2009640:	10c00526 	beq	r2,r3,2009658 <_lseek_r+0x4c>
 2009644:	dfc00217 	ldw	ra,8(sp)
 2009648:	dc400117 	ldw	r17,4(sp)
 200964c:	dc000017 	ldw	r16,0(sp)
 2009650:	dec00304 	addi	sp,sp,12
 2009654:	f800283a 	ret
 2009658:	80c00017 	ldw	r3,0(r16)
 200965c:	183ff926 	beq	r3,zero,2009644 <__alt_mem_epcs_flash_controller+0xfe000644>
 2009660:	88c00015 	stw	r3,0(r17)
 2009664:	dfc00217 	ldw	ra,8(sp)
 2009668:	dc400117 	ldw	r17,4(sp)
 200966c:	dc000017 	ldw	r16,0(sp)
 2009670:	dec00304 	addi	sp,sp,12
 2009674:	f800283a 	ret

02009678 <__smakebuf_r>:
 2009678:	2880030b 	ldhu	r2,12(r5)
 200967c:	deffed04 	addi	sp,sp,-76
 2009680:	dc401015 	stw	r17,64(sp)
 2009684:	10c0008c 	andi	r3,r2,2
 2009688:	18ffffcc 	andi	r3,r3,65535
 200968c:	18e0001c 	xori	r3,r3,32768
 2009690:	dc000f15 	stw	r16,60(sp)
 2009694:	dfc01215 	stw	ra,72(sp)
 2009698:	dc801115 	stw	r18,68(sp)
 200969c:	18e00004 	addi	r3,r3,-32768
 20096a0:	2821883a 	mov	r16,r5
 20096a4:	2023883a 	mov	r17,r4
 20096a8:	1800381e 	bne	r3,zero,200978c <__smakebuf_r+0x114>
 20096ac:	2940038f 	ldh	r5,14(r5)
 20096b0:	28002d16 	blt	r5,zero,2009768 <__smakebuf_r+0xf0>
 20096b4:	d80d883a 	mov	r6,sp
 20096b8:	200de300 	call	200de30 <_fstat_r>
 20096bc:	10002916 	blt	r2,zero,2009764 <__smakebuf_r+0xec>
 20096c0:	d8800117 	ldw	r2,4(sp)
 20096c4:	00e00014 	movui	r3,32768
 20096c8:	10bc000c 	andi	r2,r2,61440
 20096cc:	10c03c26 	beq	r2,r3,20097c0 <__smakebuf_r+0x148>
 20096d0:	80c0030b 	ldhu	r3,12(r16)
 20096d4:	18c20014 	ori	r3,r3,2048
 20096d8:	80c0030d 	sth	r3,12(r16)
 20096dc:	00c80004 	movi	r3,8192
 20096e0:	10c00c1e 	bne	r2,r3,2009714 <__smakebuf_r+0x9c>
 20096e4:	8140038f 	ldh	r5,14(r16)
 20096e8:	8809883a 	mov	r4,r17
 20096ec:	200ea3c0 	call	200ea3c <_isatty_r>
 20096f0:	10000826 	beq	r2,zero,2009714 <__smakebuf_r+0x9c>
 20096f4:	80c0030b 	ldhu	r3,12(r16)
 20096f8:	808010c4 	addi	r2,r16,67
 20096fc:	80800015 	stw	r2,0(r16)
 2009700:	18c00054 	ori	r3,r3,1
 2009704:	80800415 	stw	r2,16(r16)
 2009708:	00800044 	movi	r2,1
 200970c:	80c0030d 	sth	r3,12(r16)
 2009710:	80800515 	stw	r2,20(r16)
 2009714:	04810004 	movi	r18,1024
 2009718:	8809883a 	mov	r4,r17
 200971c:	900b883a 	mov	r5,r18
 2009720:	2002b480 	call	2002b48 <_malloc_r>
 2009724:	10003026 	beq	r2,zero,20097e8 <__smakebuf_r+0x170>
 2009728:	80c0030b 	ldhu	r3,12(r16)
 200972c:	01008034 	movhi	r4,512
 2009730:	2109c304 	addi	r4,r4,9996
 2009734:	89000f15 	stw	r4,60(r17)
 2009738:	18c02014 	ori	r3,r3,128
 200973c:	80c0030d 	sth	r3,12(r16)
 2009740:	80800015 	stw	r2,0(r16)
 2009744:	80800415 	stw	r2,16(r16)
 2009748:	84800515 	stw	r18,20(r16)
 200974c:	dfc01217 	ldw	ra,72(sp)
 2009750:	dc801117 	ldw	r18,68(sp)
 2009754:	dc401017 	ldw	r17,64(sp)
 2009758:	dc000f17 	ldw	r16,60(sp)
 200975c:	dec01304 	addi	sp,sp,76
 2009760:	f800283a 	ret
 2009764:	8080030b 	ldhu	r2,12(r16)
 2009768:	10c0200c 	andi	r3,r2,128
 200976c:	18ffffcc 	andi	r3,r3,65535
 2009770:	18e0001c 	xori	r3,r3,32768
 2009774:	18e00004 	addi	r3,r3,-32768
 2009778:	18000f1e 	bne	r3,zero,20097b8 <__smakebuf_r+0x140>
 200977c:	04810004 	movi	r18,1024
 2009780:	10820014 	ori	r2,r2,2048
 2009784:	8080030d 	sth	r2,12(r16)
 2009788:	003fe306 	br	2009718 <__alt_mem_epcs_flash_controller+0xfe000718>
 200978c:	288010c4 	addi	r2,r5,67
 2009790:	28800015 	stw	r2,0(r5)
 2009794:	28800415 	stw	r2,16(r5)
 2009798:	00800044 	movi	r2,1
 200979c:	28800515 	stw	r2,20(r5)
 20097a0:	dfc01217 	ldw	ra,72(sp)
 20097a4:	dc801117 	ldw	r18,68(sp)
 20097a8:	dc401017 	ldw	r17,64(sp)
 20097ac:	dc000f17 	ldw	r16,60(sp)
 20097b0:	dec01304 	addi	sp,sp,76
 20097b4:	f800283a 	ret
 20097b8:	04801004 	movi	r18,64
 20097bc:	003ff006 	br	2009780 <__alt_mem_epcs_flash_controller+0xfe000780>
 20097c0:	81000a17 	ldw	r4,40(r16)
 20097c4:	00c08034 	movhi	r3,512
 20097c8:	18cd9504 	addi	r3,r3,13908
 20097cc:	20ffc01e 	bne	r4,r3,20096d0 <__alt_mem_epcs_flash_controller+0xfe0006d0>
 20097d0:	8080030b 	ldhu	r2,12(r16)
 20097d4:	00c10004 	movi	r3,1024
 20097d8:	80c01315 	stw	r3,76(r16)
 20097dc:	10c4b03a 	or	r2,r2,r3
 20097e0:	8080030d 	sth	r2,12(r16)
 20097e4:	003fcb06 	br	2009714 <__alt_mem_epcs_flash_controller+0xfe000714>
 20097e8:	8080030b 	ldhu	r2,12(r16)
 20097ec:	10c0800c 	andi	r3,r2,512
 20097f0:	18ffffcc 	andi	r3,r3,65535
 20097f4:	18e0001c 	xori	r3,r3,32768
 20097f8:	18e00004 	addi	r3,r3,-32768
 20097fc:	183fd31e 	bne	r3,zero,200974c <__alt_mem_epcs_flash_controller+0xfe00074c>
 2009800:	10800094 	ori	r2,r2,2
 2009804:	80c010c4 	addi	r3,r16,67
 2009808:	8080030d 	sth	r2,12(r16)
 200980c:	00800044 	movi	r2,1
 2009810:	80c00015 	stw	r3,0(r16)
 2009814:	80c00415 	stw	r3,16(r16)
 2009818:	80800515 	stw	r2,20(r16)
 200981c:	003fcb06 	br	200974c <__alt_mem_epcs_flash_controller+0xfe00074c>

02009820 <_mbrtowc_r>:
 2009820:	defffc04 	addi	sp,sp,-16
 2009824:	dc000115 	stw	r16,4(sp)
 2009828:	dc000417 	ldw	r16,16(sp)
 200982c:	dc400215 	stw	r17,8(sp)
 2009830:	dfc00315 	stw	ra,12(sp)
 2009834:	dc000015 	stw	r16,0(sp)
 2009838:	2023883a 	mov	r17,r4
 200983c:	30000b26 	beq	r6,zero,200986c <_mbrtowc_r+0x4c>
 2009840:	20098c40 	call	20098c4 <_mbtowc_r>
 2009844:	00ffffc4 	movi	r3,-1
 2009848:	10c0031e 	bne	r2,r3,2009858 <_mbrtowc_r+0x38>
 200984c:	80000015 	stw	zero,0(r16)
 2009850:	00c02284 	movi	r3,138
 2009854:	88c00015 	stw	r3,0(r17)
 2009858:	dfc00317 	ldw	ra,12(sp)
 200985c:	dc400217 	ldw	r17,8(sp)
 2009860:	dc000117 	ldw	r16,4(sp)
 2009864:	dec00404 	addi	sp,sp,16
 2009868:	f800283a 	ret
 200986c:	000b883a 	mov	r5,zero
 2009870:	01808074 	movhi	r6,513
 2009874:	318fea04 	addi	r6,r6,16296
 2009878:	01c00044 	movi	r7,1
 200987c:	20098c40 	call	20098c4 <_mbtowc_r>
 2009880:	003ff006 	br	2009844 <__alt_mem_epcs_flash_controller+0xfe000844>

02009884 <mbrtowc>:
 2009884:	00808274 	movhi	r2,521
 2009888:	10a3b704 	addi	r2,r2,-28964
 200988c:	2011883a 	mov	r8,r4
 2009890:	11000017 	ldw	r4,0(r2)
 2009894:	defffe04 	addi	sp,sp,-8
 2009898:	2807883a 	mov	r3,r5
 200989c:	3005883a 	mov	r2,r6
 20098a0:	d9c00015 	stw	r7,0(sp)
 20098a4:	400b883a 	mov	r5,r8
 20098a8:	180d883a 	mov	r6,r3
 20098ac:	100f883a 	mov	r7,r2
 20098b0:	dfc00115 	stw	ra,4(sp)
 20098b4:	20098200 	call	2009820 <_mbrtowc_r>
 20098b8:	dfc00117 	ldw	ra,4(sp)
 20098bc:	dec00204 	addi	sp,sp,8
 20098c0:	f800283a 	ret

020098c4 <_mbtowc_r>:
 20098c4:	deffff04 	addi	sp,sp,-4
 20098c8:	28000826 	beq	r5,zero,20098ec <_mbtowc_r+0x28>
 20098cc:	30000926 	beq	r6,zero,20098f4 <_mbtowc_r+0x30>
 20098d0:	38000b26 	beq	r7,zero,2009900 <_mbtowc_r+0x3c>
 20098d4:	30800003 	ldbu	r2,0(r6)
 20098d8:	28800015 	stw	r2,0(r5)
 20098dc:	30800003 	ldbu	r2,0(r6)
 20098e0:	1004c03a 	cmpne	r2,r2,zero
 20098e4:	dec00104 	addi	sp,sp,4
 20098e8:	f800283a 	ret
 20098ec:	d80b883a 	mov	r5,sp
 20098f0:	303ff71e 	bne	r6,zero,20098d0 <__alt_mem_epcs_flash_controller+0xfe0008d0>
 20098f4:	0005883a 	mov	r2,zero
 20098f8:	dec00104 	addi	sp,sp,4
 20098fc:	f800283a 	ret
 2009900:	00bfff84 	movi	r2,-2
 2009904:	003ff706 	br	20098e4 <__alt_mem_epcs_flash_controller+0xfe0008e4>

02009908 <memchr>:
 2009908:	008000c4 	movi	r2,3
 200990c:	29403fcc 	andi	r5,r5,255
 2009910:	1180282e 	bgeu	r2,r6,20099b4 <memchr+0xac>
 2009914:	2086703a 	and	r3,r4,r2
 2009918:	1800351e 	bne	r3,zero,20099f0 <memchr+0xe8>
 200991c:	2816923a 	slli	r11,r5,8
 2009920:	2093883a 	add	r9,r4,r2
 2009924:	22000084 	addi	r8,r4,2
 2009928:	5957883a 	add	r11,r11,r5
 200992c:	5816923a 	slli	r11,r11,8
 2009930:	20c00044 	addi	r3,r4,1
 2009934:	037fbff4 	movhi	r13,65279
 2009938:	6b7fbfc4 	addi	r13,r13,-257
 200993c:	5957883a 	add	r11,r11,r5
 2009940:	5816923a 	slli	r11,r11,8
 2009944:	03202074 	movhi	r12,32897
 2009948:	63202004 	addi	r12,r12,-32640
 200994c:	101d883a 	mov	r14,r2
 2009950:	5957883a 	add	r11,r11,r5
 2009954:	21c00017 	ldw	r7,0(r4)
 2009958:	31bfff04 	addi	r6,r6,-4
 200995c:	1805883a 	mov	r2,r3
 2009960:	3acef03a 	xor	r7,r7,r11
 2009964:	3b55883a 	add	r10,r7,r13
 2009968:	01ce303a 	nor	r7,zero,r7
 200996c:	51ce703a 	and	r7,r10,r7
 2009970:	3b0e703a 	and	r7,r7,r12
 2009974:	38000a26 	beq	r7,zero,20099a0 <memchr+0x98>
 2009978:	21c00003 	ldbu	r7,0(r4)
 200997c:	39401e26 	beq	r7,r5,20099f8 <memchr+0xf0>
 2009980:	19c00003 	ldbu	r7,0(r3)
 2009984:	39401926 	beq	r7,r5,20099ec <memchr+0xe4>
 2009988:	41c00003 	ldbu	r7,0(r8)
 200998c:	4005883a 	mov	r2,r8
 2009990:	39401626 	beq	r7,r5,20099ec <memchr+0xe4>
 2009994:	49c00003 	ldbu	r7,0(r9)
 2009998:	4805883a 	mov	r2,r9
 200999c:	39401326 	beq	r7,r5,20099ec <memchr+0xe4>
 20099a0:	21000104 	addi	r4,r4,4
 20099a4:	4a400104 	addi	r9,r9,4
 20099a8:	42000104 	addi	r8,r8,4
 20099ac:	18c00104 	addi	r3,r3,4
 20099b0:	71bfe836 	bltu	r14,r6,2009954 <__alt_mem_epcs_flash_controller+0xfe000954>
 20099b4:	2005883a 	mov	r2,r4
 20099b8:	30000a26 	beq	r6,zero,20099e4 <memchr+0xdc>
 20099bc:	10c00003 	ldbu	r3,0(r2)
 20099c0:	19400a26 	beq	r3,r5,20099ec <memchr+0xe4>
 20099c4:	10c00044 	addi	r3,r2,1
 20099c8:	118d883a 	add	r6,r2,r6
 20099cc:	00000306 	br	20099dc <memchr+0xd4>
 20099d0:	11000003 	ldbu	r4,0(r2)
 20099d4:	18c00044 	addi	r3,r3,1
 20099d8:	21400426 	beq	r4,r5,20099ec <memchr+0xe4>
 20099dc:	1805883a 	mov	r2,r3
 20099e0:	19bffb1e 	bne	r3,r6,20099d0 <__alt_mem_epcs_flash_controller+0xfe0009d0>
 20099e4:	0005883a 	mov	r2,zero
 20099e8:	f800283a 	ret
 20099ec:	f800283a 	ret
 20099f0:	2005883a 	mov	r2,r4
 20099f4:	003ff106 	br	20099bc <__alt_mem_epcs_flash_controller+0xfe0009bc>
 20099f8:	2005883a 	mov	r2,r4
 20099fc:	f800283a 	ret

02009a00 <memcpy>:
 2009a00:	defffb04 	addi	sp,sp,-20
 2009a04:	dc000015 	stw	r16,0(sp)
 2009a08:	dfc00415 	stw	ra,16(sp)
 2009a0c:	dcc00315 	stw	r19,12(sp)
 2009a10:	dc800215 	stw	r18,8(sp)
 2009a14:	dc400115 	stw	r17,4(sp)
 2009a18:	00c003c4 	movi	r3,15
 2009a1c:	2021883a 	mov	r16,r4
 2009a20:	3005883a 	mov	r2,r6
 2009a24:	1980032e 	bgeu	r3,r6,2009a34 <memcpy+0x34>
 2009a28:	2906b03a 	or	r3,r5,r4
 2009a2c:	18c000cc 	andi	r3,r3,3
 2009a30:	18001026 	beq	r3,zero,2009a74 <memcpy+0x74>
 2009a34:	8007883a 	mov	r3,r16
 2009a38:	288f883a 	add	r7,r5,r2
 2009a3c:	10000526 	beq	r2,zero,2009a54 <memcpy+0x54>
 2009a40:	29800003 	ldbu	r6,0(r5)
 2009a44:	18c00044 	addi	r3,r3,1
 2009a48:	29400044 	addi	r5,r5,1
 2009a4c:	19bfffc5 	stb	r6,-1(r3)
 2009a50:	29fffb1e 	bne	r5,r7,2009a40 <__alt_mem_epcs_flash_controller+0xfe000a40>
 2009a54:	8005883a 	mov	r2,r16
 2009a58:	dfc00417 	ldw	ra,16(sp)
 2009a5c:	dcc00317 	ldw	r19,12(sp)
 2009a60:	dc800217 	ldw	r18,8(sp)
 2009a64:	dc400117 	ldw	r17,4(sp)
 2009a68:	dc000017 	ldw	r16,0(sp)
 2009a6c:	dec00504 	addi	sp,sp,20
 2009a70:	f800283a 	ret
 2009a74:	32bffc04 	addi	r10,r6,-16
 2009a78:	5014d13a 	srli	r10,r10,4
 2009a7c:	20800404 	addi	r2,r4,16
 2009a80:	2007883a 	mov	r3,r4
 2009a84:	5008913a 	slli	r4,r10,4
 2009a88:	280f883a 	mov	r7,r5
 2009a8c:	1105883a 	add	r2,r2,r4
 2009a90:	3a000017 	ldw	r8,0(r7)
 2009a94:	18c00404 	addi	r3,r3,16
 2009a98:	39c00404 	addi	r7,r7,16
 2009a9c:	1a3ffc15 	stw	r8,-16(r3)
 2009aa0:	3a3ffd17 	ldw	r8,-12(r7)
 2009aa4:	1a3ffd15 	stw	r8,-12(r3)
 2009aa8:	3a3ffe17 	ldw	r8,-8(r7)
 2009aac:	1a3ffe15 	stw	r8,-8(r3)
 2009ab0:	3a3fff17 	ldw	r8,-4(r7)
 2009ab4:	1a3fff15 	stw	r8,-4(r3)
 2009ab8:	18bff51e 	bne	r3,r2,2009a90 <__alt_mem_epcs_flash_controller+0xfe000a90>
 2009abc:	52800044 	addi	r10,r10,1
 2009ac0:	5014913a 	slli	r10,r10,4
 2009ac4:	308003cc 	andi	r2,r6,15
 2009ac8:	010000c4 	movi	r4,3
 2009acc:	8287883a 	add	r3,r16,r10
 2009ad0:	2a95883a 	add	r10,r5,r10
 2009ad4:	2080182e 	bgeu	r4,r2,2009b38 <memcpy+0x138>
 2009ad8:	147fff04 	addi	r17,r2,-4
 2009adc:	8808d0ba 	srli	r4,r17,2
 2009ae0:	1a400104 	addi	r9,r3,4
 2009ae4:	180d883a 	mov	r6,r3
 2009ae8:	2105883a 	add	r2,r4,r4
 2009aec:	1085883a 	add	r2,r2,r2
 2009af0:	4893883a 	add	r9,r9,r2
 2009af4:	500f883a 	mov	r7,r10
 2009af8:	3a000017 	ldw	r8,0(r7)
 2009afc:	31800104 	addi	r6,r6,4
 2009b00:	39c00104 	addi	r7,r7,4
 2009b04:	323fff15 	stw	r8,-4(r6)
 2009b08:	327ffb1e 	bne	r6,r9,2009af8 <__alt_mem_epcs_flash_controller+0xfe000af8>
 2009b0c:	20800044 	addi	r2,r4,1
 2009b10:	1085883a 	add	r2,r2,r2
 2009b14:	1085883a 	add	r2,r2,r2
 2009b18:	017fff04 	movi	r5,-4
 2009b1c:	18a5883a 	add	r18,r3,r2
 2009b20:	50a7883a 	add	r19,r10,r2
 2009b24:	2001f500 	call	2001f50 <__mulsi3>
 2009b28:	1445883a 	add	r2,r2,r17
 2009b2c:	980b883a 	mov	r5,r19
 2009b30:	9007883a 	mov	r3,r18
 2009b34:	003fc006 	br	2009a38 <__alt_mem_epcs_flash_controller+0xfe000a38>
 2009b38:	500b883a 	mov	r5,r10
 2009b3c:	003fbe06 	br	2009a38 <__alt_mem_epcs_flash_controller+0xfe000a38>

02009b40 <memmove>:
 2009b40:	defffb04 	addi	sp,sp,-20
 2009b44:	dc000015 	stw	r16,0(sp)
 2009b48:	dfc00415 	stw	ra,16(sp)
 2009b4c:	dcc00315 	stw	r19,12(sp)
 2009b50:	dc800215 	stw	r18,8(sp)
 2009b54:	dc400115 	stw	r17,4(sp)
 2009b58:	2021883a 	mov	r16,r4
 2009b5c:	300f883a 	mov	r7,r6
 2009b60:	2900122e 	bgeu	r5,r4,2009bac <memmove+0x6c>
 2009b64:	2987883a 	add	r3,r5,r6
 2009b68:	20c0102e 	bgeu	r4,r3,2009bac <memmove+0x6c>
 2009b6c:	218b883a 	add	r5,r4,r6
 2009b70:	1989c83a 	sub	r4,r3,r6
 2009b74:	30000526 	beq	r6,zero,2009b8c <memmove+0x4c>
 2009b78:	18ffffc4 	addi	r3,r3,-1
 2009b7c:	18800003 	ldbu	r2,0(r3)
 2009b80:	297fffc4 	addi	r5,r5,-1
 2009b84:	28800005 	stb	r2,0(r5)
 2009b88:	193ffb1e 	bne	r3,r4,2009b78 <__alt_mem_epcs_flash_controller+0xfe000b78>
 2009b8c:	8005883a 	mov	r2,r16
 2009b90:	dfc00417 	ldw	ra,16(sp)
 2009b94:	dcc00317 	ldw	r19,12(sp)
 2009b98:	dc800217 	ldw	r18,8(sp)
 2009b9c:	dc400117 	ldw	r17,4(sp)
 2009ba0:	dc000017 	ldw	r16,0(sp)
 2009ba4:	dec00504 	addi	sp,sp,20
 2009ba8:	f800283a 	ret
 2009bac:	008003c4 	movi	r2,15
 2009bb0:	1180422e 	bgeu	r2,r6,2009cbc <memmove+0x17c>
 2009bb4:	2c04b03a 	or	r2,r5,r16
 2009bb8:	108000cc 	andi	r2,r2,3
 2009bbc:	10003f1e 	bne	r2,zero,2009cbc <memmove+0x17c>
 2009bc0:	32bffc04 	addi	r10,r6,-16
 2009bc4:	5014d13a 	srli	r10,r10,4
 2009bc8:	81000404 	addi	r4,r16,16
 2009bcc:	8007883a 	mov	r3,r16
 2009bd0:	5004913a 	slli	r2,r10,4
 2009bd4:	280f883a 	mov	r7,r5
 2009bd8:	2089883a 	add	r4,r4,r2
 2009bdc:	38800017 	ldw	r2,0(r7)
 2009be0:	18c00404 	addi	r3,r3,16
 2009be4:	39c00404 	addi	r7,r7,16
 2009be8:	18bffc15 	stw	r2,-16(r3)
 2009bec:	38bffd17 	ldw	r2,-12(r7)
 2009bf0:	18bffd15 	stw	r2,-12(r3)
 2009bf4:	38bffe17 	ldw	r2,-8(r7)
 2009bf8:	18bffe15 	stw	r2,-8(r3)
 2009bfc:	38bfff17 	ldw	r2,-4(r7)
 2009c00:	18bfff15 	stw	r2,-4(r3)
 2009c04:	193ff51e 	bne	r3,r4,2009bdc <__alt_mem_epcs_flash_controller+0xfe000bdc>
 2009c08:	52800044 	addi	r10,r10,1
 2009c0c:	5014913a 	slli	r10,r10,4
 2009c10:	31c003cc 	andi	r7,r6,15
 2009c14:	008000c4 	movi	r2,3
 2009c18:	8287883a 	add	r3,r16,r10
 2009c1c:	2a95883a 	add	r10,r5,r10
 2009c20:	11c0282e 	bgeu	r2,r7,2009cc4 <memmove+0x184>
 2009c24:	3c7fff04 	addi	r17,r7,-4
 2009c28:	8808d0ba 	srli	r4,r17,2
 2009c2c:	1a400104 	addi	r9,r3,4
 2009c30:	180d883a 	mov	r6,r3
 2009c34:	2105883a 	add	r2,r4,r4
 2009c38:	1085883a 	add	r2,r2,r2
 2009c3c:	4893883a 	add	r9,r9,r2
 2009c40:	5005883a 	mov	r2,r10
 2009c44:	12000017 	ldw	r8,0(r2)
 2009c48:	31800104 	addi	r6,r6,4
 2009c4c:	10800104 	addi	r2,r2,4
 2009c50:	323fff15 	stw	r8,-4(r6)
 2009c54:	327ffb1e 	bne	r6,r9,2009c44 <__alt_mem_epcs_flash_controller+0xfe000c44>
 2009c58:	20800044 	addi	r2,r4,1
 2009c5c:	1085883a 	add	r2,r2,r2
 2009c60:	1085883a 	add	r2,r2,r2
 2009c64:	017fff04 	movi	r5,-4
 2009c68:	18a5883a 	add	r18,r3,r2
 2009c6c:	50a7883a 	add	r19,r10,r2
 2009c70:	2001f500 	call	2001f50 <__mulsi3>
 2009c74:	144f883a 	add	r7,r2,r17
 2009c78:	980b883a 	mov	r5,r19
 2009c7c:	9007883a 	mov	r3,r18
 2009c80:	383fc226 	beq	r7,zero,2009b8c <__alt_mem_epcs_flash_controller+0xfe000b8c>
 2009c84:	19cf883a 	add	r7,r3,r7
 2009c88:	29800003 	ldbu	r6,0(r5)
 2009c8c:	18c00044 	addi	r3,r3,1
 2009c90:	29400044 	addi	r5,r5,1
 2009c94:	19bfffc5 	stb	r6,-1(r3)
 2009c98:	19fffb1e 	bne	r3,r7,2009c88 <__alt_mem_epcs_flash_controller+0xfe000c88>
 2009c9c:	8005883a 	mov	r2,r16
 2009ca0:	dfc00417 	ldw	ra,16(sp)
 2009ca4:	dcc00317 	ldw	r19,12(sp)
 2009ca8:	dc800217 	ldw	r18,8(sp)
 2009cac:	dc400117 	ldw	r17,4(sp)
 2009cb0:	dc000017 	ldw	r16,0(sp)
 2009cb4:	dec00504 	addi	sp,sp,20
 2009cb8:	f800283a 	ret
 2009cbc:	8007883a 	mov	r3,r16
 2009cc0:	003fef06 	br	2009c80 <__alt_mem_epcs_flash_controller+0xfe000c80>
 2009cc4:	500b883a 	mov	r5,r10
 2009cc8:	003fed06 	br	2009c80 <__alt_mem_epcs_flash_controller+0xfe000c80>

02009ccc <_Balloc>:
 2009ccc:	20801317 	ldw	r2,76(r4)
 2009cd0:	defffc04 	addi	sp,sp,-16
 2009cd4:	dc400115 	stw	r17,4(sp)
 2009cd8:	dc000015 	stw	r16,0(sp)
 2009cdc:	dfc00315 	stw	ra,12(sp)
 2009ce0:	dc800215 	stw	r18,8(sp)
 2009ce4:	2023883a 	mov	r17,r4
 2009ce8:	2821883a 	mov	r16,r5
 2009cec:	10000f26 	beq	r2,zero,2009d2c <_Balloc+0x60>
 2009cf0:	8407883a 	add	r3,r16,r16
 2009cf4:	18c7883a 	add	r3,r3,r3
 2009cf8:	10c7883a 	add	r3,r2,r3
 2009cfc:	18800017 	ldw	r2,0(r3)
 2009d00:	10001126 	beq	r2,zero,2009d48 <_Balloc+0x7c>
 2009d04:	11000017 	ldw	r4,0(r2)
 2009d08:	19000015 	stw	r4,0(r3)
 2009d0c:	10000415 	stw	zero,16(r2)
 2009d10:	10000315 	stw	zero,12(r2)
 2009d14:	dfc00317 	ldw	ra,12(sp)
 2009d18:	dc800217 	ldw	r18,8(sp)
 2009d1c:	dc400117 	ldw	r17,4(sp)
 2009d20:	dc000017 	ldw	r16,0(sp)
 2009d24:	dec00404 	addi	sp,sp,16
 2009d28:	f800283a 	ret
 2009d2c:	01400104 	movi	r5,4
 2009d30:	01800404 	movi	r6,16
 2009d34:	200dd640 	call	200dd64 <_calloc_r>
 2009d38:	88801315 	stw	r2,76(r17)
 2009d3c:	103fec1e 	bne	r2,zero,2009cf0 <__alt_mem_epcs_flash_controller+0xfe000cf0>
 2009d40:	0005883a 	mov	r2,zero
 2009d44:	003ff306 	br	2009d14 <__alt_mem_epcs_flash_controller+0xfe000d14>
 2009d48:	01400044 	movi	r5,1
 2009d4c:	2c24983a 	sll	r18,r5,r16
 2009d50:	8809883a 	mov	r4,r17
 2009d54:	91800144 	addi	r6,r18,5
 2009d58:	318d883a 	add	r6,r6,r6
 2009d5c:	318d883a 	add	r6,r6,r6
 2009d60:	200dd640 	call	200dd64 <_calloc_r>
 2009d64:	103ff626 	beq	r2,zero,2009d40 <__alt_mem_epcs_flash_controller+0xfe000d40>
 2009d68:	14000115 	stw	r16,4(r2)
 2009d6c:	14800215 	stw	r18,8(r2)
 2009d70:	003fe606 	br	2009d0c <__alt_mem_epcs_flash_controller+0xfe000d0c>

02009d74 <_Bfree>:
 2009d74:	28000826 	beq	r5,zero,2009d98 <_Bfree+0x24>
 2009d78:	28c00117 	ldw	r3,4(r5)
 2009d7c:	20801317 	ldw	r2,76(r4)
 2009d80:	18c7883a 	add	r3,r3,r3
 2009d84:	18c7883a 	add	r3,r3,r3
 2009d88:	10c5883a 	add	r2,r2,r3
 2009d8c:	10c00017 	ldw	r3,0(r2)
 2009d90:	28c00015 	stw	r3,0(r5)
 2009d94:	11400015 	stw	r5,0(r2)
 2009d98:	f800283a 	ret

02009d9c <__multadd>:
 2009d9c:	defff604 	addi	sp,sp,-40
 2009da0:	dd400515 	stw	r21,20(sp)
 2009da4:	2d400417 	ldw	r21,16(r5)
 2009da8:	df000815 	stw	fp,32(sp)
 2009dac:	ddc00715 	stw	r23,28(sp)
 2009db0:	dd800615 	stw	r22,24(sp)
 2009db4:	dd000415 	stw	r20,16(sp)
 2009db8:	dc400115 	stw	r17,4(sp)
 2009dbc:	dc000015 	stw	r16,0(sp)
 2009dc0:	dfc00915 	stw	ra,36(sp)
 2009dc4:	dcc00315 	stw	r19,12(sp)
 2009dc8:	dc800215 	stw	r18,8(sp)
 2009dcc:	282d883a 	mov	r22,r5
 2009dd0:	202f883a 	mov	r23,r4
 2009dd4:	3029883a 	mov	r20,r6
 2009dd8:	3839883a 	mov	fp,r7
 2009ddc:	2c000504 	addi	r16,r5,20
 2009de0:	0023883a 	mov	r17,zero
 2009de4:	84c00017 	ldw	r19,0(r16)
 2009de8:	a00b883a 	mov	r5,r20
 2009dec:	8c400044 	addi	r17,r17,1
 2009df0:	993fffcc 	andi	r4,r19,65535
 2009df4:	2001f500 	call	2001f50 <__mulsi3>
 2009df8:	1725883a 	add	r18,r2,fp
 2009dfc:	9808d43a 	srli	r4,r19,16
 2009e00:	9026d43a 	srli	r19,r18,16
 2009e04:	a00b883a 	mov	r5,r20
 2009e08:	2001f500 	call	2001f50 <__mulsi3>
 2009e0c:	988f883a 	add	r7,r19,r2
 2009e10:	3804943a 	slli	r2,r7,16
 2009e14:	94bfffcc 	andi	r18,r18,65535
 2009e18:	3838d43a 	srli	fp,r7,16
 2009e1c:	14a5883a 	add	r18,r2,r18
 2009e20:	84800015 	stw	r18,0(r16)
 2009e24:	84000104 	addi	r16,r16,4
 2009e28:	8d7fee16 	blt	r17,r21,2009de4 <__alt_mem_epcs_flash_controller+0xfe000de4>
 2009e2c:	e0000926 	beq	fp,zero,2009e54 <__multadd+0xb8>
 2009e30:	b0800217 	ldw	r2,8(r22)
 2009e34:	a880140e 	bge	r21,r2,2009e88 <__multadd+0xec>
 2009e38:	a8800144 	addi	r2,r21,5
 2009e3c:	1085883a 	add	r2,r2,r2
 2009e40:	1085883a 	add	r2,r2,r2
 2009e44:	b085883a 	add	r2,r22,r2
 2009e48:	ad400044 	addi	r21,r21,1
 2009e4c:	17000015 	stw	fp,0(r2)
 2009e50:	b5400415 	stw	r21,16(r22)
 2009e54:	b005883a 	mov	r2,r22
 2009e58:	dfc00917 	ldw	ra,36(sp)
 2009e5c:	df000817 	ldw	fp,32(sp)
 2009e60:	ddc00717 	ldw	r23,28(sp)
 2009e64:	dd800617 	ldw	r22,24(sp)
 2009e68:	dd400517 	ldw	r21,20(sp)
 2009e6c:	dd000417 	ldw	r20,16(sp)
 2009e70:	dcc00317 	ldw	r19,12(sp)
 2009e74:	dc800217 	ldw	r18,8(sp)
 2009e78:	dc400117 	ldw	r17,4(sp)
 2009e7c:	dc000017 	ldw	r16,0(sp)
 2009e80:	dec00a04 	addi	sp,sp,40
 2009e84:	f800283a 	ret
 2009e88:	b1400117 	ldw	r5,4(r22)
 2009e8c:	b809883a 	mov	r4,r23
 2009e90:	29400044 	addi	r5,r5,1
 2009e94:	2009ccc0 	call	2009ccc <_Balloc>
 2009e98:	b1800417 	ldw	r6,16(r22)
 2009e9c:	b1400304 	addi	r5,r22,12
 2009ea0:	11000304 	addi	r4,r2,12
 2009ea4:	31800084 	addi	r6,r6,2
 2009ea8:	318d883a 	add	r6,r6,r6
 2009eac:	318d883a 	add	r6,r6,r6
 2009eb0:	1021883a 	mov	r16,r2
 2009eb4:	2009a000 	call	2009a00 <memcpy>
 2009eb8:	b0c00117 	ldw	r3,4(r22)
 2009ebc:	b8801317 	ldw	r2,76(r23)
 2009ec0:	18c7883a 	add	r3,r3,r3
 2009ec4:	18c7883a 	add	r3,r3,r3
 2009ec8:	10c5883a 	add	r2,r2,r3
 2009ecc:	10c00017 	ldw	r3,0(r2)
 2009ed0:	b0c00015 	stw	r3,0(r22)
 2009ed4:	15800015 	stw	r22,0(r2)
 2009ed8:	802d883a 	mov	r22,r16
 2009edc:	003fd606 	br	2009e38 <__alt_mem_epcs_flash_controller+0xfe000e38>

02009ee0 <__s2b>:
 2009ee0:	defff904 	addi	sp,sp,-28
 2009ee4:	dd000415 	stw	r20,16(sp)
 2009ee8:	dc400115 	stw	r17,4(sp)
 2009eec:	2829883a 	mov	r20,r5
 2009ef0:	2023883a 	mov	r17,r4
 2009ef4:	01400244 	movi	r5,9
 2009ef8:	39000204 	addi	r4,r7,8
 2009efc:	dcc00315 	stw	r19,12(sp)
 2009f00:	dc800215 	stw	r18,8(sp)
 2009f04:	dfc00615 	stw	ra,24(sp)
 2009f08:	dd400515 	stw	r21,20(sp)
 2009f0c:	dc000015 	stw	r16,0(sp)
 2009f10:	3825883a 	mov	r18,r7
 2009f14:	3027883a 	mov	r19,r6
 2009f18:	2001e940 	call	2001e94 <__divsi3>
 2009f1c:	00c00044 	movi	r3,1
 2009f20:	000b883a 	mov	r5,zero
 2009f24:	1880030e 	bge	r3,r2,2009f34 <__s2b+0x54>
 2009f28:	18c7883a 	add	r3,r3,r3
 2009f2c:	29400044 	addi	r5,r5,1
 2009f30:	18bffd16 	blt	r3,r2,2009f28 <__alt_mem_epcs_flash_controller+0xfe000f28>
 2009f34:	8809883a 	mov	r4,r17
 2009f38:	2009ccc0 	call	2009ccc <_Balloc>
 2009f3c:	d8c00717 	ldw	r3,28(sp)
 2009f40:	10c00515 	stw	r3,20(r2)
 2009f44:	00c00044 	movi	r3,1
 2009f48:	10c00415 	stw	r3,16(r2)
 2009f4c:	00c00244 	movi	r3,9
 2009f50:	1cc0210e 	bge	r3,r19,2009fd8 <__s2b+0xf8>
 2009f54:	a0eb883a 	add	r21,r20,r3
 2009f58:	a821883a 	mov	r16,r21
 2009f5c:	a4e9883a 	add	r20,r20,r19
 2009f60:	81c00007 	ldb	r7,0(r16)
 2009f64:	8809883a 	mov	r4,r17
 2009f68:	84000044 	addi	r16,r16,1
 2009f6c:	100b883a 	mov	r5,r2
 2009f70:	01800284 	movi	r6,10
 2009f74:	39fff404 	addi	r7,r7,-48
 2009f78:	2009d9c0 	call	2009d9c <__multadd>
 2009f7c:	853ff81e 	bne	r16,r20,2009f60 <__alt_mem_epcs_flash_controller+0xfe000f60>
 2009f80:	ace1883a 	add	r16,r21,r19
 2009f84:	843ffe04 	addi	r16,r16,-8
 2009f88:	9c800a0e 	bge	r19,r18,2009fb4 <__s2b+0xd4>
 2009f8c:	94e5c83a 	sub	r18,r18,r19
 2009f90:	84a5883a 	add	r18,r16,r18
 2009f94:	81c00007 	ldb	r7,0(r16)
 2009f98:	8809883a 	mov	r4,r17
 2009f9c:	84000044 	addi	r16,r16,1
 2009fa0:	100b883a 	mov	r5,r2
 2009fa4:	01800284 	movi	r6,10
 2009fa8:	39fff404 	addi	r7,r7,-48
 2009fac:	2009d9c0 	call	2009d9c <__multadd>
 2009fb0:	84bff81e 	bne	r16,r18,2009f94 <__alt_mem_epcs_flash_controller+0xfe000f94>
 2009fb4:	dfc00617 	ldw	ra,24(sp)
 2009fb8:	dd400517 	ldw	r21,20(sp)
 2009fbc:	dd000417 	ldw	r20,16(sp)
 2009fc0:	dcc00317 	ldw	r19,12(sp)
 2009fc4:	dc800217 	ldw	r18,8(sp)
 2009fc8:	dc400117 	ldw	r17,4(sp)
 2009fcc:	dc000017 	ldw	r16,0(sp)
 2009fd0:	dec00704 	addi	sp,sp,28
 2009fd4:	f800283a 	ret
 2009fd8:	a4000284 	addi	r16,r20,10
 2009fdc:	1827883a 	mov	r19,r3
 2009fe0:	003fe906 	br	2009f88 <__alt_mem_epcs_flash_controller+0xfe000f88>

02009fe4 <__hi0bits>:
 2009fe4:	20bfffec 	andhi	r2,r4,65535
 2009fe8:	1000141e 	bne	r2,zero,200a03c <__hi0bits+0x58>
 2009fec:	2008943a 	slli	r4,r4,16
 2009ff0:	00800404 	movi	r2,16
 2009ff4:	20ffc02c 	andhi	r3,r4,65280
 2009ff8:	1800021e 	bne	r3,zero,200a004 <__hi0bits+0x20>
 2009ffc:	2008923a 	slli	r4,r4,8
 200a000:	10800204 	addi	r2,r2,8
 200a004:	20fc002c 	andhi	r3,r4,61440
 200a008:	1800021e 	bne	r3,zero,200a014 <__hi0bits+0x30>
 200a00c:	2008913a 	slli	r4,r4,4
 200a010:	10800104 	addi	r2,r2,4
 200a014:	20f0002c 	andhi	r3,r4,49152
 200a018:	1800031e 	bne	r3,zero,200a028 <__hi0bits+0x44>
 200a01c:	2109883a 	add	r4,r4,r4
 200a020:	10800084 	addi	r2,r2,2
 200a024:	2109883a 	add	r4,r4,r4
 200a028:	20000316 	blt	r4,zero,200a038 <__hi0bits+0x54>
 200a02c:	2110002c 	andhi	r4,r4,16384
 200a030:	2000041e 	bne	r4,zero,200a044 <__hi0bits+0x60>
 200a034:	00800804 	movi	r2,32
 200a038:	f800283a 	ret
 200a03c:	0005883a 	mov	r2,zero
 200a040:	003fec06 	br	2009ff4 <__alt_mem_epcs_flash_controller+0xfe000ff4>
 200a044:	10800044 	addi	r2,r2,1
 200a048:	f800283a 	ret

0200a04c <__lo0bits>:
 200a04c:	20c00017 	ldw	r3,0(r4)
 200a050:	188001cc 	andi	r2,r3,7
 200a054:	10000826 	beq	r2,zero,200a078 <__lo0bits+0x2c>
 200a058:	1880004c 	andi	r2,r3,1
 200a05c:	1000211e 	bne	r2,zero,200a0e4 <__lo0bits+0x98>
 200a060:	1880008c 	andi	r2,r3,2
 200a064:	1000211e 	bne	r2,zero,200a0ec <__lo0bits+0xa0>
 200a068:	1806d0ba 	srli	r3,r3,2
 200a06c:	00800084 	movi	r2,2
 200a070:	20c00015 	stw	r3,0(r4)
 200a074:	f800283a 	ret
 200a078:	18bfffcc 	andi	r2,r3,65535
 200a07c:	10001326 	beq	r2,zero,200a0cc <__lo0bits+0x80>
 200a080:	0005883a 	mov	r2,zero
 200a084:	19403fcc 	andi	r5,r3,255
 200a088:	2800021e 	bne	r5,zero,200a094 <__lo0bits+0x48>
 200a08c:	1806d23a 	srli	r3,r3,8
 200a090:	10800204 	addi	r2,r2,8
 200a094:	194003cc 	andi	r5,r3,15
 200a098:	2800021e 	bne	r5,zero,200a0a4 <__lo0bits+0x58>
 200a09c:	1806d13a 	srli	r3,r3,4
 200a0a0:	10800104 	addi	r2,r2,4
 200a0a4:	194000cc 	andi	r5,r3,3
 200a0a8:	2800021e 	bne	r5,zero,200a0b4 <__lo0bits+0x68>
 200a0ac:	1806d0ba 	srli	r3,r3,2
 200a0b0:	10800084 	addi	r2,r2,2
 200a0b4:	1940004c 	andi	r5,r3,1
 200a0b8:	2800081e 	bne	r5,zero,200a0dc <__lo0bits+0x90>
 200a0bc:	1806d07a 	srli	r3,r3,1
 200a0c0:	1800051e 	bne	r3,zero,200a0d8 <__lo0bits+0x8c>
 200a0c4:	00800804 	movi	r2,32
 200a0c8:	f800283a 	ret
 200a0cc:	1806d43a 	srli	r3,r3,16
 200a0d0:	00800404 	movi	r2,16
 200a0d4:	003feb06 	br	200a084 <__alt_mem_epcs_flash_controller+0xfe001084>
 200a0d8:	10800044 	addi	r2,r2,1
 200a0dc:	20c00015 	stw	r3,0(r4)
 200a0e0:	f800283a 	ret
 200a0e4:	0005883a 	mov	r2,zero
 200a0e8:	f800283a 	ret
 200a0ec:	1806d07a 	srli	r3,r3,1
 200a0f0:	00800044 	movi	r2,1
 200a0f4:	20c00015 	stw	r3,0(r4)
 200a0f8:	f800283a 	ret

0200a0fc <__i2b>:
 200a0fc:	defffd04 	addi	sp,sp,-12
 200a100:	dc000015 	stw	r16,0(sp)
 200a104:	04000044 	movi	r16,1
 200a108:	dc400115 	stw	r17,4(sp)
 200a10c:	2823883a 	mov	r17,r5
 200a110:	800b883a 	mov	r5,r16
 200a114:	dfc00215 	stw	ra,8(sp)
 200a118:	2009ccc0 	call	2009ccc <_Balloc>
 200a11c:	14400515 	stw	r17,20(r2)
 200a120:	14000415 	stw	r16,16(r2)
 200a124:	dfc00217 	ldw	ra,8(sp)
 200a128:	dc400117 	ldw	r17,4(sp)
 200a12c:	dc000017 	ldw	r16,0(sp)
 200a130:	dec00304 	addi	sp,sp,12
 200a134:	f800283a 	ret

0200a138 <__multiply>:
 200a138:	defff004 	addi	sp,sp,-64
 200a13c:	dc800815 	stw	r18,32(sp)
 200a140:	dc400715 	stw	r17,28(sp)
 200a144:	34800417 	ldw	r18,16(r6)
 200a148:	2c400417 	ldw	r17,16(r5)
 200a14c:	ddc00d15 	stw	r23,52(sp)
 200a150:	dc000615 	stw	r16,24(sp)
 200a154:	dfc00f15 	stw	ra,60(sp)
 200a158:	df000e15 	stw	fp,56(sp)
 200a15c:	dd800c15 	stw	r22,48(sp)
 200a160:	dd400b15 	stw	r21,44(sp)
 200a164:	dd000a15 	stw	r20,40(sp)
 200a168:	dcc00915 	stw	r19,36(sp)
 200a16c:	2821883a 	mov	r16,r5
 200a170:	302f883a 	mov	r23,r6
 200a174:	8c80050e 	bge	r17,r18,200a18c <__multiply+0x54>
 200a178:	8807883a 	mov	r3,r17
 200a17c:	3021883a 	mov	r16,r6
 200a180:	9023883a 	mov	r17,r18
 200a184:	282f883a 	mov	r23,r5
 200a188:	1825883a 	mov	r18,r3
 200a18c:	80800217 	ldw	r2,8(r16)
 200a190:	8c87883a 	add	r3,r17,r18
 200a194:	d8c00115 	stw	r3,4(sp)
 200a198:	81400117 	ldw	r5,4(r16)
 200a19c:	10c0010e 	bge	r2,r3,200a1a4 <__multiply+0x6c>
 200a1a0:	29400044 	addi	r5,r5,1
 200a1a4:	2009ccc0 	call	2009ccc <_Balloc>
 200a1a8:	d8c00117 	ldw	r3,4(sp)
 200a1ac:	d8800515 	stw	r2,20(sp)
 200a1b0:	14c00504 	addi	r19,r2,20
 200a1b4:	1d400144 	addi	r21,r3,5
 200a1b8:	ad6b883a 	add	r21,r21,r21
 200a1bc:	ad6b883a 	add	r21,r21,r21
 200a1c0:	156b883a 	add	r21,r2,r21
 200a1c4:	dd400215 	stw	r21,8(sp)
 200a1c8:	9805883a 	mov	r2,r19
 200a1cc:	9d40042e 	bgeu	r19,r21,200a1e0 <__multiply+0xa8>
 200a1d0:	d8c00217 	ldw	r3,8(sp)
 200a1d4:	10000015 	stw	zero,0(r2)
 200a1d8:	10800104 	addi	r2,r2,4
 200a1dc:	10fffc36 	bltu	r2,r3,200a1d0 <__alt_mem_epcs_flash_controller+0xfe0011d0>
 200a1e0:	94800144 	addi	r18,r18,5
 200a1e4:	94a5883a 	add	r18,r18,r18
 200a1e8:	94ad883a 	add	r22,r18,r18
 200a1ec:	8c400144 	addi	r17,r17,5
 200a1f0:	8c63883a 	add	r17,r17,r17
 200a1f4:	bdad883a 	add	r22,r23,r22
 200a1f8:	80c00504 	addi	r3,r16,20
 200a1fc:	8c63883a 	add	r17,r17,r17
 200a200:	bc800504 	addi	r18,r23,20
 200a204:	dd800315 	stw	r22,12(sp)
 200a208:	d8c00415 	stw	r3,16(sp)
 200a20c:	dcc00015 	stw	r19,0(sp)
 200a210:	8463883a 	add	r17,r16,r17
 200a214:	9580412e 	bgeu	r18,r22,200a31c <__multiply+0x1e4>
 200a218:	90800017 	ldw	r2,0(r18)
 200a21c:	173fffcc 	andi	fp,r2,65535
 200a220:	e0001a26 	beq	fp,zero,200a28c <__multiply+0x154>
 200a224:	dd000017 	ldw	r20,0(sp)
 200a228:	dd800417 	ldw	r22,16(sp)
 200a22c:	002b883a 	mov	r21,zero
 200a230:	b4c00017 	ldw	r19,0(r22)
 200a234:	a4000017 	ldw	r16,0(r20)
 200a238:	e00b883a 	mov	r5,fp
 200a23c:	993fffcc 	andi	r4,r19,65535
 200a240:	2001f500 	call	2001f50 <__mulsi3>
 200a244:	9808d43a 	srli	r4,r19,16
 200a248:	817fffcc 	andi	r5,r16,65535
 200a24c:	1145883a 	add	r2,r2,r5
 200a250:	e00b883a 	mov	r5,fp
 200a254:	1567883a 	add	r19,r2,r21
 200a258:	8020d43a 	srli	r16,r16,16
 200a25c:	2001f500 	call	2001f50 <__mulsi3>
 200a260:	9808d43a 	srli	r4,r19,16
 200a264:	1405883a 	add	r2,r2,r16
 200a268:	a4c0000d 	sth	r19,0(r20)
 200a26c:	110f883a 	add	r7,r2,r4
 200a270:	a1c0008d 	sth	r7,2(r20)
 200a274:	b5800104 	addi	r22,r22,4
 200a278:	382ad43a 	srli	r21,r7,16
 200a27c:	a5000104 	addi	r20,r20,4
 200a280:	b47feb36 	bltu	r22,r17,200a230 <__alt_mem_epcs_flash_controller+0xfe001230>
 200a284:	a5400015 	stw	r21,0(r20)
 200a288:	90800017 	ldw	r2,0(r18)
 200a28c:	1038d43a 	srli	fp,r2,16
 200a290:	e0001c26 	beq	fp,zero,200a304 <__multiply+0x1cc>
 200a294:	d8c00017 	ldw	r3,0(sp)
 200a298:	dd000417 	ldw	r20,16(sp)
 200a29c:	002b883a 	mov	r21,zero
 200a2a0:	1d800017 	ldw	r22,0(r3)
 200a2a4:	182f883a 	mov	r23,r3
 200a2a8:	b021883a 	mov	r16,r22
 200a2ac:	a4c00017 	ldw	r19,0(r20)
 200a2b0:	8020d43a 	srli	r16,r16,16
 200a2b4:	e00b883a 	mov	r5,fp
 200a2b8:	993fffcc 	andi	r4,r19,65535
 200a2bc:	2001f500 	call	2001f50 <__mulsi3>
 200a2c0:	1405883a 	add	r2,r2,r16
 200a2c4:	9808d43a 	srli	r4,r19,16
 200a2c8:	156b883a 	add	r21,r2,r21
 200a2cc:	bdc00104 	addi	r23,r23,4
 200a2d0:	bdbfff0d 	sth	r22,-4(r23)
 200a2d4:	bd7fff8d 	sth	r21,-2(r23)
 200a2d8:	bc000017 	ldw	r16,0(r23)
 200a2dc:	e00b883a 	mov	r5,fp
 200a2e0:	2001f500 	call	2001f50 <__mulsi3>
 200a2e4:	a80ed43a 	srli	r7,r21,16
 200a2e8:	813fffcc 	andi	r4,r16,65535
 200a2ec:	2085883a 	add	r2,r4,r2
 200a2f0:	11ed883a 	add	r22,r2,r7
 200a2f4:	a5000104 	addi	r20,r20,4
 200a2f8:	b02ad43a 	srli	r21,r22,16
 200a2fc:	a47feb36 	bltu	r20,r17,200a2ac <__alt_mem_epcs_flash_controller+0xfe0012ac>
 200a300:	bd800015 	stw	r22,0(r23)
 200a304:	d8c00017 	ldw	r3,0(sp)
 200a308:	94800104 	addi	r18,r18,4
 200a30c:	18c00104 	addi	r3,r3,4
 200a310:	d8c00015 	stw	r3,0(sp)
 200a314:	d8c00317 	ldw	r3,12(sp)
 200a318:	90ffbf36 	bltu	r18,r3,200a218 <__alt_mem_epcs_flash_controller+0xfe001218>
 200a31c:	d8c00117 	ldw	r3,4(sp)
 200a320:	00c00c0e 	bge	zero,r3,200a354 <__multiply+0x21c>
 200a324:	d8c00217 	ldw	r3,8(sp)
 200a328:	18bfff17 	ldw	r2,-4(r3)
 200a32c:	1d7fff04 	addi	r21,r3,-4
 200a330:	10000326 	beq	r2,zero,200a340 <__multiply+0x208>
 200a334:	00000706 	br	200a354 <__multiply+0x21c>
 200a338:	a8800017 	ldw	r2,0(r21)
 200a33c:	1000051e 	bne	r2,zero,200a354 <__multiply+0x21c>
 200a340:	d8c00117 	ldw	r3,4(sp)
 200a344:	ad7fff04 	addi	r21,r21,-4
 200a348:	18ffffc4 	addi	r3,r3,-1
 200a34c:	d8c00115 	stw	r3,4(sp)
 200a350:	183ff91e 	bne	r3,zero,200a338 <__alt_mem_epcs_flash_controller+0xfe001338>
 200a354:	d8800517 	ldw	r2,20(sp)
 200a358:	d8c00117 	ldw	r3,4(sp)
 200a35c:	10c00415 	stw	r3,16(r2)
 200a360:	dfc00f17 	ldw	ra,60(sp)
 200a364:	df000e17 	ldw	fp,56(sp)
 200a368:	ddc00d17 	ldw	r23,52(sp)
 200a36c:	dd800c17 	ldw	r22,48(sp)
 200a370:	dd400b17 	ldw	r21,44(sp)
 200a374:	dd000a17 	ldw	r20,40(sp)
 200a378:	dcc00917 	ldw	r19,36(sp)
 200a37c:	dc800817 	ldw	r18,32(sp)
 200a380:	dc400717 	ldw	r17,28(sp)
 200a384:	dc000617 	ldw	r16,24(sp)
 200a388:	dec01004 	addi	sp,sp,64
 200a38c:	f800283a 	ret

0200a390 <__pow5mult>:
 200a390:	defffb04 	addi	sp,sp,-20
 200a394:	dcc00315 	stw	r19,12(sp)
 200a398:	dc800215 	stw	r18,8(sp)
 200a39c:	dc000015 	stw	r16,0(sp)
 200a3a0:	dfc00415 	stw	ra,16(sp)
 200a3a4:	dc400115 	stw	r17,4(sp)
 200a3a8:	308000cc 	andi	r2,r6,3
 200a3ac:	3021883a 	mov	r16,r6
 200a3b0:	2027883a 	mov	r19,r4
 200a3b4:	2825883a 	mov	r18,r5
 200a3b8:	10002e1e 	bne	r2,zero,200a474 <__pow5mult+0xe4>
 200a3bc:	8021d0ba 	srai	r16,r16,2
 200a3c0:	80001a26 	beq	r16,zero,200a42c <__pow5mult+0x9c>
 200a3c4:	9c401217 	ldw	r17,72(r19)
 200a3c8:	8800061e 	bne	r17,zero,200a3e4 <__pow5mult+0x54>
 200a3cc:	00003406 	br	200a4a0 <__pow5mult+0x110>
 200a3d0:	8021d07a 	srai	r16,r16,1
 200a3d4:	80001526 	beq	r16,zero,200a42c <__pow5mult+0x9c>
 200a3d8:	88c00017 	ldw	r3,0(r17)
 200a3dc:	18001b26 	beq	r3,zero,200a44c <__pow5mult+0xbc>
 200a3e0:	1823883a 	mov	r17,r3
 200a3e4:	80c0004c 	andi	r3,r16,1
 200a3e8:	183ff926 	beq	r3,zero,200a3d0 <__alt_mem_epcs_flash_controller+0xfe0013d0>
 200a3ec:	900b883a 	mov	r5,r18
 200a3f0:	880d883a 	mov	r6,r17
 200a3f4:	9809883a 	mov	r4,r19
 200a3f8:	200a1380 	call	200a138 <__multiply>
 200a3fc:	90001b26 	beq	r18,zero,200a46c <__pow5mult+0xdc>
 200a400:	91000117 	ldw	r4,4(r18)
 200a404:	98c01317 	ldw	r3,76(r19)
 200a408:	8021d07a 	srai	r16,r16,1
 200a40c:	2109883a 	add	r4,r4,r4
 200a410:	2109883a 	add	r4,r4,r4
 200a414:	1907883a 	add	r3,r3,r4
 200a418:	19000017 	ldw	r4,0(r3)
 200a41c:	91000015 	stw	r4,0(r18)
 200a420:	1c800015 	stw	r18,0(r3)
 200a424:	1025883a 	mov	r18,r2
 200a428:	803feb1e 	bne	r16,zero,200a3d8 <__alt_mem_epcs_flash_controller+0xfe0013d8>
 200a42c:	9005883a 	mov	r2,r18
 200a430:	dfc00417 	ldw	ra,16(sp)
 200a434:	dcc00317 	ldw	r19,12(sp)
 200a438:	dc800217 	ldw	r18,8(sp)
 200a43c:	dc400117 	ldw	r17,4(sp)
 200a440:	dc000017 	ldw	r16,0(sp)
 200a444:	dec00504 	addi	sp,sp,20
 200a448:	f800283a 	ret
 200a44c:	880b883a 	mov	r5,r17
 200a450:	880d883a 	mov	r6,r17
 200a454:	9809883a 	mov	r4,r19
 200a458:	200a1380 	call	200a138 <__multiply>
 200a45c:	88800015 	stw	r2,0(r17)
 200a460:	10000015 	stw	zero,0(r2)
 200a464:	1023883a 	mov	r17,r2
 200a468:	003fde06 	br	200a3e4 <__alt_mem_epcs_flash_controller+0xfe0013e4>
 200a46c:	1025883a 	mov	r18,r2
 200a470:	003fd706 	br	200a3d0 <__alt_mem_epcs_flash_controller+0xfe0013d0>
 200a474:	10bfffc4 	addi	r2,r2,-1
 200a478:	1085883a 	add	r2,r2,r2
 200a47c:	00c08234 	movhi	r3,520
 200a480:	18dc6f04 	addi	r3,r3,29116
 200a484:	1085883a 	add	r2,r2,r2
 200a488:	1885883a 	add	r2,r3,r2
 200a48c:	11800017 	ldw	r6,0(r2)
 200a490:	000f883a 	mov	r7,zero
 200a494:	2009d9c0 	call	2009d9c <__multadd>
 200a498:	1025883a 	mov	r18,r2
 200a49c:	003fc706 	br	200a3bc <__alt_mem_epcs_flash_controller+0xfe0013bc>
 200a4a0:	9809883a 	mov	r4,r19
 200a4a4:	01409c44 	movi	r5,625
 200a4a8:	200a0fc0 	call	200a0fc <__i2b>
 200a4ac:	98801215 	stw	r2,72(r19)
 200a4b0:	1023883a 	mov	r17,r2
 200a4b4:	10000015 	stw	zero,0(r2)
 200a4b8:	003fca06 	br	200a3e4 <__alt_mem_epcs_flash_controller+0xfe0013e4>

0200a4bc <__lshift>:
 200a4bc:	defff904 	addi	sp,sp,-28
 200a4c0:	dd400515 	stw	r21,20(sp)
 200a4c4:	dc400115 	stw	r17,4(sp)
 200a4c8:	2d400417 	ldw	r21,16(r5)
 200a4cc:	3023d17a 	srai	r17,r6,5
 200a4d0:	28800217 	ldw	r2,8(r5)
 200a4d4:	dd000415 	stw	r20,16(sp)
 200a4d8:	8d6b883a 	add	r21,r17,r21
 200a4dc:	dcc00315 	stw	r19,12(sp)
 200a4e0:	dc800215 	stw	r18,8(sp)
 200a4e4:	dc000015 	stw	r16,0(sp)
 200a4e8:	dfc00615 	stw	ra,24(sp)
 200a4ec:	ac000044 	addi	r16,r21,1
 200a4f0:	2825883a 	mov	r18,r5
 200a4f4:	3029883a 	mov	r20,r6
 200a4f8:	2027883a 	mov	r19,r4
 200a4fc:	29400117 	ldw	r5,4(r5)
 200a500:	1400030e 	bge	r2,r16,200a510 <__lshift+0x54>
 200a504:	1085883a 	add	r2,r2,r2
 200a508:	29400044 	addi	r5,r5,1
 200a50c:	143ffd16 	blt	r2,r16,200a504 <__alt_mem_epcs_flash_controller+0xfe001504>
 200a510:	9809883a 	mov	r4,r19
 200a514:	2009ccc0 	call	2009ccc <_Balloc>
 200a518:	10c00504 	addi	r3,r2,20
 200a51c:	0440090e 	bge	zero,r17,200a544 <__lshift+0x88>
 200a520:	000f883a 	mov	r7,zero
 200a524:	18000015 	stw	zero,0(r3)
 200a528:	39c00044 	addi	r7,r7,1
 200a52c:	18c00104 	addi	r3,r3,4
 200a530:	3c7ffc1e 	bne	r7,r17,200a524 <__alt_mem_epcs_flash_controller+0xfe001524>
 200a534:	38c00144 	addi	r3,r7,5
 200a538:	18c7883a 	add	r3,r3,r3
 200a53c:	18c7883a 	add	r3,r3,r3
 200a540:	10c7883a 	add	r3,r2,r3
 200a544:	92000417 	ldw	r8,16(r18)
 200a548:	a18007cc 	andi	r6,r20,31
 200a54c:	91c00504 	addi	r7,r18,20
 200a550:	42000144 	addi	r8,r8,5
 200a554:	4211883a 	add	r8,r8,r8
 200a558:	4211883a 	add	r8,r8,r8
 200a55c:	9211883a 	add	r8,r18,r8
 200a560:	30002226 	beq	r6,zero,200a5ec <__lshift+0x130>
 200a564:	02800804 	movi	r10,32
 200a568:	5195c83a 	sub	r10,r10,r6
 200a56c:	000b883a 	mov	r5,zero
 200a570:	3a400017 	ldw	r9,0(r7)
 200a574:	18c00104 	addi	r3,r3,4
 200a578:	39c00104 	addi	r7,r7,4
 200a57c:	4992983a 	sll	r9,r9,r6
 200a580:	2a4ab03a 	or	r5,r5,r9
 200a584:	197fff15 	stw	r5,-4(r3)
 200a588:	397fff17 	ldw	r5,-4(r7)
 200a58c:	2a8ad83a 	srl	r5,r5,r10
 200a590:	3a3ff736 	bltu	r7,r8,200a570 <__alt_mem_epcs_flash_controller+0xfe001570>
 200a594:	19400015 	stw	r5,0(r3)
 200a598:	28000126 	beq	r5,zero,200a5a0 <__lshift+0xe4>
 200a59c:	ac000084 	addi	r16,r21,2
 200a5a0:	91000117 	ldw	r4,4(r18)
 200a5a4:	98c01317 	ldw	r3,76(r19)
 200a5a8:	843fffc4 	addi	r16,r16,-1
 200a5ac:	2109883a 	add	r4,r4,r4
 200a5b0:	2109883a 	add	r4,r4,r4
 200a5b4:	1907883a 	add	r3,r3,r4
 200a5b8:	19000017 	ldw	r4,0(r3)
 200a5bc:	14000415 	stw	r16,16(r2)
 200a5c0:	91000015 	stw	r4,0(r18)
 200a5c4:	1c800015 	stw	r18,0(r3)
 200a5c8:	dfc00617 	ldw	ra,24(sp)
 200a5cc:	dd400517 	ldw	r21,20(sp)
 200a5d0:	dd000417 	ldw	r20,16(sp)
 200a5d4:	dcc00317 	ldw	r19,12(sp)
 200a5d8:	dc800217 	ldw	r18,8(sp)
 200a5dc:	dc400117 	ldw	r17,4(sp)
 200a5e0:	dc000017 	ldw	r16,0(sp)
 200a5e4:	dec00704 	addi	sp,sp,28
 200a5e8:	f800283a 	ret
 200a5ec:	39400017 	ldw	r5,0(r7)
 200a5f0:	18c00104 	addi	r3,r3,4
 200a5f4:	39c00104 	addi	r7,r7,4
 200a5f8:	197fff15 	stw	r5,-4(r3)
 200a5fc:	3a3fe82e 	bgeu	r7,r8,200a5a0 <__alt_mem_epcs_flash_controller+0xfe0015a0>
 200a600:	39400017 	ldw	r5,0(r7)
 200a604:	18c00104 	addi	r3,r3,4
 200a608:	39c00104 	addi	r7,r7,4
 200a60c:	197fff15 	stw	r5,-4(r3)
 200a610:	3a3ff636 	bltu	r7,r8,200a5ec <__alt_mem_epcs_flash_controller+0xfe0015ec>
 200a614:	003fe206 	br	200a5a0 <__alt_mem_epcs_flash_controller+0xfe0015a0>

0200a618 <__mcmp>:
 200a618:	20800417 	ldw	r2,16(r4)
 200a61c:	28c00417 	ldw	r3,16(r5)
 200a620:	10c5c83a 	sub	r2,r2,r3
 200a624:	10000f1e 	bne	r2,zero,200a664 <__mcmp+0x4c>
 200a628:	18c00144 	addi	r3,r3,5
 200a62c:	18c7883a 	add	r3,r3,r3
 200a630:	18c7883a 	add	r3,r3,r3
 200a634:	21c00504 	addi	r7,r4,20
 200a638:	28cb883a 	add	r5,r5,r3
 200a63c:	20c9883a 	add	r4,r4,r3
 200a640:	213fff04 	addi	r4,r4,-4
 200a644:	297fff04 	addi	r5,r5,-4
 200a648:	21800017 	ldw	r6,0(r4)
 200a64c:	28c00017 	ldw	r3,0(r5)
 200a650:	30c0021e 	bne	r6,r3,200a65c <__mcmp+0x44>
 200a654:	393ffa36 	bltu	r7,r4,200a640 <__alt_mem_epcs_flash_controller+0xfe001640>
 200a658:	f800283a 	ret
 200a65c:	30c00236 	bltu	r6,r3,200a668 <__mcmp+0x50>
 200a660:	00800044 	movi	r2,1
 200a664:	f800283a 	ret
 200a668:	00bfffc4 	movi	r2,-1
 200a66c:	f800283a 	ret

0200a670 <__mdiff>:
 200a670:	defffb04 	addi	sp,sp,-20
 200a674:	dc000015 	stw	r16,0(sp)
 200a678:	2821883a 	mov	r16,r5
 200a67c:	dc800215 	stw	r18,8(sp)
 200a680:	300b883a 	mov	r5,r6
 200a684:	2025883a 	mov	r18,r4
 200a688:	8009883a 	mov	r4,r16
 200a68c:	dc400115 	stw	r17,4(sp)
 200a690:	dfc00415 	stw	ra,16(sp)
 200a694:	dcc00315 	stw	r19,12(sp)
 200a698:	3023883a 	mov	r17,r6
 200a69c:	200a6180 	call	200a618 <__mcmp>
 200a6a0:	10005026 	beq	r2,zero,200a7e4 <__mdiff+0x174>
 200a6a4:	10004a16 	blt	r2,zero,200a7d0 <__mdiff+0x160>
 200a6a8:	0027883a 	mov	r19,zero
 200a6ac:	81400117 	ldw	r5,4(r16)
 200a6b0:	9009883a 	mov	r4,r18
 200a6b4:	2009ccc0 	call	2009ccc <_Balloc>
 200a6b8:	82400417 	ldw	r9,16(r16)
 200a6bc:	89800417 	ldw	r6,16(r17)
 200a6c0:	14c00315 	stw	r19,12(r2)
 200a6c4:	4b800144 	addi	r14,r9,5
 200a6c8:	31800144 	addi	r6,r6,5
 200a6cc:	739d883a 	add	r14,r14,r14
 200a6d0:	318d883a 	add	r6,r6,r6
 200a6d4:	739d883a 	add	r14,r14,r14
 200a6d8:	318d883a 	add	r6,r6,r6
 200a6dc:	81c00504 	addi	r7,r16,20
 200a6e0:	839d883a 	add	r14,r16,r14
 200a6e4:	8a000504 	addi	r8,r17,20
 200a6e8:	898d883a 	add	r6,r17,r6
 200a6ec:	10c00504 	addi	r3,r2,20
 200a6f0:	0009883a 	mov	r4,zero
 200a6f4:	3b000017 	ldw	r12,0(r7)
 200a6f8:	42c00017 	ldw	r11,0(r8)
 200a6fc:	42000104 	addi	r8,r8,4
 200a700:	62bfffcc 	andi	r10,r12,65535
 200a704:	5b7fffcc 	andi	r13,r11,65535
 200a708:	5109883a 	add	r4,r10,r4
 200a70c:	2355c83a 	sub	r10,r4,r13
 200a710:	5816d43a 	srli	r11,r11,16
 200a714:	6008d43a 	srli	r4,r12,16
 200a718:	501bd43a 	srai	r13,r10,16
 200a71c:	1a80000d 	sth	r10,0(r3)
 200a720:	22c9c83a 	sub	r4,r4,r11
 200a724:	2349883a 	add	r4,r4,r13
 200a728:	1900008d 	sth	r4,2(r3)
 200a72c:	39c00104 	addi	r7,r7,4
 200a730:	2009d43a 	srai	r4,r4,16
 200a734:	18c00104 	addi	r3,r3,4
 200a738:	41bfee36 	bltu	r8,r6,200a6f4 <__alt_mem_epcs_flash_controller+0xfe0016f4>
 200a73c:	180b883a 	mov	r5,r3
 200a740:	3815883a 	mov	r10,r7
 200a744:	3b80132e 	bgeu	r7,r14,200a794 <__mdiff+0x124>
 200a748:	3a000017 	ldw	r8,0(r7)
 200a74c:	18c00104 	addi	r3,r3,4
 200a750:	39c00104 	addi	r7,r7,4
 200a754:	41bfffcc 	andi	r6,r8,65535
 200a758:	310d883a 	add	r6,r6,r4
 200a75c:	3009d43a 	srai	r4,r6,16
 200a760:	4010d43a 	srli	r8,r8,16
 200a764:	19bfff0d 	sth	r6,-4(r3)
 200a768:	2209883a 	add	r4,r4,r8
 200a76c:	193fff8d 	sth	r4,-2(r3)
 200a770:	2009d43a 	srai	r4,r4,16
 200a774:	3bbff436 	bltu	r7,r14,200a748 <__alt_mem_epcs_flash_controller+0xfe001748>
 200a778:	0286303a 	nor	r3,zero,r10
 200a77c:	1b87883a 	add	r3,r3,r14
 200a780:	1806d0ba 	srli	r3,r3,2
 200a784:	18c00044 	addi	r3,r3,1
 200a788:	18c7883a 	add	r3,r3,r3
 200a78c:	18c7883a 	add	r3,r3,r3
 200a790:	28c7883a 	add	r3,r5,r3
 200a794:	193fff17 	ldw	r4,-4(r3)
 200a798:	18ffff04 	addi	r3,r3,-4
 200a79c:	2000041e 	bne	r4,zero,200a7b0 <__mdiff+0x140>
 200a7a0:	18ffff04 	addi	r3,r3,-4
 200a7a4:	19000017 	ldw	r4,0(r3)
 200a7a8:	4a7fffc4 	addi	r9,r9,-1
 200a7ac:	203ffc26 	beq	r4,zero,200a7a0 <__alt_mem_epcs_flash_controller+0xfe0017a0>
 200a7b0:	12400415 	stw	r9,16(r2)
 200a7b4:	dfc00417 	ldw	ra,16(sp)
 200a7b8:	dcc00317 	ldw	r19,12(sp)
 200a7bc:	dc800217 	ldw	r18,8(sp)
 200a7c0:	dc400117 	ldw	r17,4(sp)
 200a7c4:	dc000017 	ldw	r16,0(sp)
 200a7c8:	dec00504 	addi	sp,sp,20
 200a7cc:	f800283a 	ret
 200a7d0:	8005883a 	mov	r2,r16
 200a7d4:	04c00044 	movi	r19,1
 200a7d8:	8821883a 	mov	r16,r17
 200a7dc:	1023883a 	mov	r17,r2
 200a7e0:	003fb206 	br	200a6ac <__alt_mem_epcs_flash_controller+0xfe0016ac>
 200a7e4:	9009883a 	mov	r4,r18
 200a7e8:	000b883a 	mov	r5,zero
 200a7ec:	2009ccc0 	call	2009ccc <_Balloc>
 200a7f0:	00c00044 	movi	r3,1
 200a7f4:	10c00415 	stw	r3,16(r2)
 200a7f8:	10000515 	stw	zero,20(r2)
 200a7fc:	dfc00417 	ldw	ra,16(sp)
 200a800:	dcc00317 	ldw	r19,12(sp)
 200a804:	dc800217 	ldw	r18,8(sp)
 200a808:	dc400117 	ldw	r17,4(sp)
 200a80c:	dc000017 	ldw	r16,0(sp)
 200a810:	dec00504 	addi	sp,sp,20
 200a814:	f800283a 	ret

0200a818 <__ulp>:
 200a818:	295ffc2c 	andhi	r5,r5,32752
 200a81c:	00bf3034 	movhi	r2,64704
 200a820:	2887883a 	add	r3,r5,r2
 200a824:	00c0020e 	bge	zero,r3,200a830 <__ulp+0x18>
 200a828:	0005883a 	mov	r2,zero
 200a82c:	f800283a 	ret
 200a830:	00c7c83a 	sub	r3,zero,r3
 200a834:	1805d53a 	srai	r2,r3,20
 200a838:	00c004c4 	movi	r3,19
 200a83c:	18800a0e 	bge	r3,r2,200a868 <__ulp+0x50>
 200a840:	01000c84 	movi	r4,50
 200a844:	0007883a 	mov	r3,zero
 200a848:	20800516 	blt	r4,r2,200a860 <__ulp+0x48>
 200a84c:	01000cc4 	movi	r4,51
 200a850:	2085c83a 	sub	r2,r4,r2
 200a854:	01000044 	movi	r4,1
 200a858:	2084983a 	sll	r2,r4,r2
 200a85c:	f800283a 	ret
 200a860:	00800044 	movi	r2,1
 200a864:	f800283a 	ret
 200a868:	00c00234 	movhi	r3,8
 200a86c:	1887d83a 	sra	r3,r3,r2
 200a870:	0005883a 	mov	r2,zero
 200a874:	f800283a 	ret

0200a878 <__b2d>:
 200a878:	defffa04 	addi	sp,sp,-24
 200a87c:	dc000015 	stw	r16,0(sp)
 200a880:	24000417 	ldw	r16,16(r4)
 200a884:	dc400115 	stw	r17,4(sp)
 200a888:	dcc00315 	stw	r19,12(sp)
 200a88c:	84000144 	addi	r16,r16,5
 200a890:	8421883a 	add	r16,r16,r16
 200a894:	8421883a 	add	r16,r16,r16
 200a898:	2421883a 	add	r16,r4,r16
 200a89c:	847fff17 	ldw	r17,-4(r16)
 200a8a0:	24c00504 	addi	r19,r4,20
 200a8a4:	dd000415 	stw	r20,16(sp)
 200a8a8:	8809883a 	mov	r4,r17
 200a8ac:	dc800215 	stw	r18,8(sp)
 200a8b0:	2829883a 	mov	r20,r5
 200a8b4:	dfc00515 	stw	ra,20(sp)
 200a8b8:	2009fe40 	call	2009fe4 <__hi0bits>
 200a8bc:	00c00804 	movi	r3,32
 200a8c0:	1887c83a 	sub	r3,r3,r2
 200a8c4:	a0c00015 	stw	r3,0(r20)
 200a8c8:	00c00284 	movi	r3,10
 200a8cc:	84bfff04 	addi	r18,r16,-4
 200a8d0:	18801216 	blt	r3,r2,200a91c <__b2d+0xa4>
 200a8d4:	010002c4 	movi	r4,11
 200a8d8:	2089c83a 	sub	r4,r4,r2
 200a8dc:	8906d83a 	srl	r3,r17,r4
 200a8e0:	18cffc34 	orhi	r3,r3,16368
 200a8e4:	9c80322e 	bgeu	r19,r18,200a9b0 <__b2d+0x138>
 200a8e8:	817ffe17 	ldw	r5,-8(r16)
 200a8ec:	2908d83a 	srl	r4,r5,r4
 200a8f0:	10800544 	addi	r2,r2,21
 200a8f4:	88a2983a 	sll	r17,r17,r2
 200a8f8:	2444b03a 	or	r2,r4,r17
 200a8fc:	dfc00517 	ldw	ra,20(sp)
 200a900:	dd000417 	ldw	r20,16(sp)
 200a904:	dcc00317 	ldw	r19,12(sp)
 200a908:	dc800217 	ldw	r18,8(sp)
 200a90c:	dc400117 	ldw	r17,4(sp)
 200a910:	dc000017 	ldw	r16,0(sp)
 200a914:	dec00604 	addi	sp,sp,24
 200a918:	f800283a 	ret
 200a91c:	9c801636 	bltu	r19,r18,200a978 <__b2d+0x100>
 200a920:	113ffd44 	addi	r4,r2,-11
 200a924:	000b883a 	mov	r5,zero
 200a928:	20001726 	beq	r4,zero,200a988 <__b2d+0x110>
 200a92c:	00c00ac4 	movi	r3,43
 200a930:	1885c83a 	sub	r2,r3,r2
 200a934:	8906983a 	sll	r3,r17,r4
 200a938:	288cd83a 	srl	r6,r5,r2
 200a93c:	18cffc34 	orhi	r3,r3,16368
 200a940:	1986b03a 	or	r3,r3,r6
 200a944:	9c801c2e 	bgeu	r19,r18,200a9b8 <__b2d+0x140>
 200a948:	91bfff17 	ldw	r6,-4(r18)
 200a94c:	3084d83a 	srl	r2,r6,r2
 200a950:	2908983a 	sll	r4,r5,r4
 200a954:	1104b03a 	or	r2,r2,r4
 200a958:	dfc00517 	ldw	ra,20(sp)
 200a95c:	dd000417 	ldw	r20,16(sp)
 200a960:	dcc00317 	ldw	r19,12(sp)
 200a964:	dc800217 	ldw	r18,8(sp)
 200a968:	dc400117 	ldw	r17,4(sp)
 200a96c:	dc000017 	ldw	r16,0(sp)
 200a970:	dec00604 	addi	sp,sp,24
 200a974:	f800283a 	ret
 200a978:	113ffd44 	addi	r4,r2,-11
 200a97c:	84bffe04 	addi	r18,r16,-8
 200a980:	817ffe17 	ldw	r5,-8(r16)
 200a984:	203fe91e 	bne	r4,zero,200a92c <__alt_mem_epcs_flash_controller+0xfe00192c>
 200a988:	88cffc34 	orhi	r3,r17,16368
 200a98c:	2805883a 	mov	r2,r5
 200a990:	dfc00517 	ldw	ra,20(sp)
 200a994:	dd000417 	ldw	r20,16(sp)
 200a998:	dcc00317 	ldw	r19,12(sp)
 200a99c:	dc800217 	ldw	r18,8(sp)
 200a9a0:	dc400117 	ldw	r17,4(sp)
 200a9a4:	dc000017 	ldw	r16,0(sp)
 200a9a8:	dec00604 	addi	sp,sp,24
 200a9ac:	f800283a 	ret
 200a9b0:	0009883a 	mov	r4,zero
 200a9b4:	003fce06 	br	200a8f0 <__alt_mem_epcs_flash_controller+0xfe0018f0>
 200a9b8:	0005883a 	mov	r2,zero
 200a9bc:	003fe406 	br	200a950 <__alt_mem_epcs_flash_controller+0xfe001950>

0200a9c0 <__d2b>:
 200a9c0:	defff804 	addi	sp,sp,-32
 200a9c4:	dc400315 	stw	r17,12(sp)
 200a9c8:	3023883a 	mov	r17,r6
 200a9cc:	dc800415 	stw	r18,16(sp)
 200a9d0:	8824907a 	slli	r18,r17,1
 200a9d4:	dcc00515 	stw	r19,20(sp)
 200a9d8:	2827883a 	mov	r19,r5
 200a9dc:	9024d57a 	srli	r18,r18,21
 200a9e0:	01400044 	movi	r5,1
 200a9e4:	dd000615 	stw	r20,24(sp)
 200a9e8:	dc000215 	stw	r16,8(sp)
 200a9ec:	dfc00715 	stw	ra,28(sp)
 200a9f0:	3829883a 	mov	r20,r7
 200a9f4:	2009ccc0 	call	2009ccc <_Balloc>
 200a9f8:	1021883a 	mov	r16,r2
 200a9fc:	00800434 	movhi	r2,16
 200aa00:	10bfffc4 	addi	r2,r2,-1
 200aa04:	88a2703a 	and	r17,r17,r2
 200aa08:	90000126 	beq	r18,zero,200aa10 <__d2b+0x50>
 200aa0c:	8c400434 	orhi	r17,r17,16
 200aa10:	dc400015 	stw	r17,0(sp)
 200aa14:	98002226 	beq	r19,zero,200aaa0 <__d2b+0xe0>
 200aa18:	d9000104 	addi	r4,sp,4
 200aa1c:	dcc00115 	stw	r19,4(sp)
 200aa20:	200a04c0 	call	200a04c <__lo0bits>
 200aa24:	d8c00017 	ldw	r3,0(sp)
 200aa28:	10002d1e 	bne	r2,zero,200aae0 <__d2b+0x120>
 200aa2c:	d9000117 	ldw	r4,4(sp)
 200aa30:	81000515 	stw	r4,20(r16)
 200aa34:	1823003a 	cmpeq	r17,r3,zero
 200aa38:	01000084 	movi	r4,2
 200aa3c:	2463c83a 	sub	r17,r4,r17
 200aa40:	80c00615 	stw	r3,24(r16)
 200aa44:	84400415 	stw	r17,16(r16)
 200aa48:	90001d1e 	bne	r18,zero,200aac0 <__d2b+0x100>
 200aa4c:	88c00104 	addi	r3,r17,4
 200aa50:	18c7883a 	add	r3,r3,r3
 200aa54:	18c7883a 	add	r3,r3,r3
 200aa58:	80c7883a 	add	r3,r16,r3
 200aa5c:	19000017 	ldw	r4,0(r3)
 200aa60:	10bef384 	addi	r2,r2,-1074
 200aa64:	a0800015 	stw	r2,0(r20)
 200aa68:	2009fe40 	call	2009fe4 <__hi0bits>
 200aa6c:	8822917a 	slli	r17,r17,5
 200aa70:	d8c00817 	ldw	r3,32(sp)
 200aa74:	8885c83a 	sub	r2,r17,r2
 200aa78:	18800015 	stw	r2,0(r3)
 200aa7c:	8005883a 	mov	r2,r16
 200aa80:	dfc00717 	ldw	ra,28(sp)
 200aa84:	dd000617 	ldw	r20,24(sp)
 200aa88:	dcc00517 	ldw	r19,20(sp)
 200aa8c:	dc800417 	ldw	r18,16(sp)
 200aa90:	dc400317 	ldw	r17,12(sp)
 200aa94:	dc000217 	ldw	r16,8(sp)
 200aa98:	dec00804 	addi	sp,sp,32
 200aa9c:	f800283a 	ret
 200aaa0:	d809883a 	mov	r4,sp
 200aaa4:	200a04c0 	call	200a04c <__lo0bits>
 200aaa8:	d8c00017 	ldw	r3,0(sp)
 200aaac:	04400044 	movi	r17,1
 200aab0:	84400415 	stw	r17,16(r16)
 200aab4:	80c00515 	stw	r3,20(r16)
 200aab8:	10800804 	addi	r2,r2,32
 200aabc:	903fe326 	beq	r18,zero,200aa4c <__alt_mem_epcs_flash_controller+0xfe001a4c>
 200aac0:	00c00d44 	movi	r3,53
 200aac4:	94bef344 	addi	r18,r18,-1075
 200aac8:	90a5883a 	add	r18,r18,r2
 200aacc:	1885c83a 	sub	r2,r3,r2
 200aad0:	d8c00817 	ldw	r3,32(sp)
 200aad4:	a4800015 	stw	r18,0(r20)
 200aad8:	18800015 	stw	r2,0(r3)
 200aadc:	003fe706 	br	200aa7c <__alt_mem_epcs_flash_controller+0xfe001a7c>
 200aae0:	01000804 	movi	r4,32
 200aae4:	2089c83a 	sub	r4,r4,r2
 200aae8:	1908983a 	sll	r4,r3,r4
 200aaec:	d9400117 	ldw	r5,4(sp)
 200aaf0:	1886d83a 	srl	r3,r3,r2
 200aaf4:	2148b03a 	or	r4,r4,r5
 200aaf8:	81000515 	stw	r4,20(r16)
 200aafc:	d8c00015 	stw	r3,0(sp)
 200ab00:	003fcc06 	br	200aa34 <__alt_mem_epcs_flash_controller+0xfe001a34>

0200ab04 <__ratio>:
 200ab04:	defff904 	addi	sp,sp,-28
 200ab08:	dc400315 	stw	r17,12(sp)
 200ab0c:	2823883a 	mov	r17,r5
 200ab10:	d9400104 	addi	r5,sp,4
 200ab14:	dfc00615 	stw	ra,24(sp)
 200ab18:	dcc00515 	stw	r19,20(sp)
 200ab1c:	dc800415 	stw	r18,16(sp)
 200ab20:	2027883a 	mov	r19,r4
 200ab24:	dc000215 	stw	r16,8(sp)
 200ab28:	200a8780 	call	200a878 <__b2d>
 200ab2c:	8809883a 	mov	r4,r17
 200ab30:	d80b883a 	mov	r5,sp
 200ab34:	1025883a 	mov	r18,r2
 200ab38:	1821883a 	mov	r16,r3
 200ab3c:	200a8780 	call	200a878 <__b2d>
 200ab40:	99400417 	ldw	r5,16(r19)
 200ab44:	89000417 	ldw	r4,16(r17)
 200ab48:	d9800117 	ldw	r6,4(sp)
 200ab4c:	2909c83a 	sub	r4,r5,r4
 200ab50:	d9400017 	ldw	r5,0(sp)
 200ab54:	2008917a 	slli	r4,r4,5
 200ab58:	314bc83a 	sub	r5,r6,r5
 200ab5c:	290b883a 	add	r5,r5,r4
 200ab60:	01400e0e 	bge	zero,r5,200ab9c <__ratio+0x98>
 200ab64:	280a953a 	slli	r5,r5,20
 200ab68:	2c21883a 	add	r16,r5,r16
 200ab6c:	9009883a 	mov	r4,r18
 200ab70:	800b883a 	mov	r5,r16
 200ab74:	100d883a 	mov	r6,r2
 200ab78:	180f883a 	mov	r7,r3
 200ab7c:	2001ad40 	call	2001ad4 <__divdf3>
 200ab80:	dfc00617 	ldw	ra,24(sp)
 200ab84:	dcc00517 	ldw	r19,20(sp)
 200ab88:	dc800417 	ldw	r18,16(sp)
 200ab8c:	dc400317 	ldw	r17,12(sp)
 200ab90:	dc000217 	ldw	r16,8(sp)
 200ab94:	dec00704 	addi	sp,sp,28
 200ab98:	f800283a 	ret
 200ab9c:	280a953a 	slli	r5,r5,20
 200aba0:	1947c83a 	sub	r3,r3,r5
 200aba4:	003ff106 	br	200ab6c <__alt_mem_epcs_flash_controller+0xfe001b6c>

0200aba8 <_mprec_log10>:
 200aba8:	defffe04 	addi	sp,sp,-8
 200abac:	dc000015 	stw	r16,0(sp)
 200abb0:	dfc00115 	stw	ra,4(sp)
 200abb4:	008005c4 	movi	r2,23
 200abb8:	2021883a 	mov	r16,r4
 200abbc:	11000d0e 	bge	r2,r4,200abf4 <_mprec_log10+0x4c>
 200abc0:	0005883a 	mov	r2,zero
 200abc4:	00cffc34 	movhi	r3,16368
 200abc8:	843fffc4 	addi	r16,r16,-1
 200abcc:	1009883a 	mov	r4,r2
 200abd0:	180b883a 	mov	r5,r3
 200abd4:	000d883a 	mov	r6,zero
 200abd8:	01d00934 	movhi	r7,16420
 200abdc:	20017f00 	call	20017f0 <__muldf3>
 200abe0:	803ff91e 	bne	r16,zero,200abc8 <__alt_mem_epcs_flash_controller+0xfe001bc8>
 200abe4:	dfc00117 	ldw	ra,4(sp)
 200abe8:	dc000017 	ldw	r16,0(sp)
 200abec:	dec00204 	addi	sp,sp,8
 200abf0:	f800283a 	ret
 200abf4:	202090fa 	slli	r16,r4,3
 200abf8:	00808234 	movhi	r2,520
 200abfc:	109c3d04 	addi	r2,r2,28916
 200ac00:	1421883a 	add	r16,r2,r16
 200ac04:	80800017 	ldw	r2,0(r16)
 200ac08:	80c00117 	ldw	r3,4(r16)
 200ac0c:	dfc00117 	ldw	ra,4(sp)
 200ac10:	dc000017 	ldw	r16,0(sp)
 200ac14:	dec00204 	addi	sp,sp,8
 200ac18:	f800283a 	ret

0200ac1c <__copybits>:
 200ac1c:	297fffc4 	addi	r5,r5,-1
 200ac20:	31c00417 	ldw	r7,16(r6)
 200ac24:	2811d17a 	srai	r8,r5,5
 200ac28:	30800504 	addi	r2,r6,20
 200ac2c:	39c00144 	addi	r7,r7,5
 200ac30:	42000044 	addi	r8,r8,1
 200ac34:	39cf883a 	add	r7,r7,r7
 200ac38:	4211883a 	add	r8,r8,r8
 200ac3c:	39cf883a 	add	r7,r7,r7
 200ac40:	4211883a 	add	r8,r8,r8
 200ac44:	31cf883a 	add	r7,r6,r7
 200ac48:	2211883a 	add	r8,r4,r8
 200ac4c:	11c00d2e 	bgeu	r2,r7,200ac84 <__copybits+0x68>
 200ac50:	2007883a 	mov	r3,r4
 200ac54:	11400017 	ldw	r5,0(r2)
 200ac58:	18c00104 	addi	r3,r3,4
 200ac5c:	10800104 	addi	r2,r2,4
 200ac60:	197fff15 	stw	r5,-4(r3)
 200ac64:	11fffb36 	bltu	r2,r7,200ac54 <__alt_mem_epcs_flash_controller+0xfe001c54>
 200ac68:	3985c83a 	sub	r2,r7,r6
 200ac6c:	10bffac4 	addi	r2,r2,-21
 200ac70:	1004d0ba 	srli	r2,r2,2
 200ac74:	10800044 	addi	r2,r2,1
 200ac78:	1085883a 	add	r2,r2,r2
 200ac7c:	1085883a 	add	r2,r2,r2
 200ac80:	2089883a 	add	r4,r4,r2
 200ac84:	2200032e 	bgeu	r4,r8,200ac94 <__copybits+0x78>
 200ac88:	20000015 	stw	zero,0(r4)
 200ac8c:	21000104 	addi	r4,r4,4
 200ac90:	223ffd36 	bltu	r4,r8,200ac88 <__alt_mem_epcs_flash_controller+0xfe001c88>
 200ac94:	f800283a 	ret

0200ac98 <__any_on>:
 200ac98:	21800417 	ldw	r6,16(r4)
 200ac9c:	2805d17a 	srai	r2,r5,5
 200aca0:	20c00504 	addi	r3,r4,20
 200aca4:	30800f0e 	bge	r6,r2,200ace4 <__any_on+0x4c>
 200aca8:	3005883a 	mov	r2,r6
 200acac:	10800144 	addi	r2,r2,5
 200acb0:	1085883a 	add	r2,r2,r2
 200acb4:	1085883a 	add	r2,r2,r2
 200acb8:	2089883a 	add	r4,r4,r2
 200acbc:	1900152e 	bgeu	r3,r4,200ad14 <__any_on+0x7c>
 200acc0:	20bfff17 	ldw	r2,-4(r4)
 200acc4:	213fff04 	addi	r4,r4,-4
 200acc8:	1000041e 	bne	r2,zero,200acdc <__any_on+0x44>
 200accc:	1900112e 	bgeu	r3,r4,200ad14 <__any_on+0x7c>
 200acd0:	213fff04 	addi	r4,r4,-4
 200acd4:	20800017 	ldw	r2,0(r4)
 200acd8:	103ffc26 	beq	r2,zero,200accc <__alt_mem_epcs_flash_controller+0xfe001ccc>
 200acdc:	00800044 	movi	r2,1
 200ace0:	f800283a 	ret
 200ace4:	11bff10e 	bge	r2,r6,200acac <__alt_mem_epcs_flash_controller+0xfe001cac>
 200ace8:	294007cc 	andi	r5,r5,31
 200acec:	283fef26 	beq	r5,zero,200acac <__alt_mem_epcs_flash_controller+0xfe001cac>
 200acf0:	11800144 	addi	r6,r2,5
 200acf4:	318d883a 	add	r6,r6,r6
 200acf8:	318d883a 	add	r6,r6,r6
 200acfc:	218d883a 	add	r6,r4,r6
 200ad00:	31800017 	ldw	r6,0(r6)
 200ad04:	314ed83a 	srl	r7,r6,r5
 200ad08:	394a983a 	sll	r5,r7,r5
 200ad0c:	29bff31e 	bne	r5,r6,200acdc <__alt_mem_epcs_flash_controller+0xfe001cdc>
 200ad10:	003fe606 	br	200acac <__alt_mem_epcs_flash_controller+0xfe001cac>
 200ad14:	0005883a 	mov	r2,zero
 200ad18:	f800283a 	ret

0200ad1c <_read_r>:
 200ad1c:	defffd04 	addi	sp,sp,-12
 200ad20:	dc400115 	stw	r17,4(sp)
 200ad24:	dc000015 	stw	r16,0(sp)
 200ad28:	2023883a 	mov	r17,r4
 200ad2c:	04008274 	movhi	r16,521
 200ad30:	842afb04 	addi	r16,r16,-21524
 200ad34:	2809883a 	mov	r4,r5
 200ad38:	300b883a 	mov	r5,r6
 200ad3c:	380d883a 	mov	r6,r7
 200ad40:	dfc00215 	stw	ra,8(sp)
 200ad44:	80000015 	stw	zero,0(r16)
 200ad48:	2010b9c0 	call	2010b9c <read>
 200ad4c:	00ffffc4 	movi	r3,-1
 200ad50:	10c00526 	beq	r2,r3,200ad68 <_read_r+0x4c>
 200ad54:	dfc00217 	ldw	ra,8(sp)
 200ad58:	dc400117 	ldw	r17,4(sp)
 200ad5c:	dc000017 	ldw	r16,0(sp)
 200ad60:	dec00304 	addi	sp,sp,12
 200ad64:	f800283a 	ret
 200ad68:	80c00017 	ldw	r3,0(r16)
 200ad6c:	183ff926 	beq	r3,zero,200ad54 <__alt_mem_epcs_flash_controller+0xfe001d54>
 200ad70:	88c00015 	stw	r3,0(r17)
 200ad74:	dfc00217 	ldw	ra,8(sp)
 200ad78:	dc400117 	ldw	r17,4(sp)
 200ad7c:	dc000017 	ldw	r16,0(sp)
 200ad80:	dec00304 	addi	sp,sp,12
 200ad84:	f800283a 	ret

0200ad88 <_realloc_r>:
 200ad88:	defff504 	addi	sp,sp,-44
 200ad8c:	dd400615 	stw	r21,24(sp)
 200ad90:	dc800315 	stw	r18,12(sp)
 200ad94:	dc000115 	stw	r16,4(sp)
 200ad98:	dfc00a15 	stw	ra,40(sp)
 200ad9c:	df000915 	stw	fp,36(sp)
 200ada0:	ddc00815 	stw	r23,32(sp)
 200ada4:	dd800715 	stw	r22,28(sp)
 200ada8:	dd000515 	stw	r20,20(sp)
 200adac:	dcc00415 	stw	r19,16(sp)
 200adb0:	dc400215 	stw	r17,8(sp)
 200adb4:	2821883a 	mov	r16,r5
 200adb8:	202b883a 	mov	r21,r4
 200adbc:	3025883a 	mov	r18,r6
 200adc0:	28009626 	beq	r5,zero,200b01c <_realloc_r+0x294>
 200adc4:	2010b0c0 	call	2010b0c <__malloc_lock>
 200adc8:	80bfff17 	ldw	r2,-4(r16)
 200adcc:	04ffff04 	movi	r19,-4
 200add0:	90c002c4 	addi	r3,r18,11
 200add4:	01000584 	movi	r4,22
 200add8:	85bffe04 	addi	r22,r16,-8
 200addc:	14e6703a 	and	r19,r2,r19
 200ade0:	20c0372e 	bgeu	r4,r3,200aec0 <_realloc_r+0x138>
 200ade4:	047ffe04 	movi	r17,-8
 200ade8:	1c62703a 	and	r17,r3,r17
 200adec:	8807883a 	mov	r3,r17
 200adf0:	88005a16 	blt	r17,zero,200af5c <_realloc_r+0x1d4>
 200adf4:	8c805936 	bltu	r17,r18,200af5c <_realloc_r+0x1d4>
 200adf8:	98c0340e 	bge	r19,r3,200aecc <_realloc_r+0x144>
 200adfc:	07008234 	movhi	fp,520
 200ae00:	e71df304 	addi	fp,fp,30668
 200ae04:	e1400217 	ldw	r5,8(fp)
 200ae08:	b4c9883a 	add	r4,r22,r19
 200ae0c:	29009026 	beq	r5,r4,200b050 <_realloc_r+0x2c8>
 200ae10:	21800117 	ldw	r6,4(r4)
 200ae14:	01ffff84 	movi	r7,-2
 200ae18:	31ce703a 	and	r7,r6,r7
 200ae1c:	21cf883a 	add	r7,r4,r7
 200ae20:	39c00117 	ldw	r7,4(r7)
 200ae24:	39c0004c 	andi	r7,r7,1
 200ae28:	38004326 	beq	r7,zero,200af38 <_realloc_r+0x1b0>
 200ae2c:	000d883a 	mov	r6,zero
 200ae30:	0009883a 	mov	r4,zero
 200ae34:	1080004c 	andi	r2,r2,1
 200ae38:	10005a1e 	bne	r2,zero,200afa4 <_realloc_r+0x21c>
 200ae3c:	85fffe17 	ldw	r23,-8(r16)
 200ae40:	00bfff04 	movi	r2,-4
 200ae44:	b5efc83a 	sub	r23,r22,r23
 200ae48:	b9c00117 	ldw	r7,4(r23)
 200ae4c:	388e703a 	and	r7,r7,r2
 200ae50:	3ccf883a 	add	r7,r7,r19
 200ae54:	20005226 	beq	r4,zero,200afa0 <_realloc_r+0x218>
 200ae58:	31e9883a 	add	r20,r6,r7
 200ae5c:	2140c726 	beq	r4,r5,200b17c <_realloc_r+0x3f4>
 200ae60:	a0c04f16 	blt	r20,r3,200afa0 <_realloc_r+0x218>
 200ae64:	20800317 	ldw	r2,12(r4)
 200ae68:	20c00217 	ldw	r3,8(r4)
 200ae6c:	99bfff04 	addi	r6,r19,-4
 200ae70:	01000904 	movi	r4,36
 200ae74:	18800315 	stw	r2,12(r3)
 200ae78:	10c00215 	stw	r3,8(r2)
 200ae7c:	b8c00217 	ldw	r3,8(r23)
 200ae80:	b8800317 	ldw	r2,12(r23)
 200ae84:	bc800204 	addi	r18,r23,8
 200ae88:	18800315 	stw	r2,12(r3)
 200ae8c:	10c00215 	stw	r3,8(r2)
 200ae90:	2180ed36 	bltu	r4,r6,200b248 <_realloc_r+0x4c0>
 200ae94:	008004c4 	movi	r2,19
 200ae98:	11809b2e 	bgeu	r2,r6,200b108 <_realloc_r+0x380>
 200ae9c:	80800017 	ldw	r2,0(r16)
 200aea0:	b8800215 	stw	r2,8(r23)
 200aea4:	80800117 	ldw	r2,4(r16)
 200aea8:	b8800315 	stw	r2,12(r23)
 200aeac:	008006c4 	movi	r2,27
 200aeb0:	1180f936 	bltu	r2,r6,200b298 <_realloc_r+0x510>
 200aeb4:	b8800404 	addi	r2,r23,16
 200aeb8:	80c00204 	addi	r3,r16,8
 200aebc:	00009406 	br	200b110 <_realloc_r+0x388>
 200aec0:	00c00404 	movi	r3,16
 200aec4:	1823883a 	mov	r17,r3
 200aec8:	003fca06 	br	200adf4 <__alt_mem_epcs_flash_controller+0xfe001df4>
 200aecc:	9829883a 	mov	r20,r19
 200aed0:	a447c83a 	sub	r3,r20,r17
 200aed4:	010003c4 	movi	r4,15
 200aed8:	1080004c 	andi	r2,r2,1
 200aedc:	20c02336 	bltu	r4,r3,200af6c <_realloc_r+0x1e4>
 200aee0:	1504b03a 	or	r2,r2,r20
 200aee4:	b0800115 	stw	r2,4(r22)
 200aee8:	b52d883a 	add	r22,r22,r20
 200aeec:	b0800117 	ldw	r2,4(r22)
 200aef0:	10800054 	ori	r2,r2,1
 200aef4:	b0800115 	stw	r2,4(r22)
 200aef8:	a809883a 	mov	r4,r21
 200aefc:	2010b2c0 	call	2010b2c <__malloc_unlock>
 200af00:	8025883a 	mov	r18,r16
 200af04:	9005883a 	mov	r2,r18
 200af08:	dfc00a17 	ldw	ra,40(sp)
 200af0c:	df000917 	ldw	fp,36(sp)
 200af10:	ddc00817 	ldw	r23,32(sp)
 200af14:	dd800717 	ldw	r22,28(sp)
 200af18:	dd400617 	ldw	r21,24(sp)
 200af1c:	dd000517 	ldw	r20,20(sp)
 200af20:	dcc00417 	ldw	r19,16(sp)
 200af24:	dc800317 	ldw	r18,12(sp)
 200af28:	dc400217 	ldw	r17,8(sp)
 200af2c:	dc000117 	ldw	r16,4(sp)
 200af30:	dec00b04 	addi	sp,sp,44
 200af34:	f800283a 	ret
 200af38:	01ffff04 	movi	r7,-4
 200af3c:	31cc703a 	and	r6,r6,r7
 200af40:	34e9883a 	add	r20,r6,r19
 200af44:	a0ffbb16 	blt	r20,r3,200ae34 <__alt_mem_epcs_flash_controller+0xfe001e34>
 200af48:	20c00317 	ldw	r3,12(r4)
 200af4c:	21000217 	ldw	r4,8(r4)
 200af50:	20c00315 	stw	r3,12(r4)
 200af54:	19000215 	stw	r4,8(r3)
 200af58:	003fdd06 	br	200aed0 <__alt_mem_epcs_flash_controller+0xfe001ed0>
 200af5c:	00800304 	movi	r2,12
 200af60:	a8800015 	stw	r2,0(r21)
 200af64:	0025883a 	mov	r18,zero
 200af68:	003fe606 	br	200af04 <__alt_mem_epcs_flash_controller+0xfe001f04>
 200af6c:	1444b03a 	or	r2,r2,r17
 200af70:	b0800115 	stw	r2,4(r22)
 200af74:	b44b883a 	add	r5,r22,r17
 200af78:	18800054 	ori	r2,r3,1
 200af7c:	28800115 	stw	r2,4(r5)
 200af80:	28c7883a 	add	r3,r5,r3
 200af84:	18800117 	ldw	r2,4(r3)
 200af88:	a809883a 	mov	r4,r21
 200af8c:	29400204 	addi	r5,r5,8
 200af90:	10800054 	ori	r2,r2,1
 200af94:	18800115 	stw	r2,4(r3)
 200af98:	2008d440 	call	2008d44 <_free_r>
 200af9c:	003fd606 	br	200aef8 <__alt_mem_epcs_flash_controller+0xfe001ef8>
 200afa0:	38c0330e 	bge	r7,r3,200b070 <_realloc_r+0x2e8>
 200afa4:	900b883a 	mov	r5,r18
 200afa8:	a809883a 	mov	r4,r21
 200afac:	2002b480 	call	2002b48 <_malloc_r>
 200afb0:	1025883a 	mov	r18,r2
 200afb4:	10001626 	beq	r2,zero,200b010 <_realloc_r+0x288>
 200afb8:	80bfff17 	ldw	r2,-4(r16)
 200afbc:	00ffff84 	movi	r3,-2
 200afc0:	913ffe04 	addi	r4,r18,-8
 200afc4:	10c6703a 	and	r3,r2,r3
 200afc8:	b0c7883a 	add	r3,r22,r3
 200afcc:	20c09926 	beq	r4,r3,200b234 <_realloc_r+0x4ac>
 200afd0:	99bfff04 	addi	r6,r19,-4
 200afd4:	00800904 	movi	r2,36
 200afd8:	11806436 	bltu	r2,r6,200b16c <_realloc_r+0x3e4>
 200afdc:	00c004c4 	movi	r3,19
 200afe0:	19804036 	bltu	r3,r6,200b0e4 <_realloc_r+0x35c>
 200afe4:	9005883a 	mov	r2,r18
 200afe8:	8007883a 	mov	r3,r16
 200afec:	19000017 	ldw	r4,0(r3)
 200aff0:	11000015 	stw	r4,0(r2)
 200aff4:	19000117 	ldw	r4,4(r3)
 200aff8:	11000115 	stw	r4,4(r2)
 200affc:	18c00217 	ldw	r3,8(r3)
 200b000:	10c00215 	stw	r3,8(r2)
 200b004:	a809883a 	mov	r4,r21
 200b008:	800b883a 	mov	r5,r16
 200b00c:	2008d440 	call	2008d44 <_free_r>
 200b010:	a809883a 	mov	r4,r21
 200b014:	2010b2c0 	call	2010b2c <__malloc_unlock>
 200b018:	003fba06 	br	200af04 <__alt_mem_epcs_flash_controller+0xfe001f04>
 200b01c:	300b883a 	mov	r5,r6
 200b020:	dfc00a17 	ldw	ra,40(sp)
 200b024:	df000917 	ldw	fp,36(sp)
 200b028:	ddc00817 	ldw	r23,32(sp)
 200b02c:	dd800717 	ldw	r22,28(sp)
 200b030:	dd400617 	ldw	r21,24(sp)
 200b034:	dd000517 	ldw	r20,20(sp)
 200b038:	dcc00417 	ldw	r19,16(sp)
 200b03c:	dc800317 	ldw	r18,12(sp)
 200b040:	dc400217 	ldw	r17,8(sp)
 200b044:	dc000117 	ldw	r16,4(sp)
 200b048:	dec00b04 	addi	sp,sp,44
 200b04c:	2002b481 	jmpi	2002b48 <_malloc_r>
 200b050:	29800117 	ldw	r6,4(r5)
 200b054:	013fff04 	movi	r4,-4
 200b058:	89c00404 	addi	r7,r17,16
 200b05c:	310c703a 	and	r6,r6,r4
 200b060:	34c9883a 	add	r4,r6,r19
 200b064:	21c0340e 	bge	r4,r7,200b138 <_realloc_r+0x3b0>
 200b068:	2809883a 	mov	r4,r5
 200b06c:	003f7106 	br	200ae34 <__alt_mem_epcs_flash_controller+0xfe001e34>
 200b070:	b8800317 	ldw	r2,12(r23)
 200b074:	b8c00217 	ldw	r3,8(r23)
 200b078:	99bfff04 	addi	r6,r19,-4
 200b07c:	01000904 	movi	r4,36
 200b080:	18800315 	stw	r2,12(r3)
 200b084:	10c00215 	stw	r3,8(r2)
 200b088:	bc800204 	addi	r18,r23,8
 200b08c:	21807836 	bltu	r4,r6,200b270 <_realloc_r+0x4e8>
 200b090:	008004c4 	movi	r2,19
 200b094:	1180732e 	bgeu	r2,r6,200b264 <_realloc_r+0x4dc>
 200b098:	80800017 	ldw	r2,0(r16)
 200b09c:	b8800215 	stw	r2,8(r23)
 200b0a0:	80800117 	ldw	r2,4(r16)
 200b0a4:	b8800315 	stw	r2,12(r23)
 200b0a8:	008006c4 	movi	r2,27
 200b0ac:	11808936 	bltu	r2,r6,200b2d4 <_realloc_r+0x54c>
 200b0b0:	b8800404 	addi	r2,r23,16
 200b0b4:	80c00204 	addi	r3,r16,8
 200b0b8:	19000017 	ldw	r4,0(r3)
 200b0bc:	9021883a 	mov	r16,r18
 200b0c0:	3829883a 	mov	r20,r7
 200b0c4:	11000015 	stw	r4,0(r2)
 200b0c8:	19000117 	ldw	r4,4(r3)
 200b0cc:	b82d883a 	mov	r22,r23
 200b0d0:	11000115 	stw	r4,4(r2)
 200b0d4:	18c00217 	ldw	r3,8(r3)
 200b0d8:	10c00215 	stw	r3,8(r2)
 200b0dc:	b8800117 	ldw	r2,4(r23)
 200b0e0:	003f7b06 	br	200aed0 <__alt_mem_epcs_flash_controller+0xfe001ed0>
 200b0e4:	80c00017 	ldw	r3,0(r16)
 200b0e8:	90c00015 	stw	r3,0(r18)
 200b0ec:	80c00117 	ldw	r3,4(r16)
 200b0f0:	90c00115 	stw	r3,4(r18)
 200b0f4:	00c006c4 	movi	r3,27
 200b0f8:	19804636 	bltu	r3,r6,200b214 <_realloc_r+0x48c>
 200b0fc:	90800204 	addi	r2,r18,8
 200b100:	80c00204 	addi	r3,r16,8
 200b104:	003fb906 	br	200afec <__alt_mem_epcs_flash_controller+0xfe001fec>
 200b108:	9005883a 	mov	r2,r18
 200b10c:	8007883a 	mov	r3,r16
 200b110:	19000017 	ldw	r4,0(r3)
 200b114:	9021883a 	mov	r16,r18
 200b118:	b82d883a 	mov	r22,r23
 200b11c:	11000015 	stw	r4,0(r2)
 200b120:	19000117 	ldw	r4,4(r3)
 200b124:	11000115 	stw	r4,4(r2)
 200b128:	18c00217 	ldw	r3,8(r3)
 200b12c:	10c00215 	stw	r3,8(r2)
 200b130:	b8800117 	ldw	r2,4(r23)
 200b134:	003f6606 	br	200aed0 <__alt_mem_epcs_flash_controller+0xfe001ed0>
 200b138:	2445c83a 	sub	r2,r4,r17
 200b13c:	b46d883a 	add	r22,r22,r17
 200b140:	10800054 	ori	r2,r2,1
 200b144:	b0800115 	stw	r2,4(r22)
 200b148:	80bfff17 	ldw	r2,-4(r16)
 200b14c:	a809883a 	mov	r4,r21
 200b150:	e5800215 	stw	r22,8(fp)
 200b154:	1080004c 	andi	r2,r2,1
 200b158:	88a2b03a 	or	r17,r17,r2
 200b15c:	847fff15 	stw	r17,-4(r16)
 200b160:	2010b2c0 	call	2010b2c <__malloc_unlock>
 200b164:	8025883a 	mov	r18,r16
 200b168:	003f6606 	br	200af04 <__alt_mem_epcs_flash_controller+0xfe001f04>
 200b16c:	9009883a 	mov	r4,r18
 200b170:	800b883a 	mov	r5,r16
 200b174:	2009b400 	call	2009b40 <memmove>
 200b178:	003fa206 	br	200b004 <__alt_mem_epcs_flash_controller+0xfe002004>
 200b17c:	88800404 	addi	r2,r17,16
 200b180:	a0bf8716 	blt	r20,r2,200afa0 <__alt_mem_epcs_flash_controller+0xfe001fa0>
 200b184:	b8800317 	ldw	r2,12(r23)
 200b188:	b8c00217 	ldw	r3,8(r23)
 200b18c:	99bfff04 	addi	r6,r19,-4
 200b190:	01000904 	movi	r4,36
 200b194:	18800315 	stw	r2,12(r3)
 200b198:	10c00215 	stw	r3,8(r2)
 200b19c:	bc800204 	addi	r18,r23,8
 200b1a0:	21806536 	bltu	r4,r6,200b338 <_realloc_r+0x5b0>
 200b1a4:	008004c4 	movi	r2,19
 200b1a8:	1180592e 	bgeu	r2,r6,200b310 <_realloc_r+0x588>
 200b1ac:	80800017 	ldw	r2,0(r16)
 200b1b0:	b8800215 	stw	r2,8(r23)
 200b1b4:	80800117 	ldw	r2,4(r16)
 200b1b8:	b8800315 	stw	r2,12(r23)
 200b1bc:	008006c4 	movi	r2,27
 200b1c0:	11806136 	bltu	r2,r6,200b348 <_realloc_r+0x5c0>
 200b1c4:	b8800404 	addi	r2,r23,16
 200b1c8:	80c00204 	addi	r3,r16,8
 200b1cc:	19000017 	ldw	r4,0(r3)
 200b1d0:	11000015 	stw	r4,0(r2)
 200b1d4:	19000117 	ldw	r4,4(r3)
 200b1d8:	11000115 	stw	r4,4(r2)
 200b1dc:	18c00217 	ldw	r3,8(r3)
 200b1e0:	10c00215 	stw	r3,8(r2)
 200b1e4:	a447c83a 	sub	r3,r20,r17
 200b1e8:	bc45883a 	add	r2,r23,r17
 200b1ec:	18c00054 	ori	r3,r3,1
 200b1f0:	10c00115 	stw	r3,4(r2)
 200b1f4:	b8c00117 	ldw	r3,4(r23)
 200b1f8:	e0800215 	stw	r2,8(fp)
 200b1fc:	a809883a 	mov	r4,r21
 200b200:	1880004c 	andi	r2,r3,1
 200b204:	88a2b03a 	or	r17,r17,r2
 200b208:	bc400115 	stw	r17,4(r23)
 200b20c:	2010b2c0 	call	2010b2c <__malloc_unlock>
 200b210:	003f3c06 	br	200af04 <__alt_mem_epcs_flash_controller+0xfe001f04>
 200b214:	80c00217 	ldw	r3,8(r16)
 200b218:	90c00215 	stw	r3,8(r18)
 200b21c:	80c00317 	ldw	r3,12(r16)
 200b220:	90c00315 	stw	r3,12(r18)
 200b224:	30802426 	beq	r6,r2,200b2b8 <_realloc_r+0x530>
 200b228:	90800404 	addi	r2,r18,16
 200b22c:	80c00404 	addi	r3,r16,16
 200b230:	003f6e06 	br	200afec <__alt_mem_epcs_flash_controller+0xfe001fec>
 200b234:	953fff17 	ldw	r20,-4(r18)
 200b238:	00ffff04 	movi	r3,-4
 200b23c:	a0e8703a 	and	r20,r20,r3
 200b240:	a4e9883a 	add	r20,r20,r19
 200b244:	003f2206 	br	200aed0 <__alt_mem_epcs_flash_controller+0xfe001ed0>
 200b248:	800b883a 	mov	r5,r16
 200b24c:	9009883a 	mov	r4,r18
 200b250:	2009b400 	call	2009b40 <memmove>
 200b254:	9021883a 	mov	r16,r18
 200b258:	b8800117 	ldw	r2,4(r23)
 200b25c:	b82d883a 	mov	r22,r23
 200b260:	003f1b06 	br	200aed0 <__alt_mem_epcs_flash_controller+0xfe001ed0>
 200b264:	9005883a 	mov	r2,r18
 200b268:	8007883a 	mov	r3,r16
 200b26c:	003f9206 	br	200b0b8 <__alt_mem_epcs_flash_controller+0xfe0020b8>
 200b270:	800b883a 	mov	r5,r16
 200b274:	9009883a 	mov	r4,r18
 200b278:	d9c00015 	stw	r7,0(sp)
 200b27c:	2009b400 	call	2009b40 <memmove>
 200b280:	d9c00017 	ldw	r7,0(sp)
 200b284:	9021883a 	mov	r16,r18
 200b288:	b8800117 	ldw	r2,4(r23)
 200b28c:	3829883a 	mov	r20,r7
 200b290:	b82d883a 	mov	r22,r23
 200b294:	003f0e06 	br	200aed0 <__alt_mem_epcs_flash_controller+0xfe001ed0>
 200b298:	80800217 	ldw	r2,8(r16)
 200b29c:	b8800415 	stw	r2,16(r23)
 200b2a0:	80800317 	ldw	r2,12(r16)
 200b2a4:	b8800515 	stw	r2,20(r23)
 200b2a8:	31001226 	beq	r6,r4,200b2f4 <_realloc_r+0x56c>
 200b2ac:	b8800604 	addi	r2,r23,24
 200b2b0:	80c00404 	addi	r3,r16,16
 200b2b4:	003f9606 	br	200b110 <__alt_mem_epcs_flash_controller+0xfe002110>
 200b2b8:	81000417 	ldw	r4,16(r16)
 200b2bc:	90800604 	addi	r2,r18,24
 200b2c0:	80c00604 	addi	r3,r16,24
 200b2c4:	91000415 	stw	r4,16(r18)
 200b2c8:	81000517 	ldw	r4,20(r16)
 200b2cc:	91000515 	stw	r4,20(r18)
 200b2d0:	003f4606 	br	200afec <__alt_mem_epcs_flash_controller+0xfe001fec>
 200b2d4:	80800217 	ldw	r2,8(r16)
 200b2d8:	b8800415 	stw	r2,16(r23)
 200b2dc:	80800317 	ldw	r2,12(r16)
 200b2e0:	b8800515 	stw	r2,20(r23)
 200b2e4:	31000d26 	beq	r6,r4,200b31c <_realloc_r+0x594>
 200b2e8:	b8800604 	addi	r2,r23,24
 200b2ec:	80c00404 	addi	r3,r16,16
 200b2f0:	003f7106 	br	200b0b8 <__alt_mem_epcs_flash_controller+0xfe0020b8>
 200b2f4:	81000417 	ldw	r4,16(r16)
 200b2f8:	b8800804 	addi	r2,r23,32
 200b2fc:	80c00604 	addi	r3,r16,24
 200b300:	b9000615 	stw	r4,24(r23)
 200b304:	81000517 	ldw	r4,20(r16)
 200b308:	b9000715 	stw	r4,28(r23)
 200b30c:	003f8006 	br	200b110 <__alt_mem_epcs_flash_controller+0xfe002110>
 200b310:	9005883a 	mov	r2,r18
 200b314:	8007883a 	mov	r3,r16
 200b318:	003fac06 	br	200b1cc <__alt_mem_epcs_flash_controller+0xfe0021cc>
 200b31c:	81000417 	ldw	r4,16(r16)
 200b320:	b8800804 	addi	r2,r23,32
 200b324:	80c00604 	addi	r3,r16,24
 200b328:	b9000615 	stw	r4,24(r23)
 200b32c:	81000517 	ldw	r4,20(r16)
 200b330:	b9000715 	stw	r4,28(r23)
 200b334:	003f6006 	br	200b0b8 <__alt_mem_epcs_flash_controller+0xfe0020b8>
 200b338:	9009883a 	mov	r4,r18
 200b33c:	800b883a 	mov	r5,r16
 200b340:	2009b400 	call	2009b40 <memmove>
 200b344:	003fa706 	br	200b1e4 <__alt_mem_epcs_flash_controller+0xfe0021e4>
 200b348:	80800217 	ldw	r2,8(r16)
 200b34c:	b8800415 	stw	r2,16(r23)
 200b350:	80800317 	ldw	r2,12(r16)
 200b354:	b8800515 	stw	r2,20(r23)
 200b358:	31000326 	beq	r6,r4,200b368 <_realloc_r+0x5e0>
 200b35c:	b8800604 	addi	r2,r23,24
 200b360:	80c00404 	addi	r3,r16,16
 200b364:	003f9906 	br	200b1cc <__alt_mem_epcs_flash_controller+0xfe0021cc>
 200b368:	81000417 	ldw	r4,16(r16)
 200b36c:	b8800804 	addi	r2,r23,32
 200b370:	80c00604 	addi	r3,r16,24
 200b374:	b9000615 	stw	r4,24(r23)
 200b378:	81000517 	ldw	r4,20(r16)
 200b37c:	b9000715 	stw	r4,28(r23)
 200b380:	003f9206 	br	200b1cc <__alt_mem_epcs_flash_controller+0xfe0021cc>

0200b384 <lflush>:
 200b384:	20c0030b 	ldhu	r3,12(r4)
 200b388:	00800244 	movi	r2,9
 200b38c:	18c0024c 	andi	r3,r3,9
 200b390:	18800226 	beq	r3,r2,200b39c <lflush+0x18>
 200b394:	0005883a 	mov	r2,zero
 200b398:	f800283a 	ret
 200b39c:	20026cc1 	jmpi	20026cc <fflush>

0200b3a0 <__srefill_r>:
 200b3a0:	defffd04 	addi	sp,sp,-12
 200b3a4:	dc400115 	stw	r17,4(sp)
 200b3a8:	dc000015 	stw	r16,0(sp)
 200b3ac:	dfc00215 	stw	ra,8(sp)
 200b3b0:	2023883a 	mov	r17,r4
 200b3b4:	2821883a 	mov	r16,r5
 200b3b8:	20000226 	beq	r4,zero,200b3c4 <__srefill_r+0x24>
 200b3bc:	20800e17 	ldw	r2,56(r4)
 200b3c0:	10004426 	beq	r2,zero,200b4d4 <__srefill_r+0x134>
 200b3c4:	8080030b 	ldhu	r2,12(r16)
 200b3c8:	80000115 	stw	zero,4(r16)
 200b3cc:	10c0080c 	andi	r3,r2,32
 200b3d0:	18ffffcc 	andi	r3,r3,65535
 200b3d4:	18e0001c 	xori	r3,r3,32768
 200b3d8:	18e00004 	addi	r3,r3,-32768
 200b3dc:	1800371e 	bne	r3,zero,200b4bc <__srefill_r+0x11c>
 200b3e0:	10c0010c 	andi	r3,r2,4
 200b3e4:	18ffffcc 	andi	r3,r3,65535
 200b3e8:	18e0001c 	xori	r3,r3,32768
 200b3ec:	18e00004 	addi	r3,r3,-32768
 200b3f0:	18002226 	beq	r3,zero,200b47c <__srefill_r+0xdc>
 200b3f4:	81400c17 	ldw	r5,48(r16)
 200b3f8:	28000826 	beq	r5,zero,200b41c <__srefill_r+0x7c>
 200b3fc:	80801004 	addi	r2,r16,64
 200b400:	28800226 	beq	r5,r2,200b40c <__srefill_r+0x6c>
 200b404:	8809883a 	mov	r4,r17
 200b408:	2008d440 	call	2008d44 <_free_r>
 200b40c:	80800f17 	ldw	r2,60(r16)
 200b410:	80000c15 	stw	zero,48(r16)
 200b414:	80800115 	stw	r2,4(r16)
 200b418:	1000401e 	bne	r2,zero,200b51c <__srefill_r+0x17c>
 200b41c:	80800417 	ldw	r2,16(r16)
 200b420:	10005026 	beq	r2,zero,200b564 <__srefill_r+0x1c4>
 200b424:	8080030b 	ldhu	r2,12(r16)
 200b428:	108000cc 	andi	r2,r2,3
 200b42c:	10002b1e 	bne	r2,zero,200b4dc <__srefill_r+0x13c>
 200b430:	81800417 	ldw	r6,16(r16)
 200b434:	80800817 	ldw	r2,32(r16)
 200b438:	81400717 	ldw	r5,28(r16)
 200b43c:	81c00517 	ldw	r7,20(r16)
 200b440:	8809883a 	mov	r4,r17
 200b444:	81800015 	stw	r6,0(r16)
 200b448:	103ee83a 	callr	r2
 200b44c:	8100030b 	ldhu	r4,12(r16)
 200b450:	00f7ffc4 	movi	r3,-8193
 200b454:	80800115 	stw	r2,4(r16)
 200b458:	20c6703a 	and	r3,r4,r3
 200b45c:	80c0030d 	sth	r3,12(r16)
 200b460:	0080130e 	bge	zero,r2,200b4b0 <__srefill_r+0x110>
 200b464:	0005883a 	mov	r2,zero
 200b468:	dfc00217 	ldw	ra,8(sp)
 200b46c:	dc400117 	ldw	r17,4(sp)
 200b470:	dc000017 	ldw	r16,0(sp)
 200b474:	dec00304 	addi	sp,sp,12
 200b478:	f800283a 	ret
 200b47c:	10c0040c 	andi	r3,r2,16
 200b480:	18ffffcc 	andi	r3,r3,65535
 200b484:	18e0001c 	xori	r3,r3,32768
 200b488:	18e00004 	addi	r3,r3,-32768
 200b48c:	18003926 	beq	r3,zero,200b574 <__srefill_r+0x1d4>
 200b490:	10c0020c 	andi	r3,r2,8
 200b494:	18ffffcc 	andi	r3,r3,65535
 200b498:	18e0001c 	xori	r3,r3,32768
 200b49c:	18e00004 	addi	r3,r3,-32768
 200b4a0:	1800261e 	bne	r3,zero,200b53c <__srefill_r+0x19c>
 200b4a4:	10800114 	ori	r2,r2,4
 200b4a8:	8080030d 	sth	r2,12(r16)
 200b4ac:	003fdb06 	br	200b41c <__alt_mem_epcs_flash_controller+0xfe00241c>
 200b4b0:	1000111e 	bne	r2,zero,200b4f8 <__srefill_r+0x158>
 200b4b4:	18c00814 	ori	r3,r3,32
 200b4b8:	80c0030d 	sth	r3,12(r16)
 200b4bc:	00bfffc4 	movi	r2,-1
 200b4c0:	dfc00217 	ldw	ra,8(sp)
 200b4c4:	dc400117 	ldw	r17,4(sp)
 200b4c8:	dc000017 	ldw	r16,0(sp)
 200b4cc:	dec00304 	addi	sp,sp,12
 200b4d0:	f800283a 	ret
 200b4d4:	20027a00 	call	20027a0 <__sinit>
 200b4d8:	003fba06 	br	200b3c4 <__alt_mem_epcs_flash_controller+0xfe0023c4>
 200b4dc:	00808274 	movhi	r2,521
 200b4e0:	10a3b604 	addi	r2,r2,-28968
 200b4e4:	11000017 	ldw	r4,0(r2)
 200b4e8:	01408074 	movhi	r5,513
 200b4ec:	296ce104 	addi	r5,r5,-19580
 200b4f0:	20029e80 	call	20029e8 <_fwalk>
 200b4f4:	003fce06 	br	200b430 <__alt_mem_epcs_flash_controller+0xfe002430>
 200b4f8:	18c01014 	ori	r3,r3,64
 200b4fc:	00bfffc4 	movi	r2,-1
 200b500:	80000115 	stw	zero,4(r16)
 200b504:	80c0030d 	sth	r3,12(r16)
 200b508:	dfc00217 	ldw	ra,8(sp)
 200b50c:	dc400117 	ldw	r17,4(sp)
 200b510:	dc000017 	ldw	r16,0(sp)
 200b514:	dec00304 	addi	sp,sp,12
 200b518:	f800283a 	ret
 200b51c:	80c00e17 	ldw	r3,56(r16)
 200b520:	0005883a 	mov	r2,zero
 200b524:	80c00015 	stw	r3,0(r16)
 200b528:	dfc00217 	ldw	ra,8(sp)
 200b52c:	dc400117 	ldw	r17,4(sp)
 200b530:	dc000017 	ldw	r16,0(sp)
 200b534:	dec00304 	addi	sp,sp,12
 200b538:	f800283a 	ret
 200b53c:	8809883a 	mov	r4,r17
 200b540:	800b883a 	mov	r5,r16
 200b544:	20024e40 	call	20024e4 <_fflush_r>
 200b548:	103fdc1e 	bne	r2,zero,200b4bc <__alt_mem_epcs_flash_controller+0xfe0024bc>
 200b54c:	8080030b 	ldhu	r2,12(r16)
 200b550:	00fffdc4 	movi	r3,-9
 200b554:	80000215 	stw	zero,8(r16)
 200b558:	1884703a 	and	r2,r3,r2
 200b55c:	80000615 	stw	zero,24(r16)
 200b560:	003fd006 	br	200b4a4 <__alt_mem_epcs_flash_controller+0xfe0024a4>
 200b564:	8809883a 	mov	r4,r17
 200b568:	800b883a 	mov	r5,r16
 200b56c:	20096780 	call	2009678 <__smakebuf_r>
 200b570:	003fac06 	br	200b424 <__alt_mem_epcs_flash_controller+0xfe002424>
 200b574:	00c00244 	movi	r3,9
 200b578:	10801014 	ori	r2,r2,64
 200b57c:	88c00015 	stw	r3,0(r17)
 200b580:	8080030d 	sth	r2,12(r16)
 200b584:	00bfffc4 	movi	r2,-1
 200b588:	003fb706 	br	200b468 <__alt_mem_epcs_flash_controller+0xfe002468>

0200b58c <__isinfd>:
 200b58c:	0105c83a 	sub	r2,zero,r4
 200b590:	1108b03a 	or	r4,r2,r4
 200b594:	2004d7fa 	srli	r2,r4,31
 200b598:	00e00034 	movhi	r3,32768
 200b59c:	18ffffc4 	addi	r3,r3,-1
 200b5a0:	28ca703a 	and	r5,r5,r3
 200b5a4:	1144b03a 	or	r2,r2,r5
 200b5a8:	00dffc34 	movhi	r3,32752
 200b5ac:	1885c83a 	sub	r2,r3,r2
 200b5b0:	0087c83a 	sub	r3,zero,r2
 200b5b4:	1884b03a 	or	r2,r3,r2
 200b5b8:	1005d7fa 	srai	r2,r2,31
 200b5bc:	10800044 	addi	r2,r2,1
 200b5c0:	f800283a 	ret

0200b5c4 <__isnand>:
 200b5c4:	0105c83a 	sub	r2,zero,r4
 200b5c8:	1108b03a 	or	r4,r2,r4
 200b5cc:	2004d7fa 	srli	r2,r4,31
 200b5d0:	00e00034 	movhi	r3,32768
 200b5d4:	18ffffc4 	addi	r3,r3,-1
 200b5d8:	28ca703a 	and	r5,r5,r3
 200b5dc:	1144b03a 	or	r2,r2,r5
 200b5e0:	00dffc34 	movhi	r3,32752
 200b5e4:	1885c83a 	sub	r2,r3,r2
 200b5e8:	1004d7fa 	srli	r2,r2,31
 200b5ec:	f800283a 	ret

0200b5f0 <__sccl>:
 200b5f0:	2a400003 	ldbu	r9,0(r5)
 200b5f4:	00801784 	movi	r2,94
 200b5f8:	48802626 	beq	r9,r2,200b694 <__sccl+0xa4>
 200b5fc:	28800044 	addi	r2,r5,1
 200b600:	0011883a 	mov	r8,zero
 200b604:	000b883a 	mov	r5,zero
 200b608:	0007883a 	mov	r3,zero
 200b60c:	01c04004 	movi	r7,256
 200b610:	20cd883a 	add	r6,r4,r3
 200b614:	32000005 	stb	r8,0(r6)
 200b618:	18c00044 	addi	r3,r3,1
 200b61c:	19fffc1e 	bne	r3,r7,200b610 <__alt_mem_epcs_flash_controller+0xfe002610>
 200b620:	48000f26 	beq	r9,zero,200b660 <__sccl+0x70>
 200b624:	01800044 	movi	r6,1
 200b628:	314dc83a 	sub	r6,r6,r5
 200b62c:	02001744 	movi	r8,93
 200b630:	01400b44 	movi	r5,45
 200b634:	2247883a 	add	r3,r4,r9
 200b638:	19800005 	stb	r6,0(r3)
 200b63c:	10c00003 	ldbu	r3,0(r2)
 200b640:	11c00044 	addi	r7,r2,1
 200b644:	19400a26 	beq	r3,r5,200b670 <__sccl+0x80>
 200b648:	1a000726 	beq	r3,r8,200b668 <__sccl+0x78>
 200b64c:	1800011e 	bne	r3,zero,200b654 <__sccl+0x64>
 200b650:	f800283a 	ret
 200b654:	1813883a 	mov	r9,r3
 200b658:	3805883a 	mov	r2,r7
 200b65c:	003ff506 	br	200b634 <__alt_mem_epcs_flash_controller+0xfe002634>
 200b660:	10bfffc4 	addi	r2,r2,-1
 200b664:	f800283a 	ret
 200b668:	3805883a 	mov	r2,r7
 200b66c:	f800283a 	ret
 200b670:	10c00043 	ldbu	r3,1(r2)
 200b674:	1a000c26 	beq	r3,r8,200b6a8 <__sccl+0xb8>
 200b678:	1a400b16 	blt	r3,r9,200b6a8 <__sccl+0xb8>
 200b67c:	10800084 	addi	r2,r2,2
 200b680:	4a400044 	addi	r9,r9,1
 200b684:	224f883a 	add	r7,r4,r9
 200b688:	39800005 	stb	r6,0(r7)
 200b68c:	48fffc16 	blt	r9,r3,200b680 <__alt_mem_epcs_flash_controller+0xfe002680>
 200b690:	003fea06 	br	200b63c <__alt_mem_epcs_flash_controller+0xfe00263c>
 200b694:	2a400043 	ldbu	r9,1(r5)
 200b698:	28800084 	addi	r2,r5,2
 200b69c:	02000044 	movi	r8,1
 200b6a0:	01400044 	movi	r5,1
 200b6a4:	003fd806 	br	200b608 <__alt_mem_epcs_flash_controller+0xfe002608>
 200b6a8:	2813883a 	mov	r9,r5
 200b6ac:	3805883a 	mov	r2,r7
 200b6b0:	003fe006 	br	200b634 <__alt_mem_epcs_flash_controller+0xfe002634>

0200b6b4 <nanf>:
 200b6b4:	009ff034 	movhi	r2,32704
 200b6b8:	f800283a 	ret

0200b6bc <_sprintf_r>:
 200b6bc:	deffe704 	addi	sp,sp,-100
 200b6c0:	2807883a 	mov	r3,r5
 200b6c4:	dfc01715 	stw	ra,92(sp)
 200b6c8:	d9c01815 	stw	r7,96(sp)
 200b6cc:	00a00034 	movhi	r2,32768
 200b6d0:	10bfffc4 	addi	r2,r2,-1
 200b6d4:	02008204 	movi	r8,520
 200b6d8:	d8800215 	stw	r2,8(sp)
 200b6dc:	d8800515 	stw	r2,20(sp)
 200b6e0:	d80b883a 	mov	r5,sp
 200b6e4:	d9c01804 	addi	r7,sp,96
 200b6e8:	00bfffc4 	movi	r2,-1
 200b6ec:	d8c00015 	stw	r3,0(sp)
 200b6f0:	d8c00415 	stw	r3,16(sp)
 200b6f4:	da00030d 	sth	r8,12(sp)
 200b6f8:	d880038d 	sth	r2,14(sp)
 200b6fc:	20037780 	call	2003778 <___vfprintf_internal_r>
 200b700:	d8c00017 	ldw	r3,0(sp)
 200b704:	18000005 	stb	zero,0(r3)
 200b708:	dfc01717 	ldw	ra,92(sp)
 200b70c:	dec01904 	addi	sp,sp,100
 200b710:	f800283a 	ret

0200b714 <sprintf>:
 200b714:	deffe604 	addi	sp,sp,-104
 200b718:	2007883a 	mov	r3,r4
 200b71c:	dfc01715 	stw	ra,92(sp)
 200b720:	d9801815 	stw	r6,96(sp)
 200b724:	d9c01915 	stw	r7,100(sp)
 200b728:	00808274 	movhi	r2,521
 200b72c:	10a3b704 	addi	r2,r2,-28964
 200b730:	11000017 	ldw	r4,0(r2)
 200b734:	00a00034 	movhi	r2,32768
 200b738:	10bfffc4 	addi	r2,r2,-1
 200b73c:	280d883a 	mov	r6,r5
 200b740:	02008204 	movi	r8,520
 200b744:	d8800215 	stw	r2,8(sp)
 200b748:	d8800515 	stw	r2,20(sp)
 200b74c:	d80b883a 	mov	r5,sp
 200b750:	d9c01804 	addi	r7,sp,96
 200b754:	00bfffc4 	movi	r2,-1
 200b758:	d8c00015 	stw	r3,0(sp)
 200b75c:	d8c00415 	stw	r3,16(sp)
 200b760:	da00030d 	sth	r8,12(sp)
 200b764:	d880038d 	sth	r2,14(sp)
 200b768:	20037780 	call	2003778 <___vfprintf_internal_r>
 200b76c:	d8c00017 	ldw	r3,0(sp)
 200b770:	18000005 	stb	zero,0(r3)
 200b774:	dfc01717 	ldw	ra,92(sp)
 200b778:	dec01a04 	addi	sp,sp,104
 200b77c:	f800283a 	ret

0200b780 <strcmp>:
 200b780:	2904b03a 	or	r2,r5,r4
 200b784:	108000cc 	andi	r2,r2,3
 200b788:	1000171e 	bne	r2,zero,200b7e8 <strcmp+0x68>
 200b78c:	20800017 	ldw	r2,0(r4)
 200b790:	28c00017 	ldw	r3,0(r5)
 200b794:	10c0141e 	bne	r2,r3,200b7e8 <strcmp+0x68>
 200b798:	027fbff4 	movhi	r9,65279
 200b79c:	4a7fbfc4 	addi	r9,r9,-257
 200b7a0:	1247883a 	add	r3,r2,r9
 200b7a4:	0084303a 	nor	r2,zero,r2
 200b7a8:	1884703a 	and	r2,r3,r2
 200b7ac:	02202074 	movhi	r8,32897
 200b7b0:	42202004 	addi	r8,r8,-32640
 200b7b4:	1204703a 	and	r2,r2,r8
 200b7b8:	10000226 	beq	r2,zero,200b7c4 <strcmp+0x44>
 200b7bc:	00001706 	br	200b81c <strcmp+0x9c>
 200b7c0:	3000161e 	bne	r6,zero,200b81c <strcmp+0x9c>
 200b7c4:	21000104 	addi	r4,r4,4
 200b7c8:	20800017 	ldw	r2,0(r4)
 200b7cc:	29400104 	addi	r5,r5,4
 200b7d0:	28c00017 	ldw	r3,0(r5)
 200b7d4:	124f883a 	add	r7,r2,r9
 200b7d8:	008c303a 	nor	r6,zero,r2
 200b7dc:	398c703a 	and	r6,r7,r6
 200b7e0:	320c703a 	and	r6,r6,r8
 200b7e4:	10fff626 	beq	r2,r3,200b7c0 <__alt_mem_epcs_flash_controller+0xfe0027c0>
 200b7e8:	20800007 	ldb	r2,0(r4)
 200b7ec:	1000051e 	bne	r2,zero,200b804 <strcmp+0x84>
 200b7f0:	00000606 	br	200b80c <strcmp+0x8c>
 200b7f4:	21000044 	addi	r4,r4,1
 200b7f8:	20800007 	ldb	r2,0(r4)
 200b7fc:	29400044 	addi	r5,r5,1
 200b800:	10000226 	beq	r2,zero,200b80c <strcmp+0x8c>
 200b804:	28c00007 	ldb	r3,0(r5)
 200b808:	10fffa26 	beq	r2,r3,200b7f4 <__alt_mem_epcs_flash_controller+0xfe0027f4>
 200b80c:	20c00003 	ldbu	r3,0(r4)
 200b810:	28800003 	ldbu	r2,0(r5)
 200b814:	1885c83a 	sub	r2,r3,r2
 200b818:	f800283a 	ret
 200b81c:	0005883a 	mov	r2,zero
 200b820:	f800283a 	ret

0200b824 <_strtod_r>:
 200b824:	deffdc04 	addi	sp,sp,-144
 200b828:	dc001a15 	stw	r16,104(sp)
 200b82c:	d9400e15 	stw	r5,56(sp)
 200b830:	d9801115 	stw	r6,68(sp)
 200b834:	d9400c15 	stw	r5,48(sp)
 200b838:	2805883a 	mov	r2,r5
 200b83c:	dfc02315 	stw	ra,140(sp)
 200b840:	df002215 	stw	fp,136(sp)
 200b844:	ddc02115 	stw	r23,132(sp)
 200b848:	dd802015 	stw	r22,128(sp)
 200b84c:	dd401f15 	stw	r21,124(sp)
 200b850:	dd001e15 	stw	r20,120(sp)
 200b854:	dcc01d15 	stw	r19,116(sp)
 200b858:	dc801c15 	stw	r18,112(sp)
 200b85c:	dc401b15 	stw	r17,108(sp)
 200b860:	2021883a 	mov	r16,r4
 200b864:	d8000615 	stw	zero,24(sp)
 200b868:	d8000715 	stw	zero,28(sp)
 200b86c:	01400b44 	movi	r5,45
 200b870:	01808074 	movhi	r6,513
 200b874:	31ae7204 	addi	r6,r6,-17976
 200b878:	10c00003 	ldbu	r3,0(r2)
 200b87c:	19003fcc 	andi	r4,r3,255
 200b880:	29004c2e 	bgeu	r5,r4,200b9b4 <_strtod_r+0x190>
 200b884:	1c803fcc 	andi	r18,r3,255
 200b888:	9480201c 	xori	r18,r18,128
 200b88c:	102d883a 	mov	r22,r2
 200b890:	d8001215 	stw	zero,72(sp)
 200b894:	94bfe004 	addi	r18,r18,-128
 200b898:	00800c04 	movi	r2,48
 200b89c:	9080f526 	beq	r18,r2,200bc74 <_strtod_r+0x450>
 200b8a0:	d8001315 	stw	zero,76(sp)
 200b8a4:	04c00bc4 	movi	r19,47
 200b8a8:	900f883a 	mov	r7,r18
 200b8ac:	9c84770e 	bge	r19,r18,200ca8c <_strtod_r+0x1268>
 200b8b0:	05c00e44 	movi	r23,57
 200b8b4:	bc847a16 	blt	r23,r18,200caa0 <_strtod_r+0x127c>
 200b8b8:	0039883a 	mov	fp,zero
 200b8bc:	b4400044 	addi	r17,r22,1
 200b8c0:	dd801015 	stw	r22,64(sp)
 200b8c4:	d8000f15 	stw	zero,60(sp)
 200b8c8:	e02d883a 	mov	r22,fp
 200b8cc:	002b883a 	mov	r21,zero
 200b8d0:	8039883a 	mov	fp,r16
 200b8d4:	05000204 	movi	r20,8
 200b8d8:	0021883a 	mov	r16,zero
 200b8dc:	a5408c16 	blt	r20,r21,200bb10 <_strtod_r+0x2ec>
 200b8e0:	b009883a 	mov	r4,r22
 200b8e4:	01400284 	movi	r5,10
 200b8e8:	2001f500 	call	2001f50 <__mulsi3>
 200b8ec:	1485883a 	add	r2,r2,r18
 200b8f0:	15bff404 	addi	r22,r2,-48
 200b8f4:	dc400c15 	stw	r17,48(sp)
 200b8f8:	8c800007 	ldb	r18,0(r17)
 200b8fc:	ad400044 	addi	r21,r21,1
 200b900:	880b883a 	mov	r5,r17
 200b904:	900f883a 	mov	r7,r18
 200b908:	9c808e0e 	bge	r19,r18,200bb44 <_strtod_r+0x320>
 200b90c:	8c400044 	addi	r17,r17,1
 200b910:	bcbff20e 	bge	r23,r18,200b8dc <__alt_mem_epcs_flash_controller+0xfe0028dc>
 200b914:	dc000f15 	stw	r16,60(sp)
 200b918:	e021883a 	mov	r16,fp
 200b91c:	b039883a 	mov	fp,r22
 200b920:	dd801017 	ldw	r22,64(sp)
 200b924:	a827883a 	mov	r19,r21
 200b928:	dd801415 	stw	r22,80(sp)
 200b92c:	000d883a 	mov	r6,zero
 200b930:	0029883a 	mov	r20,zero
 200b934:	d8001015 	stw	zero,64(sp)
 200b938:	00801944 	movi	r2,101
 200b93c:	3880dd26 	beq	r7,r2,200bcb4 <_strtod_r+0x490>
 200b940:	00801144 	movi	r2,69
 200b944:	3880db26 	beq	r7,r2,200bcb4 <_strtod_r+0x490>
 200b948:	0009883a 	mov	r4,zero
 200b94c:	a8011d1e 	bne	r21,zero,200bdc4 <_strtod_r+0x5a0>
 200b950:	3001591e 	bne	r6,zero,200beb8 <_strtod_r+0x694>
 200b954:	d8c01317 	ldw	r3,76(sp)
 200b958:	1801571e 	bne	r3,zero,200beb8 <_strtod_r+0x694>
 200b95c:	d8c01017 	ldw	r3,64(sp)
 200b960:	1803081e 	bne	r3,zero,200c584 <_strtod_r+0xd60>
 200b964:	00801384 	movi	r2,78
 200b968:	38847e26 	beq	r7,r2,200cb64 <_strtod_r+0x1340>
 200b96c:	11c47916 	blt	r2,r7,200cb54 <_strtod_r+0x1330>
 200b970:	00801244 	movi	r2,73
 200b974:	3883031e 	bne	r7,r2,200c584 <_strtod_r+0xd60>
 200b978:	d8800c17 	ldw	r2,48(sp)
 200b97c:	01008234 	movhi	r4,520
 200b980:	211c7204 	addi	r4,r4,29128
 200b984:	01801004 	movi	r6,64
 200b988:	01c01684 	movi	r7,90
 200b98c:	21400007 	ldb	r5,0(r4)
 200b990:	21000044 	addi	r4,r4,1
 200b994:	2804b426 	beq	r5,zero,200cc68 <_strtod_r+0x1444>
 200b998:	10800044 	addi	r2,r2,1
 200b99c:	10c00007 	ldb	r3,0(r2)
 200b9a0:	30c0020e 	bge	r6,r3,200b9ac <_strtod_r+0x188>
 200b9a4:	38c00116 	blt	r7,r3,200b9ac <_strtod_r+0x188>
 200b9a8:	18c00804 	addi	r3,r3,32
 200b9ac:	197ff726 	beq	r3,r5,200b98c <__alt_mem_epcs_flash_controller+0xfe00298c>
 200b9b0:	0002f406 	br	200c584 <_strtod_r+0xd60>
 200b9b4:	2109883a 	add	r4,r4,r4
 200b9b8:	2109883a 	add	r4,r4,r4
 200b9bc:	2189883a 	add	r4,r4,r6
 200b9c0:	21000017 	ldw	r4,0(r4)
 200b9c4:	2000683a 	jmp	r4
 200b9c8:	0200ba94 	movui	r8,746
 200b9cc:	0200b884 	movi	r8,738
 200b9d0:	0200b884 	movi	r8,738
 200b9d4:	0200b884 	movi	r8,738
 200b9d8:	0200b884 	movi	r8,738
 200b9dc:	0200b884 	movi	r8,738
 200b9e0:	0200b884 	movi	r8,738
 200b9e4:	0200b884 	movi	r8,738
 200b9e8:	0200b884 	movi	r8,738
 200b9ec:	0200baf8 	rdprs	r8,zero,747
 200b9f0:	0200baf8 	rdprs	r8,zero,747
 200b9f4:	0200baf8 	rdprs	r8,zero,747
 200b9f8:	0200baf8 	rdprs	r8,zero,747
 200b9fc:	0200baf8 	rdprs	r8,zero,747
 200ba00:	0200b884 	movi	r8,738
 200ba04:	0200b884 	movi	r8,738
 200ba08:	0200b884 	movi	r8,738
 200ba0c:	0200b884 	movi	r8,738
 200ba10:	0200b884 	movi	r8,738
 200ba14:	0200b884 	movi	r8,738
 200ba18:	0200b884 	movi	r8,738
 200ba1c:	0200b884 	movi	r8,738
 200ba20:	0200b884 	movi	r8,738
 200ba24:	0200b884 	movi	r8,738
 200ba28:	0200b884 	movi	r8,738
 200ba2c:	0200b884 	movi	r8,738
 200ba30:	0200b884 	movi	r8,738
 200ba34:	0200b884 	movi	r8,738
 200ba38:	0200b884 	movi	r8,738
 200ba3c:	0200b884 	movi	r8,738
 200ba40:	0200b884 	movi	r8,738
 200ba44:	0200b884 	movi	r8,738
 200ba48:	0200baf8 	rdprs	r8,zero,747
 200ba4c:	0200b884 	movi	r8,738
 200ba50:	0200b884 	movi	r8,738
 200ba54:	0200b884 	movi	r8,738
 200ba58:	0200b884 	movi	r8,738
 200ba5c:	0200b884 	movi	r8,738
 200ba60:	0200b884 	movi	r8,738
 200ba64:	0200b884 	movi	r8,738
 200ba68:	0200b884 	movi	r8,738
 200ba6c:	0200b884 	movi	r8,738
 200ba70:	0200b884 	movi	r8,738
 200ba74:	0200ba80 	call	200ba8 <__alt_mem_sdram_controller-0x1dff458>
 200ba78:	0200b884 	movi	r8,738
 200ba7c:	0200bb04 	movi	r8,748
 200ba80:	d8001215 	stw	zero,72(sp)
 200ba84:	15800044 	addi	r22,r2,1
 200ba88:	dd800c15 	stw	r22,48(sp)
 200ba8c:	14800047 	ldb	r18,1(r2)
 200ba90:	903f811e 	bne	r18,zero,200b898 <__alt_mem_epcs_flash_controller+0xfe002898>
 200ba94:	0005883a 	mov	r2,zero
 200ba98:	0007883a 	mov	r3,zero
 200ba9c:	d9400e17 	ldw	r5,56(sp)
 200baa0:	d8001215 	stw	zero,72(sp)
 200baa4:	d9400c15 	stw	r5,48(sp)
 200baa8:	d9001117 	ldw	r4,68(sp)
 200baac:	20000326 	beq	r4,zero,200babc <_strtod_r+0x298>
 200bab0:	d9000c17 	ldw	r4,48(sp)
 200bab4:	d9401117 	ldw	r5,68(sp)
 200bab8:	29000015 	stw	r4,0(r5)
 200babc:	d9001217 	ldw	r4,72(sp)
 200bac0:	20000126 	beq	r4,zero,200bac8 <_strtod_r+0x2a4>
 200bac4:	18e0003c 	xorhi	r3,r3,32768
 200bac8:	dfc02317 	ldw	ra,140(sp)
 200bacc:	df002217 	ldw	fp,136(sp)
 200bad0:	ddc02117 	ldw	r23,132(sp)
 200bad4:	dd802017 	ldw	r22,128(sp)
 200bad8:	dd401f17 	ldw	r21,124(sp)
 200badc:	dd001e17 	ldw	r20,120(sp)
 200bae0:	dcc01d17 	ldw	r19,116(sp)
 200bae4:	dc801c17 	ldw	r18,112(sp)
 200bae8:	dc401b17 	ldw	r17,108(sp)
 200baec:	dc001a17 	ldw	r16,104(sp)
 200baf0:	dec02404 	addi	sp,sp,144
 200baf4:	f800283a 	ret
 200baf8:	10800044 	addi	r2,r2,1
 200bafc:	d8800c15 	stw	r2,48(sp)
 200bb00:	003f5d06 	br	200b878 <__alt_mem_epcs_flash_controller+0xfe002878>
 200bb04:	00c00044 	movi	r3,1
 200bb08:	d8c01215 	stw	r3,72(sp)
 200bb0c:	003fdd06 	br	200ba84 <__alt_mem_epcs_flash_controller+0xfe002a84>
 200bb10:	010003c4 	movi	r4,15
 200bb14:	257f7716 	blt	r4,r21,200b8f4 <__alt_mem_epcs_flash_controller+0xfe0028f4>
 200bb18:	8009883a 	mov	r4,r16
 200bb1c:	01400284 	movi	r5,10
 200bb20:	2001f500 	call	2001f50 <__mulsi3>
 200bb24:	dc400c15 	stw	r17,48(sp)
 200bb28:	1485883a 	add	r2,r2,r18
 200bb2c:	8c800007 	ldb	r18,0(r17)
 200bb30:	143ff404 	addi	r16,r2,-48
 200bb34:	ad400044 	addi	r21,r21,1
 200bb38:	880b883a 	mov	r5,r17
 200bb3c:	900f883a 	mov	r7,r18
 200bb40:	9cbf7216 	blt	r19,r18,200b90c <__alt_mem_epcs_flash_controller+0xfe00290c>
 200bb44:	dc000f15 	stw	r16,60(sp)
 200bb48:	e021883a 	mov	r16,fp
 200bb4c:	b039883a 	mov	fp,r22
 200bb50:	dd801017 	ldw	r22,64(sp)
 200bb54:	00800b84 	movi	r2,46
 200bb58:	9082561e 	bne	r18,r2,200c4b4 <_strtod_r+0xc90>
 200bb5c:	28800044 	addi	r2,r5,1
 200bb60:	d8800c15 	stw	r2,48(sp)
 200bb64:	29c00047 	ldb	r7,1(r5)
 200bb68:	a802611e 	bne	r21,zero,200c4f0 <_strtod_r+0xccc>
 200bb6c:	00800c04 	movi	r2,48
 200bb70:	3884161e 	bne	r7,r2,200cbcc <_strtod_r+0x13a8>
 200bb74:	00800044 	movi	r2,1
 200bb78:	3809883a 	mov	r4,r7
 200bb7c:	100d883a 	mov	r6,r2
 200bb80:	10800044 	addi	r2,r2,1
 200bb84:	2887883a 	add	r3,r5,r2
 200bb88:	d8c00c15 	stw	r3,48(sp)
 200bb8c:	2987883a 	add	r3,r5,r6
 200bb90:	19c00047 	ldb	r7,1(r3)
 200bb94:	393ff926 	beq	r7,r4,200bb7c <__alt_mem_epcs_flash_controller+0xfe002b7c>
 200bb98:	38bff3c4 	addi	r2,r7,-49
 200bb9c:	00c00204 	movi	r3,8
 200bba0:	1882ad36 	bltu	r3,r2,200c658 <_strtod_r+0xe34>
 200bba4:	d9400c17 	ldw	r5,48(sp)
 200bba8:	3029883a 	mov	r20,r6
 200bbac:	002f883a 	mov	r23,zero
 200bbb0:	d9401415 	stw	r5,80(sp)
 200bbb4:	2823883a 	mov	r17,r5
 200bbb8:	01800044 	movi	r6,1
 200bbbc:	3dbff404 	addi	r22,r7,-48
 200bbc0:	b0002826 	beq	r22,zero,200bc64 <_strtod_r+0x440>
 200bbc4:	00800044 	movi	r2,1
 200bbc8:	a1a9883a 	add	r20,r20,r6
 200bbcc:	30844826 	beq	r6,r2,200ccf0 <_strtod_r+0x14cc>
 200bbd0:	b9a7883a 	add	r19,r23,r6
 200bbd4:	dc401015 	stw	r17,64(sp)
 200bbd8:	e023883a 	mov	r17,fp
 200bbdc:	b039883a 	mov	fp,r22
 200bbe0:	802d883a 	mov	r22,r16
 200bbe4:	dc000f17 	ldw	r16,60(sp)
 200bbe8:	98ffffc4 	addi	r3,r19,-1
 200bbec:	dd001615 	stw	r20,88(sp)
 200bbf0:	04800204 	movi	r18,8
 200bbf4:	d9801515 	stw	r6,84(sp)
 200bbf8:	b829883a 	mov	r20,r23
 200bbfc:	1827883a 	mov	r19,r3
 200bc00:	a5000044 	addi	r20,r20,1
 200bc04:	a17fffc4 	addi	r5,r20,-1
 200bc08:	9142b916 	blt	r18,r5,200c6f0 <_strtod_r+0xecc>
 200bc0c:	8809883a 	mov	r4,r17
 200bc10:	01400284 	movi	r5,10
 200bc14:	2001f500 	call	2001f50 <__mulsi3>
 200bc18:	1023883a 	mov	r17,r2
 200bc1c:	a4fff81e 	bne	r20,r19,200bc00 <__alt_mem_epcs_flash_controller+0xfe002c00>
 200bc20:	d9801517 	ldw	r6,84(sp)
 200bc24:	dc000f15 	stw	r16,60(sp)
 200bc28:	dd001617 	ldw	r20,88(sp)
 200bc2c:	b021883a 	mov	r16,r22
 200bc30:	e02d883a 	mov	r22,fp
 200bc34:	8839883a 	mov	fp,r17
 200bc38:	dc401017 	ldw	r17,64(sp)
 200bc3c:	b985883a 	add	r2,r23,r6
 200bc40:	10bfffc4 	addi	r2,r2,-1
 200bc44:	00c00204 	movi	r3,8
 200bc48:	15c00044 	addi	r23,r2,1
 200bc4c:	1883d616 	blt	r3,r2,200cba8 <_strtod_r+0x1384>
 200bc50:	e009883a 	mov	r4,fp
 200bc54:	01400284 	movi	r5,10
 200bc58:	2001f500 	call	2001f50 <__mulsi3>
 200bc5c:	15b9883a 	add	fp,r2,r22
 200bc60:	000d883a 	mov	r6,zero
 200bc64:	88800044 	addi	r2,r17,1
 200bc68:	d8800c15 	stw	r2,48(sp)
 200bc6c:	89c00047 	ldb	r7,1(r17)
 200bc70:	00022306 	br	200c500 <_strtod_r+0xcdc>
 200bc74:	b0800047 	ldb	r2,1(r22)
 200bc78:	01001604 	movi	r4,88
 200bc7c:	1102a326 	beq	r2,r4,200c70c <_strtod_r+0xee8>
 200bc80:	01001e04 	movi	r4,120
 200bc84:	1102a126 	beq	r2,r4,200c70c <_strtod_r+0xee8>
 200bc88:	b0800044 	addi	r2,r22,1
 200bc8c:	9009883a 	mov	r4,r18
 200bc90:	d8800c15 	stw	r2,48(sp)
 200bc94:	14800007 	ldb	r18,0(r2)
 200bc98:	102d883a 	mov	r22,r2
 200bc9c:	10800044 	addi	r2,r2,1
 200bca0:	913ffb26 	beq	r18,r4,200bc90 <__alt_mem_epcs_flash_controller+0xfe002c90>
 200bca4:	90022526 	beq	r18,zero,200c53c <_strtod_r+0xd18>
 200bca8:	00c00044 	movi	r3,1
 200bcac:	d8c01315 	stw	r3,76(sp)
 200bcb0:	003efc06 	br	200b8a4 <__alt_mem_epcs_flash_controller+0xfe0028a4>
 200bcb4:	a800011e 	bne	r21,zero,200bcbc <_strtod_r+0x498>
 200bcb8:	30023026 	beq	r6,zero,200c57c <_strtod_r+0xd58>
 200bcbc:	d9400c17 	ldw	r5,48(sp)
 200bcc0:	28800044 	addi	r2,r5,1
 200bcc4:	d8800c15 	stw	r2,48(sp)
 200bcc8:	29c00047 	ldb	r7,1(r5)
 200bccc:	d9400e15 	stw	r5,56(sp)
 200bcd0:	00800ac4 	movi	r2,43
 200bcd4:	38821026 	beq	r7,r2,200c518 <_strtod_r+0xcf4>
 200bcd8:	00800b44 	movi	r2,45
 200bcdc:	38821426 	beq	r7,r2,200c530 <_strtod_r+0xd0c>
 200bce0:	d8001515 	stw	zero,84(sp)
 200bce4:	38bff404 	addi	r2,r7,-48
 200bce8:	00c00244 	movi	r3,9
 200bcec:	1881fc36 	bltu	r3,r2,200c4e0 <_strtod_r+0xcbc>
 200bcf0:	00800c04 	movi	r2,48
 200bcf4:	3880071e 	bne	r7,r2,200bd14 <_strtod_r+0x4f0>
 200bcf8:	d8800c17 	ldw	r2,48(sp)
 200bcfc:	3807883a 	mov	r3,r7
 200bd00:	10800044 	addi	r2,r2,1
 200bd04:	d8800c15 	stw	r2,48(sp)
 200bd08:	11c00007 	ldb	r7,0(r2)
 200bd0c:	10800044 	addi	r2,r2,1
 200bd10:	38fffc26 	beq	r7,r3,200bd04 <__alt_mem_epcs_flash_controller+0xfe002d04>
 200bd14:	38bff3c4 	addi	r2,r7,-49
 200bd18:	00c00204 	movi	r3,8
 200bd1c:	18bf0a36 	bltu	r3,r2,200b948 <__alt_mem_epcs_flash_controller+0xfe002948>
 200bd20:	d8c00c17 	ldw	r3,48(sp)
 200bd24:	393ff404 	addi	r4,r7,-48
 200bd28:	05c00bc4 	movi	r23,47
 200bd2c:	18800044 	addi	r2,r3,1
 200bd30:	d8800c15 	stw	r2,48(sp)
 200bd34:	19c00047 	ldb	r7,1(r3)
 200bd38:	d8c01615 	stw	r3,88(sp)
 200bd3c:	b9c0160e 	bge	r23,r7,200bd98 <_strtod_r+0x574>
 200bd40:	00c00e44 	movi	r3,57
 200bd44:	19c01416 	blt	r3,r7,200bd98 <_strtod_r+0x574>
 200bd48:	d9401617 	ldw	r5,88(sp)
 200bd4c:	dc001715 	stw	r16,92(sp)
 200bd50:	1823883a 	mov	r17,r3
 200bd54:	2d800084 	addi	r22,r5,2
 200bd58:	3025883a 	mov	r18,r6
 200bd5c:	3821883a 	mov	r16,r7
 200bd60:	00000206 	br	200bd6c <_strtod_r+0x548>
 200bd64:	b5800044 	addi	r22,r22,1
 200bd68:	8c000816 	blt	r17,r16,200bd8c <_strtod_r+0x568>
 200bd6c:	01400284 	movi	r5,10
 200bd70:	2001f500 	call	2001f50 <__mulsi3>
 200bd74:	dd800c15 	stw	r22,48(sp)
 200bd78:	1405883a 	add	r2,r2,r16
 200bd7c:	b4000007 	ldb	r16,0(r22)
 200bd80:	113ff404 	addi	r4,r2,-48
 200bd84:	b005883a 	mov	r2,r22
 200bd88:	bc3ff616 	blt	r23,r16,200bd64 <__alt_mem_epcs_flash_controller+0xfe002d64>
 200bd8c:	800f883a 	mov	r7,r16
 200bd90:	dc001717 	ldw	r16,92(sp)
 200bd94:	900d883a 	mov	r6,r18
 200bd98:	d8c01617 	ldw	r3,88(sp)
 200bd9c:	10c5c83a 	sub	r2,r2,r3
 200bda0:	00c00204 	movi	r3,8
 200bda4:	18833716 	blt	r3,r2,200ca84 <_strtod_r+0x1260>
 200bda8:	009387c4 	movi	r2,19999
 200bdac:	1100010e 	bge	r2,r4,200bdb4 <_strtod_r+0x590>
 200bdb0:	1009883a 	mov	r4,r2
 200bdb4:	d8c01517 	ldw	r3,84(sp)
 200bdb8:	183ee426 	beq	r3,zero,200b94c <__alt_mem_epcs_flash_controller+0xfe00294c>
 200bdbc:	0109c83a 	sub	r4,zero,r4
 200bdc0:	a83ee326 	beq	r21,zero,200b950 <__alt_mem_epcs_flash_controller+0xfe002950>
 200bdc4:	2529c83a 	sub	r20,r4,r20
 200bdc8:	dd001015 	stw	r20,64(sp)
 200bdcc:	9800011e 	bne	r19,zero,200bdd4 <_strtod_r+0x5b0>
 200bdd0:	a827883a 	mov	r19,r21
 200bdd4:	00800404 	movi	r2,16
 200bdd8:	a823883a 	mov	r17,r21
 200bddc:	1540010e 	bge	r2,r21,200bde4 <_strtod_r+0x5c0>
 200bde0:	1023883a 	mov	r17,r2
 200bde4:	e009883a 	mov	r4,fp
 200bde8:	200ff400 	call	200ff40 <__floatunsidf>
 200bdec:	d8800615 	stw	r2,24(sp)
 200bdf0:	d8c00715 	stw	r3,28(sp)
 200bdf4:	01000244 	movi	r4,9
 200bdf8:	2440150e 	bge	r4,r17,200be50 <_strtod_r+0x62c>
 200bdfc:	893ffdc4 	addi	r4,r17,-9
 200be00:	200890fa 	slli	r4,r4,3
 200be04:	180b883a 	mov	r5,r3
 200be08:	00c08234 	movhi	r3,520
 200be0c:	18dc3d04 	addi	r3,r3,28916
 200be10:	1907883a 	add	r3,r3,r4
 200be14:	19800017 	ldw	r6,0(r3)
 200be18:	19c00117 	ldw	r7,4(r3)
 200be1c:	1009883a 	mov	r4,r2
 200be20:	20017f00 	call	20017f0 <__muldf3>
 200be24:	d9000f17 	ldw	r4,60(sp)
 200be28:	1025883a 	mov	r18,r2
 200be2c:	1829883a 	mov	r20,r3
 200be30:	200ff400 	call	200ff40 <__floatunsidf>
 200be34:	9009883a 	mov	r4,r18
 200be38:	a00b883a 	mov	r5,r20
 200be3c:	100d883a 	mov	r6,r2
 200be40:	180f883a 	mov	r7,r3
 200be44:	200fbf40 	call	200fbf4 <__adddf3>
 200be48:	d8800615 	stw	r2,24(sp)
 200be4c:	d8c00715 	stw	r3,28(sp)
 200be50:	008003c4 	movi	r2,15
 200be54:	15401b16 	blt	r2,r21,200bec4 <_strtod_r+0x6a0>
 200be58:	d8c01017 	ldw	r3,64(sp)
 200be5c:	18001626 	beq	r3,zero,200beb8 <_strtod_r+0x694>
 200be60:	d9001017 	ldw	r4,64(sp)
 200be64:	01032e0e 	bge	zero,r4,200cb20 <_strtod_r+0x12fc>
 200be68:	00c00584 	movi	r3,22
 200be6c:	19031016 	blt	r3,r4,200cab0 <_strtod_r+0x128c>
 200be70:	200490fa 	slli	r2,r4,3
 200be74:	00c08234 	movhi	r3,520
 200be78:	18dc3d04 	addi	r3,r3,28916
 200be7c:	d9000617 	ldw	r4,24(sp)
 200be80:	1885883a 	add	r2,r3,r2
 200be84:	d9400717 	ldw	r5,28(sp)
 200be88:	11800017 	ldw	r6,0(r2)
 200be8c:	11c00117 	ldw	r7,4(r2)
 200be90:	20017f00 	call	20017f0 <__muldf3>
 200be94:	003f0406 	br	200baa8 <__alt_mem_epcs_flash_controller+0xfe002aa8>
 200be98:	00dffc34 	movhi	r3,32752
 200be9c:	d8c00715 	stw	r3,28(sp)
 200bea0:	d8000615 	stw	zero,24(sp)
 200bea4:	1080020c 	andi	r2,r2,8
 200bea8:	10000326 	beq	r2,zero,200beb8 <_strtod_r+0x694>
 200beac:	d8800717 	ldw	r2,28(sp)
 200beb0:	10a00034 	orhi	r2,r2,32768
 200beb4:	d8800715 	stw	r2,28(sp)
 200beb8:	d8800617 	ldw	r2,24(sp)
 200bebc:	d8c00717 	ldw	r3,28(sp)
 200bec0:	003ef906 	br	200baa8 <__alt_mem_epcs_flash_controller+0xfe002aa8>
 200bec4:	d8801017 	ldw	r2,64(sp)
 200bec8:	ac63c83a 	sub	r17,r21,r17
 200becc:	1463883a 	add	r17,r2,r17
 200bed0:	0442a70e 	bge	zero,r17,200c970 <_strtod_r+0x114c>
 200bed4:	888003cc 	andi	r2,r17,15
 200bed8:	10000b26 	beq	r2,zero,200bf08 <_strtod_r+0x6e4>
 200bedc:	100490fa 	slli	r2,r2,3
 200bee0:	00c08234 	movhi	r3,520
 200bee4:	18dc3d04 	addi	r3,r3,28916
 200bee8:	d9000617 	ldw	r4,24(sp)
 200beec:	1885883a 	add	r2,r3,r2
 200bef0:	d9400717 	ldw	r5,28(sp)
 200bef4:	11800017 	ldw	r6,0(r2)
 200bef8:	11c00117 	ldw	r7,4(r2)
 200befc:	20017f00 	call	20017f0 <__muldf3>
 200bf00:	d8800615 	stw	r2,24(sp)
 200bf04:	d8c00715 	stw	r3,28(sp)
 200bf08:	00bffc04 	movi	r2,-16
 200bf0c:	88a2703a 	and	r17,r17,r2
 200bf10:	8801a41e 	bne	r17,zero,200c5a4 <_strtod_r+0xd80>
 200bf14:	0029883a 	mov	r20,zero
 200bf18:	d9401417 	ldw	r5,80(sp)
 200bf1c:	df000015 	stw	fp,0(sp)
 200bf20:	8009883a 	mov	r4,r16
 200bf24:	980d883a 	mov	r6,r19
 200bf28:	a80f883a 	mov	r7,r21
 200bf2c:	2009ee00 	call	2009ee0 <__s2b>
 200bf30:	d8c01017 	ldw	r3,64(sp)
 200bf34:	102d883a 	mov	r22,r2
 200bf38:	b1000304 	addi	r4,r22,12
 200bf3c:	1805d7fa 	srai	r2,r3,31
 200bf40:	00f9c83a 	sub	fp,zero,r3
 200bf44:	d9001315 	stw	r4,76(sp)
 200bf48:	e0b8703a 	and	fp,fp,r2
 200bf4c:	df000e15 	stw	fp,56(sp)
 200bf50:	b1400117 	ldw	r5,4(r22)
 200bf54:	8009883a 	mov	r4,r16
 200bf58:	0027883a 	mov	r19,zero
 200bf5c:	2009ccc0 	call	2009ccc <_Balloc>
 200bf60:	b1800417 	ldw	r6,16(r22)
 200bf64:	d9401317 	ldw	r5,76(sp)
 200bf68:	11000304 	addi	r4,r2,12
 200bf6c:	31800084 	addi	r6,r6,2
 200bf70:	318d883a 	add	r6,r6,r6
 200bf74:	318d883a 	add	r6,r6,r6
 200bf78:	1025883a 	mov	r18,r2
 200bf7c:	2009a000 	call	2009a00 <memcpy>
 200bf80:	d9400617 	ldw	r5,24(sp)
 200bf84:	d9800717 	ldw	r6,28(sp)
 200bf88:	d8800a04 	addi	r2,sp,40
 200bf8c:	8009883a 	mov	r4,r16
 200bf90:	d9c00d04 	addi	r7,sp,52
 200bf94:	d8800015 	stw	r2,0(sp)
 200bf98:	200a9c00 	call	200a9c0 <__d2b>
 200bf9c:	8009883a 	mov	r4,r16
 200bfa0:	01400044 	movi	r5,1
 200bfa4:	d8800b15 	stw	r2,44(sp)
 200bfa8:	200a0fc0 	call	200a0fc <__i2b>
 200bfac:	d8c01017 	ldw	r3,64(sp)
 200bfb0:	1023883a 	mov	r17,r2
 200bfb4:	00c0010e 	bge	zero,r3,200bfbc <_strtod_r+0x798>
 200bfb8:	1827883a 	mov	r19,r3
 200bfbc:	d8800d17 	ldw	r2,52(sp)
 200bfc0:	1000de16 	blt	r2,zero,200c33c <_strtod_r+0xb18>
 200bfc4:	d9000e17 	ldw	r4,56(sp)
 200bfc8:	9807883a 	mov	r3,r19
 200bfcc:	20af883a 	add	r23,r4,r2
 200bfd0:	d9000a17 	ldw	r4,40(sp)
 200bfd4:	1505c83a 	sub	r2,r2,r20
 200bfd8:	017f00c4 	movi	r5,-1021
 200bfdc:	110d883a 	add	r6,r2,r4
 200bfe0:	31409a0e 	bge	r6,r5,200c24c <_strtod_r+0xa28>
 200bfe4:	10810cc4 	addi	r2,r2,1075
 200bfe8:	b8b9883a 	add	fp,r23,r2
 200bfec:	1885883a 	add	r2,r3,r2
 200bff0:	152b883a 	add	r21,r2,r20
 200bff4:	e005883a 	mov	r2,fp
 200bff8:	bf00010e 	bge	r23,fp,200c000 <_strtod_r+0x7dc>
 200bffc:	b805883a 	mov	r2,r23
 200c000:	a880010e 	bge	r21,r2,200c008 <_strtod_r+0x7e4>
 200c004:	a805883a 	mov	r2,r21
 200c008:	0080030e 	bge	zero,r2,200c018 <_strtod_r+0x7f4>
 200c00c:	e0b9c83a 	sub	fp,fp,r2
 200c010:	a8abc83a 	sub	r21,r21,r2
 200c014:	b8afc83a 	sub	r23,r23,r2
 200c018:	d9400e17 	ldw	r5,56(sp)
 200c01c:	28000f26 	beq	r5,zero,200c05c <_strtod_r+0x838>
 200c020:	280d883a 	mov	r6,r5
 200c024:	8009883a 	mov	r4,r16
 200c028:	880b883a 	mov	r5,r17
 200c02c:	200a3900 	call	200a390 <__pow5mult>
 200c030:	d9800b17 	ldw	r6,44(sp)
 200c034:	8009883a 	mov	r4,r16
 200c038:	100b883a 	mov	r5,r2
 200c03c:	1023883a 	mov	r17,r2
 200c040:	200a1380 	call	200a138 <__multiply>
 200c044:	d9400b17 	ldw	r5,44(sp)
 200c048:	8009883a 	mov	r4,r16
 200c04c:	d8801815 	stw	r2,96(sp)
 200c050:	2009d740 	call	2009d74 <_Bfree>
 200c054:	d8801817 	ldw	r2,96(sp)
 200c058:	d8800b15 	stw	r2,44(sp)
 200c05c:	0700050e 	bge	zero,fp,200c074 <_strtod_r+0x850>
 200c060:	d9400b17 	ldw	r5,44(sp)
 200c064:	8009883a 	mov	r4,r16
 200c068:	e00d883a 	mov	r6,fp
 200c06c:	200a4bc0 	call	200a4bc <__lshift>
 200c070:	d8800b15 	stw	r2,44(sp)
 200c074:	98000526 	beq	r19,zero,200c08c <_strtod_r+0x868>
 200c078:	900b883a 	mov	r5,r18
 200c07c:	8009883a 	mov	r4,r16
 200c080:	980d883a 	mov	r6,r19
 200c084:	200a3900 	call	200a390 <__pow5mult>
 200c088:	1025883a 	mov	r18,r2
 200c08c:	0540050e 	bge	zero,r21,200c0a4 <_strtod_r+0x880>
 200c090:	900b883a 	mov	r5,r18
 200c094:	8009883a 	mov	r4,r16
 200c098:	a80d883a 	mov	r6,r21
 200c09c:	200a4bc0 	call	200a4bc <__lshift>
 200c0a0:	1025883a 	mov	r18,r2
 200c0a4:	05c0050e 	bge	zero,r23,200c0bc <_strtod_r+0x898>
 200c0a8:	880b883a 	mov	r5,r17
 200c0ac:	8009883a 	mov	r4,r16
 200c0b0:	b80d883a 	mov	r6,r23
 200c0b4:	200a4bc0 	call	200a4bc <__lshift>
 200c0b8:	1023883a 	mov	r17,r2
 200c0bc:	d9400b17 	ldw	r5,44(sp)
 200c0c0:	8009883a 	mov	r4,r16
 200c0c4:	900d883a 	mov	r6,r18
 200c0c8:	200a6700 	call	200a670 <__mdiff>
 200c0cc:	1027883a 	mov	r19,r2
 200c0d0:	10800317 	ldw	r2,12(r2)
 200c0d4:	9809883a 	mov	r4,r19
 200c0d8:	98000315 	stw	zero,12(r19)
 200c0dc:	880b883a 	mov	r5,r17
 200c0e0:	d8800f15 	stw	r2,60(sp)
 200c0e4:	200a6180 	call	200a618 <__mcmp>
 200c0e8:	1001cb16 	blt	r2,zero,200c818 <_strtod_r+0xff4>
 200c0ec:	1001fa26 	beq	r2,zero,200c8d8 <_strtod_r+0x10b4>
 200c0f0:	9809883a 	mov	r4,r19
 200c0f4:	880b883a 	mov	r5,r17
 200c0f8:	200ab040 	call	200ab04 <__ratio>
 200c0fc:	1009883a 	mov	r4,r2
 200c100:	180b883a 	mov	r5,r3
 200c104:	000d883a 	mov	r6,zero
 200c108:	01d00034 	movhi	r7,16384
 200c10c:	102f883a 	mov	r23,r2
 200c110:	1839883a 	mov	fp,r3
 200c114:	200fe840 	call	200fe84 <__ledf2>
 200c118:	00804f16 	blt	zero,r2,200c258 <_strtod_r+0xa34>
 200c11c:	d9400f17 	ldw	r5,60(sp)
 200c120:	28008926 	beq	r5,zero,200c348 <_strtod_r+0xb24>
 200c124:	da400717 	ldw	r9,28(sp)
 200c128:	05cffc34 	movhi	r23,16368
 200c12c:	d8000815 	stw	zero,32(sp)
 200c130:	ddc00915 	stw	r23,36(sp)
 200c134:	002b883a 	mov	r21,zero
 200c138:	4f1ffc2c 	andhi	fp,r9,32752
 200c13c:	009ff834 	movhi	r2,32736
 200c140:	e0805526 	beq	fp,r2,200c298 <_strtod_r+0xa74>
 200c144:	a0001b26 	beq	r20,zero,200c1b4 <_strtod_r+0x990>
 200c148:	0081a834 	movhi	r2,1696
 200c14c:	17001936 	bltu	r2,fp,200c1b4 <_strtod_r+0x990>
 200c150:	a809883a 	mov	r4,r21
 200c154:	b80b883a 	mov	r5,r23
 200c158:	01bff034 	movhi	r6,65472
 200c15c:	01d07834 	movhi	r7,16864
 200c160:	39ffffc4 	addi	r7,r7,-1
 200c164:	200fe840 	call	200fe84 <__ledf2>
 200c168:	00800d16 	blt	zero,r2,200c1a0 <_strtod_r+0x97c>
 200c16c:	a809883a 	mov	r4,r21
 200c170:	b80b883a 	mov	r5,r23
 200c174:	200eaa00 	call	200eaa0 <__fixunsdfsi>
 200c178:	1000d626 	beq	r2,zero,200c4d4 <_strtod_r+0xcb0>
 200c17c:	1009883a 	mov	r4,r2
 200c180:	200ff400 	call	200ff40 <__floatunsidf>
 200c184:	102b883a 	mov	r21,r2
 200c188:	182f883a 	mov	r23,r3
 200c18c:	d9400f17 	ldw	r5,60(sp)
 200c190:	2800ce1e 	bne	r5,zero,200c4cc <_strtod_r+0xca8>
 200c194:	b8a0003c 	xorhi	r2,r23,32768
 200c198:	dd400815 	stw	r21,32(sp)
 200c19c:	d8800915 	stw	r2,36(sp)
 200c1a0:	d8c00917 	ldw	r3,36(sp)
 200c1a4:	0081ac34 	movhi	r2,1712
 200c1a8:	1885883a 	add	r2,r3,r2
 200c1ac:	1705c83a 	sub	r2,r2,fp
 200c1b0:	d8800915 	stw	r2,36(sp)
 200c1b4:	d9000617 	ldw	r4,24(sp)
 200c1b8:	d9400717 	ldw	r5,28(sp)
 200c1bc:	200a8180 	call	200a818 <__ulp>
 200c1c0:	da800617 	ldw	r10,24(sp)
 200c1c4:	da400717 	ldw	r9,28(sp)
 200c1c8:	d9800817 	ldw	r6,32(sp)
 200c1cc:	d9c00917 	ldw	r7,36(sp)
 200c1d0:	1009883a 	mov	r4,r2
 200c1d4:	180b883a 	mov	r5,r3
 200c1d8:	da401915 	stw	r9,100(sp)
 200c1dc:	da801815 	stw	r10,96(sp)
 200c1e0:	20017f00 	call	20017f0 <__muldf3>
 200c1e4:	da401917 	ldw	r9,100(sp)
 200c1e8:	da801817 	ldw	r10,96(sp)
 200c1ec:	100d883a 	mov	r6,r2
 200c1f0:	480b883a 	mov	r5,r9
 200c1f4:	5009883a 	mov	r4,r10
 200c1f8:	180f883a 	mov	r7,r3
 200c1fc:	200fbf40 	call	200fbf4 <__adddf3>
 200c200:	d8800615 	stw	r2,24(sp)
 200c204:	d8c00715 	stw	r3,28(sp)
 200c208:	1813883a 	mov	r9,r3
 200c20c:	a000021e 	bne	r20,zero,200c218 <_strtod_r+0x9f4>
 200c210:	489ffc2c 	andhi	r2,r9,32752
 200c214:	e0807226 	beq	fp,r2,200c3e0 <_strtod_r+0xbbc>
 200c218:	d9400b17 	ldw	r5,44(sp)
 200c21c:	8009883a 	mov	r4,r16
 200c220:	2009d740 	call	2009d74 <_Bfree>
 200c224:	8009883a 	mov	r4,r16
 200c228:	900b883a 	mov	r5,r18
 200c22c:	2009d740 	call	2009d74 <_Bfree>
 200c230:	8009883a 	mov	r4,r16
 200c234:	880b883a 	mov	r5,r17
 200c238:	2009d740 	call	2009d74 <_Bfree>
 200c23c:	8009883a 	mov	r4,r16
 200c240:	980b883a 	mov	r5,r19
 200c244:	2009d740 	call	2009d74 <_Bfree>
 200c248:	003f4106 	br	200bf50 <__alt_mem_epcs_flash_controller+0xfe002f50>
 200c24c:	00800d84 	movi	r2,54
 200c250:	1105c83a 	sub	r2,r2,r4
 200c254:	003f6406 	br	200bfe8 <__alt_mem_epcs_flash_controller+0xfe002fe8>
 200c258:	b809883a 	mov	r4,r23
 200c25c:	e00b883a 	mov	r5,fp
 200c260:	000d883a 	mov	r6,zero
 200c264:	01cff834 	movhi	r7,16352
 200c268:	20017f00 	call	20017f0 <__muldf3>
 200c26c:	d9000f17 	ldw	r4,60(sp)
 200c270:	102b883a 	mov	r21,r2
 200c274:	182f883a 	mov	r23,r3
 200c278:	2000011e 	bne	r4,zero,200c280 <_strtod_r+0xa5c>
 200c27c:	18e0003c 	xorhi	r3,r3,32768
 200c280:	da400717 	ldw	r9,28(sp)
 200c284:	d8800815 	stw	r2,32(sp)
 200c288:	d8c00915 	stw	r3,36(sp)
 200c28c:	4f1ffc2c 	andhi	fp,r9,32752
 200c290:	009ff834 	movhi	r2,32736
 200c294:	e0bfab1e 	bne	fp,r2,200c144 <__alt_mem_epcs_flash_controller+0xfe003144>
 200c298:	d8800617 	ldw	r2,24(sp)
 200c29c:	00ff2c34 	movhi	r3,64688
 200c2a0:	48d3883a 	add	r9,r9,r3
 200c2a4:	1009883a 	mov	r4,r2
 200c2a8:	d8800415 	stw	r2,16(sp)
 200c2ac:	d8800717 	ldw	r2,28(sp)
 200c2b0:	480b883a 	mov	r5,r9
 200c2b4:	da400715 	stw	r9,28(sp)
 200c2b8:	d8800515 	stw	r2,20(sp)
 200c2bc:	200a8180 	call	200a818 <__ulp>
 200c2c0:	da800617 	ldw	r10,24(sp)
 200c2c4:	da400717 	ldw	r9,28(sp)
 200c2c8:	d9800817 	ldw	r6,32(sp)
 200c2cc:	d9c00917 	ldw	r7,36(sp)
 200c2d0:	1009883a 	mov	r4,r2
 200c2d4:	180b883a 	mov	r5,r3
 200c2d8:	da401915 	stw	r9,100(sp)
 200c2dc:	da801815 	stw	r10,96(sp)
 200c2e0:	20017f00 	call	20017f0 <__muldf3>
 200c2e4:	da801817 	ldw	r10,96(sp)
 200c2e8:	da401917 	ldw	r9,100(sp)
 200c2ec:	100d883a 	mov	r6,r2
 200c2f0:	5009883a 	mov	r4,r10
 200c2f4:	480b883a 	mov	r5,r9
 200c2f8:	180f883a 	mov	r7,r3
 200c2fc:	200fbf40 	call	200fbf4 <__adddf3>
 200c300:	d8800615 	stw	r2,24(sp)
 200c304:	015f2834 	movhi	r5,31904
 200c308:	297fffc4 	addi	r5,r5,-1
 200c30c:	189ffc2c 	andhi	r2,r3,32752
 200c310:	2880642e 	bgeu	r5,r2,200c4a4 <_strtod_r+0xc80>
 200c314:	d8800517 	ldw	r2,20(sp)
 200c318:	00dffc34 	movhi	r3,32752
 200c31c:	18ffffc4 	addi	r3,r3,-1
 200c320:	10c18526 	beq	r2,r3,200c938 <_strtod_r+0x1114>
 200c324:	011ffc34 	movhi	r4,32752
 200c328:	213fffc4 	addi	r4,r4,-1
 200c32c:	00bfffc4 	movi	r2,-1
 200c330:	d9000715 	stw	r4,28(sp)
 200c334:	d8800615 	stw	r2,24(sp)
 200c338:	003fb706 	br	200c218 <__alt_mem_epcs_flash_controller+0xfe003218>
 200c33c:	9887c83a 	sub	r3,r19,r2
 200c340:	ddc00e17 	ldw	r23,56(sp)
 200c344:	003f2206 	br	200bfd0 <__alt_mem_epcs_flash_controller+0xfe002fd0>
 200c348:	d8800617 	ldw	r2,24(sp)
 200c34c:	10001a1e 	bne	r2,zero,200c3b8 <_strtod_r+0xb94>
 200c350:	da400717 	ldw	r9,28(sp)
 200c354:	00c00434 	movhi	r3,16
 200c358:	18ffffc4 	addi	r3,r3,-1
 200c35c:	48c4703a 	and	r2,r9,r3
 200c360:	1000191e 	bne	r2,zero,200c3c8 <_strtod_r+0xba4>
 200c364:	b809883a 	mov	r4,r23
 200c368:	e00b883a 	mov	r5,fp
 200c36c:	000d883a 	mov	r6,zero
 200c370:	01cffc34 	movhi	r7,16368
 200c374:	da401915 	stw	r9,100(sp)
 200c378:	200fe280 	call	200fe28 <__ltdf2>
 200c37c:	da401917 	ldw	r9,100(sp)
 200c380:	1001bb16 	blt	r2,zero,200ca70 <_strtod_r+0x124c>
 200c384:	b809883a 	mov	r4,r23
 200c388:	e00b883a 	mov	r5,fp
 200c38c:	000d883a 	mov	r6,zero
 200c390:	01cff834 	movhi	r7,16352
 200c394:	20017f00 	call	20017f0 <__muldf3>
 200c398:	da401917 	ldw	r9,100(sp)
 200c39c:	182f883a 	mov	r23,r3
 200c3a0:	102b883a 	mov	r21,r2
 200c3a4:	1007883a 	mov	r3,r2
 200c3a8:	b8a0003c 	xorhi	r2,r23,32768
 200c3ac:	d8c00815 	stw	r3,32(sp)
 200c3b0:	d8800915 	stw	r2,36(sp)
 200c3b4:	003f6006 	br	200c138 <__alt_mem_epcs_flash_controller+0xfe003138>
 200c3b8:	00c00044 	movi	r3,1
 200c3bc:	da400717 	ldw	r9,28(sp)
 200c3c0:	10c0011e 	bne	r2,r3,200c3c8 <_strtod_r+0xba4>
 200c3c4:	4800c526 	beq	r9,zero,200c6dc <_strtod_r+0xeb8>
 200c3c8:	00affc34 	movhi	r2,49136
 200c3cc:	d8000815 	stw	zero,32(sp)
 200c3d0:	d8800915 	stw	r2,36(sp)
 200c3d4:	002b883a 	mov	r21,zero
 200c3d8:	05cffc34 	movhi	r23,16368
 200c3dc:	003f5606 	br	200c138 <__alt_mem_epcs_flash_controller+0xfe003138>
 200c3e0:	b80b883a 	mov	r5,r23
 200c3e4:	a809883a 	mov	r4,r21
 200c3e8:	da401915 	stw	r9,100(sp)
 200c3ec:	2001d5c0 	call	2001d5c <__fixdfsi>
 200c3f0:	1009883a 	mov	r4,r2
 200c3f4:	2001c880 	call	2001c88 <__floatsidf>
 200c3f8:	b80b883a 	mov	r5,r23
 200c3fc:	a809883a 	mov	r4,r21
 200c400:	100d883a 	mov	r6,r2
 200c404:	180f883a 	mov	r7,r3
 200c408:	200fc480 	call	200fc48 <__subdf3>
 200c40c:	102f883a 	mov	r23,r2
 200c410:	d8800f17 	ldw	r2,60(sp)
 200c414:	1839883a 	mov	fp,r3
 200c418:	da401917 	ldw	r9,100(sp)
 200c41c:	1000021e 	bne	r2,zero,200c428 <_strtod_r+0xc04>
 200c420:	d8800617 	ldw	r2,24(sp)
 200c424:	10004826 	beq	r2,zero,200c548 <_strtod_r+0xd24>
 200c428:	b809883a 	mov	r4,r23
 200c42c:	e00b883a 	mov	r5,fp
 200c430:	01a52834 	movhi	r6,38048
 200c434:	318d6544 	addi	r6,r6,13717
 200c438:	01cff834 	movhi	r7,16352
 200c43c:	39ffffc4 	addi	r7,r7,-1
 200c440:	200fe280 	call	200fe28 <__ltdf2>
 200c444:	10000716 	blt	r2,zero,200c464 <_strtod_r+0xc40>
 200c448:	b809883a 	mov	r4,r23
 200c44c:	e00b883a 	mov	r5,fp
 200c450:	018d6c34 	movhi	r6,13744
 200c454:	31b94d44 	addi	r6,r6,-6859
 200c458:	01cff834 	movhi	r7,16352
 200c45c:	200fd600 	call	200fd60 <__gtdf2>
 200c460:	00bf6d0e 	bge	zero,r2,200c218 <__alt_mem_epcs_flash_controller+0xfe003218>
 200c464:	d9400b17 	ldw	r5,44(sp)
 200c468:	8009883a 	mov	r4,r16
 200c46c:	2009d740 	call	2009d74 <_Bfree>
 200c470:	8009883a 	mov	r4,r16
 200c474:	900b883a 	mov	r5,r18
 200c478:	2009d740 	call	2009d74 <_Bfree>
 200c47c:	8009883a 	mov	r4,r16
 200c480:	880b883a 	mov	r5,r17
 200c484:	2009d740 	call	2009d74 <_Bfree>
 200c488:	8009883a 	mov	r4,r16
 200c48c:	b00b883a 	mov	r5,r22
 200c490:	2009d740 	call	2009d74 <_Bfree>
 200c494:	8009883a 	mov	r4,r16
 200c498:	980b883a 	mov	r5,r19
 200c49c:	2009d740 	call	2009d74 <_Bfree>
 200c4a0:	003e8506 	br	200beb8 <__alt_mem_epcs_flash_controller+0xfe002eb8>
 200c4a4:	0240d434 	movhi	r9,848
 200c4a8:	1a53883a 	add	r9,r3,r9
 200c4ac:	da400715 	stw	r9,28(sp)
 200c4b0:	003f5606 	br	200c20c <__alt_mem_epcs_flash_controller+0xfe00320c>
 200c4b4:	a827883a 	mov	r19,r21
 200c4b8:	dd801415 	stw	r22,80(sp)
 200c4bc:	000d883a 	mov	r6,zero
 200c4c0:	0029883a 	mov	r20,zero
 200c4c4:	d8001015 	stw	zero,64(sp)
 200c4c8:	003d1d06 	br	200b940 <__alt_mem_epcs_flash_controller+0xfe002940>
 200c4cc:	b805883a 	mov	r2,r23
 200c4d0:	003f3106 	br	200c198 <__alt_mem_epcs_flash_controller+0xfe003198>
 200c4d4:	002b883a 	mov	r21,zero
 200c4d8:	05cffc34 	movhi	r23,16368
 200c4dc:	003f2b06 	br	200c18c <__alt_mem_epcs_flash_controller+0xfe00318c>
 200c4e0:	d9400e17 	ldw	r5,56(sp)
 200c4e4:	0009883a 	mov	r4,zero
 200c4e8:	d9400c15 	stw	r5,48(sp)
 200c4ec:	003d1706 	br	200b94c <__alt_mem_epcs_flash_controller+0xfe00294c>
 200c4f0:	dd801415 	stw	r22,80(sp)
 200c4f4:	a82f883a 	mov	r23,r21
 200c4f8:	000d883a 	mov	r6,zero
 200c4fc:	0029883a 	mov	r20,zero
 200c500:	3dbff404 	addi	r22,r7,-48
 200c504:	00800244 	movi	r2,9
 200c508:	15802136 	bltu	r2,r22,200c590 <_strtod_r+0xd6c>
 200c50c:	31800044 	addi	r6,r6,1
 200c510:	dc400c17 	ldw	r17,48(sp)
 200c514:	003daa06 	br	200bbc0 <__alt_mem_epcs_flash_controller+0xfe002bc0>
 200c518:	d8001515 	stw	zero,84(sp)
 200c51c:	d9400e17 	ldw	r5,56(sp)
 200c520:	28800084 	addi	r2,r5,2
 200c524:	d8800c15 	stw	r2,48(sp)
 200c528:	29c00087 	ldb	r7,2(r5)
 200c52c:	003ded06 	br	200bce4 <__alt_mem_epcs_flash_controller+0xfe002ce4>
 200c530:	00c00044 	movi	r3,1
 200c534:	d8c01515 	stw	r3,84(sp)
 200c538:	003ff806 	br	200c51c <__alt_mem_epcs_flash_controller+0xfe00351c>
 200c53c:	0005883a 	mov	r2,zero
 200c540:	0007883a 	mov	r3,zero
 200c544:	003d5806 	br	200baa8 <__alt_mem_epcs_flash_controller+0xfe002aa8>
 200c548:	00c00434 	movhi	r3,16
 200c54c:	18ffffc4 	addi	r3,r3,-1
 200c550:	48d2703a 	and	r9,r9,r3
 200c554:	483fb41e 	bne	r9,zero,200c428 <__alt_mem_epcs_flash_controller+0xfe003428>
 200c558:	b809883a 	mov	r4,r23
 200c55c:	e00b883a 	mov	r5,fp
 200c560:	01a52834 	movhi	r6,38048
 200c564:	318d6544 	addi	r6,r6,13717
 200c568:	01cff434 	movhi	r7,16336
 200c56c:	39ffffc4 	addi	r7,r7,-1
 200c570:	200fe280 	call	200fe28 <__ltdf2>
 200c574:	103f280e 	bge	r2,zero,200c218 <__alt_mem_epcs_flash_controller+0xfe003218>
 200c578:	003fba06 	br	200c464 <__alt_mem_epcs_flash_controller+0xfe003464>
 200c57c:	d8c01317 	ldw	r3,76(sp)
 200c580:	183dce1e 	bne	r3,zero,200bcbc <__alt_mem_epcs_flash_controller+0xfe002cbc>
 200c584:	d8800617 	ldw	r2,24(sp)
 200c588:	d8c00717 	ldw	r3,28(sp)
 200c58c:	003d4306 	br	200ba9c <__alt_mem_epcs_flash_controller+0xfe002a9c>
 200c590:	00c00044 	movi	r3,1
 200c594:	a827883a 	mov	r19,r21
 200c598:	d8c01015 	stw	r3,64(sp)
 200c59c:	b82b883a 	mov	r21,r23
 200c5a0:	003ce506 	br	200b938 <__alt_mem_epcs_flash_controller+0xfe002938>
 200c5a4:	00804d04 	movi	r2,308
 200c5a8:	1440ec16 	blt	r2,r17,200c95c <_strtod_r+0x1138>
 200c5ac:	8825d13a 	srai	r18,r17,4
 200c5b0:	05c00044 	movi	r23,1
 200c5b4:	bc81ca0e 	bge	r23,r18,200cce0 <_strtod_r+0x14bc>
 200c5b8:	d8800617 	ldw	r2,24(sp)
 200c5bc:	d8c00717 	ldw	r3,28(sp)
 200c5c0:	05808234 	movhi	r22,520
 200c5c4:	b59c3304 	addi	r22,r22,28876
 200c5c8:	b029883a 	mov	r20,r22
 200c5cc:	0023883a 	mov	r17,zero
 200c5d0:	9180004c 	andi	r6,r18,1
 200c5d4:	30000526 	beq	r6,zero,200c5ec <_strtod_r+0xdc8>
 200c5d8:	a1800017 	ldw	r6,0(r20)
 200c5dc:	a1c00117 	ldw	r7,4(r20)
 200c5e0:	1009883a 	mov	r4,r2
 200c5e4:	180b883a 	mov	r5,r3
 200c5e8:	20017f00 	call	20017f0 <__muldf3>
 200c5ec:	9025d07a 	srai	r18,r18,1
 200c5f0:	8c400044 	addi	r17,r17,1
 200c5f4:	a5000204 	addi	r20,r20,8
 200c5f8:	bcbff516 	blt	r23,r18,200c5d0 <__alt_mem_epcs_flash_controller+0xfe0035d0>
 200c5fc:	d8800615 	stw	r2,24(sp)
 200c600:	d8c00715 	stw	r3,28(sp)
 200c604:	880490fa 	slli	r2,r17,3
 200c608:	d9400717 	ldw	r5,28(sp)
 200c60c:	d9000617 	ldw	r4,24(sp)
 200c610:	b0a3883a 	add	r17,r22,r2
 200c614:	89800017 	ldw	r6,0(r17)
 200c618:	89c00117 	ldw	r7,4(r17)
 200c61c:	00bf2c34 	movhi	r2,64688
 200c620:	288b883a 	add	r5,r5,r2
 200c624:	20017f00 	call	20017f0 <__muldf3>
 200c628:	d8800615 	stw	r2,24(sp)
 200c62c:	011f2834 	movhi	r4,31904
 200c630:	189ffc2c 	andhi	r2,r3,32752
 200c634:	2080c936 	bltu	r4,r2,200c95c <_strtod_r+0x1138>
 200c638:	011f2434 	movhi	r4,31888
 200c63c:	2081652e 	bgeu	r4,r2,200cbd4 <_strtod_r+0x13b0>
 200c640:	009ffc34 	movhi	r2,32752
 200c644:	10bfffc4 	addi	r2,r2,-1
 200c648:	d8800715 	stw	r2,28(sp)
 200c64c:	00bfffc4 	movi	r2,-1
 200c650:	d8800615 	stw	r2,24(sp)
 200c654:	003e2f06 	br	200bf14 <__alt_mem_epcs_flash_controller+0xfe002f14>
 200c658:	00c00044 	movi	r3,1
 200c65c:	0027883a 	mov	r19,zero
 200c660:	dd801415 	stw	r22,80(sp)
 200c664:	0029883a 	mov	r20,zero
 200c668:	d8c01015 	stw	r3,64(sp)
 200c66c:	003cb206 	br	200b938 <__alt_mem_epcs_flash_controller+0xfe002938>
 200c670:	d8800717 	ldw	r2,28(sp)
 200c674:	00c00434 	movhi	r3,16
 200c678:	18ffffc4 	addi	r3,r3,-1
 200c67c:	10c6703a 	and	r3,r2,r3
 200c680:	1801471e 	bne	r3,zero,200cba0 <_strtod_r+0x137c>
 200c684:	d8c00617 	ldw	r3,24(sp)
 200c688:	18007e26 	beq	r3,zero,200c884 <_strtod_r+0x1060>
 200c68c:	18c0004c 	andi	r3,r3,1
 200c690:	1800a726 	beq	r3,zero,200c930 <_strtod_r+0x110c>
 200c694:	ddc00617 	ldw	r23,24(sp)
 200c698:	dd400717 	ldw	r21,28(sp)
 200c69c:	b809883a 	mov	r4,r23
 200c6a0:	a80b883a 	mov	r5,r21
 200c6a4:	200a8180 	call	200a818 <__ulp>
 200c6a8:	b809883a 	mov	r4,r23
 200c6ac:	a80b883a 	mov	r5,r21
 200c6b0:	100d883a 	mov	r6,r2
 200c6b4:	180f883a 	mov	r7,r3
 200c6b8:	200fc480 	call	200fc48 <__subdf3>
 200c6bc:	1009883a 	mov	r4,r2
 200c6c0:	180b883a 	mov	r5,r3
 200c6c4:	000d883a 	mov	r6,zero
 200c6c8:	000f883a 	mov	r7,zero
 200c6cc:	d8800615 	stw	r2,24(sp)
 200c6d0:	d8c00715 	stw	r3,28(sp)
 200c6d4:	200fca80 	call	200fca8 <__eqdf2>
 200c6d8:	1000951e 	bne	r2,zero,200c930 <_strtod_r+0x110c>
 200c6dc:	d8000615 	stw	zero,24(sp)
 200c6e0:	d8000715 	stw	zero,28(sp)
 200c6e4:	00800884 	movi	r2,34
 200c6e8:	80800015 	stw	r2,0(r16)
 200c6ec:	003f5d06 	br	200c464 <__alt_mem_epcs_flash_controller+0xfe003464>
 200c6f0:	00800404 	movi	r2,16
 200c6f4:	153d4916 	blt	r2,r20,200bc1c <__alt_mem_epcs_flash_controller+0xfe002c1c>
 200c6f8:	8009883a 	mov	r4,r16
 200c6fc:	01400284 	movi	r5,10
 200c700:	2001f500 	call	2001f50 <__mulsi3>
 200c704:	1021883a 	mov	r16,r2
 200c708:	003d4406 	br	200bc1c <__alt_mem_epcs_flash_controller+0xfe002c1c>
 200c70c:	d9001217 	ldw	r4,72(sp)
 200c710:	d8800b04 	addi	r2,sp,44
 200c714:	04c08234 	movhi	r19,520
 200c718:	9cdef804 	addi	r19,r19,31712
 200c71c:	d9000115 	stw	r4,4(sp)
 200c720:	d8800015 	stw	r2,0(sp)
 200c724:	8009883a 	mov	r4,r16
 200c728:	d9400c04 	addi	r5,sp,48
 200c72c:	980d883a 	mov	r6,r19
 200c730:	d9c00a04 	addi	r7,sp,40
 200c734:	200e0380 	call	200e038 <__gethex>
 200c738:	148001cc 	andi	r18,r2,7
 200c73c:	903dde26 	beq	r18,zero,200beb8 <__alt_mem_epcs_flash_controller+0xfe002eb8>
 200c740:	00c00184 	movi	r3,6
 200c744:	90c0f226 	beq	r18,r3,200cb10 <_strtod_r+0x12ec>
 200c748:	d9800b17 	ldw	r6,44(sp)
 200c74c:	30000826 	beq	r6,zero,200c770 <_strtod_r+0xf4c>
 200c750:	99400017 	ldw	r5,0(r19)
 200c754:	d9000204 	addi	r4,sp,8
 200c758:	d8801815 	stw	r2,96(sp)
 200c75c:	200ac1c0 	call	200ac1c <__copybits>
 200c760:	d9400b17 	ldw	r5,44(sp)
 200c764:	8009883a 	mov	r4,r16
 200c768:	2009d740 	call	2009d74 <_Bfree>
 200c76c:	d8801817 	ldw	r2,96(sp)
 200c770:	00c00184 	movi	r3,6
 200c774:	d9000a17 	ldw	r4,40(sp)
 200c778:	1cbdca36 	bltu	r3,r18,200bea4 <__alt_mem_epcs_flash_controller+0xfe002ea4>
 200c77c:	94a5883a 	add	r18,r18,r18
 200c780:	94a5883a 	add	r18,r18,r18
 200c784:	00c08074 	movhi	r3,513
 200c788:	18f1e604 	addi	r3,r3,-14440
 200c78c:	90c7883a 	add	r3,r18,r3
 200c790:	18c00017 	ldw	r3,0(r3)
 200c794:	1800683a 	jmp	r3
 200c798:	0200c80c 	andi	r8,zero,800
 200c79c:	0200c7c8 	cmpgei	r8,zero,799
 200c7a0:	0200c7b4 	movhi	r8,798
 200c7a4:	0200be98 	cmpnei	r8,zero,762
 200c7a8:	0200c7f4 	movhi	r8,799
 200c7ac:	0200c7c8 	cmpgei	r8,zero,799
 200c7b0:	0200c80c 	andi	r8,zero,800
 200c7b4:	d8c00217 	ldw	r3,8(sp)
 200c7b8:	d8c00615 	stw	r3,24(sp)
 200c7bc:	d8c00317 	ldw	r3,12(sp)
 200c7c0:	d8c00715 	stw	r3,28(sp)
 200c7c4:	003db706 	br	200bea4 <__alt_mem_epcs_flash_controller+0xfe002ea4>
 200c7c8:	21010cc4 	addi	r4,r4,1075
 200c7cc:	d9400317 	ldw	r5,12(sp)
 200c7d0:	2008953a 	slli	r4,r4,20
 200c7d4:	00fffc34 	movhi	r3,65520
 200c7d8:	18ffffc4 	addi	r3,r3,-1
 200c7dc:	28c6703a 	and	r3,r5,r3
 200c7e0:	20c6b03a 	or	r3,r4,r3
 200c7e4:	d9000217 	ldw	r4,8(sp)
 200c7e8:	d8c00715 	stw	r3,28(sp)
 200c7ec:	d9000615 	stw	r4,24(sp)
 200c7f0:	003dac06 	br	200bea4 <__alt_mem_epcs_flash_controller+0xfe002ea4>
 200c7f4:	00e00034 	movhi	r3,32768
 200c7f8:	18ffffc4 	addi	r3,r3,-1
 200c7fc:	d8c00715 	stw	r3,28(sp)
 200c800:	00ffffc4 	movi	r3,-1
 200c804:	d8c00615 	stw	r3,24(sp)
 200c808:	003da606 	br	200bea4 <__alt_mem_epcs_flash_controller+0xfe002ea4>
 200c80c:	d8000715 	stw	zero,28(sp)
 200c810:	d8000615 	stw	zero,24(sp)
 200c814:	003da306 	br	200bea4 <__alt_mem_epcs_flash_controller+0xfe002ea4>
 200c818:	d8c00f17 	ldw	r3,60(sp)
 200c81c:	1800441e 	bne	r3,zero,200c930 <_strtod_r+0x110c>
 200c820:	d8800617 	ldw	r2,24(sp)
 200c824:	1000421e 	bne	r2,zero,200c930 <_strtod_r+0x110c>
 200c828:	d8800717 	ldw	r2,28(sp)
 200c82c:	00c00434 	movhi	r3,16
 200c830:	18ffffc4 	addi	r3,r3,-1
 200c834:	10c6703a 	and	r3,r2,r3
 200c838:	18003d1e 	bne	r3,zero,200c930 <_strtod_r+0x110c>
 200c83c:	109ffc2c 	andhi	r2,r2,32752
 200c840:	00c1ac34 	movhi	r3,1712
 200c844:	18803a2e 	bgeu	r3,r2,200c930 <_strtod_r+0x110c>
 200c848:	98800517 	ldw	r2,20(r19)
 200c84c:	1000031e 	bne	r2,zero,200c85c <_strtod_r+0x1038>
 200c850:	98800417 	ldw	r2,16(r19)
 200c854:	00c00044 	movi	r3,1
 200c858:	1880350e 	bge	r3,r2,200c930 <_strtod_r+0x110c>
 200c85c:	980b883a 	mov	r5,r19
 200c860:	8009883a 	mov	r4,r16
 200c864:	01800044 	movi	r6,1
 200c868:	200a4bc0 	call	200a4bc <__lshift>
 200c86c:	1009883a 	mov	r4,r2
 200c870:	880b883a 	mov	r5,r17
 200c874:	1027883a 	mov	r19,r2
 200c878:	200a6180 	call	200a618 <__mcmp>
 200c87c:	00802c0e 	bge	zero,r2,200c930 <_strtod_r+0x110c>
 200c880:	d8800717 	ldw	r2,28(sp)
 200c884:	109ffc2c 	andhi	r2,r2,32752
 200c888:	a000ed26 	beq	r20,zero,200cc40 <_strtod_r+0x141c>
 200c88c:	00c1ac34 	movhi	r3,1712
 200c890:	1880eb36 	bltu	r3,r2,200cc40 <_strtod_r+0x141c>
 200c894:	00c0dc34 	movhi	r3,880
 200c898:	18bf902e 	bgeu	r3,r2,200c6dc <__alt_mem_epcs_flash_controller+0xfe0036dc>
 200c89c:	d9000617 	ldw	r4,24(sp)
 200c8a0:	d9400717 	ldw	r5,28(sp)
 200c8a4:	008e5434 	movhi	r2,14672
 200c8a8:	000d883a 	mov	r6,zero
 200c8ac:	100f883a 	mov	r7,r2
 200c8b0:	d8800515 	stw	r2,20(sp)
 200c8b4:	d8000415 	stw	zero,16(sp)
 200c8b8:	20017f00 	call	20017f0 <__muldf3>
 200c8bc:	d8800615 	stw	r2,24(sp)
 200c8c0:	d8c00715 	stw	r3,28(sp)
 200c8c4:	183ee71e 	bne	r3,zero,200c464 <__alt_mem_epcs_flash_controller+0xfe003464>
 200c8c8:	103ee61e 	bne	r2,zero,200c464 <__alt_mem_epcs_flash_controller+0xfe003464>
 200c8cc:	00800884 	movi	r2,34
 200c8d0:	80800015 	stw	r2,0(r16)
 200c8d4:	003ee306 	br	200c464 <__alt_mem_epcs_flash_controller+0xfe003464>
 200c8d8:	d9000f17 	ldw	r4,60(sp)
 200c8dc:	203f6426 	beq	r4,zero,200c670 <__alt_mem_epcs_flash_controller+0xfe003670>
 200c8e0:	d8c00717 	ldw	r3,28(sp)
 200c8e4:	00800434 	movhi	r2,16
 200c8e8:	10bfffc4 	addi	r2,r2,-1
 200c8ec:	1888703a 	and	r4,r3,r2
 200c8f0:	2080bd26 	beq	r4,r2,200cbe8 <_strtod_r+0x13c4>
 200c8f4:	d8800617 	ldw	r2,24(sp)
 200c8f8:	1080004c 	andi	r2,r2,1
 200c8fc:	10000c26 	beq	r2,zero,200c930 <_strtod_r+0x110c>
 200c900:	ddc00617 	ldw	r23,24(sp)
 200c904:	dd400717 	ldw	r21,28(sp)
 200c908:	b809883a 	mov	r4,r23
 200c90c:	a80b883a 	mov	r5,r21
 200c910:	200a8180 	call	200a818 <__ulp>
 200c914:	b809883a 	mov	r4,r23
 200c918:	a80b883a 	mov	r5,r21
 200c91c:	100d883a 	mov	r6,r2
 200c920:	180f883a 	mov	r7,r3
 200c924:	200fbf40 	call	200fbf4 <__adddf3>
 200c928:	d8800615 	stw	r2,24(sp)
 200c92c:	d8c00715 	stw	r3,28(sp)
 200c930:	a03fda1e 	bne	r20,zero,200c89c <__alt_mem_epcs_flash_controller+0xfe00389c>
 200c934:	003ecb06 	br	200c464 <__alt_mem_epcs_flash_controller+0xfe003464>
 200c938:	d8c00417 	ldw	r3,16(sp)
 200c93c:	00bfffc4 	movi	r2,-1
 200c940:	18be781e 	bne	r3,r2,200c324 <__alt_mem_epcs_flash_controller+0xfe003324>
 200c944:	00800884 	movi	r2,34
 200c948:	80800015 	stw	r2,0(r16)
 200c94c:	009ffc34 	movhi	r2,32752
 200c950:	d8800715 	stw	r2,28(sp)
 200c954:	d8000615 	stw	zero,24(sp)
 200c958:	003ec206 	br	200c464 <__alt_mem_epcs_flash_controller+0xfe003464>
 200c95c:	00800884 	movi	r2,34
 200c960:	80800015 	stw	r2,0(r16)
 200c964:	00dffc34 	movhi	r3,32752
 200c968:	0005883a 	mov	r2,zero
 200c96c:	003c4e06 	br	200baa8 <__alt_mem_epcs_flash_controller+0xfe002aa8>
 200c970:	883d6826 	beq	r17,zero,200bf14 <__alt_mem_epcs_flash_controller+0xfe002f14>
 200c974:	0463c83a 	sub	r17,zero,r17
 200c978:	888003cc 	andi	r2,r17,15
 200c97c:	10000b26 	beq	r2,zero,200c9ac <_strtod_r+0x1188>
 200c980:	100490fa 	slli	r2,r2,3
 200c984:	00c08234 	movhi	r3,520
 200c988:	18dc3d04 	addi	r3,r3,28916
 200c98c:	d9000617 	ldw	r4,24(sp)
 200c990:	1885883a 	add	r2,r3,r2
 200c994:	d9400717 	ldw	r5,28(sp)
 200c998:	11800017 	ldw	r6,0(r2)
 200c99c:	11c00117 	ldw	r7,4(r2)
 200c9a0:	2001ad40 	call	2001ad4 <__divdf3>
 200c9a4:	d8800615 	stw	r2,24(sp)
 200c9a8:	d8c00715 	stw	r3,28(sp)
 200c9ac:	8823d13a 	srai	r17,r17,4
 200c9b0:	883d5826 	beq	r17,zero,200bf14 <__alt_mem_epcs_flash_controller+0xfe002f14>
 200c9b4:	008007c4 	movi	r2,31
 200c9b8:	14402816 	blt	r2,r17,200ca5c <_strtod_r+0x1238>
 200c9bc:	8880040c 	andi	r2,r17,16
 200c9c0:	1000cf1e 	bne	r2,zero,200cd00 <_strtod_r+0x14dc>
 200c9c4:	0029883a 	mov	r20,zero
 200c9c8:	0440100e 	bge	zero,r17,200ca0c <_strtod_r+0x11e8>
 200c9cc:	d8800617 	ldw	r2,24(sp)
 200c9d0:	d8c00717 	ldw	r3,28(sp)
 200c9d4:	04808234 	movhi	r18,520
 200c9d8:	949c7604 	addi	r18,r18,29144
 200c9dc:	8980004c 	andi	r6,r17,1
 200c9e0:	30000526 	beq	r6,zero,200c9f8 <_strtod_r+0x11d4>
 200c9e4:	91800017 	ldw	r6,0(r18)
 200c9e8:	91c00117 	ldw	r7,4(r18)
 200c9ec:	1009883a 	mov	r4,r2
 200c9f0:	180b883a 	mov	r5,r3
 200c9f4:	20017f00 	call	20017f0 <__muldf3>
 200c9f8:	8823d07a 	srai	r17,r17,1
 200c9fc:	94800204 	addi	r18,r18,8
 200ca00:	883ff61e 	bne	r17,zero,200c9dc <__alt_mem_epcs_flash_controller+0xfe0039dc>
 200ca04:	d8800615 	stw	r2,24(sp)
 200ca08:	d8c00715 	stw	r3,28(sp)
 200ca0c:	a0000d26 	beq	r20,zero,200ca44 <_strtod_r+0x1220>
 200ca10:	d8c00717 	ldw	r3,28(sp)
 200ca14:	01001ac4 	movi	r4,107
 200ca18:	189ffc2c 	andhi	r2,r3,32752
 200ca1c:	1004d53a 	srli	r2,r2,20
 200ca20:	2085c83a 	sub	r2,r4,r2
 200ca24:	0080070e 	bge	zero,r2,200ca44 <_strtod_r+0x1220>
 200ca28:	010007c4 	movi	r4,31
 200ca2c:	2080c30e 	bge	r4,r2,200cd3c <_strtod_r+0x1518>
 200ca30:	d8000615 	stw	zero,24(sp)
 200ca34:	01000d04 	movi	r4,52
 200ca38:	2080c60e 	bge	r4,r2,200cd54 <_strtod_r+0x1530>
 200ca3c:	0080dc34 	movhi	r2,880
 200ca40:	d8800715 	stw	r2,28(sp)
 200ca44:	d9000617 	ldw	r4,24(sp)
 200ca48:	d9400717 	ldw	r5,28(sp)
 200ca4c:	000d883a 	mov	r6,zero
 200ca50:	000f883a 	mov	r7,zero
 200ca54:	200fca80 	call	200fca8 <__eqdf2>
 200ca58:	103d2f1e 	bne	r2,zero,200bf18 <__alt_mem_epcs_flash_controller+0xfe002f18>
 200ca5c:	00800884 	movi	r2,34
 200ca60:	80800015 	stw	r2,0(r16)
 200ca64:	0007883a 	mov	r3,zero
 200ca68:	0005883a 	mov	r2,zero
 200ca6c:	003c0e06 	br	200baa8 <__alt_mem_epcs_flash_controller+0xfe002aa8>
 200ca70:	0007883a 	mov	r3,zero
 200ca74:	00aff834 	movhi	r2,49120
 200ca78:	002b883a 	mov	r21,zero
 200ca7c:	05cff834 	movhi	r23,16352
 200ca80:	003e4a06 	br	200c3ac <__alt_mem_epcs_flash_controller+0xfe0033ac>
 200ca84:	011387c4 	movi	r4,19999
 200ca88:	003cca06 	br	200bdb4 <__alt_mem_epcs_flash_controller+0xfe002db4>
 200ca8c:	b00b883a 	mov	r5,r22
 200ca90:	d8000f15 	stw	zero,60(sp)
 200ca94:	0039883a 	mov	fp,zero
 200ca98:	002b883a 	mov	r21,zero
 200ca9c:	003c2d06 	br	200bb54 <__alt_mem_epcs_flash_controller+0xfe002b54>
 200caa0:	d8000f15 	stw	zero,60(sp)
 200caa4:	0039883a 	mov	fp,zero
 200caa8:	002b883a 	mov	r21,zero
 200caac:	003b9d06 	br	200b924 <__alt_mem_epcs_flash_controller+0xfe002924>
 200cab0:	d9401017 	ldw	r5,64(sp)
 200cab4:	00c00944 	movi	r3,37
 200cab8:	1d47c83a 	sub	r3,r3,r21
 200cabc:	197d0116 	blt	r3,r5,200bec4 <__alt_mem_epcs_flash_controller+0xfe002ec4>
 200cac0:	1563c83a 	sub	r17,r2,r21
 200cac4:	880490fa 	slli	r2,r17,3
 200cac8:	04008234 	movhi	r16,520
 200cacc:	841c3d04 	addi	r16,r16,28916
 200cad0:	d9000617 	ldw	r4,24(sp)
 200cad4:	8085883a 	add	r2,r16,r2
 200cad8:	d9400717 	ldw	r5,28(sp)
 200cadc:	11800017 	ldw	r6,0(r2)
 200cae0:	11c00117 	ldw	r7,4(r2)
 200cae4:	20017f00 	call	20017f0 <__muldf3>
 200cae8:	d9001017 	ldw	r4,64(sp)
 200caec:	180b883a 	mov	r5,r3
 200caf0:	244dc83a 	sub	r6,r4,r17
 200caf4:	300c90fa 	slli	r6,r6,3
 200caf8:	1009883a 	mov	r4,r2
 200cafc:	81a1883a 	add	r16,r16,r6
 200cb00:	81800017 	ldw	r6,0(r16)
 200cb04:	81c00117 	ldw	r7,4(r16)
 200cb08:	20017f00 	call	20017f0 <__muldf3>
 200cb0c:	003be606 	br	200baa8 <__alt_mem_epcs_flash_controller+0xfe002aa8>
 200cb10:	d9400e17 	ldw	r5,56(sp)
 200cb14:	d8001215 	stw	zero,72(sp)
 200cb18:	d9400c15 	stw	r5,48(sp)
 200cb1c:	003ce606 	br	200beb8 <__alt_mem_epcs_flash_controller+0xfe002eb8>
 200cb20:	d9401017 	ldw	r5,64(sp)
 200cb24:	00bffa84 	movi	r2,-22
 200cb28:	28bce616 	blt	r5,r2,200bec4 <__alt_mem_epcs_flash_controller+0xfe002ec4>
 200cb2c:	280490fa 	slli	r2,r5,3
 200cb30:	00c08234 	movhi	r3,520
 200cb34:	18dc3d04 	addi	r3,r3,28916
 200cb38:	d9000617 	ldw	r4,24(sp)
 200cb3c:	1885c83a 	sub	r2,r3,r2
 200cb40:	d9400717 	ldw	r5,28(sp)
 200cb44:	11800017 	ldw	r6,0(r2)
 200cb48:	11c00117 	ldw	r7,4(r2)
 200cb4c:	2001ad40 	call	2001ad4 <__divdf3>
 200cb50:	003bd506 	br	200baa8 <__alt_mem_epcs_flash_controller+0xfe002aa8>
 200cb54:	00801a44 	movi	r2,105
 200cb58:	38bb8726 	beq	r7,r2,200b978 <__alt_mem_epcs_flash_controller+0xfe002978>
 200cb5c:	00801b84 	movi	r2,110
 200cb60:	38be881e 	bne	r7,r2,200c584 <__alt_mem_epcs_flash_controller+0xfe003584>
 200cb64:	d8c00c17 	ldw	r3,48(sp)
 200cb68:	01008234 	movhi	r4,520
 200cb6c:	211c7504 	addi	r4,r4,29140
 200cb70:	01801004 	movi	r6,64
 200cb74:	01c01684 	movi	r7,90
 200cb78:	21400007 	ldb	r5,0(r4)
 200cb7c:	21000044 	addi	r4,r4,1
 200cb80:	28004e26 	beq	r5,zero,200ccbc <_strtod_r+0x1498>
 200cb84:	18c00044 	addi	r3,r3,1
 200cb88:	18800007 	ldb	r2,0(r3)
 200cb8c:	3080020e 	bge	r6,r2,200cb98 <_strtod_r+0x1374>
 200cb90:	38800116 	blt	r7,r2,200cb98 <_strtod_r+0x1374>
 200cb94:	10800804 	addi	r2,r2,32
 200cb98:	117ff726 	beq	r2,r5,200cb78 <__alt_mem_epcs_flash_controller+0xfe003b78>
 200cb9c:	003e7906 	br	200c584 <__alt_mem_epcs_flash_controller+0xfe003584>
 200cba0:	d8c00617 	ldw	r3,24(sp)
 200cba4:	003eb906 	br	200c68c <__alt_mem_epcs_flash_controller+0xfe00368c>
 200cba8:	00800404 	movi	r2,16
 200cbac:	15c02216 	blt	r2,r23,200cc38 <_strtod_r+0x1414>
 200cbb0:	d9000f17 	ldw	r4,60(sp)
 200cbb4:	01400284 	movi	r5,10
 200cbb8:	2001f500 	call	2001f50 <__mulsi3>
 200cbbc:	15ad883a 	add	r22,r2,r22
 200cbc0:	dd800f15 	stw	r22,60(sp)
 200cbc4:	000d883a 	mov	r6,zero
 200cbc8:	003c2606 	br	200bc64 <__alt_mem_epcs_flash_controller+0xfe002c64>
 200cbcc:	000d883a 	mov	r6,zero
 200cbd0:	003bf106 	br	200bb98 <__alt_mem_epcs_flash_controller+0xfe002b98>
 200cbd4:	0080d434 	movhi	r2,848
 200cbd8:	1887883a 	add	r3,r3,r2
 200cbdc:	d8c00715 	stw	r3,28(sp)
 200cbe0:	0029883a 	mov	r20,zero
 200cbe4:	003ccc06 	br	200bf18 <__alt_mem_epcs_flash_controller+0xfe002f18>
 200cbe8:	d8800617 	ldw	r2,24(sp)
 200cbec:	a0001026 	beq	r20,zero,200cc30 <_strtod_r+0x140c>
 200cbf0:	191ffc2c 	andhi	r4,r3,32752
 200cbf4:	0141a834 	movhi	r5,1696
 200cbf8:	29000d36 	bltu	r5,r4,200cc30 <_strtod_r+0x140c>
 200cbfc:	2008d53a 	srli	r4,r4,20
 200cc00:	01401ac4 	movi	r5,107
 200cc04:	2909c83a 	sub	r4,r5,r4
 200cc08:	017fffc4 	movi	r5,-1
 200cc0c:	2908983a 	sll	r4,r5,r4
 200cc10:	113f391e 	bne	r2,r4,200c8f8 <__alt_mem_epcs_flash_controller+0xfe0038f8>
 200cc14:	18dffc2c 	andhi	r3,r3,32752
 200cc18:	00800434 	movhi	r2,16
 200cc1c:	1885883a 	add	r2,r3,r2
 200cc20:	d8800715 	stw	r2,28(sp)
 200cc24:	d8000615 	stw	zero,24(sp)
 200cc28:	a03f1c1e 	bne	r20,zero,200c89c <__alt_mem_epcs_flash_controller+0xfe00389c>
 200cc2c:	003e0d06 	br	200c464 <__alt_mem_epcs_flash_controller+0xfe003464>
 200cc30:	013fffc4 	movi	r4,-1
 200cc34:	003ff606 	br	200cc10 <__alt_mem_epcs_flash_controller+0xfe003c10>
 200cc38:	000d883a 	mov	r6,zero
 200cc3c:	003c0906 	br	200bc64 <__alt_mem_epcs_flash_controller+0xfe002c64>
 200cc40:	00fffc34 	movhi	r3,65520
 200cc44:	10c5883a 	add	r2,r2,r3
 200cc48:	00c00434 	movhi	r3,16
 200cc4c:	18ffffc4 	addi	r3,r3,-1
 200cc50:	10c4b03a 	or	r2,r2,r3
 200cc54:	d8800715 	stw	r2,28(sp)
 200cc58:	00bfffc4 	movi	r2,-1
 200cc5c:	d8800615 	stw	r2,24(sp)
 200cc60:	a03f0e1e 	bne	r20,zero,200c89c <__alt_mem_epcs_flash_controller+0xfe00389c>
 200cc64:	003dff06 	br	200c464 <__alt_mem_epcs_flash_controller+0xfe003464>
 200cc68:	1011883a 	mov	r8,r2
 200cc6c:	d8800c15 	stw	r2,48(sp)
 200cc70:	01008234 	movhi	r4,520
 200cc74:	211c7304 	addi	r4,r4,29132
 200cc78:	01801004 	movi	r6,64
 200cc7c:	01c01684 	movi	r7,90
 200cc80:	21400007 	ldb	r5,0(r4)
 200cc84:	10800044 	addi	r2,r2,1
 200cc88:	21000044 	addi	r4,r4,1
 200cc8c:	28001a26 	beq	r5,zero,200ccf8 <_strtod_r+0x14d4>
 200cc90:	10c00007 	ldb	r3,0(r2)
 200cc94:	30c0020e 	bge	r6,r3,200cca0 <_strtod_r+0x147c>
 200cc98:	38c00116 	blt	r7,r3,200cca0 <_strtod_r+0x147c>
 200cc9c:	18c00804 	addi	r3,r3,32
 200cca0:	197ff726 	beq	r3,r5,200cc80 <__alt_mem_epcs_flash_controller+0xfe003c80>
 200cca4:	40800044 	addi	r2,r8,1
 200cca8:	d8800c15 	stw	r2,48(sp)
 200ccac:	009ffc34 	movhi	r2,32752
 200ccb0:	d8800715 	stw	r2,28(sp)
 200ccb4:	d8000615 	stw	zero,24(sp)
 200ccb8:	003c7f06 	br	200beb8 <__alt_mem_epcs_flash_controller+0xfe002eb8>
 200ccbc:	18800044 	addi	r2,r3,1
 200ccc0:	d8800c15 	stw	r2,48(sp)
 200ccc4:	18c00047 	ldb	r3,1(r3)
 200ccc8:	00800a04 	movi	r2,40
 200cccc:	18800e26 	beq	r3,r2,200cd08 <_strtod_r+0x14e4>
 200ccd0:	00bffe34 	movhi	r2,65528
 200ccd4:	d8800715 	stw	r2,28(sp)
 200ccd8:	d8000615 	stw	zero,24(sp)
 200ccdc:	003c7606 	br	200beb8 <__alt_mem_epcs_flash_controller+0xfe002eb8>
 200cce0:	0023883a 	mov	r17,zero
 200cce4:	05808234 	movhi	r22,520
 200cce8:	b59c3304 	addi	r22,r22,28876
 200ccec:	003e4506 	br	200c604 <__alt_mem_epcs_flash_controller+0xfe003604>
 200ccf0:	b805883a 	mov	r2,r23
 200ccf4:	003bd306 	br	200bc44 <__alt_mem_epcs_flash_controller+0xfe002c44>
 200ccf8:	d8800c15 	stw	r2,48(sp)
 200ccfc:	003feb06 	br	200ccac <__alt_mem_epcs_flash_controller+0xfe003cac>
 200cd00:	05001a84 	movi	r20,106
 200cd04:	003f3006 	br	200c9c8 <__alt_mem_epcs_flash_controller+0xfe0039c8>
 200cd08:	d9000c04 	addi	r4,sp,48
 200cd0c:	01408234 	movhi	r5,520
 200cd10:	295efd04 	addi	r5,r5,31732
 200cd14:	d9800204 	addi	r6,sp,8
 200cd18:	200e7b00 	call	200e7b0 <__hexnan>
 200cd1c:	00c00144 	movi	r3,5
 200cd20:	10ffeb1e 	bne	r2,r3,200ccd0 <__alt_mem_epcs_flash_controller+0xfe003cd0>
 200cd24:	d8800317 	ldw	r2,12(sp)
 200cd28:	109ffc34 	orhi	r2,r2,32752
 200cd2c:	d8800715 	stw	r2,28(sp)
 200cd30:	d8800217 	ldw	r2,8(sp)
 200cd34:	d8800615 	stw	r2,24(sp)
 200cd38:	003c5f06 	br	200beb8 <__alt_mem_epcs_flash_controller+0xfe002eb8>
 200cd3c:	00ffffc4 	movi	r3,-1
 200cd40:	1884983a 	sll	r2,r3,r2
 200cd44:	d8c00617 	ldw	r3,24(sp)
 200cd48:	1884703a 	and	r2,r3,r2
 200cd4c:	d8800615 	stw	r2,24(sp)
 200cd50:	003f3c06 	br	200ca44 <__alt_mem_epcs_flash_controller+0xfe003a44>
 200cd54:	10bff804 	addi	r2,r2,-32
 200cd58:	013fffc4 	movi	r4,-1
 200cd5c:	2084983a 	sll	r2,r4,r2
 200cd60:	10c6703a 	and	r3,r2,r3
 200cd64:	d8c00715 	stw	r3,28(sp)
 200cd68:	003f3606 	br	200ca44 <__alt_mem_epcs_flash_controller+0xfe003a44>

0200cd6c <strtod>:
 200cd6c:	00c08274 	movhi	r3,521
 200cd70:	18e3b704 	addi	r3,r3,-28964
 200cd74:	2005883a 	mov	r2,r4
 200cd78:	19000017 	ldw	r4,0(r3)
 200cd7c:	280d883a 	mov	r6,r5
 200cd80:	100b883a 	mov	r5,r2
 200cd84:	200b8241 	jmpi	200b824 <_strtod_r>

0200cd88 <strtof>:
 200cd88:	defffb04 	addi	sp,sp,-20
 200cd8c:	dcc00315 	stw	r19,12(sp)
 200cd90:	04c08274 	movhi	r19,521
 200cd94:	9ce3b704 	addi	r19,r19,-28964
 200cd98:	2005883a 	mov	r2,r4
 200cd9c:	99000017 	ldw	r4,0(r19)
 200cda0:	280d883a 	mov	r6,r5
 200cda4:	100b883a 	mov	r5,r2
 200cda8:	dfc00415 	stw	ra,16(sp)
 200cdac:	dc800215 	stw	r18,8(sp)
 200cdb0:	dc400115 	stw	r17,4(sp)
 200cdb4:	dc000015 	stw	r16,0(sp)
 200cdb8:	200b8240 	call	200b824 <_strtod_r>
 200cdbc:	1009883a 	mov	r4,r2
 200cdc0:	180b883a 	mov	r5,r3
 200cdc4:	1025883a 	mov	r18,r2
 200cdc8:	1823883a 	mov	r17,r3
 200cdcc:	200fee00 	call	200fee0 <__truncdfsf2>
 200cdd0:	1009883a 	mov	r4,r2
 200cdd4:	000b883a 	mov	r5,zero
 200cdd8:	1021883a 	mov	r16,r2
 200cddc:	200f79c0 	call	200f79c <__nesf2>
 200cde0:	1000111e 	bne	r2,zero,200ce28 <strtof+0xa0>
 200cde4:	9009883a 	mov	r4,r18
 200cde8:	880b883a 	mov	r5,r17
 200cdec:	000d883a 	mov	r6,zero
 200cdf0:	000f883a 	mov	r7,zero
 200cdf4:	200fd040 	call	200fd04 <__nedf2>
 200cdf8:	10000b26 	beq	r2,zero,200ce28 <strtof+0xa0>
 200cdfc:	98800017 	ldw	r2,0(r19)
 200ce00:	00c00884 	movi	r3,34
 200ce04:	10c00015 	stw	r3,0(r2)
 200ce08:	8005883a 	mov	r2,r16
 200ce0c:	dfc00417 	ldw	ra,16(sp)
 200ce10:	dcc00317 	ldw	r19,12(sp)
 200ce14:	dc800217 	ldw	r18,8(sp)
 200ce18:	dc400117 	ldw	r17,4(sp)
 200ce1c:	dc000017 	ldw	r16,0(sp)
 200ce20:	dec00504 	addi	sp,sp,20
 200ce24:	f800283a 	ret
 200ce28:	8009883a 	mov	r4,r16
 200ce2c:	015fe034 	movhi	r5,32640
 200ce30:	297fffc4 	addi	r5,r5,-1
 200ce34:	200f7f00 	call	200f7f0 <__gtsf2>
 200ce38:	0080070e 	bge	zero,r2,200ce58 <strtof+0xd0>
 200ce3c:	9009883a 	mov	r4,r18
 200ce40:	880b883a 	mov	r5,r17
 200ce44:	01bfffc4 	movi	r6,-1
 200ce48:	01dffc34 	movhi	r7,32752
 200ce4c:	39ffffc4 	addi	r7,r7,-1
 200ce50:	200fd600 	call	200fd60 <__gtdf2>
 200ce54:	00bfe90e 	bge	zero,r2,200cdfc <__alt_mem_epcs_flash_controller+0xfe003dfc>
 200ce58:	8009883a 	mov	r4,r16
 200ce5c:	017fe034 	movhi	r5,65408
 200ce60:	297fffc4 	addi	r5,r5,-1
 200ce64:	200f84c0 	call	200f84c <__ltsf2>
 200ce68:	103fe70e 	bge	r2,zero,200ce08 <__alt_mem_epcs_flash_controller+0xfe003e08>
 200ce6c:	9009883a 	mov	r4,r18
 200ce70:	880b883a 	mov	r5,r17
 200ce74:	01bfffc4 	movi	r6,-1
 200ce78:	01fffc34 	movhi	r7,65520
 200ce7c:	39ffffc4 	addi	r7,r7,-1
 200ce80:	200fe280 	call	200fe28 <__ltdf2>
 200ce84:	103fdd0e 	bge	r2,zero,200cdfc <__alt_mem_epcs_flash_controller+0xfe003dfc>
 200ce88:	8005883a 	mov	r2,r16
 200ce8c:	dfc00417 	ldw	ra,16(sp)
 200ce90:	dcc00317 	ldw	r19,12(sp)
 200ce94:	dc800217 	ldw	r18,8(sp)
 200ce98:	dc400117 	ldw	r17,4(sp)
 200ce9c:	dc000017 	ldw	r16,0(sp)
 200cea0:	dec00504 	addi	sp,sp,20
 200cea4:	f800283a 	ret

0200cea8 <_strtol_r>:
 200cea8:	defff304 	addi	sp,sp,-52
 200ceac:	00808274 	movhi	r2,521
 200ceb0:	10a3ba04 	addi	r2,r2,-28952
 200ceb4:	df000b15 	stw	fp,44(sp)
 200ceb8:	17000017 	ldw	fp,0(r2)
 200cebc:	ddc00a15 	stw	r23,40(sp)
 200cec0:	dd000715 	stw	r20,28(sp)
 200cec4:	dcc00615 	stw	r19,24(sp)
 200cec8:	dc000315 	stw	r16,12(sp)
 200cecc:	dfc00c15 	stw	ra,48(sp)
 200ced0:	dd800915 	stw	r22,36(sp)
 200ced4:	dd400815 	stw	r21,32(sp)
 200ced8:	dc800515 	stw	r18,20(sp)
 200cedc:	dc400415 	stw	r17,16(sp)
 200cee0:	2827883a 	mov	r19,r5
 200cee4:	d9000215 	stw	r4,8(sp)
 200cee8:	3029883a 	mov	r20,r6
 200ceec:	382f883a 	mov	r23,r7
 200cef0:	2821883a 	mov	r16,r5
 200cef4:	84400007 	ldb	r17,0(r16)
 200cef8:	84000044 	addi	r16,r16,1
 200cefc:	e445883a 	add	r2,fp,r17
 200cf00:	10800003 	ldbu	r2,0(r2)
 200cf04:	1080020c 	andi	r2,r2,8
 200cf08:	10803fcc 	andi	r2,r2,255
 200cf0c:	1080201c 	xori	r2,r2,128
 200cf10:	10bfe004 	addi	r2,r2,-128
 200cf14:	103ff71e 	bne	r2,zero,200cef4 <__alt_mem_epcs_flash_controller+0xfe003ef4>
 200cf18:	00800b44 	movi	r2,45
 200cf1c:	88806a26 	beq	r17,r2,200d0c8 <_strtol_r+0x220>
 200cf20:	00800ac4 	movi	r2,43
 200cf24:	88806d26 	beq	r17,r2,200d0dc <_strtol_r+0x234>
 200cf28:	d8000015 	stw	zero,0(sp)
 200cf2c:	b800481e 	bne	r23,zero,200d050 <_strtol_r+0x1a8>
 200cf30:	00800c04 	movi	r2,48
 200cf34:	88804a26 	beq	r17,r2,200d060 <_strtol_r+0x1b8>
 200cf38:	05c00284 	movi	r23,10
 200cf3c:	b825883a 	mov	r18,r23
 200cf40:	d8c00017 	ldw	r3,0(sp)
 200cf44:	00a00034 	movhi	r2,32768
 200cf48:	900b883a 	mov	r5,r18
 200cf4c:	182b003a 	cmpeq	r21,r3,zero
 200cf50:	156bc83a 	sub	r21,r2,r21
 200cf54:	a809883a 	mov	r4,r21
 200cf58:	2001f480 	call	2001f48 <__umodsi3>
 200cf5c:	a809883a 	mov	r4,r21
 200cf60:	900b883a 	mov	r5,r18
 200cf64:	d8800115 	stw	r2,4(sp)
 200cf68:	2001f400 	call	2001f40 <__udivsi3>
 200cf6c:	e447883a 	add	r3,fp,r17
 200cf70:	18c00003 	ldbu	r3,0(r3)
 200cf74:	102b883a 	mov	r21,r2
 200cf78:	000d883a 	mov	r6,zero
 200cf7c:	1940010c 	andi	r5,r3,4
 200cf80:	29403fcc 	andi	r5,r5,255
 200cf84:	2940201c 	xori	r5,r5,128
 200cf88:	297fe004 	addi	r5,r5,-128
 200cf8c:	0009883a 	mov	r4,zero
 200cf90:	05bfffc4 	movi	r22,-1
 200cf94:	28001226 	beq	r5,zero,200cfe0 <_strtol_r+0x138>
 200cf98:	8c7ff404 	addi	r17,r17,-48
 200cf9c:	8dc0170e 	bge	r17,r23,200cffc <_strtol_r+0x154>
 200cfa0:	35800626 	beq	r6,r22,200cfbc <_strtol_r+0x114>
 200cfa4:	a9003a36 	bltu	r21,r4,200d090 <_strtol_r+0x1e8>
 200cfa8:	25403726 	beq	r4,r21,200d088 <_strtol_r+0x1e0>
 200cfac:	900b883a 	mov	r5,r18
 200cfb0:	2001f500 	call	2001f50 <__mulsi3>
 200cfb4:	8889883a 	add	r4,r17,r2
 200cfb8:	01800044 	movi	r6,1
 200cfbc:	84400007 	ldb	r17,0(r16)
 200cfc0:	84000044 	addi	r16,r16,1
 200cfc4:	e447883a 	add	r3,fp,r17
 200cfc8:	18c00003 	ldbu	r3,0(r3)
 200cfcc:	1940010c 	andi	r5,r3,4
 200cfd0:	29403fcc 	andi	r5,r5,255
 200cfd4:	2940201c 	xori	r5,r5,128
 200cfd8:	297fe004 	addi	r5,r5,-128
 200cfdc:	283fee1e 	bne	r5,zero,200cf98 <__alt_mem_epcs_flash_controller+0xfe003f98>
 200cfe0:	188000cc 	andi	r2,r3,3
 200cfe4:	10000526 	beq	r2,zero,200cffc <_strtol_r+0x154>
 200cfe8:	18c0004c 	andi	r3,r3,1
 200cfec:	18002a26 	beq	r3,zero,200d098 <_strtol_r+0x1f0>
 200cff0:	00800dc4 	movi	r2,55
 200cff4:	88a3c83a 	sub	r17,r17,r2
 200cff8:	8dffe916 	blt	r17,r23,200cfa0 <__alt_mem_epcs_flash_controller+0xfe003fa0>
 200cffc:	00bfffc4 	movi	r2,-1
 200d000:	d8c00017 	ldw	r3,0(sp)
 200d004:	30802726 	beq	r6,r2,200d0a4 <_strtol_r+0x1fc>
 200d008:	18000126 	beq	r3,zero,200d010 <_strtol_r+0x168>
 200d00c:	0109c83a 	sub	r4,zero,r4
 200d010:	2005883a 	mov	r2,r4
 200d014:	a0000226 	beq	r20,zero,200d020 <_strtol_r+0x178>
 200d018:	3000291e 	bne	r6,zero,200d0c0 <_strtol_r+0x218>
 200d01c:	a4c00015 	stw	r19,0(r20)
 200d020:	dfc00c17 	ldw	ra,48(sp)
 200d024:	df000b17 	ldw	fp,44(sp)
 200d028:	ddc00a17 	ldw	r23,40(sp)
 200d02c:	dd800917 	ldw	r22,36(sp)
 200d030:	dd400817 	ldw	r21,32(sp)
 200d034:	dd000717 	ldw	r20,28(sp)
 200d038:	dcc00617 	ldw	r19,24(sp)
 200d03c:	dc800517 	ldw	r18,20(sp)
 200d040:	dc400417 	ldw	r17,16(sp)
 200d044:	dc000317 	ldw	r16,12(sp)
 200d048:	dec00d04 	addi	sp,sp,52
 200d04c:	f800283a 	ret
 200d050:	00800404 	movi	r2,16
 200d054:	b8bfb91e 	bne	r23,r2,200cf3c <__alt_mem_epcs_flash_controller+0xfe003f3c>
 200d058:	00800c04 	movi	r2,48
 200d05c:	88bfb71e 	bne	r17,r2,200cf3c <__alt_mem_epcs_flash_controller+0xfe003f3c>
 200d060:	80800007 	ldb	r2,0(r16)
 200d064:	00c01e04 	movi	r3,120
 200d068:	10c02026 	beq	r2,r3,200d0ec <_strtol_r+0x244>
 200d06c:	00c01604 	movi	r3,88
 200d070:	10c01e26 	beq	r2,r3,200d0ec <_strtol_r+0x244>
 200d074:	b800221e 	bne	r23,zero,200d100 <_strtol_r+0x258>
 200d078:	04800204 	movi	r18,8
 200d07c:	04400c04 	movi	r17,48
 200d080:	902f883a 	mov	r23,r18
 200d084:	003fae06 	br	200cf40 <__alt_mem_epcs_flash_controller+0xfe003f40>
 200d088:	d8800117 	ldw	r2,4(sp)
 200d08c:	147fc70e 	bge	r2,r17,200cfac <__alt_mem_epcs_flash_controller+0xfe003fac>
 200d090:	01bfffc4 	movi	r6,-1
 200d094:	003fc906 	br	200cfbc <__alt_mem_epcs_flash_controller+0xfe003fbc>
 200d098:	008015c4 	movi	r2,87
 200d09c:	88a3c83a 	sub	r17,r17,r2
 200d0a0:	003fd506 	br	200cff8 <__alt_mem_epcs_flash_controller+0xfe003ff8>
 200d0a4:	d9000217 	ldw	r4,8(sp)
 200d0a8:	1805003a 	cmpeq	r2,r3,zero
 200d0ac:	00c00884 	movi	r3,34
 200d0b0:	20c00015 	stw	r3,0(r4)
 200d0b4:	00e00034 	movhi	r3,32768
 200d0b8:	1885c83a 	sub	r2,r3,r2
 200d0bc:	a03fd826 	beq	r20,zero,200d020 <__alt_mem_epcs_flash_controller+0xfe004020>
 200d0c0:	84ffffc4 	addi	r19,r16,-1
 200d0c4:	003fd506 	br	200d01c <__alt_mem_epcs_flash_controller+0xfe00401c>
 200d0c8:	00c00044 	movi	r3,1
 200d0cc:	84400007 	ldb	r17,0(r16)
 200d0d0:	d8c00015 	stw	r3,0(sp)
 200d0d4:	80e1883a 	add	r16,r16,r3
 200d0d8:	003f9406 	br	200cf2c <__alt_mem_epcs_flash_controller+0xfe003f2c>
 200d0dc:	84400007 	ldb	r17,0(r16)
 200d0e0:	d8000015 	stw	zero,0(sp)
 200d0e4:	84000044 	addi	r16,r16,1
 200d0e8:	003f9006 	br	200cf2c <__alt_mem_epcs_flash_controller+0xfe003f2c>
 200d0ec:	04800404 	movi	r18,16
 200d0f0:	84400047 	ldb	r17,1(r16)
 200d0f4:	902f883a 	mov	r23,r18
 200d0f8:	84000084 	addi	r16,r16,2
 200d0fc:	003f9006 	br	200cf40 <__alt_mem_epcs_flash_controller+0xfe003f40>
 200d100:	b825883a 	mov	r18,r23
 200d104:	04400c04 	movi	r17,48
 200d108:	003f8d06 	br	200cf40 <__alt_mem_epcs_flash_controller+0xfe003f40>

0200d10c <strtol>:
 200d10c:	00808274 	movhi	r2,521
 200d110:	10a3b704 	addi	r2,r2,-28964
 200d114:	2007883a 	mov	r3,r4
 200d118:	11000017 	ldw	r4,0(r2)
 200d11c:	2805883a 	mov	r2,r5
 200d120:	300f883a 	mov	r7,r6
 200d124:	180b883a 	mov	r5,r3
 200d128:	100d883a 	mov	r6,r2
 200d12c:	200cea81 	jmpi	200cea8 <_strtol_r>

0200d130 <_strtoll_r>:
 200d130:	defff004 	addi	sp,sp,-64
 200d134:	00808274 	movhi	r2,521
 200d138:	10a3ba04 	addi	r2,r2,-28952
 200d13c:	ddc00d15 	stw	r23,52(sp)
 200d140:	15c00017 	ldw	r23,0(r2)
 200d144:	df000e15 	stw	fp,56(sp)
 200d148:	dc000615 	stw	r16,24(sp)
 200d14c:	dfc00f15 	stw	ra,60(sp)
 200d150:	dd800c15 	stw	r22,48(sp)
 200d154:	dd400b15 	stw	r21,44(sp)
 200d158:	dd000a15 	stw	r20,40(sp)
 200d15c:	dcc00915 	stw	r19,36(sp)
 200d160:	dc800815 	stw	r18,32(sp)
 200d164:	dc400715 	stw	r17,28(sp)
 200d168:	d9400015 	stw	r5,0(sp)
 200d16c:	d9000415 	stw	r4,16(sp)
 200d170:	d9800115 	stw	r6,4(sp)
 200d174:	3839883a 	mov	fp,r7
 200d178:	2821883a 	mov	r16,r5
 200d17c:	82000007 	ldb	r8,0(r16)
 200d180:	84000044 	addi	r16,r16,1
 200d184:	ba05883a 	add	r2,r23,r8
 200d188:	10800003 	ldbu	r2,0(r2)
 200d18c:	1080020c 	andi	r2,r2,8
 200d190:	10803fcc 	andi	r2,r2,255
 200d194:	1080201c 	xori	r2,r2,128
 200d198:	10bfe004 	addi	r2,r2,-128
 200d19c:	103ff71e 	bne	r2,zero,200d17c <__alt_mem_epcs_flash_controller+0xfe00417c>
 200d1a0:	00800b44 	movi	r2,45
 200d1a4:	40807a26 	beq	r8,r2,200d390 <_strtoll_r+0x260>
 200d1a8:	00800ac4 	movi	r2,43
 200d1ac:	40808826 	beq	r8,r2,200d3d0 <_strtoll_r+0x2a0>
 200d1b0:	d8000215 	stw	zero,8(sp)
 200d1b4:	e000061e 	bne	fp,zero,200d1d0 <_strtoll_r+0xa0>
 200d1b8:	00800c04 	movi	r2,48
 200d1bc:	40808b26 	beq	r8,r2,200d3ec <_strtoll_r+0x2bc>
 200d1c0:	04800284 	movi	r18,10
 200d1c4:	0027883a 	mov	r19,zero
 200d1c8:	9039883a 	mov	fp,r18
 200d1cc:	00000406 	br	200d1e0 <_strtoll_r+0xb0>
 200d1d0:	00800404 	movi	r2,16
 200d1d4:	e0809926 	beq	fp,r2,200d43c <_strtoll_r+0x30c>
 200d1d8:	e027d7fa 	srai	r19,fp,31
 200d1dc:	e025883a 	mov	r18,fp
 200d1e0:	d9000217 	ldw	r4,8(sp)
 200d1e4:	20006226 	beq	r4,zero,200d370 <_strtoll_r+0x240>
 200d1e8:	002b883a 	mov	r21,zero
 200d1ec:	04600034 	movhi	r17,32768
 200d1f0:	a809883a 	mov	r4,r21
 200d1f4:	880b883a 	mov	r5,r17
 200d1f8:	900d883a 	mov	r6,r18
 200d1fc:	980f883a 	mov	r7,r19
 200d200:	da000515 	stw	r8,20(sp)
 200d204:	200f1740 	call	200f174 <__umoddi3>
 200d208:	a809883a 	mov	r4,r21
 200d20c:	880b883a 	mov	r5,r17
 200d210:	900d883a 	mov	r6,r18
 200d214:	980f883a 	mov	r7,r19
 200d218:	d8800315 	stw	r2,12(sp)
 200d21c:	200eb240 	call	200eb24 <__udivdi3>
 200d220:	da000517 	ldw	r8,20(sp)
 200d224:	182b883a 	mov	r21,r3
 200d228:	1023883a 	mov	r17,r2
 200d22c:	ba0d883a 	add	r6,r23,r8
 200d230:	31800003 	ldbu	r6,0(r6)
 200d234:	0007883a 	mov	r3,zero
 200d238:	0009883a 	mov	r4,zero
 200d23c:	3240010c 	andi	r9,r6,4
 200d240:	4a403fcc 	andi	r9,r9,255
 200d244:	4a40201c 	xori	r9,r9,128
 200d248:	4a7fe004 	addi	r9,r9,-128
 200d24c:	000b883a 	mov	r5,zero
 200d250:	05bfffc4 	movi	r22,-1
 200d254:	48001026 	beq	r9,zero,200d298 <_strtoll_r+0x168>
 200d258:	453ff404 	addi	r20,r8,-48
 200d25c:	a700150e 	bge	r20,fp,200d2b4 <_strtoll_r+0x184>
 200d260:	1d800426 	beq	r3,r22,200d274 <_strtoll_r+0x144>
 200d264:	a9400236 	bltu	r21,r5,200d270 <_strtoll_r+0x140>
 200d268:	2d402e1e 	bne	r5,r21,200d324 <_strtoll_r+0x1f4>
 200d26c:	89002d2e 	bgeu	r17,r4,200d324 <_strtoll_r+0x1f4>
 200d270:	00ffffc4 	movi	r3,-1
 200d274:	82000007 	ldb	r8,0(r16)
 200d278:	84000044 	addi	r16,r16,1
 200d27c:	ba0d883a 	add	r6,r23,r8
 200d280:	31800003 	ldbu	r6,0(r6)
 200d284:	3240010c 	andi	r9,r6,4
 200d288:	4a403fcc 	andi	r9,r9,255
 200d28c:	4a40201c 	xori	r9,r9,128
 200d290:	4a7fe004 	addi	r9,r9,-128
 200d294:	483ff01e 	bne	r9,zero,200d258 <__alt_mem_epcs_flash_controller+0xfe004258>
 200d298:	308000cc 	andi	r2,r6,3
 200d29c:	10000526 	beq	r2,zero,200d2b4 <_strtoll_r+0x184>
 200d2a0:	3180004c 	andi	r6,r6,1
 200d2a4:	30002b26 	beq	r6,zero,200d354 <_strtoll_r+0x224>
 200d2a8:	00800dc4 	movi	r2,55
 200d2ac:	40a9c83a 	sub	r20,r8,r2
 200d2b0:	a73feb16 	blt	r20,fp,200d260 <__alt_mem_epcs_flash_controller+0xfe004260>
 200d2b4:	00bfffc4 	movi	r2,-1
 200d2b8:	18803a26 	beq	r3,r2,200d3a4 <_strtoll_r+0x274>
 200d2bc:	d8800217 	ldw	r2,8(sp)
 200d2c0:	10000426 	beq	r2,zero,200d2d4 <_strtoll_r+0x1a4>
 200d2c4:	0109c83a 	sub	r4,zero,r4
 200d2c8:	2004c03a 	cmpne	r2,r4,zero
 200d2cc:	014bc83a 	sub	r5,zero,r5
 200d2d0:	288bc83a 	sub	r5,r5,r2
 200d2d4:	d8800117 	ldw	r2,4(sp)
 200d2d8:	10004f26 	beq	r2,zero,200d418 <_strtoll_r+0x2e8>
 200d2dc:	2005883a 	mov	r2,r4
 200d2e0:	1800271e 	bne	r3,zero,200d380 <_strtoll_r+0x250>
 200d2e4:	2807883a 	mov	r3,r5
 200d2e8:	d9400017 	ldw	r5,0(sp)
 200d2ec:	d9000117 	ldw	r4,4(sp)
 200d2f0:	21400015 	stw	r5,0(r4)
 200d2f4:	dfc00f17 	ldw	ra,60(sp)
 200d2f8:	df000e17 	ldw	fp,56(sp)
 200d2fc:	ddc00d17 	ldw	r23,52(sp)
 200d300:	dd800c17 	ldw	r22,48(sp)
 200d304:	dd400b17 	ldw	r21,44(sp)
 200d308:	dd000a17 	ldw	r20,40(sp)
 200d30c:	dcc00917 	ldw	r19,36(sp)
 200d310:	dc800817 	ldw	r18,32(sp)
 200d314:	dc400717 	ldw	r17,28(sp)
 200d318:	dc000617 	ldw	r16,24(sp)
 200d31c:	dec01004 	addi	sp,sp,64
 200d320:	f800283a 	ret
 200d324:	24400e26 	beq	r4,r17,200d360 <_strtoll_r+0x230>
 200d328:	900d883a 	mov	r6,r18
 200d32c:	980f883a 	mov	r7,r19
 200d330:	2001f780 	call	2001f78 <__muldi3>
 200d334:	a00dd7fa 	srai	r6,r20,31
 200d338:	a085883a 	add	r2,r20,r2
 200d33c:	1511803a 	cmpltu	r8,r2,r20
 200d340:	30c7883a 	add	r3,r6,r3
 200d344:	40cb883a 	add	r5,r8,r3
 200d348:	1009883a 	mov	r4,r2
 200d34c:	00c00044 	movi	r3,1
 200d350:	003fc806 	br	200d274 <__alt_mem_epcs_flash_controller+0xfe004274>
 200d354:	008015c4 	movi	r2,87
 200d358:	40a9c83a 	sub	r20,r8,r2
 200d35c:	003fd406 	br	200d2b0 <__alt_mem_epcs_flash_controller+0xfe0042b0>
 200d360:	2d7ff11e 	bne	r5,r21,200d328 <__alt_mem_epcs_flash_controller+0xfe004328>
 200d364:	d8800317 	ldw	r2,12(sp)
 200d368:	153fc116 	blt	r2,r20,200d270 <__alt_mem_epcs_flash_controller+0xfe004270>
 200d36c:	003fee06 	br	200d328 <__alt_mem_epcs_flash_controller+0xfe004328>
 200d370:	057fffc4 	movi	r21,-1
 200d374:	04600034 	movhi	r17,32768
 200d378:	8c7fffc4 	addi	r17,r17,-1
 200d37c:	003f9c06 	br	200d1f0 <__alt_mem_epcs_flash_controller+0xfe0041f0>
 200d380:	2807883a 	mov	r3,r5
 200d384:	843fffc4 	addi	r16,r16,-1
 200d388:	dc000015 	stw	r16,0(sp)
 200d38c:	003fd606 	br	200d2e8 <__alt_mem_epcs_flash_controller+0xfe0042e8>
 200d390:	00800044 	movi	r2,1
 200d394:	82000007 	ldb	r8,0(r16)
 200d398:	d8800215 	stw	r2,8(sp)
 200d39c:	80a1883a 	add	r16,r16,r2
 200d3a0:	003f8406 	br	200d1b4 <__alt_mem_epcs_flash_controller+0xfe0041b4>
 200d3a4:	d9000217 	ldw	r4,8(sp)
 200d3a8:	20000d1e 	bne	r4,zero,200d3e0 <_strtoll_r+0x2b0>
 200d3ac:	1805883a 	mov	r2,r3
 200d3b0:	00e00034 	movhi	r3,32768
 200d3b4:	18ffffc4 	addi	r3,r3,-1
 200d3b8:	d9400417 	ldw	r5,16(sp)
 200d3bc:	01000884 	movi	r4,34
 200d3c0:	29000015 	stw	r4,0(r5)
 200d3c4:	d9000117 	ldw	r4,4(sp)
 200d3c8:	203fee1e 	bne	r4,zero,200d384 <__alt_mem_epcs_flash_controller+0xfe004384>
 200d3cc:	003fc906 	br	200d2f4 <__alt_mem_epcs_flash_controller+0xfe0042f4>
 200d3d0:	82000007 	ldb	r8,0(r16)
 200d3d4:	d8000215 	stw	zero,8(sp)
 200d3d8:	84000044 	addi	r16,r16,1
 200d3dc:	003f7506 	br	200d1b4 <__alt_mem_epcs_flash_controller+0xfe0041b4>
 200d3e0:	0005883a 	mov	r2,zero
 200d3e4:	00e00034 	movhi	r3,32768
 200d3e8:	003ff306 	br	200d3b8 <__alt_mem_epcs_flash_controller+0xfe0043b8>
 200d3ec:	80800007 	ldb	r2,0(r16)
 200d3f0:	00c01e04 	movi	r3,120
 200d3f4:	10c00b26 	beq	r2,r3,200d424 <_strtoll_r+0x2f4>
 200d3f8:	00c01604 	movi	r3,88
 200d3fc:	10c00926 	beq	r2,r3,200d424 <_strtoll_r+0x2f4>
 200d400:	e000131e 	bne	fp,zero,200d450 <_strtoll_r+0x320>
 200d404:	04800204 	movi	r18,8
 200d408:	0027883a 	mov	r19,zero
 200d40c:	02000c04 	movi	r8,48
 200d410:	9039883a 	mov	fp,r18
 200d414:	003f7206 	br	200d1e0 <__alt_mem_epcs_flash_controller+0xfe0041e0>
 200d418:	2005883a 	mov	r2,r4
 200d41c:	2807883a 	mov	r3,r5
 200d420:	003fb406 	br	200d2f4 <__alt_mem_epcs_flash_controller+0xfe0042f4>
 200d424:	04800404 	movi	r18,16
 200d428:	82000047 	ldb	r8,1(r16)
 200d42c:	0027883a 	mov	r19,zero
 200d430:	84000084 	addi	r16,r16,2
 200d434:	9039883a 	mov	fp,r18
 200d438:	003f6906 	br	200d1e0 <__alt_mem_epcs_flash_controller+0xfe0041e0>
 200d43c:	00800c04 	movi	r2,48
 200d440:	40bfea26 	beq	r8,r2,200d3ec <__alt_mem_epcs_flash_controller+0xfe0043ec>
 200d444:	e025883a 	mov	r18,fp
 200d448:	0027883a 	mov	r19,zero
 200d44c:	003f6406 	br	200d1e0 <__alt_mem_epcs_flash_controller+0xfe0041e0>
 200d450:	e025883a 	mov	r18,fp
 200d454:	e027d7fa 	srai	r19,fp,31
 200d458:	02000c04 	movi	r8,48
 200d45c:	003f6006 	br	200d1e0 <__alt_mem_epcs_flash_controller+0xfe0041e0>

0200d460 <_strtoul_r>:
 200d460:	defff304 	addi	sp,sp,-52
 200d464:	00808274 	movhi	r2,521
 200d468:	10a3ba04 	addi	r2,r2,-28952
 200d46c:	df000b15 	stw	fp,44(sp)
 200d470:	17000017 	ldw	fp,0(r2)
 200d474:	ddc00a15 	stw	r23,40(sp)
 200d478:	dd000715 	stw	r20,28(sp)
 200d47c:	dcc00615 	stw	r19,24(sp)
 200d480:	dc000315 	stw	r16,12(sp)
 200d484:	dfc00c15 	stw	ra,48(sp)
 200d488:	dd800915 	stw	r22,36(sp)
 200d48c:	dd400815 	stw	r21,32(sp)
 200d490:	dc800515 	stw	r18,20(sp)
 200d494:	dc400415 	stw	r17,16(sp)
 200d498:	2827883a 	mov	r19,r5
 200d49c:	d9000215 	stw	r4,8(sp)
 200d4a0:	3029883a 	mov	r20,r6
 200d4a4:	382f883a 	mov	r23,r7
 200d4a8:	2821883a 	mov	r16,r5
 200d4ac:	84400007 	ldb	r17,0(r16)
 200d4b0:	84000044 	addi	r16,r16,1
 200d4b4:	e445883a 	add	r2,fp,r17
 200d4b8:	10800003 	ldbu	r2,0(r2)
 200d4bc:	1080020c 	andi	r2,r2,8
 200d4c0:	10803fcc 	andi	r2,r2,255
 200d4c4:	1080201c 	xori	r2,r2,128
 200d4c8:	10bfe004 	addi	r2,r2,-128
 200d4cc:	103ff71e 	bne	r2,zero,200d4ac <__alt_mem_epcs_flash_controller+0xfe0044ac>
 200d4d0:	00800b44 	movi	r2,45
 200d4d4:	88805e26 	beq	r17,r2,200d650 <_strtoul_r+0x1f0>
 200d4d8:	00800ac4 	movi	r2,43
 200d4dc:	88806126 	beq	r17,r2,200d664 <_strtoul_r+0x204>
 200d4e0:	d8000115 	stw	zero,4(sp)
 200d4e4:	b800091e 	bne	r23,zero,200d50c <_strtoul_r+0xac>
 200d4e8:	00800c04 	movi	r2,48
 200d4ec:	88806326 	beq	r17,r2,200d67c <_strtoul_r+0x21c>
 200d4f0:	05c00284 	movi	r23,10
 200d4f4:	00800144 	movi	r2,5
 200d4f8:	d8800015 	stw	r2,0(sp)
 200d4fc:	058666b4 	movhi	r22,6554
 200d500:	b5a66644 	addi	r22,r22,-26215
 200d504:	b825883a 	mov	r18,r23
 200d508:	00000b06 	br	200d538 <_strtoul_r+0xd8>
 200d50c:	00800404 	movi	r2,16
 200d510:	b8805826 	beq	r23,r2,200d674 <_strtoul_r+0x214>
 200d514:	013fffc4 	movi	r4,-1
 200d518:	b80b883a 	mov	r5,r23
 200d51c:	2001f400 	call	2001f40 <__udivsi3>
 200d520:	013fffc4 	movi	r4,-1
 200d524:	b80b883a 	mov	r5,r23
 200d528:	102d883a 	mov	r22,r2
 200d52c:	2001f480 	call	2001f48 <__umodsi3>
 200d530:	d8800015 	stw	r2,0(sp)
 200d534:	b825883a 	mov	r18,r23
 200d538:	e447883a 	add	r3,fp,r17
 200d53c:	18c00003 	ldbu	r3,0(r3)
 200d540:	0011883a 	mov	r8,zero
 200d544:	0009883a 	mov	r4,zero
 200d548:	1980010c 	andi	r6,r3,4
 200d54c:	31803fcc 	andi	r6,r6,255
 200d550:	3180201c 	xori	r6,r6,128
 200d554:	31bfe004 	addi	r6,r6,-128
 200d558:	057fffc4 	movi	r21,-1
 200d55c:	30001226 	beq	r6,zero,200d5a8 <_strtoul_r+0x148>
 200d560:	8c7ff404 	addi	r17,r17,-48
 200d564:	8dc0170e 	bge	r17,r23,200d5c4 <_strtoul_r+0x164>
 200d568:	45400626 	beq	r8,r21,200d584 <_strtoul_r+0x124>
 200d56c:	b1002c36 	bltu	r22,r4,200d620 <_strtoul_r+0x1c0>
 200d570:	25802926 	beq	r4,r22,200d618 <_strtoul_r+0x1b8>
 200d574:	900b883a 	mov	r5,r18
 200d578:	2001f500 	call	2001f50 <__mulsi3>
 200d57c:	8889883a 	add	r4,r17,r2
 200d580:	02000044 	movi	r8,1
 200d584:	84400007 	ldb	r17,0(r16)
 200d588:	84000044 	addi	r16,r16,1
 200d58c:	e447883a 	add	r3,fp,r17
 200d590:	18c00003 	ldbu	r3,0(r3)
 200d594:	1980010c 	andi	r6,r3,4
 200d598:	31803fcc 	andi	r6,r6,255
 200d59c:	3180201c 	xori	r6,r6,128
 200d5a0:	31bfe004 	addi	r6,r6,-128
 200d5a4:	303fee1e 	bne	r6,zero,200d560 <__alt_mem_epcs_flash_controller+0xfe004560>
 200d5a8:	188000cc 	andi	r2,r3,3
 200d5ac:	10000526 	beq	r2,zero,200d5c4 <_strtoul_r+0x164>
 200d5b0:	18c0004c 	andi	r3,r3,1
 200d5b4:	18001c26 	beq	r3,zero,200d628 <_strtoul_r+0x1c8>
 200d5b8:	00800dc4 	movi	r2,55
 200d5bc:	88a3c83a 	sub	r17,r17,r2
 200d5c0:	8dffe916 	blt	r17,r23,200d568 <__alt_mem_epcs_flash_controller+0xfe004568>
 200d5c4:	00bfffc4 	movi	r2,-1
 200d5c8:	40801a26 	beq	r8,r2,200d634 <_strtoul_r+0x1d4>
 200d5cc:	d8c00117 	ldw	r3,4(sp)
 200d5d0:	18000126 	beq	r3,zero,200d5d8 <_strtoul_r+0x178>
 200d5d4:	0109c83a 	sub	r4,zero,r4
 200d5d8:	a0000226 	beq	r20,zero,200d5e4 <_strtoul_r+0x184>
 200d5dc:	40001a1e 	bne	r8,zero,200d648 <_strtoul_r+0x1e8>
 200d5e0:	a4c00015 	stw	r19,0(r20)
 200d5e4:	2005883a 	mov	r2,r4
 200d5e8:	dfc00c17 	ldw	ra,48(sp)
 200d5ec:	df000b17 	ldw	fp,44(sp)
 200d5f0:	ddc00a17 	ldw	r23,40(sp)
 200d5f4:	dd800917 	ldw	r22,36(sp)
 200d5f8:	dd400817 	ldw	r21,32(sp)
 200d5fc:	dd000717 	ldw	r20,28(sp)
 200d600:	dcc00617 	ldw	r19,24(sp)
 200d604:	dc800517 	ldw	r18,20(sp)
 200d608:	dc400417 	ldw	r17,16(sp)
 200d60c:	dc000317 	ldw	r16,12(sp)
 200d610:	dec00d04 	addi	sp,sp,52
 200d614:	f800283a 	ret
 200d618:	d8800017 	ldw	r2,0(sp)
 200d61c:	147fd50e 	bge	r2,r17,200d574 <__alt_mem_epcs_flash_controller+0xfe004574>
 200d620:	023fffc4 	movi	r8,-1
 200d624:	003fd706 	br	200d584 <__alt_mem_epcs_flash_controller+0xfe004584>
 200d628:	008015c4 	movi	r2,87
 200d62c:	88a3c83a 	sub	r17,r17,r2
 200d630:	003fe306 	br	200d5c0 <__alt_mem_epcs_flash_controller+0xfe0045c0>
 200d634:	d8c00217 	ldw	r3,8(sp)
 200d638:	00800884 	movi	r2,34
 200d63c:	4009883a 	mov	r4,r8
 200d640:	18800015 	stw	r2,0(r3)
 200d644:	a03fe726 	beq	r20,zero,200d5e4 <__alt_mem_epcs_flash_controller+0xfe0045e4>
 200d648:	84ffffc4 	addi	r19,r16,-1
 200d64c:	003fe406 	br	200d5e0 <__alt_mem_epcs_flash_controller+0xfe0045e0>
 200d650:	00c00044 	movi	r3,1
 200d654:	84400007 	ldb	r17,0(r16)
 200d658:	d8c00115 	stw	r3,4(sp)
 200d65c:	80e1883a 	add	r16,r16,r3
 200d660:	003fa006 	br	200d4e4 <__alt_mem_epcs_flash_controller+0xfe0044e4>
 200d664:	84400007 	ldb	r17,0(r16)
 200d668:	d8000115 	stw	zero,4(sp)
 200d66c:	84000044 	addi	r16,r16,1
 200d670:	003f9c06 	br	200d4e4 <__alt_mem_epcs_flash_controller+0xfe0044e4>
 200d674:	00800c04 	movi	r2,48
 200d678:	88bfa61e 	bne	r17,r2,200d514 <__alt_mem_epcs_flash_controller+0xfe004514>
 200d67c:	80800007 	ldb	r2,0(r16)
 200d680:	00c01e04 	movi	r3,120
 200d684:	10c00b26 	beq	r2,r3,200d6b4 <_strtoul_r+0x254>
 200d688:	00c01604 	movi	r3,88
 200d68c:	10c00926 	beq	r2,r3,200d6b4 <_strtoul_r+0x254>
 200d690:	b800111e 	bne	r23,zero,200d6d8 <_strtoul_r+0x278>
 200d694:	04800204 	movi	r18,8
 200d698:	008001c4 	movi	r2,7
 200d69c:	d8800015 	stw	r2,0(sp)
 200d6a0:	05880034 	movhi	r22,8192
 200d6a4:	b5bfffc4 	addi	r22,r22,-1
 200d6a8:	04400c04 	movi	r17,48
 200d6ac:	902f883a 	mov	r23,r18
 200d6b0:	003fa106 	br	200d538 <__alt_mem_epcs_flash_controller+0xfe004538>
 200d6b4:	04800404 	movi	r18,16
 200d6b8:	008003c4 	movi	r2,15
 200d6bc:	84400047 	ldb	r17,1(r16)
 200d6c0:	d8800015 	stw	r2,0(sp)
 200d6c4:	84000084 	addi	r16,r16,2
 200d6c8:	05840034 	movhi	r22,4096
 200d6cc:	b5bfffc4 	addi	r22,r22,-1
 200d6d0:	902f883a 	mov	r23,r18
 200d6d4:	003f9806 	br	200d538 <__alt_mem_epcs_flash_controller+0xfe004538>
 200d6d8:	013fffc4 	movi	r4,-1
 200d6dc:	b80b883a 	mov	r5,r23
 200d6e0:	2001f400 	call	2001f40 <__udivsi3>
 200d6e4:	013fffc4 	movi	r4,-1
 200d6e8:	b80b883a 	mov	r5,r23
 200d6ec:	102d883a 	mov	r22,r2
 200d6f0:	2001f480 	call	2001f48 <__umodsi3>
 200d6f4:	d8800015 	stw	r2,0(sp)
 200d6f8:	b825883a 	mov	r18,r23
 200d6fc:	04400c04 	movi	r17,48
 200d700:	003f8d06 	br	200d538 <__alt_mem_epcs_flash_controller+0xfe004538>

0200d704 <strtoul>:
 200d704:	00808274 	movhi	r2,521
 200d708:	10a3b704 	addi	r2,r2,-28964
 200d70c:	2007883a 	mov	r3,r4
 200d710:	11000017 	ldw	r4,0(r2)
 200d714:	2805883a 	mov	r2,r5
 200d718:	300f883a 	mov	r7,r6
 200d71c:	180b883a 	mov	r5,r3
 200d720:	100d883a 	mov	r6,r2
 200d724:	200d4601 	jmpi	200d460 <_strtoul_r>

0200d728 <_strtoull_r>:
 200d728:	defff004 	addi	sp,sp,-64
 200d72c:	00808274 	movhi	r2,521
 200d730:	10a3ba04 	addi	r2,r2,-28952
 200d734:	dd800c15 	stw	r22,48(sp)
 200d738:	15800017 	ldw	r22,0(r2)
 200d73c:	df000e15 	stw	fp,56(sp)
 200d740:	dc000615 	stw	r16,24(sp)
 200d744:	dfc00f15 	stw	ra,60(sp)
 200d748:	ddc00d15 	stw	r23,52(sp)
 200d74c:	dd400b15 	stw	r21,44(sp)
 200d750:	dd000a15 	stw	r20,40(sp)
 200d754:	dcc00915 	stw	r19,36(sp)
 200d758:	dc800815 	stw	r18,32(sp)
 200d75c:	dc400715 	stw	r17,28(sp)
 200d760:	d9400015 	stw	r5,0(sp)
 200d764:	d9000415 	stw	r4,16(sp)
 200d768:	d9800115 	stw	r6,4(sp)
 200d76c:	3839883a 	mov	fp,r7
 200d770:	2821883a 	mov	r16,r5
 200d774:	82000007 	ldb	r8,0(r16)
 200d778:	84000044 	addi	r16,r16,1
 200d77c:	b205883a 	add	r2,r22,r8
 200d780:	10800003 	ldbu	r2,0(r2)
 200d784:	1080020c 	andi	r2,r2,8
 200d788:	10803fcc 	andi	r2,r2,255
 200d78c:	1080201c 	xori	r2,r2,128
 200d790:	10bfe004 	addi	r2,r2,-128
 200d794:	103ff71e 	bne	r2,zero,200d774 <__alt_mem_epcs_flash_controller+0xfe004774>
 200d798:	00800b44 	movi	r2,45
 200d79c:	40807e26 	beq	r8,r2,200d998 <_strtoull_r+0x270>
 200d7a0:	00800ac4 	movi	r2,43
 200d7a4:	40808126 	beq	r8,r2,200d9ac <_strtoull_r+0x284>
 200d7a8:	d8000315 	stw	zero,12(sp)
 200d7ac:	e0000c1e 	bne	fp,zero,200d7e0 <_strtoull_r+0xb8>
 200d7b0:	00800c04 	movi	r2,48
 200d7b4:	40808126 	beq	r8,r2,200d9bc <_strtoull_r+0x294>
 200d7b8:	04c00284 	movi	r19,10
 200d7bc:	00800144 	movi	r2,5
 200d7c0:	d8800215 	stw	r2,8(sp)
 200d7c4:	046666b4 	movhi	r17,39322
 200d7c8:	8c666644 	addi	r17,r17,-26215
 200d7cc:	05c666b4 	movhi	r23,6554
 200d7d0:	bde66644 	addi	r23,r23,-26215
 200d7d4:	0025883a 	mov	r18,zero
 200d7d8:	9839883a 	mov	fp,r19
 200d7dc:	00001306 	br	200d82c <_strtoull_r+0x104>
 200d7e0:	00800404 	movi	r2,16
 200d7e4:	e0809026 	beq	fp,r2,200da28 <_strtoull_r+0x300>
 200d7e8:	e025d7fa 	srai	r18,fp,31
 200d7ec:	013fffc4 	movi	r4,-1
 200d7f0:	200b883a 	mov	r5,r4
 200d7f4:	e00d883a 	mov	r6,fp
 200d7f8:	900f883a 	mov	r7,r18
 200d7fc:	da000515 	stw	r8,20(sp)
 200d800:	200eb240 	call	200eb24 <__udivdi3>
 200d804:	013fffc4 	movi	r4,-1
 200d808:	200b883a 	mov	r5,r4
 200d80c:	e00d883a 	mov	r6,fp
 200d810:	900f883a 	mov	r7,r18
 200d814:	1023883a 	mov	r17,r2
 200d818:	182f883a 	mov	r23,r3
 200d81c:	200f1740 	call	200f174 <__umoddi3>
 200d820:	da000517 	ldw	r8,20(sp)
 200d824:	d8800215 	stw	r2,8(sp)
 200d828:	e027883a 	mov	r19,fp
 200d82c:	b20d883a 	add	r6,r22,r8
 200d830:	32400003 	ldbu	r9,0(r6)
 200d834:	0007883a 	mov	r3,zero
 200d838:	0009883a 	mov	r4,zero
 200d83c:	4a80010c 	andi	r10,r9,4
 200d840:	52803fcc 	andi	r10,r10,255
 200d844:	5280201c 	xori	r10,r10,128
 200d848:	52bfe004 	addi	r10,r10,-128
 200d84c:	000b883a 	mov	r5,zero
 200d850:	057fffc4 	movi	r21,-1
 200d854:	50001026 	beq	r10,zero,200d898 <_strtoull_r+0x170>
 200d858:	453ff404 	addi	r20,r8,-48
 200d85c:	a700150e 	bge	r20,fp,200d8b4 <_strtoull_r+0x18c>
 200d860:	1d400426 	beq	r3,r21,200d874 <_strtoull_r+0x14c>
 200d864:	b9400236 	bltu	r23,r5,200d870 <_strtoull_r+0x148>
 200d868:	2dc0301e 	bne	r5,r23,200d92c <_strtoull_r+0x204>
 200d86c:	89002f2e 	bgeu	r17,r4,200d92c <_strtoull_r+0x204>
 200d870:	00ffffc4 	movi	r3,-1
 200d874:	82000007 	ldb	r8,0(r16)
 200d878:	84000044 	addi	r16,r16,1
 200d87c:	b20d883a 	add	r6,r22,r8
 200d880:	32400003 	ldbu	r9,0(r6)
 200d884:	4a80010c 	andi	r10,r9,4
 200d888:	52803fcc 	andi	r10,r10,255
 200d88c:	5280201c 	xori	r10,r10,128
 200d890:	52bfe004 	addi	r10,r10,-128
 200d894:	503ff01e 	bne	r10,zero,200d858 <__alt_mem_epcs_flash_controller+0xfe004858>
 200d898:	488000cc 	andi	r2,r9,3
 200d89c:	10000526 	beq	r2,zero,200d8b4 <_strtoull_r+0x18c>
 200d8a0:	4a40004c 	andi	r9,r9,1
 200d8a4:	48002d26 	beq	r9,zero,200d95c <_strtoull_r+0x234>
 200d8a8:	00800dc4 	movi	r2,55
 200d8ac:	40a9c83a 	sub	r20,r8,r2
 200d8b0:	a73feb16 	blt	r20,fp,200d860 <__alt_mem_epcs_flash_controller+0xfe004860>
 200d8b4:	00bfffc4 	movi	r2,-1
 200d8b8:	18802f26 	beq	r3,r2,200d978 <_strtoull_r+0x250>
 200d8bc:	d8800317 	ldw	r2,12(sp)
 200d8c0:	10000426 	beq	r2,zero,200d8d4 <_strtoull_r+0x1ac>
 200d8c4:	0109c83a 	sub	r4,zero,r4
 200d8c8:	2004c03a 	cmpne	r2,r4,zero
 200d8cc:	014bc83a 	sub	r5,zero,r5
 200d8d0:	288bc83a 	sub	r5,r5,r2
 200d8d4:	d8800117 	ldw	r2,4(sp)
 200d8d8:	10000626 	beq	r2,zero,200d8f4 <_strtoull_r+0x1cc>
 200d8dc:	18000226 	beq	r3,zero,200d8e8 <_strtoull_r+0x1c0>
 200d8e0:	843fffc4 	addi	r16,r16,-1
 200d8e4:	dc000015 	stw	r16,0(sp)
 200d8e8:	d8800017 	ldw	r2,0(sp)
 200d8ec:	d8c00117 	ldw	r3,4(sp)
 200d8f0:	18800015 	stw	r2,0(r3)
 200d8f4:	2005883a 	mov	r2,r4
 200d8f8:	2807883a 	mov	r3,r5
 200d8fc:	dfc00f17 	ldw	ra,60(sp)
 200d900:	df000e17 	ldw	fp,56(sp)
 200d904:	ddc00d17 	ldw	r23,52(sp)
 200d908:	dd800c17 	ldw	r22,48(sp)
 200d90c:	dd400b17 	ldw	r21,44(sp)
 200d910:	dd000a17 	ldw	r20,40(sp)
 200d914:	dcc00917 	ldw	r19,36(sp)
 200d918:	dc800817 	ldw	r18,32(sp)
 200d91c:	dc400717 	ldw	r17,28(sp)
 200d920:	dc000617 	ldw	r16,24(sp)
 200d924:	dec01004 	addi	sp,sp,64
 200d928:	f800283a 	ret
 200d92c:	24400e26 	beq	r4,r17,200d968 <_strtoull_r+0x240>
 200d930:	980d883a 	mov	r6,r19
 200d934:	900f883a 	mov	r7,r18
 200d938:	2001f780 	call	2001f78 <__muldi3>
 200d93c:	a00dd7fa 	srai	r6,r20,31
 200d940:	a085883a 	add	r2,r20,r2
 200d944:	1511803a 	cmpltu	r8,r2,r20
 200d948:	30c7883a 	add	r3,r6,r3
 200d94c:	40cb883a 	add	r5,r8,r3
 200d950:	1009883a 	mov	r4,r2
 200d954:	00c00044 	movi	r3,1
 200d958:	003fc606 	br	200d874 <__alt_mem_epcs_flash_controller+0xfe004874>
 200d95c:	008015c4 	movi	r2,87
 200d960:	40a9c83a 	sub	r20,r8,r2
 200d964:	003fd206 	br	200d8b0 <__alt_mem_epcs_flash_controller+0xfe0048b0>
 200d968:	2dfff11e 	bne	r5,r23,200d930 <__alt_mem_epcs_flash_controller+0xfe004930>
 200d96c:	d8800217 	ldw	r2,8(sp)
 200d970:	153fbf16 	blt	r2,r20,200d870 <__alt_mem_epcs_flash_controller+0xfe004870>
 200d974:	003fee06 	br	200d930 <__alt_mem_epcs_flash_controller+0xfe004930>
 200d978:	d9000417 	ldw	r4,16(sp)
 200d97c:	00800884 	movi	r2,34
 200d980:	180b883a 	mov	r5,r3
 200d984:	20800015 	stw	r2,0(r4)
 200d988:	d8800117 	ldw	r2,4(sp)
 200d98c:	1809883a 	mov	r4,r3
 200d990:	103fd31e 	bne	r2,zero,200d8e0 <__alt_mem_epcs_flash_controller+0xfe0048e0>
 200d994:	003fd706 	br	200d8f4 <__alt_mem_epcs_flash_controller+0xfe0048f4>
 200d998:	00800044 	movi	r2,1
 200d99c:	82000007 	ldb	r8,0(r16)
 200d9a0:	d8800315 	stw	r2,12(sp)
 200d9a4:	80a1883a 	add	r16,r16,r2
 200d9a8:	003f8006 	br	200d7ac <__alt_mem_epcs_flash_controller+0xfe0047ac>
 200d9ac:	82000007 	ldb	r8,0(r16)
 200d9b0:	d8000315 	stw	zero,12(sp)
 200d9b4:	84000044 	addi	r16,r16,1
 200d9b8:	003f7c06 	br	200d7ac <__alt_mem_epcs_flash_controller+0xfe0047ac>
 200d9bc:	80800007 	ldb	r2,0(r16)
 200d9c0:	00c01e04 	movi	r3,120
 200d9c4:	10c00d26 	beq	r2,r3,200d9fc <_strtoull_r+0x2d4>
 200d9c8:	00c01604 	movi	r3,88
 200d9cc:	10c00b26 	beq	r2,r3,200d9fc <_strtoull_r+0x2d4>
 200d9d0:	e000291e 	bne	fp,zero,200da78 <_strtoull_r+0x350>
 200d9d4:	04c00204 	movi	r19,8
 200d9d8:	008001c4 	movi	r2,7
 200d9dc:	d8800215 	stw	r2,8(sp)
 200d9e0:	047fffc4 	movi	r17,-1
 200d9e4:	05c80034 	movhi	r23,8192
 200d9e8:	bdffffc4 	addi	r23,r23,-1
 200d9ec:	0025883a 	mov	r18,zero
 200d9f0:	02000c04 	movi	r8,48
 200d9f4:	9839883a 	mov	fp,r19
 200d9f8:	003f8c06 	br	200d82c <__alt_mem_epcs_flash_controller+0xfe00482c>
 200d9fc:	04c00404 	movi	r19,16
 200da00:	008003c4 	movi	r2,15
 200da04:	82000047 	ldb	r8,1(r16)
 200da08:	d8800215 	stw	r2,8(sp)
 200da0c:	84000084 	addi	r16,r16,2
 200da10:	047fffc4 	movi	r17,-1
 200da14:	05c40034 	movhi	r23,4096
 200da18:	bdffffc4 	addi	r23,r23,-1
 200da1c:	0025883a 	mov	r18,zero
 200da20:	9839883a 	mov	fp,r19
 200da24:	003f8106 	br	200d82c <__alt_mem_epcs_flash_controller+0xfe00482c>
 200da28:	00800c04 	movi	r2,48
 200da2c:	40bfe326 	beq	r8,r2,200d9bc <__alt_mem_epcs_flash_controller+0xfe0049bc>
 200da30:	013fffc4 	movi	r4,-1
 200da34:	200b883a 	mov	r5,r4
 200da38:	e00d883a 	mov	r6,fp
 200da3c:	000f883a 	mov	r7,zero
 200da40:	da000515 	stw	r8,20(sp)
 200da44:	200eb240 	call	200eb24 <__udivdi3>
 200da48:	013fffc4 	movi	r4,-1
 200da4c:	200b883a 	mov	r5,r4
 200da50:	e00d883a 	mov	r6,fp
 200da54:	000f883a 	mov	r7,zero
 200da58:	1023883a 	mov	r17,r2
 200da5c:	182f883a 	mov	r23,r3
 200da60:	200f1740 	call	200f174 <__umoddi3>
 200da64:	d8800215 	stw	r2,8(sp)
 200da68:	e027883a 	mov	r19,fp
 200da6c:	0025883a 	mov	r18,zero
 200da70:	da000517 	ldw	r8,20(sp)
 200da74:	003f6d06 	br	200d82c <__alt_mem_epcs_flash_controller+0xfe00482c>
 200da78:	e025d7fa 	srai	r18,fp,31
 200da7c:	013fffc4 	movi	r4,-1
 200da80:	200b883a 	mov	r5,r4
 200da84:	e00d883a 	mov	r6,fp
 200da88:	900f883a 	mov	r7,r18
 200da8c:	200eb240 	call	200eb24 <__udivdi3>
 200da90:	013fffc4 	movi	r4,-1
 200da94:	200b883a 	mov	r5,r4
 200da98:	e00d883a 	mov	r6,fp
 200da9c:	900f883a 	mov	r7,r18
 200daa0:	1023883a 	mov	r17,r2
 200daa4:	182f883a 	mov	r23,r3
 200daa8:	200f1740 	call	200f174 <__umoddi3>
 200daac:	d8800215 	stw	r2,8(sp)
 200dab0:	e027883a 	mov	r19,fp
 200dab4:	02000c04 	movi	r8,48
 200dab8:	003f5c06 	br	200d82c <__alt_mem_epcs_flash_controller+0xfe00482c>

0200dabc <__submore>:
 200dabc:	defffa04 	addi	sp,sp,-24
 200dac0:	dc000015 	stw	r16,0(sp)
 200dac4:	2821883a 	mov	r16,r5
 200dac8:	29400c17 	ldw	r5,48(r5)
 200dacc:	dfc00515 	stw	ra,20(sp)
 200dad0:	dd000415 	stw	r20,16(sp)
 200dad4:	dcc00315 	stw	r19,12(sp)
 200dad8:	dc800215 	stw	r18,8(sp)
 200dadc:	dc400115 	stw	r17,4(sp)
 200dae0:	80801004 	addi	r2,r16,64
 200dae4:	28801726 	beq	r5,r2,200db44 <__submore+0x88>
 200dae8:	84400d17 	ldw	r17,52(r16)
 200daec:	8c67883a 	add	r19,r17,r17
 200daf0:	980d883a 	mov	r6,r19
 200daf4:	200ad880 	call	200ad88 <_realloc_r>
 200daf8:	1025883a 	mov	r18,r2
 200dafc:	10002926 	beq	r2,zero,200dba4 <__submore+0xe8>
 200db00:	1469883a 	add	r20,r2,r17
 200db04:	a009883a 	mov	r4,r20
 200db08:	100b883a 	mov	r5,r2
 200db0c:	880d883a 	mov	r6,r17
 200db10:	2009a000 	call	2009a00 <memcpy>
 200db14:	0005883a 	mov	r2,zero
 200db18:	85000015 	stw	r20,0(r16)
 200db1c:	84800c15 	stw	r18,48(r16)
 200db20:	84c00d15 	stw	r19,52(r16)
 200db24:	dfc00517 	ldw	ra,20(sp)
 200db28:	dd000417 	ldw	r20,16(sp)
 200db2c:	dcc00317 	ldw	r19,12(sp)
 200db30:	dc800217 	ldw	r18,8(sp)
 200db34:	dc400117 	ldw	r17,4(sp)
 200db38:	dc000017 	ldw	r16,0(sp)
 200db3c:	dec00604 	addi	sp,sp,24
 200db40:	f800283a 	ret
 200db44:	04410004 	movi	r17,1024
 200db48:	880b883a 	mov	r5,r17
 200db4c:	2002b480 	call	2002b48 <_malloc_r>
 200db50:	1007883a 	mov	r3,r2
 200db54:	10001326 	beq	r2,zero,200dba4 <__submore+0xe8>
 200db58:	80801083 	ldbu	r2,66(r16)
 200db5c:	80c00c15 	stw	r3,48(r16)
 200db60:	84400d15 	stw	r17,52(r16)
 200db64:	1880ffc5 	stb	r2,1023(r3)
 200db68:	81401043 	ldbu	r5,65(r16)
 200db6c:	1900ff44 	addi	r4,r3,1021
 200db70:	0005883a 	mov	r2,zero
 200db74:	1940ff85 	stb	r5,1022(r3)
 200db78:	81401003 	ldbu	r5,64(r16)
 200db7c:	1940ff45 	stb	r5,1021(r3)
 200db80:	81000015 	stw	r4,0(r16)
 200db84:	dfc00517 	ldw	ra,20(sp)
 200db88:	dd000417 	ldw	r20,16(sp)
 200db8c:	dcc00317 	ldw	r19,12(sp)
 200db90:	dc800217 	ldw	r18,8(sp)
 200db94:	dc400117 	ldw	r17,4(sp)
 200db98:	dc000017 	ldw	r16,0(sp)
 200db9c:	dec00604 	addi	sp,sp,24
 200dba0:	f800283a 	ret
 200dba4:	00bfffc4 	movi	r2,-1
 200dba8:	003fde06 	br	200db24 <__alt_mem_epcs_flash_controller+0xfe004b24>

0200dbac <_ungetc_r>:
 200dbac:	defffc04 	addi	sp,sp,-16
 200dbb0:	dc800215 	stw	r18,8(sp)
 200dbb4:	dc400115 	stw	r17,4(sp)
 200dbb8:	dc000015 	stw	r16,0(sp)
 200dbbc:	dfc00315 	stw	ra,12(sp)
 200dbc0:	00bfffc4 	movi	r2,-1
 200dbc4:	2825883a 	mov	r18,r5
 200dbc8:	2023883a 	mov	r17,r4
 200dbcc:	3021883a 	mov	r16,r6
 200dbd0:	28803026 	beq	r5,r2,200dc94 <_ungetc_r+0xe8>
 200dbd4:	20000226 	beq	r4,zero,200dbe0 <_ungetc_r+0x34>
 200dbd8:	20800e17 	ldw	r2,56(r4)
 200dbdc:	10002f26 	beq	r2,zero,200dc9c <_ungetc_r+0xf0>
 200dbe0:	80c0030b 	ldhu	r3,12(r16)
 200dbe4:	00bff7c4 	movi	r2,-33
 200dbe8:	1900010c 	andi	r4,r3,4
 200dbec:	213fffcc 	andi	r4,r4,65535
 200dbf0:	1884703a 	and	r2,r3,r2
 200dbf4:	2120001c 	xori	r4,r4,32768
 200dbf8:	8080030d 	sth	r2,12(r16)
 200dbfc:	21200004 	addi	r4,r4,-32768
 200dc00:	20000c1e 	bne	r4,zero,200dc34 <_ungetc_r+0x88>
 200dc04:	1900040c 	andi	r4,r3,16
 200dc08:	213fffcc 	andi	r4,r4,65535
 200dc0c:	2120001c 	xori	r4,r4,32768
 200dc10:	21200004 	addi	r4,r4,-32768
 200dc14:	20001f26 	beq	r4,zero,200dc94 <_ungetc_r+0xe8>
 200dc18:	18c0020c 	andi	r3,r3,8
 200dc1c:	18ffffcc 	andi	r3,r3,65535
 200dc20:	18e0001c 	xori	r3,r3,32768
 200dc24:	18e00004 	addi	r3,r3,-32768
 200dc28:	1800371e 	bne	r3,zero,200dd08 <_ungetc_r+0x15c>
 200dc2c:	10800114 	ori	r2,r2,4
 200dc30:	8080030d 	sth	r2,12(r16)
 200dc34:	80800c17 	ldw	r2,48(r16)
 200dc38:	94803fcc 	andi	r18,r18,255
 200dc3c:	10001926 	beq	r2,zero,200dca4 <_ungetc_r+0xf8>
 200dc40:	80c00117 	ldw	r3,4(r16)
 200dc44:	80800d17 	ldw	r2,52(r16)
 200dc48:	18800e0e 	bge	r3,r2,200dc84 <_ungetc_r+0xd8>
 200dc4c:	80800017 	ldw	r2,0(r16)
 200dc50:	10ffffc4 	addi	r3,r2,-1
 200dc54:	80c00015 	stw	r3,0(r16)
 200dc58:	14bfffc5 	stb	r18,-1(r2)
 200dc5c:	80800117 	ldw	r2,4(r16)
 200dc60:	10800044 	addi	r2,r2,1
 200dc64:	80800115 	stw	r2,4(r16)
 200dc68:	9005883a 	mov	r2,r18
 200dc6c:	dfc00317 	ldw	ra,12(sp)
 200dc70:	dc800217 	ldw	r18,8(sp)
 200dc74:	dc400117 	ldw	r17,4(sp)
 200dc78:	dc000017 	ldw	r16,0(sp)
 200dc7c:	dec00404 	addi	sp,sp,16
 200dc80:	f800283a 	ret
 200dc84:	8809883a 	mov	r4,r17
 200dc88:	800b883a 	mov	r5,r16
 200dc8c:	200dabc0 	call	200dabc <__submore>
 200dc90:	103fee26 	beq	r2,zero,200dc4c <__alt_mem_epcs_flash_controller+0xfe004c4c>
 200dc94:	04bfffc4 	movi	r18,-1
 200dc98:	003ff306 	br	200dc68 <__alt_mem_epcs_flash_controller+0xfe004c68>
 200dc9c:	20027a00 	call	20027a0 <__sinit>
 200dca0:	003fcf06 	br	200dbe0 <__alt_mem_epcs_flash_controller+0xfe004be0>
 200dca4:	80c00417 	ldw	r3,16(r16)
 200dca8:	80800017 	ldw	r2,0(r16)
 200dcac:	18000326 	beq	r3,zero,200dcbc <_ungetc_r+0x110>
 200dcb0:	1880022e 	bgeu	r3,r2,200dcbc <_ungetc_r+0x110>
 200dcb4:	10ffffc3 	ldbu	r3,-1(r2)
 200dcb8:	1c801d26 	beq	r3,r18,200dd30 <_ungetc_r+0x184>
 200dcbc:	81400117 	ldw	r5,4(r16)
 200dcc0:	80800e15 	stw	r2,56(r16)
 200dcc4:	008000c4 	movi	r2,3
 200dcc8:	80800d15 	stw	r2,52(r16)
 200dccc:	00800044 	movi	r2,1
 200dcd0:	81001004 	addi	r4,r16,64
 200dcd4:	80c01084 	addi	r3,r16,66
 200dcd8:	80800115 	stw	r2,4(r16)
 200dcdc:	9005883a 	mov	r2,r18
 200dce0:	81400f15 	stw	r5,60(r16)
 200dce4:	81000c15 	stw	r4,48(r16)
 200dce8:	84801085 	stb	r18,66(r16)
 200dcec:	80c00015 	stw	r3,0(r16)
 200dcf0:	dfc00317 	ldw	ra,12(sp)
 200dcf4:	dc800217 	ldw	r18,8(sp)
 200dcf8:	dc400117 	ldw	r17,4(sp)
 200dcfc:	dc000017 	ldw	r16,0(sp)
 200dd00:	dec00404 	addi	sp,sp,16
 200dd04:	f800283a 	ret
 200dd08:	8809883a 	mov	r4,r17
 200dd0c:	800b883a 	mov	r5,r16
 200dd10:	20024e40 	call	20024e4 <_fflush_r>
 200dd14:	103fdf1e 	bne	r2,zero,200dc94 <__alt_mem_epcs_flash_controller+0xfe004c94>
 200dd18:	8080030b 	ldhu	r2,12(r16)
 200dd1c:	00fffdc4 	movi	r3,-9
 200dd20:	80000215 	stw	zero,8(r16)
 200dd24:	1884703a 	and	r2,r3,r2
 200dd28:	80000615 	stw	zero,24(r16)
 200dd2c:	003fbf06 	br	200dc2c <__alt_mem_epcs_flash_controller+0xfe004c2c>
 200dd30:	80c00117 	ldw	r3,4(r16)
 200dd34:	10bfffc4 	addi	r2,r2,-1
 200dd38:	80800015 	stw	r2,0(r16)
 200dd3c:	18800044 	addi	r2,r3,1
 200dd40:	80800115 	stw	r2,4(r16)
 200dd44:	003fc806 	br	200dc68 <__alt_mem_epcs_flash_controller+0xfe004c68>

0200dd48 <ungetc>:
 200dd48:	00c08274 	movhi	r3,521
 200dd4c:	18e3b704 	addi	r3,r3,-28964
 200dd50:	2005883a 	mov	r2,r4
 200dd54:	19000017 	ldw	r4,0(r3)
 200dd58:	280d883a 	mov	r6,r5
 200dd5c:	100b883a 	mov	r5,r2
 200dd60:	200dbac1 	jmpi	200dbac <_ungetc_r>

0200dd64 <_calloc_r>:
 200dd64:	defffe04 	addi	sp,sp,-8
 200dd68:	dc000015 	stw	r16,0(sp)
 200dd6c:	2021883a 	mov	r16,r4
 200dd70:	3009883a 	mov	r4,r6
 200dd74:	dfc00115 	stw	ra,4(sp)
 200dd78:	2001f500 	call	2001f50 <__mulsi3>
 200dd7c:	8009883a 	mov	r4,r16
 200dd80:	100b883a 	mov	r5,r2
 200dd84:	2002b480 	call	2002b48 <_malloc_r>
 200dd88:	1021883a 	mov	r16,r2
 200dd8c:	10000c26 	beq	r2,zero,200ddc0 <_calloc_r+0x5c>
 200dd90:	11bfff17 	ldw	r6,-4(r2)
 200dd94:	00ffff04 	movi	r3,-4
 200dd98:	00800904 	movi	r2,36
 200dd9c:	30cc703a 	and	r6,r6,r3
 200dda0:	30cd883a 	add	r6,r6,r3
 200dda4:	11801436 	bltu	r2,r6,200ddf8 <_calloc_r+0x94>
 200dda8:	00c004c4 	movi	r3,19
 200ddac:	19800936 	bltu	r3,r6,200ddd4 <_calloc_r+0x70>
 200ddb0:	8005883a 	mov	r2,r16
 200ddb4:	10000015 	stw	zero,0(r2)
 200ddb8:	10000115 	stw	zero,4(r2)
 200ddbc:	10000215 	stw	zero,8(r2)
 200ddc0:	8005883a 	mov	r2,r16
 200ddc4:	dfc00117 	ldw	ra,4(sp)
 200ddc8:	dc000017 	ldw	r16,0(sp)
 200ddcc:	dec00204 	addi	sp,sp,8
 200ddd0:	f800283a 	ret
 200ddd4:	80000015 	stw	zero,0(r16)
 200ddd8:	80000115 	stw	zero,4(r16)
 200dddc:	00c006c4 	movi	r3,27
 200dde0:	19800d2e 	bgeu	r3,r6,200de18 <_calloc_r+0xb4>
 200dde4:	80000215 	stw	zero,8(r16)
 200dde8:	80000315 	stw	zero,12(r16)
 200ddec:	30800c26 	beq	r6,r2,200de20 <_calloc_r+0xbc>
 200ddf0:	80800404 	addi	r2,r16,16
 200ddf4:	003fef06 	br	200ddb4 <__alt_mem_epcs_flash_controller+0xfe004db4>
 200ddf8:	8009883a 	mov	r4,r16
 200ddfc:	000b883a 	mov	r5,zero
 200de00:	20032cc0 	call	20032cc <memset>
 200de04:	8005883a 	mov	r2,r16
 200de08:	dfc00117 	ldw	ra,4(sp)
 200de0c:	dc000017 	ldw	r16,0(sp)
 200de10:	dec00204 	addi	sp,sp,8
 200de14:	f800283a 	ret
 200de18:	80800204 	addi	r2,r16,8
 200de1c:	003fe506 	br	200ddb4 <__alt_mem_epcs_flash_controller+0xfe004db4>
 200de20:	80000415 	stw	zero,16(r16)
 200de24:	80000515 	stw	zero,20(r16)
 200de28:	80800604 	addi	r2,r16,24
 200de2c:	003fe106 	br	200ddb4 <__alt_mem_epcs_flash_controller+0xfe004db4>

0200de30 <_fstat_r>:
 200de30:	defffd04 	addi	sp,sp,-12
 200de34:	dc400115 	stw	r17,4(sp)
 200de38:	dc000015 	stw	r16,0(sp)
 200de3c:	2023883a 	mov	r17,r4
 200de40:	04008274 	movhi	r16,521
 200de44:	842afb04 	addi	r16,r16,-21524
 200de48:	2809883a 	mov	r4,r5
 200de4c:	300b883a 	mov	r5,r6
 200de50:	dfc00215 	stw	ra,8(sp)
 200de54:	80000015 	stw	zero,0(r16)
 200de58:	20106e00 	call	20106e0 <fstat>
 200de5c:	00ffffc4 	movi	r3,-1
 200de60:	10c00526 	beq	r2,r3,200de78 <_fstat_r+0x48>
 200de64:	dfc00217 	ldw	ra,8(sp)
 200de68:	dc400117 	ldw	r17,4(sp)
 200de6c:	dc000017 	ldw	r16,0(sp)
 200de70:	dec00304 	addi	sp,sp,12
 200de74:	f800283a 	ret
 200de78:	80c00017 	ldw	r3,0(r16)
 200de7c:	183ff926 	beq	r3,zero,200de64 <__alt_mem_epcs_flash_controller+0xfe004e64>
 200de80:	88c00015 	stw	r3,0(r17)
 200de84:	dfc00217 	ldw	ra,8(sp)
 200de88:	dc400117 	ldw	r17,4(sp)
 200de8c:	dc000017 	ldw	r16,0(sp)
 200de90:	dec00304 	addi	sp,sp,12
 200de94:	f800283a 	ret

0200de98 <rshift>:
 200de98:	2805d17a 	srai	r2,r5,5
 200de9c:	20c00417 	ldw	r3,16(r4)
 200dea0:	22800504 	addi	r10,r4,20
 200dea4:	10c0270e 	bge	r2,r3,200df44 <rshift+0xac>
 200dea8:	19800144 	addi	r6,r3,5
 200deac:	12c00144 	addi	r11,r2,5
 200deb0:	318d883a 	add	r6,r6,r6
 200deb4:	5ad7883a 	add	r11,r11,r11
 200deb8:	318d883a 	add	r6,r6,r6
 200debc:	5ad7883a 	add	r11,r11,r11
 200dec0:	294007cc 	andi	r5,r5,31
 200dec4:	218d883a 	add	r6,r4,r6
 200dec8:	22d7883a 	add	r11,r4,r11
 200decc:	28002026 	beq	r5,zero,200df50 <rshift+0xb8>
 200ded0:	59c00017 	ldw	r7,0(r11)
 200ded4:	02400804 	movi	r9,32
 200ded8:	58800104 	addi	r2,r11,4
 200dedc:	4953c83a 	sub	r9,r9,r5
 200dee0:	394ed83a 	srl	r7,r7,r5
 200dee4:	11802e2e 	bgeu	r2,r6,200dfa0 <rshift+0x108>
 200dee8:	5007883a 	mov	r3,r10
 200deec:	12000017 	ldw	r8,0(r2)
 200def0:	18c00104 	addi	r3,r3,4
 200def4:	10800104 	addi	r2,r2,4
 200def8:	4250983a 	sll	r8,r8,r9
 200defc:	3a0eb03a 	or	r7,r7,r8
 200df00:	19ffff15 	stw	r7,-4(r3)
 200df04:	11ffff17 	ldw	r7,-4(r2)
 200df08:	394ed83a 	srl	r7,r7,r5
 200df0c:	11bff736 	bltu	r2,r6,200deec <__alt_mem_epcs_flash_controller+0xfe004eec>
 200df10:	32c5c83a 	sub	r2,r6,r11
 200df14:	10bffec4 	addi	r2,r2,-5
 200df18:	1004d0ba 	srli	r2,r2,2
 200df1c:	10800184 	addi	r2,r2,6
 200df20:	1085883a 	add	r2,r2,r2
 200df24:	1085883a 	add	r2,r2,r2
 200df28:	2085883a 	add	r2,r4,r2
 200df2c:	11c00015 	stw	r7,0(r2)
 200df30:	38001626 	beq	r7,zero,200df8c <rshift+0xf4>
 200df34:	10800104 	addi	r2,r2,4
 200df38:	1295c83a 	sub	r10,r2,r10
 200df3c:	5015d0ba 	srai	r10,r10,2
 200df40:	00001406 	br	200df94 <rshift+0xfc>
 200df44:	20000415 	stw	zero,16(r4)
 200df48:	20000515 	stw	zero,20(r4)
 200df4c:	f800283a 	ret
 200df50:	59bffc2e 	bgeu	r11,r6,200df44 <__alt_mem_epcs_flash_controller+0xfe004f44>
 200df54:	5007883a 	mov	r3,r10
 200df58:	5805883a 	mov	r2,r11
 200df5c:	11400017 	ldw	r5,0(r2)
 200df60:	18c00104 	addi	r3,r3,4
 200df64:	10800104 	addi	r2,r2,4
 200df68:	197fff15 	stw	r5,-4(r3)
 200df6c:	11bffb36 	bltu	r2,r6,200df5c <__alt_mem_epcs_flash_controller+0xfe004f5c>
 200df70:	02c4303a 	nor	r2,zero,r11
 200df74:	1185883a 	add	r2,r2,r6
 200df78:	1004d0ba 	srli	r2,r2,2
 200df7c:	10800184 	addi	r2,r2,6
 200df80:	1085883a 	add	r2,r2,r2
 200df84:	1085883a 	add	r2,r2,r2
 200df88:	2085883a 	add	r2,r4,r2
 200df8c:	1295c83a 	sub	r10,r2,r10
 200df90:	5015d0ba 	srai	r10,r10,2
 200df94:	22800415 	stw	r10,16(r4)
 200df98:	503feb26 	beq	r10,zero,200df48 <__alt_mem_epcs_flash_controller+0xfe004f48>
 200df9c:	f800283a 	ret
 200dfa0:	5005883a 	mov	r2,r10
 200dfa4:	003fe106 	br	200df2c <__alt_mem_epcs_flash_controller+0xfe004f2c>

0200dfa8 <__hexdig_init>:
 200dfa8:	01408234 	movhi	r5,520
 200dfac:	295c8444 	addi	r5,r5,29201
 200dfb0:	01000404 	movi	r4,16
 200dfb4:	00c00c04 	movi	r3,48
 200dfb8:	00808274 	movhi	r2,521
 200dfbc:	10ab1704 	addi	r2,r2,-21412
 200dfc0:	29800003 	ldbu	r6,0(r5)
 200dfc4:	10c7883a 	add	r3,r2,r3
 200dfc8:	19000005 	stb	r4,0(r3)
 200dfcc:	29400044 	addi	r5,r5,1
 200dfd0:	3007883a 	mov	r3,r6
 200dfd4:	21000044 	addi	r4,r4,1
 200dfd8:	303ff91e 	bne	r6,zero,200dfc0 <__alt_mem_epcs_flash_controller+0xfe004fc0>
 200dfdc:	01408234 	movhi	r5,520
 200dfe0:	295c8244 	addi	r5,r5,29193
 200dfe4:	01000684 	movi	r4,26
 200dfe8:	00c01844 	movi	r3,97
 200dfec:	29800003 	ldbu	r6,0(r5)
 200dff0:	10c7883a 	add	r3,r2,r3
 200dff4:	19000005 	stb	r4,0(r3)
 200dff8:	29400044 	addi	r5,r5,1
 200dffc:	3007883a 	mov	r3,r6
 200e000:	21000044 	addi	r4,r4,1
 200e004:	303ff91e 	bne	r6,zero,200dfec <__alt_mem_epcs_flash_controller+0xfe004fec>
 200e008:	01408234 	movhi	r5,520
 200e00c:	295c8044 	addi	r5,r5,29185
 200e010:	01000684 	movi	r4,26
 200e014:	00c01044 	movi	r3,65
 200e018:	29800003 	ldbu	r6,0(r5)
 200e01c:	10c7883a 	add	r3,r2,r3
 200e020:	19000005 	stb	r4,0(r3)
 200e024:	29400044 	addi	r5,r5,1
 200e028:	3007883a 	mov	r3,r6
 200e02c:	21000044 	addi	r4,r4,1
 200e030:	303ff91e 	bne	r6,zero,200e018 <__alt_mem_epcs_flash_controller+0xfe005018>
 200e034:	f800283a 	ret

0200e038 <__gethex>:
 200e038:	defff204 	addi	sp,sp,-56
 200e03c:	dc800615 	stw	r18,24(sp)
 200e040:	04808274 	movhi	r18,521
 200e044:	94ab1704 	addi	r18,r18,-21412
 200e048:	90800c03 	ldbu	r2,48(r18)
 200e04c:	dd400915 	stw	r21,36(sp)
 200e050:	dc400515 	stw	r17,20(sp)
 200e054:	dfc00d15 	stw	ra,52(sp)
 200e058:	df000c15 	stw	fp,48(sp)
 200e05c:	ddc00b15 	stw	r23,44(sp)
 200e060:	dd800a15 	stw	r22,40(sp)
 200e064:	dd000815 	stw	r20,32(sp)
 200e068:	dcc00715 	stw	r19,28(sp)
 200e06c:	dc000415 	stw	r16,16(sp)
 200e070:	d9000115 	stw	r4,4(sp)
 200e074:	d9c00215 	stw	r7,8(sp)
 200e078:	282b883a 	mov	r21,r5
 200e07c:	3023883a 	mov	r17,r6
 200e080:	1000b926 	beq	r2,zero,200e368 <__gethex+0x330>
 200e084:	a9000017 	ldw	r4,0(r21)
 200e088:	00800c04 	movi	r2,48
 200e08c:	20c00083 	ldbu	r3,2(r4)
 200e090:	24c00084 	addi	r19,r4,2
 200e094:	1881601e 	bne	r3,r2,200e618 <__gethex+0x5e0>
 200e098:	017fff84 	movi	r5,-2
 200e09c:	208000c4 	addi	r2,r4,3
 200e0a0:	290bc83a 	sub	r5,r5,r4
 200e0a4:	1809883a 	mov	r4,r3
 200e0a8:	28b9883a 	add	fp,r5,r2
 200e0ac:	1027883a 	mov	r19,r2
 200e0b0:	10800044 	addi	r2,r2,1
 200e0b4:	10ffffc3 	ldbu	r3,-1(r2)
 200e0b8:	193ffb26 	beq	r3,r4,200e0a8 <__alt_mem_epcs_flash_controller+0xfe0050a8>
 200e0bc:	90c5883a 	add	r2,r18,r3
 200e0c0:	10800003 	ldbu	r2,0(r2)
 200e0c4:	01408274 	movhi	r5,521
 200e0c8:	296b1704 	addi	r5,r5,-21412
 200e0cc:	10002b26 	beq	r2,zero,200e17c <__gethex+0x144>
 200e0d0:	98800003 	ldbu	r2,0(r19)
 200e0d4:	0009883a 	mov	r4,zero
 200e0d8:	288b883a 	add	r5,r5,r2
 200e0dc:	28c00003 	ldbu	r3,0(r5)
 200e0e0:	18016826 	beq	r3,zero,200e684 <__gethex+0x64c>
 200e0e4:	9821883a 	mov	r16,r19
 200e0e8:	84000044 	addi	r16,r16,1
 200e0ec:	80800003 	ldbu	r2,0(r16)
 200e0f0:	9087883a 	add	r3,r18,r2
 200e0f4:	18c00003 	ldbu	r3,0(r3)
 200e0f8:	183ffb1e 	bne	r3,zero,200e0e8 <__alt_mem_epcs_flash_controller+0xfe0050e8>
 200e0fc:	d8000015 	stw	zero,0(sp)
 200e100:	00c00b84 	movi	r3,46
 200e104:	10c0f226 	beq	r2,r3,200e4d0 <__gethex+0x498>
 200e108:	80800003 	ldbu	r2,0(r16)
 200e10c:	20014426 	beq	r4,zero,200e620 <__gethex+0x5e8>
 200e110:	8109c83a 	sub	r4,r16,r4
 200e114:	2109883a 	add	r4,r4,r4
 200e118:	2109883a 	add	r4,r4,r4
 200e11c:	0129c83a 	sub	r20,zero,r4
 200e120:	00c01404 	movi	r3,80
 200e124:	10c01e26 	beq	r2,r3,200e1a0 <__gethex+0x168>
 200e128:	00c01c04 	movi	r3,112
 200e12c:	10c01c26 	beq	r2,r3,200e1a0 <__gethex+0x168>
 200e130:	d8c00017 	ldw	r3,0(sp)
 200e134:	802d883a 	mov	r22,r16
 200e138:	ad800015 	stw	r22,0(r21)
 200e13c:	18004026 	beq	r3,zero,200e240 <__gethex+0x208>
 200e140:	e001061e 	bne	fp,zero,200e55c <__gethex+0x524>
 200e144:	04000184 	movi	r16,6
 200e148:	8005883a 	mov	r2,r16
 200e14c:	dfc00d17 	ldw	ra,52(sp)
 200e150:	df000c17 	ldw	fp,48(sp)
 200e154:	ddc00b17 	ldw	r23,44(sp)
 200e158:	dd800a17 	ldw	r22,40(sp)
 200e15c:	dd400917 	ldw	r21,36(sp)
 200e160:	dd000817 	ldw	r20,32(sp)
 200e164:	dcc00717 	ldw	r19,28(sp)
 200e168:	dc800617 	ldw	r18,24(sp)
 200e16c:	dc400517 	ldw	r17,20(sp)
 200e170:	dc000417 	ldw	r16,16(sp)
 200e174:	dec00e04 	addi	sp,sp,56
 200e178:	f800283a 	ret
 200e17c:	00800b84 	movi	r2,46
 200e180:	1880d626 	beq	r3,r2,200e4dc <__gethex+0x4a4>
 200e184:	98800003 	ldbu	r2,0(r19)
 200e188:	00c00044 	movi	r3,1
 200e18c:	d8c00015 	stw	r3,0(sp)
 200e190:	00c01404 	movi	r3,80
 200e194:	9821883a 	mov	r16,r19
 200e198:	0029883a 	mov	r20,zero
 200e19c:	10ffe21e 	bne	r2,r3,200e128 <__alt_mem_epcs_flash_controller+0xfe005128>
 200e1a0:	80800043 	ldbu	r2,1(r16)
 200e1a4:	00c00ac4 	movi	r3,43
 200e1a8:	10c0f326 	beq	r2,r3,200e578 <__gethex+0x540>
 200e1ac:	00c00b44 	movi	r3,45
 200e1b0:	10c0ec26 	beq	r2,r3,200e564 <__gethex+0x52c>
 200e1b4:	80c00044 	addi	r3,r16,1
 200e1b8:	d8000315 	stw	zero,12(sp)
 200e1bc:	9085883a 	add	r2,r18,r2
 200e1c0:	11000003 	ldbu	r4,0(r2)
 200e1c4:	203fda26 	beq	r4,zero,200e130 <__alt_mem_epcs_flash_controller+0xfe005130>
 200e1c8:	01800644 	movi	r6,25
 200e1cc:	313fd816 	blt	r6,r4,200e130 <__alt_mem_epcs_flash_controller+0xfe005130>
 200e1d0:	18800043 	ldbu	r2,1(r3)
 200e1d4:	01408274 	movhi	r5,521
 200e1d8:	296b1704 	addi	r5,r5,-21412
 200e1dc:	213ffc04 	addi	r4,r4,-16
 200e1e0:	2885883a 	add	r2,r5,r2
 200e1e4:	15c00003 	ldbu	r23,0(r2)
 200e1e8:	1d800044 	addi	r22,r3,1
 200e1ec:	b8000d26 	beq	r23,zero,200e224 <__gethex+0x1ec>
 200e1f0:	35c0030e 	bge	r6,r23,200e200 <__gethex+0x1c8>
 200e1f4:	00000b06 	br	200e224 <__gethex+0x1ec>
 200e1f8:	00800644 	movi	r2,25
 200e1fc:	15c00916 	blt	r2,r23,200e224 <__gethex+0x1ec>
 200e200:	01400284 	movi	r5,10
 200e204:	2001f500 	call	2001f50 <__mulsi3>
 200e208:	b5800044 	addi	r22,r22,1
 200e20c:	b1400003 	ldbu	r5,0(r22)
 200e210:	15c5883a 	add	r2,r2,r23
 200e214:	113ffc04 	addi	r4,r2,-16
 200e218:	914b883a 	add	r5,r18,r5
 200e21c:	2dc00003 	ldbu	r23,0(r5)
 200e220:	b83ff51e 	bne	r23,zero,200e1f8 <__alt_mem_epcs_flash_controller+0xfe0051f8>
 200e224:	d8c00317 	ldw	r3,12(sp)
 200e228:	18000126 	beq	r3,zero,200e230 <__gethex+0x1f8>
 200e22c:	0109c83a 	sub	r4,zero,r4
 200e230:	d8c00017 	ldw	r3,0(sp)
 200e234:	ad800015 	stw	r22,0(r21)
 200e238:	a129883a 	add	r20,r20,r4
 200e23c:	183fc01e 	bne	r3,zero,200e140 <__alt_mem_epcs_flash_controller+0xfe005140>
 200e240:	84c5c83a 	sub	r2,r16,r19
 200e244:	10bfffc4 	addi	r2,r2,-1
 200e248:	00c001c4 	movi	r3,7
 200e24c:	000b883a 	mov	r5,zero
 200e250:	1880030e 	bge	r3,r2,200e260 <__gethex+0x228>
 200e254:	1005d07a 	srai	r2,r2,1
 200e258:	29400044 	addi	r5,r5,1
 200e25c:	18bffd16 	blt	r3,r2,200e254 <__alt_mem_epcs_flash_controller+0xfe005254>
 200e260:	d9000117 	ldw	r4,4(sp)
 200e264:	2009ccc0 	call	2009ccc <_Balloc>
 200e268:	102d883a 	mov	r22,r2
 200e26c:	15400504 	addi	r21,r2,20
 200e270:	9c001b2e 	bgeu	r19,r16,200e2e0 <__gethex+0x2a8>
 200e274:	843fffc4 	addi	r16,r16,-1
 200e278:	98bfffc4 	addi	r2,r19,-1
 200e27c:	a80b883a 	mov	r5,r21
 200e280:	0009883a 	mov	r4,zero
 200e284:	0007883a 	mov	r3,zero
 200e288:	02800b84 	movi	r10,46
 200e28c:	02c00804 	movi	r11,32
 200e290:	00000806 	br	200e2b4 <__gethex+0x27c>
 200e294:	18c00104 	addi	r3,r3,4
 200e298:	918d883a 	add	r6,r18,r6
 200e29c:	32400003 	ldbu	r9,0(r6)
 200e2a0:	4a4003cc 	andi	r9,r9,15
 200e2a4:	49ce983a 	sll	r7,r9,r7
 200e2a8:	21c8b03a 	or	r4,r4,r7
 200e2ac:	843fffc4 	addi	r16,r16,-1
 200e2b0:	80800d26 	beq	r16,r2,200e2e8 <__gethex+0x2b0>
 200e2b4:	81800003 	ldbu	r6,0(r16)
 200e2b8:	180f883a 	mov	r7,r3
 200e2bc:	32bffb26 	beq	r6,r10,200e2ac <__alt_mem_epcs_flash_controller+0xfe0052ac>
 200e2c0:	1afff41e 	bne	r3,r11,200e294 <__alt_mem_epcs_flash_controller+0xfe005294>
 200e2c4:	29000015 	stw	r4,0(r5)
 200e2c8:	81800003 	ldbu	r6,0(r16)
 200e2cc:	0009883a 	mov	r4,zero
 200e2d0:	000f883a 	mov	r7,zero
 200e2d4:	29400104 	addi	r5,r5,4
 200e2d8:	00c00104 	movi	r3,4
 200e2dc:	003fee06 	br	200e298 <__alt_mem_epcs_flash_controller+0xfe005298>
 200e2e0:	a80b883a 	mov	r5,r21
 200e2e4:	0009883a 	mov	r4,zero
 200e2e8:	28c00104 	addi	r3,r5,4
 200e2ec:	1d47c83a 	sub	r3,r3,r21
 200e2f0:	1807d0ba 	srai	r3,r3,2
 200e2f4:	29000015 	stw	r4,0(r5)
 200e2f8:	1820917a 	slli	r16,r3,5
 200e2fc:	b0c00415 	stw	r3,16(r22)
 200e300:	2009fe40 	call	2009fe4 <__hi0bits>
 200e304:	8dc00017 	ldw	r23,0(r17)
 200e308:	8085c83a 	sub	r2,r16,r2
 200e30c:	b8809c16 	blt	r23,r2,200e580 <__gethex+0x548>
 200e310:	15c0b716 	blt	r2,r23,200e5f0 <__gethex+0x5b8>
 200e314:	0039883a 	mov	fp,zero
 200e318:	88c00217 	ldw	r3,8(r17)
 200e31c:	1d006516 	blt	r3,r20,200e4b4 <__gethex+0x47c>
 200e320:	88800117 	ldw	r2,4(r17)
 200e324:	a080830e 	bge	r20,r2,200e534 <__gethex+0x4fc>
 200e328:	1529c83a 	sub	r20,r2,r20
 200e32c:	a5c01016 	blt	r20,r23,200e370 <__gethex+0x338>
 200e330:	88c00317 	ldw	r3,12(r17)
 200e334:	01000084 	movi	r4,2
 200e338:	1900c726 	beq	r3,r4,200e658 <__gethex+0x620>
 200e33c:	010000c4 	movi	r4,3
 200e340:	1900f026 	beq	r3,r4,200e704 <__gethex+0x6cc>
 200e344:	01000044 	movi	r4,1
 200e348:	1900e626 	beq	r3,r4,200e6e4 <__gethex+0x6ac>
 200e34c:	d9000117 	ldw	r4,4(sp)
 200e350:	b00b883a 	mov	r5,r22
 200e354:	04001404 	movi	r16,80
 200e358:	2009d740 	call	2009d74 <_Bfree>
 200e35c:	d8c00e17 	ldw	r3,56(sp)
 200e360:	18000015 	stw	zero,0(r3)
 200e364:	003f7806 	br	200e148 <__alt_mem_epcs_flash_controller+0xfe005148>
 200e368:	200dfa80 	call	200dfa8 <__hexdig_init>
 200e36c:	003f4506 	br	200e084 <__alt_mem_epcs_flash_controller+0xfe005084>
 200e370:	a43fffc4 	addi	r16,r20,-1
 200e374:	e000b21e 	bne	fp,zero,200e640 <__gethex+0x608>
 200e378:	0400040e 	bge	zero,r16,200e38c <__gethex+0x354>
 200e37c:	b009883a 	mov	r4,r22
 200e380:	800b883a 	mov	r5,r16
 200e384:	200ac980 	call	200ac98 <__any_on>
 200e388:	1039883a 	mov	fp,r2
 200e38c:	8005d17a 	srai	r2,r16,5
 200e390:	00c00044 	movi	r3,1
 200e394:	840007cc 	andi	r16,r16,31
 200e398:	1085883a 	add	r2,r2,r2
 200e39c:	1085883a 	add	r2,r2,r2
 200e3a0:	a885883a 	add	r2,r21,r2
 200e3a4:	1c06983a 	sll	r3,r3,r16
 200e3a8:	10800017 	ldw	r2,0(r2)
 200e3ac:	1884703a 	and	r2,r3,r2
 200e3b0:	10000126 	beq	r2,zero,200e3b8 <__gethex+0x380>
 200e3b4:	e7000094 	ori	fp,fp,2
 200e3b8:	a00b883a 	mov	r5,r20
 200e3bc:	b009883a 	mov	r4,r22
 200e3c0:	200de980 	call	200de98 <rshift>
 200e3c4:	bd2fc83a 	sub	r23,r23,r20
 200e3c8:	8d000117 	ldw	r20,4(r17)
 200e3cc:	04000084 	movi	r16,2
 200e3d0:	e0005d26 	beq	fp,zero,200e548 <__gethex+0x510>
 200e3d4:	88800317 	ldw	r2,12(r17)
 200e3d8:	00c00084 	movi	r3,2
 200e3dc:	10c0b026 	beq	r2,r3,200e6a0 <__gethex+0x668>
 200e3e0:	00c000c4 	movi	r3,3
 200e3e4:	10c05526 	beq	r2,r3,200e53c <__gethex+0x504>
 200e3e8:	00c00044 	movi	r3,1
 200e3ec:	10c0551e 	bne	r2,r3,200e544 <__gethex+0x50c>
 200e3f0:	e080008c 	andi	r2,fp,2
 200e3f4:	10005326 	beq	r2,zero,200e544 <__gethex+0x50c>
 200e3f8:	a8800017 	ldw	r2,0(r21)
 200e3fc:	e084b03a 	or	r2,fp,r2
 200e400:	10c4703a 	and	r2,r2,r3
 200e404:	10004f26 	beq	r2,zero,200e544 <__gethex+0x50c>
 200e408:	b7000417 	ldw	fp,16(r22)
 200e40c:	00ffffc4 	movi	r3,-1
 200e410:	e1000144 	addi	r4,fp,5
 200e414:	2109883a 	add	r4,r4,r4
 200e418:	2109883a 	add	r4,r4,r4
 200e41c:	b109883a 	add	r4,r22,r4
 200e420:	a8800017 	ldw	r2,0(r21)
 200e424:	10c0ba1e 	bne	r2,r3,200e710 <__gethex+0x6d8>
 200e428:	a8000015 	stw	zero,0(r21)
 200e42c:	ad400104 	addi	r21,r21,4
 200e430:	a93ffb36 	bltu	r21,r4,200e420 <__alt_mem_epcs_flash_controller+0xfe005420>
 200e434:	b0800217 	ldw	r2,8(r22)
 200e438:	e080bd0e 	bge	fp,r2,200e730 <__gethex+0x6f8>
 200e43c:	e005883a 	mov	r2,fp
 200e440:	10c00144 	addi	r3,r2,5
 200e444:	18c7883a 	add	r3,r3,r3
 200e448:	18c7883a 	add	r3,r3,r3
 200e44c:	b0c7883a 	add	r3,r22,r3
 200e450:	10800044 	addi	r2,r2,1
 200e454:	01000044 	movi	r4,1
 200e458:	19000015 	stw	r4,0(r3)
 200e45c:	b0800415 	stw	r2,16(r22)
 200e460:	00800084 	movi	r2,2
 200e464:	8080ad26 	beq	r16,r2,200e71c <__gethex+0x6e4>
 200e468:	b0800417 	ldw	r2,16(r22)
 200e46c:	e0800b16 	blt	fp,r2,200e49c <__gethex+0x464>
 200e470:	bdc007cc 	andi	r23,r23,31
 200e474:	b8008626 	beq	r23,zero,200e690 <__gethex+0x658>
 200e478:	e7000104 	addi	fp,fp,4
 200e47c:	e739883a 	add	fp,fp,fp
 200e480:	e739883a 	add	fp,fp,fp
 200e484:	b705883a 	add	r2,r22,fp
 200e488:	11000017 	ldw	r4,0(r2)
 200e48c:	2009fe40 	call	2009fe4 <__hi0bits>
 200e490:	00c00804 	movi	r3,32
 200e494:	1defc83a 	sub	r23,r3,r23
 200e498:	15c07d0e 	bge	r2,r23,200e690 <__gethex+0x658>
 200e49c:	b009883a 	mov	r4,r22
 200e4a0:	01400044 	movi	r5,1
 200e4a4:	200de980 	call	200de98 <rshift>
 200e4a8:	88800217 	ldw	r2,8(r17)
 200e4ac:	a5000044 	addi	r20,r20,1
 200e4b0:	1500770e 	bge	r2,r20,200e690 <__gethex+0x658>
 200e4b4:	d9000117 	ldw	r4,4(sp)
 200e4b8:	b00b883a 	mov	r5,r22
 200e4bc:	040028c4 	movi	r16,163
 200e4c0:	2009d740 	call	2009d74 <_Bfree>
 200e4c4:	d8800e17 	ldw	r2,56(sp)
 200e4c8:	10000015 	stw	zero,0(r2)
 200e4cc:	003f1e06 	br	200e148 <__alt_mem_epcs_flash_controller+0xfe005148>
 200e4d0:	20007826 	beq	r4,zero,200e6b4 <__gethex+0x67c>
 200e4d4:	80800003 	ldbu	r2,0(r16)
 200e4d8:	003f0d06 	br	200e110 <__alt_mem_epcs_flash_controller+0xfe005110>
 200e4dc:	98800043 	ldbu	r2,1(r19)
 200e4e0:	9c000044 	addi	r16,r19,1
 200e4e4:	288b883a 	add	r5,r5,r2
 200e4e8:	28c00003 	ldbu	r3,0(r5)
 200e4ec:	18005026 	beq	r3,zero,200e630 <__gethex+0x5f8>
 200e4f0:	00c00c04 	movi	r3,48
 200e4f4:	10c0541e 	bne	r2,r3,200e648 <__gethex+0x610>
 200e4f8:	800d883a 	mov	r6,r16
 200e4fc:	1007883a 	mov	r3,r2
 200e500:	31800044 	addi	r6,r6,1
 200e504:	30800003 	ldbu	r2,0(r6)
 200e508:	10fffd26 	beq	r2,r3,200e500 <__alt_mem_epcs_flash_controller+0xfe005500>
 200e50c:	9087883a 	add	r3,r18,r2
 200e510:	18c00003 	ldbu	r3,0(r3)
 200e514:	3027883a 	mov	r19,r6
 200e518:	18004c1e 	bne	r3,zero,200e64c <__gethex+0x614>
 200e51c:	00c00044 	movi	r3,1
 200e520:	8009883a 	mov	r4,r16
 200e524:	d8c00015 	stw	r3,0(sp)
 200e528:	1839883a 	mov	fp,r3
 200e52c:	3021883a 	mov	r16,r6
 200e530:	003ef306 	br	200e100 <__alt_mem_epcs_flash_controller+0xfe005100>
 200e534:	04000044 	movi	r16,1
 200e538:	003fa506 	br	200e3d0 <__alt_mem_epcs_flash_controller+0xfe0053d0>
 200e53c:	d8800f17 	ldw	r2,60(sp)
 200e540:	103fb11e 	bne	r2,zero,200e408 <__alt_mem_epcs_flash_controller+0xfe005408>
 200e544:	84000414 	ori	r16,r16,16
 200e548:	d8800e17 	ldw	r2,56(sp)
 200e54c:	d8c00217 	ldw	r3,8(sp)
 200e550:	15800015 	stw	r22,0(r2)
 200e554:	1d000015 	stw	r20,0(r3)
 200e558:	003efb06 	br	200e148 <__alt_mem_epcs_flash_controller+0xfe005148>
 200e55c:	0021883a 	mov	r16,zero
 200e560:	003ef906 	br	200e148 <__alt_mem_epcs_flash_controller+0xfe005148>
 200e564:	00c00044 	movi	r3,1
 200e568:	d8c00315 	stw	r3,12(sp)
 200e56c:	80800083 	ldbu	r2,2(r16)
 200e570:	80c00084 	addi	r3,r16,2
 200e574:	003f1106 	br	200e1bc <__alt_mem_epcs_flash_controller+0xfe0051bc>
 200e578:	d8000315 	stw	zero,12(sp)
 200e57c:	003ffb06 	br	200e56c <__alt_mem_epcs_flash_controller+0xfe00556c>
 200e580:	15e1c83a 	sub	r16,r2,r23
 200e584:	b009883a 	mov	r4,r22
 200e588:	800b883a 	mov	r5,r16
 200e58c:	200ac980 	call	200ac98 <__any_on>
 200e590:	10002526 	beq	r2,zero,200e628 <__gethex+0x5f0>
 200e594:	80bfffc4 	addi	r2,r16,-1
 200e598:	1007d17a 	srai	r3,r2,5
 200e59c:	110007cc 	andi	r4,r2,31
 200e5a0:	07000044 	movi	fp,1
 200e5a4:	18c00144 	addi	r3,r3,5
 200e5a8:	18c7883a 	add	r3,r3,r3
 200e5ac:	18c7883a 	add	r3,r3,r3
 200e5b0:	b0c7883a 	add	r3,r22,r3
 200e5b4:	e108983a 	sll	r4,fp,r4
 200e5b8:	18c00017 	ldw	r3,0(r3)
 200e5bc:	20c6703a 	and	r3,r4,r3
 200e5c0:	18000626 	beq	r3,zero,200e5dc <__gethex+0x5a4>
 200e5c4:	e080340e 	bge	fp,r2,200e698 <__gethex+0x660>
 200e5c8:	b009883a 	mov	r4,r22
 200e5cc:	817fff84 	addi	r5,r16,-2
 200e5d0:	200ac980 	call	200ac98 <__any_on>
 200e5d4:	10003026 	beq	r2,zero,200e698 <__gethex+0x660>
 200e5d8:	070000c4 	movi	fp,3
 200e5dc:	b009883a 	mov	r4,r22
 200e5e0:	800b883a 	mov	r5,r16
 200e5e4:	200de980 	call	200de98 <rshift>
 200e5e8:	a429883a 	add	r20,r20,r16
 200e5ec:	003f4a06 	br	200e318 <__alt_mem_epcs_flash_controller+0xfe005318>
 200e5f0:	d9000117 	ldw	r4,4(sp)
 200e5f4:	b8a1c83a 	sub	r16,r23,r2
 200e5f8:	b00b883a 	mov	r5,r22
 200e5fc:	800d883a 	mov	r6,r16
 200e600:	200a4bc0 	call	200a4bc <__lshift>
 200e604:	102d883a 	mov	r22,r2
 200e608:	a429c83a 	sub	r20,r20,r16
 200e60c:	15400504 	addi	r21,r2,20
 200e610:	0039883a 	mov	fp,zero
 200e614:	003f4006 	br	200e318 <__alt_mem_epcs_flash_controller+0xfe005318>
 200e618:	0039883a 	mov	fp,zero
 200e61c:	003ea706 	br	200e0bc <__alt_mem_epcs_flash_controller+0xfe0050bc>
 200e620:	0029883a 	mov	r20,zero
 200e624:	003ebe06 	br	200e120 <__alt_mem_epcs_flash_controller+0xfe005120>
 200e628:	0039883a 	mov	fp,zero
 200e62c:	003feb06 	br	200e5dc <__alt_mem_epcs_flash_controller+0xfe0055dc>
 200e630:	00c00044 	movi	r3,1
 200e634:	0029883a 	mov	r20,zero
 200e638:	d8c00015 	stw	r3,0(sp)
 200e63c:	003eb806 	br	200e120 <__alt_mem_epcs_flash_controller+0xfe005120>
 200e640:	07000044 	movi	fp,1
 200e644:	003f5106 	br	200e38c <__alt_mem_epcs_flash_controller+0xfe00538c>
 200e648:	8027883a 	mov	r19,r16
 200e64c:	8009883a 	mov	r4,r16
 200e650:	07000044 	movi	fp,1
 200e654:	003ea306 	br	200e0e4 <__alt_mem_epcs_flash_controller+0xfe0050e4>
 200e658:	d8c00f17 	ldw	r3,60(sp)
 200e65c:	183f3b1e 	bne	r3,zero,200e34c <__alt_mem_epcs_flash_controller+0xfe00534c>
 200e660:	d8c00217 	ldw	r3,8(sp)
 200e664:	04001884 	movi	r16,98
 200e668:	18800015 	stw	r2,0(r3)
 200e66c:	00800044 	movi	r2,1
 200e670:	b0800415 	stw	r2,16(r22)
 200e674:	a8800015 	stw	r2,0(r21)
 200e678:	d8800e17 	ldw	r2,56(sp)
 200e67c:	15800015 	stw	r22,0(r2)
 200e680:	003eb106 	br	200e148 <__alt_mem_epcs_flash_controller+0xfe005148>
 200e684:	9821883a 	mov	r16,r19
 200e688:	d8000015 	stw	zero,0(sp)
 200e68c:	003e9c06 	br	200e100 <__alt_mem_epcs_flash_controller+0xfe005100>
 200e690:	04000844 	movi	r16,33
 200e694:	003fac06 	br	200e548 <__alt_mem_epcs_flash_controller+0xfe005548>
 200e698:	07000084 	movi	fp,2
 200e69c:	003fcf06 	br	200e5dc <__alt_mem_epcs_flash_controller+0xfe0055dc>
 200e6a0:	d8c00f17 	ldw	r3,60(sp)
 200e6a4:	00800044 	movi	r2,1
 200e6a8:	10c5c83a 	sub	r2,r2,r3
 200e6ac:	103fa526 	beq	r2,zero,200e544 <__alt_mem_epcs_flash_controller+0xfe005544>
 200e6b0:	003f5506 	br	200e408 <__alt_mem_epcs_flash_controller+0xfe005408>
 200e6b4:	80800043 	ldbu	r2,1(r16)
 200e6b8:	81000044 	addi	r4,r16,1
 200e6bc:	2021883a 	mov	r16,r4
 200e6c0:	9087883a 	add	r3,r18,r2
 200e6c4:	18c00003 	ldbu	r3,0(r3)
 200e6c8:	183e9026 	beq	r3,zero,200e10c <__alt_mem_epcs_flash_controller+0xfe00510c>
 200e6cc:	84000044 	addi	r16,r16,1
 200e6d0:	80800003 	ldbu	r2,0(r16)
 200e6d4:	9087883a 	add	r3,r18,r2
 200e6d8:	18c00003 	ldbu	r3,0(r3)
 200e6dc:	183ffb1e 	bne	r3,zero,200e6cc <__alt_mem_epcs_flash_controller+0xfe0056cc>
 200e6e0:	003e8a06 	br	200e10c <__alt_mem_epcs_flash_controller+0xfe00510c>
 200e6e4:	a5ff191e 	bne	r20,r23,200e34c <__alt_mem_epcs_flash_controller+0xfe00534c>
 200e6e8:	1dffdd0e 	bge	r3,r23,200e660 <__alt_mem_epcs_flash_controller+0xfe005660>
 200e6ec:	b009883a 	mov	r4,r22
 200e6f0:	b97fffc4 	addi	r5,r23,-1
 200e6f4:	200ac980 	call	200ac98 <__any_on>
 200e6f8:	103f1426 	beq	r2,zero,200e34c <__alt_mem_epcs_flash_controller+0xfe00534c>
 200e6fc:	88800117 	ldw	r2,4(r17)
 200e700:	003fd706 	br	200e660 <__alt_mem_epcs_flash_controller+0xfe005660>
 200e704:	d8c00f17 	ldw	r3,60(sp)
 200e708:	183f1026 	beq	r3,zero,200e34c <__alt_mem_epcs_flash_controller+0xfe00534c>
 200e70c:	003fd406 	br	200e660 <__alt_mem_epcs_flash_controller+0xfe005660>
 200e710:	10800044 	addi	r2,r2,1
 200e714:	a8800015 	stw	r2,0(r21)
 200e718:	003f5106 	br	200e460 <__alt_mem_epcs_flash_controller+0xfe005460>
 200e71c:	88800017 	ldw	r2,0(r17)
 200e720:	10bfffc4 	addi	r2,r2,-1
 200e724:	15c01426 	beq	r2,r23,200e778 <__gethex+0x740>
 200e728:	04000884 	movi	r16,34
 200e72c:	003f8606 	br	200e548 <__alt_mem_epcs_flash_controller+0xfe005548>
 200e730:	b1400117 	ldw	r5,4(r22)
 200e734:	d9000117 	ldw	r4,4(sp)
 200e738:	29400044 	addi	r5,r5,1
 200e73c:	2009ccc0 	call	2009ccc <_Balloc>
 200e740:	b1800417 	ldw	r6,16(r22)
 200e744:	b1400304 	addi	r5,r22,12
 200e748:	11000304 	addi	r4,r2,12
 200e74c:	31800084 	addi	r6,r6,2
 200e750:	318d883a 	add	r6,r6,r6
 200e754:	318d883a 	add	r6,r6,r6
 200e758:	102b883a 	mov	r21,r2
 200e75c:	2009a000 	call	2009a00 <memcpy>
 200e760:	d9000117 	ldw	r4,4(sp)
 200e764:	b00b883a 	mov	r5,r22
 200e768:	a82d883a 	mov	r22,r21
 200e76c:	2009d740 	call	2009d74 <_Bfree>
 200e770:	a8800417 	ldw	r2,16(r21)
 200e774:	003f3206 	br	200e440 <__alt_mem_epcs_flash_controller+0xfe005440>
 200e778:	b805d17a 	srai	r2,r23,5
 200e77c:	04000044 	movi	r16,1
 200e780:	bdc007cc 	andi	r23,r23,31
 200e784:	10800144 	addi	r2,r2,5
 200e788:	1085883a 	add	r2,r2,r2
 200e78c:	1085883a 	add	r2,r2,r2
 200e790:	b085883a 	add	r2,r22,r2
 200e794:	10800017 	ldw	r2,0(r2)
 200e798:	85e0983a 	sll	r16,r16,r23
 200e79c:	80a0703a 	and	r16,r16,r2
 200e7a0:	8020c03a 	cmpne	r16,r16,zero
 200e7a4:	00800884 	movi	r2,34
 200e7a8:	1421c83a 	sub	r16,r2,r16
 200e7ac:	003f6606 	br	200e548 <__alt_mem_epcs_flash_controller+0xfe005548>

0200e7b0 <__hexnan>:
 200e7b0:	defff604 	addi	sp,sp,-40
 200e7b4:	dc000315 	stw	r16,12(sp)
 200e7b8:	04008274 	movhi	r16,521
 200e7bc:	842b1704 	addi	r16,r16,-21412
 200e7c0:	80800c03 	ldbu	r2,48(r16)
 200e7c4:	dfc00915 	stw	ra,36(sp)
 200e7c8:	dd400815 	stw	r21,32(sp)
 200e7cc:	dd000715 	stw	r20,28(sp)
 200e7d0:	dcc00615 	stw	r19,24(sp)
 200e7d4:	dc800515 	stw	r18,20(sp)
 200e7d8:	dc400415 	stw	r17,16(sp)
 200e7dc:	10006c26 	beq	r2,zero,200e990 <__hexnan+0x1e0>
 200e7e0:	2d000017 	ldw	r20,0(r5)
 200e7e4:	a025d17a 	srai	r18,r20,5
 200e7e8:	a50007cc 	andi	r20,r20,31
 200e7ec:	94a5883a 	add	r18,r18,r18
 200e7f0:	94a5883a 	add	r18,r18,r18
 200e7f4:	34a5883a 	add	r18,r6,r18
 200e7f8:	a0000126 	beq	r20,zero,200e800 <__hexnan+0x50>
 200e7fc:	94800104 	addi	r18,r18,4
 200e800:	20c00017 	ldw	r3,0(r4)
 200e804:	903fff15 	stw	zero,-4(r18)
 200e808:	947fff04 	addi	r17,r18,-4
 200e80c:	18800043 	ldbu	r2,1(r3)
 200e810:	8817883a 	mov	r11,r17
 200e814:	880b883a 	mov	r5,r17
 200e818:	0011883a 	mov	r8,zero
 200e81c:	001b883a 	mov	r13,zero
 200e820:	0015883a 	mov	r10,zero
 200e824:	03c00204 	movi	r15,8
 200e828:	03800804 	movi	r14,32
 200e82c:	04c001c4 	movi	r19,7
 200e830:	10001b26 	beq	r2,zero,200e8a0 <__hexnan+0xf0>
 200e834:	808f883a 	add	r7,r16,r2
 200e838:	39c00003 	ldbu	r7,0(r7)
 200e83c:	3a403fcc 	andi	r9,r7,255
 200e840:	4800301e 	bne	r9,zero,200e904 <__hexnan+0x154>
 200e844:	70804636 	bltu	r14,r2,200e960 <__hexnan+0x1b0>
 200e848:	6a80120e 	bge	r13,r10,200e894 <__hexnan+0xe4>
 200e84c:	2ac00f2e 	bgeu	r5,r11,200e88c <__hexnan+0xdc>
 200e850:	9a000e16 	blt	r19,r8,200e88c <__hexnan+0xdc>
 200e854:	7a11c83a 	sub	r8,r15,r8
 200e858:	4211883a 	add	r8,r8,r8
 200e85c:	29c00017 	ldw	r7,0(r5)
 200e860:	4211883a 	add	r8,r8,r8
 200e864:	722bc83a 	sub	r21,r14,r8
 200e868:	2805883a 	mov	r2,r5
 200e86c:	12400117 	ldw	r9,4(r2)
 200e870:	10800104 	addi	r2,r2,4
 200e874:	4d58983a 	sll	r12,r9,r21
 200e878:	3b18b03a 	or	r12,r7,r12
 200e87c:	4a0ed83a 	srl	r7,r9,r8
 200e880:	133fff15 	stw	r12,-4(r2)
 200e884:	11c00015 	stw	r7,0(r2)
 200e888:	12fff836 	bltu	r2,r11,200e86c <__alt_mem_epcs_flash_controller+0xfe00586c>
 200e88c:	31402d36 	bltu	r6,r5,200e944 <__hexnan+0x194>
 200e890:	02000204 	movi	r8,8
 200e894:	18c00044 	addi	r3,r3,1
 200e898:	18800043 	ldbu	r2,1(r3)
 200e89c:	103fe51e 	bne	r2,zero,200e834 <__alt_mem_epcs_flash_controller+0xfe005834>
 200e8a0:	50003126 	beq	r10,zero,200e968 <__hexnan+0x1b8>
 200e8a4:	2ac0022e 	bgeu	r5,r11,200e8b0 <__hexnan+0x100>
 200e8a8:	008001c4 	movi	r2,7
 200e8ac:	1200520e 	bge	r2,r8,200e9f8 <__hexnan+0x248>
 200e8b0:	31403f2e 	bgeu	r6,r5,200e9b0 <__hexnan+0x200>
 200e8b4:	3005883a 	mov	r2,r6
 200e8b8:	28c00017 	ldw	r3,0(r5)
 200e8bc:	10800104 	addi	r2,r2,4
 200e8c0:	29400104 	addi	r5,r5,4
 200e8c4:	10ffff15 	stw	r3,-4(r2)
 200e8c8:	897ffb2e 	bgeu	r17,r5,200e8b8 <__alt_mem_epcs_flash_controller+0xfe0058b8>
 200e8cc:	10000015 	stw	zero,0(r2)
 200e8d0:	10800104 	addi	r2,r2,4
 200e8d4:	88bffd2e 	bgeu	r17,r2,200e8cc <__alt_mem_epcs_flash_controller+0xfe0058cc>
 200e8d8:	90bfff17 	ldw	r2,-4(r18)
 200e8dc:	1000071e 	bne	r2,zero,200e8fc <__hexnan+0x14c>
 200e8e0:	34403c26 	beq	r6,r17,200e9d4 <__hexnan+0x224>
 200e8e4:	8805883a 	mov	r2,r17
 200e8e8:	00000106 	br	200e8f0 <__hexnan+0x140>
 200e8ec:	30803a26 	beq	r6,r2,200e9d8 <__hexnan+0x228>
 200e8f0:	10bfff04 	addi	r2,r2,-4
 200e8f4:	10c00017 	ldw	r3,0(r2)
 200e8f8:	183ffc26 	beq	r3,zero,200e8ec <__alt_mem_epcs_flash_controller+0xfe0058ec>
 200e8fc:	00800144 	movi	r2,5
 200e900:	00001a06 	br	200e96c <__hexnan+0x1bc>
 200e904:	42000044 	addi	r8,r8,1
 200e908:	52800044 	addi	r10,r10,1
 200e90c:	7a000716 	blt	r15,r8,200e92c <__hexnan+0x17c>
 200e910:	28800017 	ldw	r2,0(r5)
 200e914:	1004913a 	slli	r2,r2,4
 200e918:	39c003cc 	andi	r7,r7,15
 200e91c:	11ceb03a 	or	r7,r2,r7
 200e920:	29c00015 	stw	r7,0(r5)
 200e924:	18c00044 	addi	r3,r3,1
 200e928:	003fdb06 	br	200e898 <__alt_mem_epcs_flash_controller+0xfe005898>
 200e92c:	317fd92e 	bgeu	r6,r5,200e894 <__alt_mem_epcs_flash_controller+0xfe005894>
 200e930:	283fff15 	stw	zero,-4(r5)
 200e934:	0005883a 	mov	r2,zero
 200e938:	297fff04 	addi	r5,r5,-4
 200e93c:	02000044 	movi	r8,1
 200e940:	003ff506 	br	200e918 <__alt_mem_epcs_flash_controller+0xfe005918>
 200e944:	283fff15 	stw	zero,-4(r5)
 200e948:	297fff04 	addi	r5,r5,-4
 200e94c:	501b883a 	mov	r13,r10
 200e950:	2817883a 	mov	r11,r5
 200e954:	0011883a 	mov	r8,zero
 200e958:	18c00044 	addi	r3,r3,1
 200e95c:	003fce06 	br	200e898 <__alt_mem_epcs_flash_controller+0xfe005898>
 200e960:	01c00a44 	movi	r7,41
 200e964:	11c02026 	beq	r2,r7,200e9e8 <__hexnan+0x238>
 200e968:	00800104 	movi	r2,4
 200e96c:	dfc00917 	ldw	ra,36(sp)
 200e970:	dd400817 	ldw	r21,32(sp)
 200e974:	dd000717 	ldw	r20,28(sp)
 200e978:	dcc00617 	ldw	r19,24(sp)
 200e97c:	dc800517 	ldw	r18,20(sp)
 200e980:	dc400417 	ldw	r17,16(sp)
 200e984:	dc000317 	ldw	r16,12(sp)
 200e988:	dec00a04 	addi	sp,sp,40
 200e98c:	f800283a 	ret
 200e990:	d9000015 	stw	r4,0(sp)
 200e994:	d9400115 	stw	r5,4(sp)
 200e998:	d9800215 	stw	r6,8(sp)
 200e99c:	200dfa80 	call	200dfa8 <__hexdig_init>
 200e9a0:	d9800217 	ldw	r6,8(sp)
 200e9a4:	d9400117 	ldw	r5,4(sp)
 200e9a8:	d9000017 	ldw	r4,0(sp)
 200e9ac:	003f8c06 	br	200e7e0 <__alt_mem_epcs_flash_controller+0xfe0057e0>
 200e9b0:	a03fc926 	beq	r20,zero,200e8d8 <__alt_mem_epcs_flash_controller+0xfe0058d8>
 200e9b4:	00800804 	movi	r2,32
 200e9b8:	1529c83a 	sub	r20,r2,r20
 200e9bc:	00ffffc4 	movi	r3,-1
 200e9c0:	90bfff17 	ldw	r2,-4(r18)
 200e9c4:	1d06d83a 	srl	r3,r3,r20
 200e9c8:	1884703a 	and	r2,r3,r2
 200e9cc:	90bfff15 	stw	r2,-4(r18)
 200e9d0:	003fc206 	br	200e8dc <__alt_mem_epcs_flash_controller+0xfe0058dc>
 200e9d4:	3005883a 	mov	r2,r6
 200e9d8:	00c00044 	movi	r3,1
 200e9dc:	10c00015 	stw	r3,0(r2)
 200e9e0:	00800144 	movi	r2,5
 200e9e4:	003fe106 	br	200e96c <__alt_mem_epcs_flash_controller+0xfe00596c>
 200e9e8:	503fdf26 	beq	r10,zero,200e968 <__alt_mem_epcs_flash_controller+0xfe005968>
 200e9ec:	18c00084 	addi	r3,r3,2
 200e9f0:	20c00015 	stw	r3,0(r4)
 200e9f4:	003fab06 	br	200e8a4 <__alt_mem_epcs_flash_controller+0xfe0058a4>
 200e9f8:	00800204 	movi	r2,8
 200e9fc:	1211c83a 	sub	r8,r2,r8
 200ea00:	4211883a 	add	r8,r8,r8
 200ea04:	28c00017 	ldw	r3,0(r5)
 200ea08:	4211883a 	add	r8,r8,r8
 200ea0c:	02400804 	movi	r9,32
 200ea10:	4a13c83a 	sub	r9,r9,r8
 200ea14:	2805883a 	mov	r2,r5
 200ea18:	11000117 	ldw	r4,4(r2)
 200ea1c:	10800104 	addi	r2,r2,4
 200ea20:	224e983a 	sll	r7,r4,r9
 200ea24:	19ceb03a 	or	r7,r3,r7
 200ea28:	2206d83a 	srl	r3,r4,r8
 200ea2c:	11ffff15 	stw	r7,-4(r2)
 200ea30:	10c00015 	stw	r3,0(r2)
 200ea34:	12fff836 	bltu	r2,r11,200ea18 <__alt_mem_epcs_flash_controller+0xfe005a18>
 200ea38:	003f9d06 	br	200e8b0 <__alt_mem_epcs_flash_controller+0xfe0058b0>

0200ea3c <_isatty_r>:
 200ea3c:	defffd04 	addi	sp,sp,-12
 200ea40:	dc400115 	stw	r17,4(sp)
 200ea44:	dc000015 	stw	r16,0(sp)
 200ea48:	2023883a 	mov	r17,r4
 200ea4c:	04008274 	movhi	r16,521
 200ea50:	842afb04 	addi	r16,r16,-21524
 200ea54:	2809883a 	mov	r4,r5
 200ea58:	dfc00215 	stw	ra,8(sp)
 200ea5c:	80000015 	stw	zero,0(r16)
 200ea60:	20107e00 	call	20107e0 <isatty>
 200ea64:	00ffffc4 	movi	r3,-1
 200ea68:	10c00526 	beq	r2,r3,200ea80 <_isatty_r+0x44>
 200ea6c:	dfc00217 	ldw	ra,8(sp)
 200ea70:	dc400117 	ldw	r17,4(sp)
 200ea74:	dc000017 	ldw	r16,0(sp)
 200ea78:	dec00304 	addi	sp,sp,12
 200ea7c:	f800283a 	ret
 200ea80:	80c00017 	ldw	r3,0(r16)
 200ea84:	183ff926 	beq	r3,zero,200ea6c <__alt_mem_epcs_flash_controller+0xfe005a6c>
 200ea88:	88c00015 	stw	r3,0(r17)
 200ea8c:	dfc00217 	ldw	ra,8(sp)
 200ea90:	dc400117 	ldw	r17,4(sp)
 200ea94:	dc000017 	ldw	r16,0(sp)
 200ea98:	dec00304 	addi	sp,sp,12
 200ea9c:	f800283a 	ret

0200eaa0 <__fixunsdfsi>:
 200eaa0:	defffd04 	addi	sp,sp,-12
 200eaa4:	000d883a 	mov	r6,zero
 200eaa8:	01d07834 	movhi	r7,16864
 200eaac:	dc400115 	stw	r17,4(sp)
 200eab0:	dc000015 	stw	r16,0(sp)
 200eab4:	dfc00215 	stw	ra,8(sp)
 200eab8:	2023883a 	mov	r17,r4
 200eabc:	2821883a 	mov	r16,r5
 200eac0:	200fdc40 	call	200fdc4 <__gedf2>
 200eac4:	1000080e 	bge	r2,zero,200eae8 <__fixunsdfsi+0x48>
 200eac8:	8809883a 	mov	r4,r17
 200eacc:	800b883a 	mov	r5,r16
 200ead0:	2001d5c0 	call	2001d5c <__fixdfsi>
 200ead4:	dfc00217 	ldw	ra,8(sp)
 200ead8:	dc400117 	ldw	r17,4(sp)
 200eadc:	dc000017 	ldw	r16,0(sp)
 200eae0:	dec00304 	addi	sp,sp,12
 200eae4:	f800283a 	ret
 200eae8:	000d883a 	mov	r6,zero
 200eaec:	01d07834 	movhi	r7,16864
 200eaf0:	8809883a 	mov	r4,r17
 200eaf4:	800b883a 	mov	r5,r16
 200eaf8:	200fc480 	call	200fc48 <__subdf3>
 200eafc:	180b883a 	mov	r5,r3
 200eb00:	1009883a 	mov	r4,r2
 200eb04:	2001d5c0 	call	2001d5c <__fixdfsi>
 200eb08:	00e00034 	movhi	r3,32768
 200eb0c:	10c5883a 	add	r2,r2,r3
 200eb10:	dfc00217 	ldw	ra,8(sp)
 200eb14:	dc400117 	ldw	r17,4(sp)
 200eb18:	dc000017 	ldw	r16,0(sp)
 200eb1c:	dec00304 	addi	sp,sp,12
 200eb20:	f800283a 	ret

0200eb24 <__udivdi3>:
 200eb24:	defff504 	addi	sp,sp,-44
 200eb28:	dd000515 	stw	r20,20(sp)
 200eb2c:	dcc00415 	stw	r19,16(sp)
 200eb30:	dc800315 	stw	r18,12(sp)
 200eb34:	dc400215 	stw	r17,8(sp)
 200eb38:	dc000115 	stw	r16,4(sp)
 200eb3c:	dfc00a15 	stw	ra,40(sp)
 200eb40:	df000915 	stw	fp,36(sp)
 200eb44:	ddc00815 	stw	r23,32(sp)
 200eb48:	dd800715 	stw	r22,28(sp)
 200eb4c:	dd400615 	stw	r21,24(sp)
 200eb50:	2025883a 	mov	r18,r4
 200eb54:	2823883a 	mov	r17,r5
 200eb58:	3021883a 	mov	r16,r6
 200eb5c:	2027883a 	mov	r19,r4
 200eb60:	2829883a 	mov	r20,r5
 200eb64:	3800451e 	bne	r7,zero,200ec7c <__udivdi3+0x158>
 200eb68:	2980652e 	bgeu	r5,r6,200ed00 <__udivdi3+0x1dc>
 200eb6c:	00bfffd4 	movui	r2,65535
 200eb70:	1180b436 	bltu	r2,r6,200ee44 <__udivdi3+0x320>
 200eb74:	00803fc4 	movi	r2,255
 200eb78:	11816636 	bltu	r2,r6,200f114 <__udivdi3+0x5f0>
 200eb7c:	0005883a 	mov	r2,zero
 200eb80:	0007883a 	mov	r3,zero
 200eb84:	3084d83a 	srl	r2,r6,r2
 200eb88:	01008234 	movhi	r4,520
 200eb8c:	211b0f04 	addi	r4,r4,27708
 200eb90:	2085883a 	add	r2,r4,r2
 200eb94:	10800003 	ldbu	r2,0(r2)
 200eb98:	10c7883a 	add	r3,r2,r3
 200eb9c:	00800804 	movi	r2,32
 200eba0:	10c5c83a 	sub	r2,r2,r3
 200eba4:	10000526 	beq	r2,zero,200ebbc <__udivdi3+0x98>
 200eba8:	88a2983a 	sll	r17,r17,r2
 200ebac:	90c6d83a 	srl	r3,r18,r3
 200ebb0:	30a0983a 	sll	r16,r6,r2
 200ebb4:	90a6983a 	sll	r19,r18,r2
 200ebb8:	88e8b03a 	or	r20,r17,r3
 200ebbc:	8022d43a 	srli	r17,r16,16
 200ebc0:	a009883a 	mov	r4,r20
 200ebc4:	857fffcc 	andi	r21,r16,65535
 200ebc8:	880b883a 	mov	r5,r17
 200ebcc:	2001f480 	call	2001f48 <__umodsi3>
 200ebd0:	a009883a 	mov	r4,r20
 200ebd4:	880b883a 	mov	r5,r17
 200ebd8:	102d883a 	mov	r22,r2
 200ebdc:	2001f400 	call	2001f40 <__udivsi3>
 200ebe0:	1009883a 	mov	r4,r2
 200ebe4:	a80b883a 	mov	r5,r21
 200ebe8:	1025883a 	mov	r18,r2
 200ebec:	2001f500 	call	2001f50 <__mulsi3>
 200ebf0:	1009883a 	mov	r4,r2
 200ebf4:	b006943a 	slli	r3,r22,16
 200ebf8:	9804d43a 	srli	r2,r19,16
 200ebfc:	1886b03a 	or	r3,r3,r2
 200ec00:	1900052e 	bgeu	r3,r4,200ec18 <__udivdi3+0xf4>
 200ec04:	1c07883a 	add	r3,r3,r16
 200ec08:	90bfffc4 	addi	r2,r18,-1
 200ec0c:	1c000136 	bltu	r3,r16,200ec14 <__udivdi3+0xf0>
 200ec10:	19015536 	bltu	r3,r4,200f168 <__udivdi3+0x644>
 200ec14:	1025883a 	mov	r18,r2
 200ec18:	1929c83a 	sub	r20,r3,r4
 200ec1c:	880b883a 	mov	r5,r17
 200ec20:	a009883a 	mov	r4,r20
 200ec24:	2001f480 	call	2001f48 <__umodsi3>
 200ec28:	102d883a 	mov	r22,r2
 200ec2c:	880b883a 	mov	r5,r17
 200ec30:	a009883a 	mov	r4,r20
 200ec34:	b02c943a 	slli	r22,r22,16
 200ec38:	2001f400 	call	2001f40 <__udivsi3>
 200ec3c:	1009883a 	mov	r4,r2
 200ec40:	a80b883a 	mov	r5,r21
 200ec44:	9cffffcc 	andi	r19,r19,65535
 200ec48:	1023883a 	mov	r17,r2
 200ec4c:	b4e6b03a 	or	r19,r22,r19
 200ec50:	2001f500 	call	2001f50 <__mulsi3>
 200ec54:	9880052e 	bgeu	r19,r2,200ec6c <__udivdi3+0x148>
 200ec58:	9c27883a 	add	r19,r19,r16
 200ec5c:	88ffffc4 	addi	r3,r17,-1
 200ec60:	9c011436 	bltu	r19,r16,200f0b4 <__udivdi3+0x590>
 200ec64:	9881132e 	bgeu	r19,r2,200f0b4 <__udivdi3+0x590>
 200ec68:	8c7fff84 	addi	r17,r17,-2
 200ec6c:	9004943a 	slli	r2,r18,16
 200ec70:	0007883a 	mov	r3,zero
 200ec74:	8884b03a 	or	r2,r17,r2
 200ec78:	00001506 	br	200ecd0 <__udivdi3+0x1ac>
 200ec7c:	29c06a36 	bltu	r5,r7,200ee28 <__udivdi3+0x304>
 200ec80:	00bfffd4 	movui	r2,65535
 200ec84:	11c06a2e 	bgeu	r2,r7,200ee30 <__udivdi3+0x30c>
 200ec88:	00804034 	movhi	r2,256
 200ec8c:	10bfffc4 	addi	r2,r2,-1
 200ec90:	11c11436 	bltu	r2,r7,200f0e4 <__udivdi3+0x5c0>
 200ec94:	00c00404 	movi	r3,16
 200ec98:	180b883a 	mov	r5,r3
 200ec9c:	38c6d83a 	srl	r3,r7,r3
 200eca0:	01008234 	movhi	r4,520
 200eca4:	211b0f04 	addi	r4,r4,27708
 200eca8:	04000804 	movi	r16,32
 200ecac:	20c7883a 	add	r3,r4,r3
 200ecb0:	18800003 	ldbu	r2,0(r3)
 200ecb4:	1145883a 	add	r2,r2,r5
 200ecb8:	80a1c83a 	sub	r16,r16,r2
 200ecbc:	80006e1e 	bne	r16,zero,200ee78 <__udivdi3+0x354>
 200ecc0:	0007883a 	mov	r3,zero
 200ecc4:	3c406a36 	bltu	r7,r17,200ee70 <__udivdi3+0x34c>
 200ecc8:	9180692e 	bgeu	r18,r6,200ee70 <__udivdi3+0x34c>
 200eccc:	0005883a 	mov	r2,zero
 200ecd0:	dfc00a17 	ldw	ra,40(sp)
 200ecd4:	df000917 	ldw	fp,36(sp)
 200ecd8:	ddc00817 	ldw	r23,32(sp)
 200ecdc:	dd800717 	ldw	r22,28(sp)
 200ece0:	dd400617 	ldw	r21,24(sp)
 200ece4:	dd000517 	ldw	r20,20(sp)
 200ece8:	dcc00417 	ldw	r19,16(sp)
 200ecec:	dc800317 	ldw	r18,12(sp)
 200ecf0:	dc400217 	ldw	r17,8(sp)
 200ecf4:	dc000117 	ldw	r16,4(sp)
 200ecf8:	dec00b04 	addi	sp,sp,44
 200ecfc:	f800283a 	ret
 200ed00:	3000041e 	bne	r6,zero,200ed14 <__udivdi3+0x1f0>
 200ed04:	01000044 	movi	r4,1
 200ed08:	000b883a 	mov	r5,zero
 200ed0c:	2001f400 	call	2001f40 <__udivsi3>
 200ed10:	1021883a 	mov	r16,r2
 200ed14:	00bfffd4 	movui	r2,65535
 200ed18:	1400502e 	bgeu	r2,r16,200ee5c <__udivdi3+0x338>
 200ed1c:	00804034 	movhi	r2,256
 200ed20:	10bfffc4 	addi	r2,r2,-1
 200ed24:	1400f536 	bltu	r2,r16,200f0fc <__udivdi3+0x5d8>
 200ed28:	00800404 	movi	r2,16
 200ed2c:	1007883a 	mov	r3,r2
 200ed30:	8084d83a 	srl	r2,r16,r2
 200ed34:	01008234 	movhi	r4,520
 200ed38:	211b0f04 	addi	r4,r4,27708
 200ed3c:	2085883a 	add	r2,r4,r2
 200ed40:	10800003 	ldbu	r2,0(r2)
 200ed44:	10c7883a 	add	r3,r2,r3
 200ed48:	00800804 	movi	r2,32
 200ed4c:	10c5c83a 	sub	r2,r2,r3
 200ed50:	1000a01e 	bne	r2,zero,200efd4 <__udivdi3+0x4b0>
 200ed54:	8028d43a 	srli	r20,r16,16
 200ed58:	8c23c83a 	sub	r17,r17,r16
 200ed5c:	857fffcc 	andi	r21,r16,65535
 200ed60:	00c00044 	movi	r3,1
 200ed64:	8809883a 	mov	r4,r17
 200ed68:	a00b883a 	mov	r5,r20
 200ed6c:	d8c00015 	stw	r3,0(sp)
 200ed70:	2001f480 	call	2001f48 <__umodsi3>
 200ed74:	8809883a 	mov	r4,r17
 200ed78:	a00b883a 	mov	r5,r20
 200ed7c:	102d883a 	mov	r22,r2
 200ed80:	2001f400 	call	2001f40 <__udivsi3>
 200ed84:	1009883a 	mov	r4,r2
 200ed88:	a80b883a 	mov	r5,r21
 200ed8c:	1025883a 	mov	r18,r2
 200ed90:	2001f500 	call	2001f50 <__mulsi3>
 200ed94:	1009883a 	mov	r4,r2
 200ed98:	b00c943a 	slli	r6,r22,16
 200ed9c:	9804d43a 	srli	r2,r19,16
 200eda0:	d8c00017 	ldw	r3,0(sp)
 200eda4:	308cb03a 	or	r6,r6,r2
 200eda8:	3100052e 	bgeu	r6,r4,200edc0 <__udivdi3+0x29c>
 200edac:	340d883a 	add	r6,r6,r16
 200edb0:	90bfffc4 	addi	r2,r18,-1
 200edb4:	34000136 	bltu	r6,r16,200edbc <__udivdi3+0x298>
 200edb8:	3100e836 	bltu	r6,r4,200f15c <__udivdi3+0x638>
 200edbc:	1025883a 	mov	r18,r2
 200edc0:	3123c83a 	sub	r17,r6,r4
 200edc4:	8809883a 	mov	r4,r17
 200edc8:	a00b883a 	mov	r5,r20
 200edcc:	d8c00015 	stw	r3,0(sp)
 200edd0:	2001f480 	call	2001f48 <__umodsi3>
 200edd4:	102d883a 	mov	r22,r2
 200edd8:	8809883a 	mov	r4,r17
 200eddc:	a00b883a 	mov	r5,r20
 200ede0:	b02c943a 	slli	r22,r22,16
 200ede4:	2001f400 	call	2001f40 <__udivsi3>
 200ede8:	1009883a 	mov	r4,r2
 200edec:	a80b883a 	mov	r5,r21
 200edf0:	9cffffcc 	andi	r19,r19,65535
 200edf4:	1023883a 	mov	r17,r2
 200edf8:	b4e6b03a 	or	r19,r22,r19
 200edfc:	2001f500 	call	2001f50 <__mulsi3>
 200ee00:	d8c00017 	ldw	r3,0(sp)
 200ee04:	9880052e 	bgeu	r19,r2,200ee1c <__udivdi3+0x2f8>
 200ee08:	9c27883a 	add	r19,r19,r16
 200ee0c:	893fffc4 	addi	r4,r17,-1
 200ee10:	9c00aa36 	bltu	r19,r16,200f0bc <__udivdi3+0x598>
 200ee14:	9880a92e 	bgeu	r19,r2,200f0bc <__udivdi3+0x598>
 200ee18:	8c7fff84 	addi	r17,r17,-2
 200ee1c:	9004943a 	slli	r2,r18,16
 200ee20:	8884b03a 	or	r2,r17,r2
 200ee24:	003faa06 	br	200ecd0 <__alt_mem_epcs_flash_controller+0xfe005cd0>
 200ee28:	0007883a 	mov	r3,zero
 200ee2c:	003fa706 	br	200eccc <__alt_mem_epcs_flash_controller+0xfe005ccc>
 200ee30:	00803fc4 	movi	r2,255
 200ee34:	11c0ae36 	bltu	r2,r7,200f0f0 <__udivdi3+0x5cc>
 200ee38:	0007883a 	mov	r3,zero
 200ee3c:	000b883a 	mov	r5,zero
 200ee40:	003f9606 	br	200ec9c <__alt_mem_epcs_flash_controller+0xfe005c9c>
 200ee44:	00804034 	movhi	r2,256
 200ee48:	10bfffc4 	addi	r2,r2,-1
 200ee4c:	1180ae36 	bltu	r2,r6,200f108 <__udivdi3+0x5e4>
 200ee50:	00800404 	movi	r2,16
 200ee54:	1007883a 	mov	r3,r2
 200ee58:	003f4a06 	br	200eb84 <__alt_mem_epcs_flash_controller+0xfe005b84>
 200ee5c:	00803fc4 	movi	r2,255
 200ee60:	1400af36 	bltu	r2,r16,200f120 <__udivdi3+0x5fc>
 200ee64:	0005883a 	mov	r2,zero
 200ee68:	0007883a 	mov	r3,zero
 200ee6c:	003fb006 	br	200ed30 <__alt_mem_epcs_flash_controller+0xfe005d30>
 200ee70:	00800044 	movi	r2,1
 200ee74:	003f9606 	br	200ecd0 <__alt_mem_epcs_flash_controller+0xfe005cd0>
 200ee78:	3c0e983a 	sll	r7,r7,r16
 200ee7c:	3086d83a 	srl	r3,r6,r2
 200ee80:	88aed83a 	srl	r23,r17,r2
 200ee84:	9084d83a 	srl	r2,r18,r2
 200ee88:	38e6b03a 	or	r19,r7,r3
 200ee8c:	9828d43a 	srli	r20,r19,16
 200ee90:	8c22983a 	sll	r17,r17,r16
 200ee94:	b809883a 	mov	r4,r23
 200ee98:	a00b883a 	mov	r5,r20
 200ee9c:	342a983a 	sll	r21,r6,r16
 200eea0:	88a2b03a 	or	r17,r17,r2
 200eea4:	2001f480 	call	2001f48 <__umodsi3>
 200eea8:	b809883a 	mov	r4,r23
 200eeac:	a00b883a 	mov	r5,r20
 200eeb0:	1039883a 	mov	fp,r2
 200eeb4:	9dbfffcc 	andi	r22,r19,65535
 200eeb8:	2001f400 	call	2001f40 <__udivsi3>
 200eebc:	1009883a 	mov	r4,r2
 200eec0:	b00b883a 	mov	r5,r22
 200eec4:	102f883a 	mov	r23,r2
 200eec8:	2001f500 	call	2001f50 <__mulsi3>
 200eecc:	1009883a 	mov	r4,r2
 200eed0:	e00e943a 	slli	r7,fp,16
 200eed4:	8804d43a 	srli	r2,r17,16
 200eed8:	388eb03a 	or	r7,r7,r2
 200eedc:	3900042e 	bgeu	r7,r4,200eef0 <__udivdi3+0x3cc>
 200eee0:	3ccf883a 	add	r7,r7,r19
 200eee4:	b8bfffc4 	addi	r2,r23,-1
 200eee8:	3cc0942e 	bgeu	r7,r19,200f13c <__udivdi3+0x618>
 200eeec:	102f883a 	mov	r23,r2
 200eef0:	3939c83a 	sub	fp,r7,r4
 200eef4:	a00b883a 	mov	r5,r20
 200eef8:	e009883a 	mov	r4,fp
 200eefc:	2001f480 	call	2001f48 <__umodsi3>
 200ef00:	a00b883a 	mov	r5,r20
 200ef04:	e009883a 	mov	r4,fp
 200ef08:	d8800015 	stw	r2,0(sp)
 200ef0c:	2001f400 	call	2001f40 <__udivsi3>
 200ef10:	1009883a 	mov	r4,r2
 200ef14:	b00b883a 	mov	r5,r22
 200ef18:	1029883a 	mov	r20,r2
 200ef1c:	2001f500 	call	2001f50 <__mulsi3>
 200ef20:	d8c00017 	ldw	r3,0(sp)
 200ef24:	8c7fffcc 	andi	r17,r17,65535
 200ef28:	1806943a 	slli	r3,r3,16
 200ef2c:	1c46b03a 	or	r3,r3,r17
 200ef30:	1880042e 	bgeu	r3,r2,200ef44 <__udivdi3+0x420>
 200ef34:	1cc7883a 	add	r3,r3,r19
 200ef38:	a13fffc4 	addi	r4,r20,-1
 200ef3c:	1cc07b2e 	bgeu	r3,r19,200f12c <__udivdi3+0x608>
 200ef40:	2029883a 	mov	r20,r4
 200ef44:	b82e943a 	slli	r23,r23,16
 200ef48:	a822d43a 	srli	r17,r21,16
 200ef4c:	ad7fffcc 	andi	r21,r21,65535
 200ef50:	a5e8b03a 	or	r20,r20,r23
 200ef54:	a5bfffcc 	andi	r22,r20,65535
 200ef58:	b009883a 	mov	r4,r22
 200ef5c:	a80b883a 	mov	r5,r21
 200ef60:	18afc83a 	sub	r23,r3,r2
 200ef64:	a026d43a 	srli	r19,r20,16
 200ef68:	2001f500 	call	2001f50 <__mulsi3>
 200ef6c:	b009883a 	mov	r4,r22
 200ef70:	880b883a 	mov	r5,r17
 200ef74:	1039883a 	mov	fp,r2
 200ef78:	2001f500 	call	2001f50 <__mulsi3>
 200ef7c:	a80b883a 	mov	r5,r21
 200ef80:	9809883a 	mov	r4,r19
 200ef84:	102d883a 	mov	r22,r2
 200ef88:	2001f500 	call	2001f50 <__mulsi3>
 200ef8c:	9809883a 	mov	r4,r19
 200ef90:	880b883a 	mov	r5,r17
 200ef94:	102b883a 	mov	r21,r2
 200ef98:	2001f500 	call	2001f50 <__mulsi3>
 200ef9c:	100b883a 	mov	r5,r2
 200efa0:	e004d43a 	srli	r2,fp,16
 200efa4:	ad89883a 	add	r4,r21,r22
 200efa8:	2089883a 	add	r4,r4,r2
 200efac:	2540022e 	bgeu	r4,r21,200efb8 <__udivdi3+0x494>
 200efb0:	00800074 	movhi	r2,1
 200efb4:	288b883a 	add	r5,r5,r2
 200efb8:	2004d43a 	srli	r2,r4,16
 200efbc:	288b883a 	add	r5,r5,r2
 200efc0:	b9404536 	bltu	r23,r5,200f0d8 <__udivdi3+0x5b4>
 200efc4:	b9403f26 	beq	r23,r5,200f0c4 <__udivdi3+0x5a0>
 200efc8:	a005883a 	mov	r2,r20
 200efcc:	0007883a 	mov	r3,zero
 200efd0:	003f3f06 	br	200ecd0 <__alt_mem_epcs_flash_controller+0xfe005cd0>
 200efd4:	80a0983a 	sll	r16,r16,r2
 200efd8:	88eed83a 	srl	r23,r17,r3
 200efdc:	90c6d83a 	srl	r3,r18,r3
 200efe0:	8028d43a 	srli	r20,r16,16
 200efe4:	88a2983a 	sll	r17,r17,r2
 200efe8:	b809883a 	mov	r4,r23
 200efec:	a00b883a 	mov	r5,r20
 200eff0:	88ecb03a 	or	r22,r17,r3
 200eff4:	90a6983a 	sll	r19,r18,r2
 200eff8:	2001f480 	call	2001f48 <__umodsi3>
 200effc:	b809883a 	mov	r4,r23
 200f000:	a00b883a 	mov	r5,r20
 200f004:	1023883a 	mov	r17,r2
 200f008:	857fffcc 	andi	r21,r16,65535
 200f00c:	2001f400 	call	2001f40 <__udivsi3>
 200f010:	1009883a 	mov	r4,r2
 200f014:	a80b883a 	mov	r5,r21
 200f018:	102f883a 	mov	r23,r2
 200f01c:	2001f500 	call	2001f50 <__mulsi3>
 200f020:	1009883a 	mov	r4,r2
 200f024:	880a943a 	slli	r5,r17,16
 200f028:	b004d43a 	srli	r2,r22,16
 200f02c:	288ab03a 	or	r5,r5,r2
 200f030:	2900062e 	bgeu	r5,r4,200f04c <__udivdi3+0x528>
 200f034:	2c0b883a 	add	r5,r5,r16
 200f038:	b8bfffc4 	addi	r2,r23,-1
 200f03c:	2c004536 	bltu	r5,r16,200f154 <__udivdi3+0x630>
 200f040:	2900442e 	bgeu	r5,r4,200f154 <__udivdi3+0x630>
 200f044:	bdffff84 	addi	r23,r23,-2
 200f048:	2c0b883a 	add	r5,r5,r16
 200f04c:	2925c83a 	sub	r18,r5,r4
 200f050:	9009883a 	mov	r4,r18
 200f054:	a00b883a 	mov	r5,r20
 200f058:	2001f480 	call	2001f48 <__umodsi3>
 200f05c:	1023883a 	mov	r17,r2
 200f060:	9009883a 	mov	r4,r18
 200f064:	a00b883a 	mov	r5,r20
 200f068:	8822943a 	slli	r17,r17,16
 200f06c:	2001f400 	call	2001f40 <__udivsi3>
 200f070:	1009883a 	mov	r4,r2
 200f074:	a80b883a 	mov	r5,r21
 200f078:	b5bfffcc 	andi	r22,r22,65535
 200f07c:	1025883a 	mov	r18,r2
 200f080:	8da2b03a 	or	r17,r17,r22
 200f084:	2001f500 	call	2001f50 <__mulsi3>
 200f088:	8880062e 	bgeu	r17,r2,200f0a4 <__udivdi3+0x580>
 200f08c:	8c23883a 	add	r17,r17,r16
 200f090:	90ffffc4 	addi	r3,r18,-1
 200f094:	8c002d36 	bltu	r17,r16,200f14c <__udivdi3+0x628>
 200f098:	88802c2e 	bgeu	r17,r2,200f14c <__udivdi3+0x628>
 200f09c:	94bfff84 	addi	r18,r18,-2
 200f0a0:	8c23883a 	add	r17,r17,r16
 200f0a4:	b806943a 	slli	r3,r23,16
 200f0a8:	88a3c83a 	sub	r17,r17,r2
 200f0ac:	90c6b03a 	or	r3,r18,r3
 200f0b0:	003f2c06 	br	200ed64 <__alt_mem_epcs_flash_controller+0xfe005d64>
 200f0b4:	1823883a 	mov	r17,r3
 200f0b8:	003eec06 	br	200ec6c <__alt_mem_epcs_flash_controller+0xfe005c6c>
 200f0bc:	2023883a 	mov	r17,r4
 200f0c0:	003f5606 	br	200ee1c <__alt_mem_epcs_flash_controller+0xfe005e1c>
 200f0c4:	2008943a 	slli	r4,r4,16
 200f0c8:	9420983a 	sll	r16,r18,r16
 200f0cc:	e73fffcc 	andi	fp,fp,65535
 200f0d0:	2709883a 	add	r4,r4,fp
 200f0d4:	813fbc2e 	bgeu	r16,r4,200efc8 <__alt_mem_epcs_flash_controller+0xfe005fc8>
 200f0d8:	a0bfffc4 	addi	r2,r20,-1
 200f0dc:	0007883a 	mov	r3,zero
 200f0e0:	003efb06 	br	200ecd0 <__alt_mem_epcs_flash_controller+0xfe005cd0>
 200f0e4:	00c00604 	movi	r3,24
 200f0e8:	180b883a 	mov	r5,r3
 200f0ec:	003eeb06 	br	200ec9c <__alt_mem_epcs_flash_controller+0xfe005c9c>
 200f0f0:	00c00204 	movi	r3,8
 200f0f4:	180b883a 	mov	r5,r3
 200f0f8:	003ee806 	br	200ec9c <__alt_mem_epcs_flash_controller+0xfe005c9c>
 200f0fc:	00800604 	movi	r2,24
 200f100:	1007883a 	mov	r3,r2
 200f104:	003f0a06 	br	200ed30 <__alt_mem_epcs_flash_controller+0xfe005d30>
 200f108:	00800604 	movi	r2,24
 200f10c:	1007883a 	mov	r3,r2
 200f110:	003e9c06 	br	200eb84 <__alt_mem_epcs_flash_controller+0xfe005b84>
 200f114:	00800204 	movi	r2,8
 200f118:	1007883a 	mov	r3,r2
 200f11c:	003e9906 	br	200eb84 <__alt_mem_epcs_flash_controller+0xfe005b84>
 200f120:	00800204 	movi	r2,8
 200f124:	1007883a 	mov	r3,r2
 200f128:	003f0106 	br	200ed30 <__alt_mem_epcs_flash_controller+0xfe005d30>
 200f12c:	18bf842e 	bgeu	r3,r2,200ef40 <__alt_mem_epcs_flash_controller+0xfe005f40>
 200f130:	a53fff84 	addi	r20,r20,-2
 200f134:	1cc7883a 	add	r3,r3,r19
 200f138:	003f8206 	br	200ef44 <__alt_mem_epcs_flash_controller+0xfe005f44>
 200f13c:	393f6b2e 	bgeu	r7,r4,200eeec <__alt_mem_epcs_flash_controller+0xfe005eec>
 200f140:	bdffff84 	addi	r23,r23,-2
 200f144:	3ccf883a 	add	r7,r7,r19
 200f148:	003f6906 	br	200eef0 <__alt_mem_epcs_flash_controller+0xfe005ef0>
 200f14c:	1825883a 	mov	r18,r3
 200f150:	003fd406 	br	200f0a4 <__alt_mem_epcs_flash_controller+0xfe0060a4>
 200f154:	102f883a 	mov	r23,r2
 200f158:	003fbc06 	br	200f04c <__alt_mem_epcs_flash_controller+0xfe00604c>
 200f15c:	94bfff84 	addi	r18,r18,-2
 200f160:	340d883a 	add	r6,r6,r16
 200f164:	003f1606 	br	200edc0 <__alt_mem_epcs_flash_controller+0xfe005dc0>
 200f168:	94bfff84 	addi	r18,r18,-2
 200f16c:	1c07883a 	add	r3,r3,r16
 200f170:	003ea906 	br	200ec18 <__alt_mem_epcs_flash_controller+0xfe005c18>

0200f174 <__umoddi3>:
 200f174:	defff304 	addi	sp,sp,-52
 200f178:	dd000715 	stw	r20,28(sp)
 200f17c:	dcc00615 	stw	r19,24(sp)
 200f180:	dc800515 	stw	r18,20(sp)
 200f184:	dc400415 	stw	r17,16(sp)
 200f188:	dc000315 	stw	r16,12(sp)
 200f18c:	dfc00c15 	stw	ra,48(sp)
 200f190:	df000b15 	stw	fp,44(sp)
 200f194:	ddc00a15 	stw	r23,40(sp)
 200f198:	dd800915 	stw	r22,36(sp)
 200f19c:	dd400815 	stw	r21,32(sp)
 200f1a0:	2025883a 	mov	r18,r4
 200f1a4:	2823883a 	mov	r17,r5
 200f1a8:	3021883a 	mov	r16,r6
 200f1ac:	2027883a 	mov	r19,r4
 200f1b0:	2829883a 	mov	r20,r5
 200f1b4:	38003a1e 	bne	r7,zero,200f2a0 <__umoddi3+0x12c>
 200f1b8:	2980522e 	bgeu	r5,r6,200f304 <__umoddi3+0x190>
 200f1bc:	00bfffd4 	movui	r2,65535
 200f1c0:	1180a436 	bltu	r2,r6,200f454 <__umoddi3+0x2e0>
 200f1c4:	00803fc4 	movi	r2,255
 200f1c8:	11816036 	bltu	r2,r6,200f74c <__umoddi3+0x5d8>
 200f1cc:	0005883a 	mov	r2,zero
 200f1d0:	0009883a 	mov	r4,zero
 200f1d4:	3084d83a 	srl	r2,r6,r2
 200f1d8:	00c08234 	movhi	r3,520
 200f1dc:	18db0f04 	addi	r3,r3,27708
 200f1e0:	05400804 	movi	r21,32
 200f1e4:	1885883a 	add	r2,r3,r2
 200f1e8:	10800003 	ldbu	r2,0(r2)
 200f1ec:	1109883a 	add	r4,r2,r4
 200f1f0:	a92bc83a 	sub	r21,r21,r4
 200f1f4:	a8010e26 	beq	r21,zero,200f630 <__umoddi3+0x4bc>
 200f1f8:	8d62983a 	sll	r17,r17,r21
 200f1fc:	9108d83a 	srl	r4,r18,r4
 200f200:	3560983a 	sll	r16,r6,r21
 200f204:	9566983a 	sll	r19,r18,r21
 200f208:	8928b03a 	or	r20,r17,r4
 200f20c:	8022d43a 	srli	r17,r16,16
 200f210:	a009883a 	mov	r4,r20
 200f214:	84bfffcc 	andi	r18,r16,65535
 200f218:	880b883a 	mov	r5,r17
 200f21c:	2001f480 	call	2001f48 <__umodsi3>
 200f220:	a009883a 	mov	r4,r20
 200f224:	880b883a 	mov	r5,r17
 200f228:	102d883a 	mov	r22,r2
 200f22c:	2001f400 	call	2001f40 <__udivsi3>
 200f230:	1009883a 	mov	r4,r2
 200f234:	900b883a 	mov	r5,r18
 200f238:	2001f500 	call	2001f50 <__mulsi3>
 200f23c:	1009883a 	mov	r4,r2
 200f240:	b006943a 	slli	r3,r22,16
 200f244:	9804d43a 	srli	r2,r19,16
 200f248:	1886b03a 	or	r3,r3,r2
 200f24c:	1900042e 	bgeu	r3,r4,200f260 <__umoddi3+0xec>
 200f250:	1c07883a 	add	r3,r3,r16
 200f254:	1c000236 	bltu	r3,r16,200f260 <__umoddi3+0xec>
 200f258:	1900012e 	bgeu	r3,r4,200f260 <__umoddi3+0xec>
 200f25c:	1c07883a 	add	r3,r3,r16
 200f260:	1929c83a 	sub	r20,r3,r4
 200f264:	a009883a 	mov	r4,r20
 200f268:	880b883a 	mov	r5,r17
 200f26c:	2001f480 	call	2001f48 <__umodsi3>
 200f270:	102d883a 	mov	r22,r2
 200f274:	a009883a 	mov	r4,r20
 200f278:	880b883a 	mov	r5,r17
 200f27c:	b02c943a 	slli	r22,r22,16
 200f280:	2001f400 	call	2001f40 <__udivsi3>
 200f284:	1009883a 	mov	r4,r2
 200f288:	900b883a 	mov	r5,r18
 200f28c:	9cffffcc 	andi	r19,r19,65535
 200f290:	2001f500 	call	2001f50 <__mulsi3>
 200f294:	b4e6b03a 	or	r19,r22,r19
 200f298:	9880572e 	bgeu	r19,r2,200f3f8 <__umoddi3+0x284>
 200f29c:	00005206 	br	200f3e8 <__umoddi3+0x274>
 200f2a0:	29c05936 	bltu	r5,r7,200f408 <__umoddi3+0x294>
 200f2a4:	00bfffd4 	movui	r2,65535
 200f2a8:	11c0652e 	bgeu	r2,r7,200f440 <__umoddi3+0x2cc>
 200f2ac:	00804034 	movhi	r2,256
 200f2b0:	10bfffc4 	addi	r2,r2,-1
 200f2b4:	11c11936 	bltu	r2,r7,200f71c <__umoddi3+0x5a8>
 200f2b8:	00c00404 	movi	r3,16
 200f2bc:	1827883a 	mov	r19,r3
 200f2c0:	38c6d83a 	srl	r3,r7,r3
 200f2c4:	01008234 	movhi	r4,520
 200f2c8:	211b0f04 	addi	r4,r4,27708
 200f2cc:	04000804 	movi	r16,32
 200f2d0:	20c7883a 	add	r3,r4,r3
 200f2d4:	18800003 	ldbu	r2,0(r3)
 200f2d8:	14e7883a 	add	r19,r2,r19
 200f2dc:	84e1c83a 	sub	r16,r16,r19
 200f2e0:	8000671e 	bne	r16,zero,200f480 <__umoddi3+0x30c>
 200f2e4:	3c400136 	bltu	r7,r17,200f2ec <__umoddi3+0x178>
 200f2e8:	91812536 	bltu	r18,r6,200f780 <__umoddi3+0x60c>
 200f2ec:	9185c83a 	sub	r2,r18,r6
 200f2f0:	89e3c83a 	sub	r17,r17,r7
 200f2f4:	90a5803a 	cmpltu	r18,r18,r2
 200f2f8:	8ca9c83a 	sub	r20,r17,r18
 200f2fc:	a007883a 	mov	r3,r20
 200f300:	00004306 	br	200f410 <__umoddi3+0x29c>
 200f304:	3000041e 	bne	r6,zero,200f318 <__umoddi3+0x1a4>
 200f308:	01000044 	movi	r4,1
 200f30c:	000b883a 	mov	r5,zero
 200f310:	2001f400 	call	2001f40 <__udivsi3>
 200f314:	1021883a 	mov	r16,r2
 200f318:	00bfffd4 	movui	r2,65535
 200f31c:	1400532e 	bgeu	r2,r16,200f46c <__umoddi3+0x2f8>
 200f320:	00804034 	movhi	r2,256
 200f324:	10bfffc4 	addi	r2,r2,-1
 200f328:	14010536 	bltu	r2,r16,200f740 <__umoddi3+0x5cc>
 200f32c:	00800404 	movi	r2,16
 200f330:	1007883a 	mov	r3,r2
 200f334:	8084d83a 	srl	r2,r16,r2
 200f338:	01008234 	movhi	r4,520
 200f33c:	211b0f04 	addi	r4,r4,27708
 200f340:	05400804 	movi	r21,32
 200f344:	2085883a 	add	r2,r4,r2
 200f348:	10800003 	ldbu	r2,0(r2)
 200f34c:	10c7883a 	add	r3,r2,r3
 200f350:	a8ebc83a 	sub	r21,r21,r3
 200f354:	a800b81e 	bne	r21,zero,200f638 <__umoddi3+0x4c4>
 200f358:	8028d43a 	srli	r20,r16,16
 200f35c:	8c23c83a 	sub	r17,r17,r16
 200f360:	85bfffcc 	andi	r22,r16,65535
 200f364:	8809883a 	mov	r4,r17
 200f368:	a00b883a 	mov	r5,r20
 200f36c:	2001f480 	call	2001f48 <__umodsi3>
 200f370:	8809883a 	mov	r4,r17
 200f374:	a00b883a 	mov	r5,r20
 200f378:	1025883a 	mov	r18,r2
 200f37c:	2001f400 	call	2001f40 <__udivsi3>
 200f380:	1009883a 	mov	r4,r2
 200f384:	b00b883a 	mov	r5,r22
 200f388:	2001f500 	call	2001f50 <__mulsi3>
 200f38c:	1009883a 	mov	r4,r2
 200f390:	9006943a 	slli	r3,r18,16
 200f394:	9804d43a 	srli	r2,r19,16
 200f398:	1886b03a 	or	r3,r3,r2
 200f39c:	1900032e 	bgeu	r3,r4,200f3ac <__umoddi3+0x238>
 200f3a0:	1c07883a 	add	r3,r3,r16
 200f3a4:	1c000136 	bltu	r3,r16,200f3ac <__umoddi3+0x238>
 200f3a8:	1900f336 	bltu	r3,r4,200f778 <__umoddi3+0x604>
 200f3ac:	1923c83a 	sub	r17,r3,r4
 200f3b0:	8809883a 	mov	r4,r17
 200f3b4:	a00b883a 	mov	r5,r20
 200f3b8:	2001f480 	call	2001f48 <__umodsi3>
 200f3bc:	102f883a 	mov	r23,r2
 200f3c0:	8809883a 	mov	r4,r17
 200f3c4:	a00b883a 	mov	r5,r20
 200f3c8:	b82e943a 	slli	r23,r23,16
 200f3cc:	2001f400 	call	2001f40 <__udivsi3>
 200f3d0:	1009883a 	mov	r4,r2
 200f3d4:	b00b883a 	mov	r5,r22
 200f3d8:	9cffffcc 	andi	r19,r19,65535
 200f3dc:	2001f500 	call	2001f50 <__mulsi3>
 200f3e0:	bce6b03a 	or	r19,r23,r19
 200f3e4:	9880042e 	bgeu	r19,r2,200f3f8 <__umoddi3+0x284>
 200f3e8:	9c27883a 	add	r19,r19,r16
 200f3ec:	9c000236 	bltu	r19,r16,200f3f8 <__umoddi3+0x284>
 200f3f0:	9880012e 	bgeu	r19,r2,200f3f8 <__umoddi3+0x284>
 200f3f4:	9c27883a 	add	r19,r19,r16
 200f3f8:	9885c83a 	sub	r2,r19,r2
 200f3fc:	1544d83a 	srl	r2,r2,r21
 200f400:	0007883a 	mov	r3,zero
 200f404:	00000206 	br	200f410 <__umoddi3+0x29c>
 200f408:	2005883a 	mov	r2,r4
 200f40c:	2807883a 	mov	r3,r5
 200f410:	dfc00c17 	ldw	ra,48(sp)
 200f414:	df000b17 	ldw	fp,44(sp)
 200f418:	ddc00a17 	ldw	r23,40(sp)
 200f41c:	dd800917 	ldw	r22,36(sp)
 200f420:	dd400817 	ldw	r21,32(sp)
 200f424:	dd000717 	ldw	r20,28(sp)
 200f428:	dcc00617 	ldw	r19,24(sp)
 200f42c:	dc800517 	ldw	r18,20(sp)
 200f430:	dc400417 	ldw	r17,16(sp)
 200f434:	dc000317 	ldw	r16,12(sp)
 200f438:	dec00d04 	addi	sp,sp,52
 200f43c:	f800283a 	ret
 200f440:	00803fc4 	movi	r2,255
 200f444:	11c0b236 	bltu	r2,r7,200f710 <__umoddi3+0x59c>
 200f448:	0007883a 	mov	r3,zero
 200f44c:	0027883a 	mov	r19,zero
 200f450:	003f9b06 	br	200f2c0 <__alt_mem_epcs_flash_controller+0xfe0062c0>
 200f454:	00804034 	movhi	r2,256
 200f458:	10bfffc4 	addi	r2,r2,-1
 200f45c:	1180b236 	bltu	r2,r6,200f728 <__umoddi3+0x5b4>
 200f460:	00800404 	movi	r2,16
 200f464:	1009883a 	mov	r4,r2
 200f468:	003f5a06 	br	200f1d4 <__alt_mem_epcs_flash_controller+0xfe0061d4>
 200f46c:	00803fc4 	movi	r2,255
 200f470:	1400b036 	bltu	r2,r16,200f734 <__umoddi3+0x5c0>
 200f474:	0005883a 	mov	r2,zero
 200f478:	0007883a 	mov	r3,zero
 200f47c:	003fad06 	br	200f334 <__alt_mem_epcs_flash_controller+0xfe006334>
 200f480:	34c4d83a 	srl	r2,r6,r19
 200f484:	3c0e983a 	sll	r7,r7,r16
 200f488:	8cf8d83a 	srl	fp,r17,r19
 200f48c:	8c22983a 	sll	r17,r17,r16
 200f490:	38a8b03a 	or	r20,r7,r2
 200f494:	a02ad43a 	srli	r21,r20,16
 200f498:	94c4d83a 	srl	r2,r18,r19
 200f49c:	e009883a 	mov	r4,fp
 200f4a0:	a80b883a 	mov	r5,r21
 200f4a4:	342c983a 	sll	r22,r6,r16
 200f4a8:	88a2b03a 	or	r17,r17,r2
 200f4ac:	2001f480 	call	2001f48 <__umodsi3>
 200f4b0:	e009883a 	mov	r4,fp
 200f4b4:	a80b883a 	mov	r5,r21
 200f4b8:	a5ffffcc 	andi	r23,r20,65535
 200f4bc:	d8800215 	stw	r2,8(sp)
 200f4c0:	2001f400 	call	2001f40 <__udivsi3>
 200f4c4:	1009883a 	mov	r4,r2
 200f4c8:	b80b883a 	mov	r5,r23
 200f4cc:	1039883a 	mov	fp,r2
 200f4d0:	2001f500 	call	2001f50 <__mulsi3>
 200f4d4:	d8c00217 	ldw	r3,8(sp)
 200f4d8:	1009883a 	mov	r4,r2
 200f4dc:	8804d43a 	srli	r2,r17,16
 200f4e0:	1806943a 	slli	r3,r3,16
 200f4e4:	9424983a 	sll	r18,r18,r16
 200f4e8:	1886b03a 	or	r3,r3,r2
 200f4ec:	1900042e 	bgeu	r3,r4,200f500 <__umoddi3+0x38c>
 200f4f0:	1d07883a 	add	r3,r3,r20
 200f4f4:	e0bfffc4 	addi	r2,fp,-1
 200f4f8:	1d009b2e 	bgeu	r3,r20,200f768 <__umoddi3+0x5f4>
 200f4fc:	1039883a 	mov	fp,r2
 200f500:	1907c83a 	sub	r3,r3,r4
 200f504:	1809883a 	mov	r4,r3
 200f508:	a80b883a 	mov	r5,r21
 200f50c:	d8c00215 	stw	r3,8(sp)
 200f510:	2001f480 	call	2001f48 <__umodsi3>
 200f514:	d8c00217 	ldw	r3,8(sp)
 200f518:	a80b883a 	mov	r5,r21
 200f51c:	d8800015 	stw	r2,0(sp)
 200f520:	1809883a 	mov	r4,r3
 200f524:	2001f400 	call	2001f40 <__udivsi3>
 200f528:	1009883a 	mov	r4,r2
 200f52c:	b80b883a 	mov	r5,r23
 200f530:	102b883a 	mov	r21,r2
 200f534:	2001f500 	call	2001f50 <__mulsi3>
 200f538:	d9c00017 	ldw	r7,0(sp)
 200f53c:	8c7fffcc 	andi	r17,r17,65535
 200f540:	380e943a 	slli	r7,r7,16
 200f544:	3c4eb03a 	or	r7,r7,r17
 200f548:	3880042e 	bgeu	r7,r2,200f55c <__umoddi3+0x3e8>
 200f54c:	3d0f883a 	add	r7,r7,r20
 200f550:	a8ffffc4 	addi	r3,r21,-1
 200f554:	3d00802e 	bgeu	r7,r20,200f758 <__umoddi3+0x5e4>
 200f558:	182b883a 	mov	r21,r3
 200f55c:	e038943a 	slli	fp,fp,16
 200f560:	b010d43a 	srli	r8,r22,16
 200f564:	b1bfffcc 	andi	r6,r22,65535
 200f568:	af2ab03a 	or	r21,r21,fp
 200f56c:	a82ed43a 	srli	r23,r21,16
 200f570:	ad7fffcc 	andi	r21,r21,65535
 200f574:	300b883a 	mov	r5,r6
 200f578:	a809883a 	mov	r4,r21
 200f57c:	38a3c83a 	sub	r17,r7,r2
 200f580:	d9800115 	stw	r6,4(sp)
 200f584:	da000015 	stw	r8,0(sp)
 200f588:	2001f500 	call	2001f50 <__mulsi3>
 200f58c:	da000017 	ldw	r8,0(sp)
 200f590:	a809883a 	mov	r4,r21
 200f594:	1039883a 	mov	fp,r2
 200f598:	400b883a 	mov	r5,r8
 200f59c:	da000215 	stw	r8,8(sp)
 200f5a0:	2001f500 	call	2001f50 <__mulsi3>
 200f5a4:	d9800117 	ldw	r6,4(sp)
 200f5a8:	b809883a 	mov	r4,r23
 200f5ac:	d8800015 	stw	r2,0(sp)
 200f5b0:	300b883a 	mov	r5,r6
 200f5b4:	2001f500 	call	2001f50 <__mulsi3>
 200f5b8:	d8c00217 	ldw	r3,8(sp)
 200f5bc:	b809883a 	mov	r4,r23
 200f5c0:	102b883a 	mov	r21,r2
 200f5c4:	180b883a 	mov	r5,r3
 200f5c8:	2001f500 	call	2001f50 <__mulsi3>
 200f5cc:	d9c00017 	ldw	r7,0(sp)
 200f5d0:	1007883a 	mov	r3,r2
 200f5d4:	e004d43a 	srli	r2,fp,16
 200f5d8:	a9c9883a 	add	r4,r21,r7
 200f5dc:	2089883a 	add	r4,r4,r2
 200f5e0:	2540022e 	bgeu	r4,r21,200f5ec <__umoddi3+0x478>
 200f5e4:	00800074 	movhi	r2,1
 200f5e8:	1887883a 	add	r3,r3,r2
 200f5ec:	2004d43a 	srli	r2,r4,16
 200f5f0:	2008943a 	slli	r4,r4,16
 200f5f4:	e73fffcc 	andi	fp,fp,65535
 200f5f8:	1887883a 	add	r3,r3,r2
 200f5fc:	2709883a 	add	r4,r4,fp
 200f600:	88c03d36 	bltu	r17,r3,200f6f8 <__umoddi3+0x584>
 200f604:	88c06126 	beq	r17,r3,200f78c <__umoddi3+0x618>
 200f608:	88c7c83a 	sub	r3,r17,r3
 200f60c:	202d883a 	mov	r22,r4
 200f610:	95adc83a 	sub	r22,r18,r22
 200f614:	95a5803a 	cmpltu	r18,r18,r22
 200f618:	1c87c83a 	sub	r3,r3,r18
 200f61c:	1cc4983a 	sll	r2,r3,r19
 200f620:	b42cd83a 	srl	r22,r22,r16
 200f624:	1c06d83a 	srl	r3,r3,r16
 200f628:	1584b03a 	or	r2,r2,r22
 200f62c:	003f7806 	br	200f410 <__alt_mem_epcs_flash_controller+0xfe006410>
 200f630:	002b883a 	mov	r21,zero
 200f634:	003ef506 	br	200f20c <__alt_mem_epcs_flash_controller+0xfe00620c>
 200f638:	8560983a 	sll	r16,r16,r21
 200f63c:	88e6d83a 	srl	r19,r17,r3
 200f640:	90c6d83a 	srl	r3,r18,r3
 200f644:	8028d43a 	srli	r20,r16,16
 200f648:	8d62983a 	sll	r17,r17,r21
 200f64c:	9809883a 	mov	r4,r19
 200f650:	a00b883a 	mov	r5,r20
 200f654:	88eeb03a 	or	r23,r17,r3
 200f658:	2001f480 	call	2001f48 <__umodsi3>
 200f65c:	9809883a 	mov	r4,r19
 200f660:	a00b883a 	mov	r5,r20
 200f664:	1023883a 	mov	r17,r2
 200f668:	85bfffcc 	andi	r22,r16,65535
 200f66c:	2001f400 	call	2001f40 <__udivsi3>
 200f670:	1009883a 	mov	r4,r2
 200f674:	b00b883a 	mov	r5,r22
 200f678:	2001f500 	call	2001f50 <__mulsi3>
 200f67c:	1007883a 	mov	r3,r2
 200f680:	8808943a 	slli	r4,r17,16
 200f684:	b804d43a 	srli	r2,r23,16
 200f688:	9566983a 	sll	r19,r18,r21
 200f68c:	2088b03a 	or	r4,r4,r2
 200f690:	20c0042e 	bgeu	r4,r3,200f6a4 <__umoddi3+0x530>
 200f694:	2409883a 	add	r4,r4,r16
 200f698:	24000236 	bltu	r4,r16,200f6a4 <__umoddi3+0x530>
 200f69c:	20c0012e 	bgeu	r4,r3,200f6a4 <__umoddi3+0x530>
 200f6a0:	2409883a 	add	r4,r4,r16
 200f6a4:	20e5c83a 	sub	r18,r4,r3
 200f6a8:	9009883a 	mov	r4,r18
 200f6ac:	a00b883a 	mov	r5,r20
 200f6b0:	2001f480 	call	2001f48 <__umodsi3>
 200f6b4:	1023883a 	mov	r17,r2
 200f6b8:	9009883a 	mov	r4,r18
 200f6bc:	a00b883a 	mov	r5,r20
 200f6c0:	8822943a 	slli	r17,r17,16
 200f6c4:	2001f400 	call	2001f40 <__udivsi3>
 200f6c8:	1009883a 	mov	r4,r2
 200f6cc:	b00b883a 	mov	r5,r22
 200f6d0:	bdffffcc 	andi	r23,r23,65535
 200f6d4:	2001f500 	call	2001f50 <__mulsi3>
 200f6d8:	8de2b03a 	or	r17,r17,r23
 200f6dc:	8880042e 	bgeu	r17,r2,200f6f0 <__umoddi3+0x57c>
 200f6e0:	8c23883a 	add	r17,r17,r16
 200f6e4:	8c000236 	bltu	r17,r16,200f6f0 <__umoddi3+0x57c>
 200f6e8:	8880012e 	bgeu	r17,r2,200f6f0 <__umoddi3+0x57c>
 200f6ec:	8c23883a 	add	r17,r17,r16
 200f6f0:	88a3c83a 	sub	r17,r17,r2
 200f6f4:	003f1b06 	br	200f364 <__alt_mem_epcs_flash_controller+0xfe006364>
 200f6f8:	25adc83a 	sub	r22,r4,r22
 200f6fc:	1d07c83a 	sub	r3,r3,r20
 200f700:	2589803a 	cmpltu	r4,r4,r22
 200f704:	1907c83a 	sub	r3,r3,r4
 200f708:	88c7c83a 	sub	r3,r17,r3
 200f70c:	003fc006 	br	200f610 <__alt_mem_epcs_flash_controller+0xfe006610>
 200f710:	00c00204 	movi	r3,8
 200f714:	1827883a 	mov	r19,r3
 200f718:	003ee906 	br	200f2c0 <__alt_mem_epcs_flash_controller+0xfe0062c0>
 200f71c:	00c00604 	movi	r3,24
 200f720:	1827883a 	mov	r19,r3
 200f724:	003ee606 	br	200f2c0 <__alt_mem_epcs_flash_controller+0xfe0062c0>
 200f728:	00800604 	movi	r2,24
 200f72c:	1009883a 	mov	r4,r2
 200f730:	003ea806 	br	200f1d4 <__alt_mem_epcs_flash_controller+0xfe0061d4>
 200f734:	00800204 	movi	r2,8
 200f738:	1007883a 	mov	r3,r2
 200f73c:	003efd06 	br	200f334 <__alt_mem_epcs_flash_controller+0xfe006334>
 200f740:	00800604 	movi	r2,24
 200f744:	1007883a 	mov	r3,r2
 200f748:	003efa06 	br	200f334 <__alt_mem_epcs_flash_controller+0xfe006334>
 200f74c:	00800204 	movi	r2,8
 200f750:	1009883a 	mov	r4,r2
 200f754:	003e9f06 	br	200f1d4 <__alt_mem_epcs_flash_controller+0xfe0061d4>
 200f758:	38bf7f2e 	bgeu	r7,r2,200f558 <__alt_mem_epcs_flash_controller+0xfe006558>
 200f75c:	ad7fff84 	addi	r21,r21,-2
 200f760:	3d0f883a 	add	r7,r7,r20
 200f764:	003f7d06 	br	200f55c <__alt_mem_epcs_flash_controller+0xfe00655c>
 200f768:	193f642e 	bgeu	r3,r4,200f4fc <__alt_mem_epcs_flash_controller+0xfe0064fc>
 200f76c:	e73fff84 	addi	fp,fp,-2
 200f770:	1d07883a 	add	r3,r3,r20
 200f774:	003f6206 	br	200f500 <__alt_mem_epcs_flash_controller+0xfe006500>
 200f778:	1c07883a 	add	r3,r3,r16
 200f77c:	003f0b06 	br	200f3ac <__alt_mem_epcs_flash_controller+0xfe0063ac>
 200f780:	9005883a 	mov	r2,r18
 200f784:	a007883a 	mov	r3,r20
 200f788:	003f2106 	br	200f410 <__alt_mem_epcs_flash_controller+0xfe006410>
 200f78c:	913fda36 	bltu	r18,r4,200f6f8 <__alt_mem_epcs_flash_controller+0xfe0066f8>
 200f790:	202d883a 	mov	r22,r4
 200f794:	0007883a 	mov	r3,zero
 200f798:	003f9d06 	br	200f610 <__alt_mem_epcs_flash_controller+0xfe006610>

0200f79c <__nesf2>:
 200f79c:	defff504 	addi	sp,sp,-44
 200f7a0:	d9000915 	stw	r4,36(sp)
 200f7a4:	d9400815 	stw	r5,32(sp)
 200f7a8:	d9000904 	addi	r4,sp,36
 200f7ac:	d9400404 	addi	r5,sp,16
 200f7b0:	dfc00a15 	stw	ra,40(sp)
 200f7b4:	201005c0 	call	201005c <__unpack_f>
 200f7b8:	d9000804 	addi	r4,sp,32
 200f7bc:	d80b883a 	mov	r5,sp
 200f7c0:	201005c0 	call	201005c <__unpack_f>
 200f7c4:	d8c00417 	ldw	r3,16(sp)
 200f7c8:	00800044 	movi	r2,1
 200f7cc:	10c0052e 	bgeu	r2,r3,200f7e4 <__nesf2+0x48>
 200f7d0:	d8c00017 	ldw	r3,0(sp)
 200f7d4:	10c0032e 	bgeu	r2,r3,200f7e4 <__nesf2+0x48>
 200f7d8:	d9000404 	addi	r4,sp,16
 200f7dc:	d80b883a 	mov	r5,sp
 200f7e0:	20101240 	call	2010124 <__fpcmp_parts_f>
 200f7e4:	dfc00a17 	ldw	ra,40(sp)
 200f7e8:	dec00b04 	addi	sp,sp,44
 200f7ec:	f800283a 	ret

0200f7f0 <__gtsf2>:
 200f7f0:	defff504 	addi	sp,sp,-44
 200f7f4:	d9000915 	stw	r4,36(sp)
 200f7f8:	d9400815 	stw	r5,32(sp)
 200f7fc:	d9000904 	addi	r4,sp,36
 200f800:	d9400404 	addi	r5,sp,16
 200f804:	dfc00a15 	stw	ra,40(sp)
 200f808:	201005c0 	call	201005c <__unpack_f>
 200f80c:	d9000804 	addi	r4,sp,32
 200f810:	d80b883a 	mov	r5,sp
 200f814:	201005c0 	call	201005c <__unpack_f>
 200f818:	d8c00417 	ldw	r3,16(sp)
 200f81c:	00800044 	movi	r2,1
 200f820:	10c0082e 	bgeu	r2,r3,200f844 <__gtsf2+0x54>
 200f824:	d8c00017 	ldw	r3,0(sp)
 200f828:	10c0062e 	bgeu	r2,r3,200f844 <__gtsf2+0x54>
 200f82c:	d9000404 	addi	r4,sp,16
 200f830:	d80b883a 	mov	r5,sp
 200f834:	20101240 	call	2010124 <__fpcmp_parts_f>
 200f838:	dfc00a17 	ldw	ra,40(sp)
 200f83c:	dec00b04 	addi	sp,sp,44
 200f840:	f800283a 	ret
 200f844:	00bfffc4 	movi	r2,-1
 200f848:	003ffb06 	br	200f838 <__alt_mem_epcs_flash_controller+0xfe006838>

0200f84c <__ltsf2>:
 200f84c:	defff504 	addi	sp,sp,-44
 200f850:	d9000915 	stw	r4,36(sp)
 200f854:	d9400815 	stw	r5,32(sp)
 200f858:	d9000904 	addi	r4,sp,36
 200f85c:	d9400404 	addi	r5,sp,16
 200f860:	dfc00a15 	stw	ra,40(sp)
 200f864:	201005c0 	call	201005c <__unpack_f>
 200f868:	d9000804 	addi	r4,sp,32
 200f86c:	d80b883a 	mov	r5,sp
 200f870:	201005c0 	call	201005c <__unpack_f>
 200f874:	d8c00417 	ldw	r3,16(sp)
 200f878:	00800044 	movi	r2,1
 200f87c:	10c0052e 	bgeu	r2,r3,200f894 <__ltsf2+0x48>
 200f880:	d8c00017 	ldw	r3,0(sp)
 200f884:	10c0032e 	bgeu	r2,r3,200f894 <__ltsf2+0x48>
 200f888:	d9000404 	addi	r4,sp,16
 200f88c:	d80b883a 	mov	r5,sp
 200f890:	20101240 	call	2010124 <__fpcmp_parts_f>
 200f894:	dfc00a17 	ldw	ra,40(sp)
 200f898:	dec00b04 	addi	sp,sp,44
 200f89c:	f800283a 	ret

0200f8a0 <_fpadd_parts>:
 200f8a0:	2005883a 	mov	r2,r4
 200f8a4:	21000017 	ldw	r4,0(r4)
 200f8a8:	01c00044 	movi	r7,1
 200f8ac:	3900622e 	bgeu	r7,r4,200fa38 <_fpadd_parts+0x198>
 200f8b0:	28c00017 	ldw	r3,0(r5)
 200f8b4:	38c05f2e 	bgeu	r7,r3,200fa34 <_fpadd_parts+0x194>
 200f8b8:	01c00104 	movi	r7,4
 200f8bc:	21c0c626 	beq	r4,r7,200fbd8 <_fpadd_parts+0x338>
 200f8c0:	19c05c26 	beq	r3,r7,200fa34 <_fpadd_parts+0x194>
 200f8c4:	01c00084 	movi	r7,2
 200f8c8:	19c06b26 	beq	r3,r7,200fa78 <_fpadd_parts+0x1d8>
 200f8cc:	21c05926 	beq	r4,r7,200fa34 <_fpadd_parts+0x194>
 200f8d0:	11c00217 	ldw	r7,8(r2)
 200f8d4:	2ac00217 	ldw	r11,8(r5)
 200f8d8:	13000317 	ldw	r12,12(r2)
 200f8dc:	13400417 	ldw	r13,16(r2)
 200f8e0:	3ac9c83a 	sub	r4,r7,r11
 200f8e4:	2a000317 	ldw	r8,12(r5)
 200f8e8:	2a400417 	ldw	r9,16(r5)
 200f8ec:	2015883a 	mov	r10,r4
 200f8f0:	20007516 	blt	r4,zero,200fac8 <_fpadd_parts+0x228>
 200f8f4:	00c00fc4 	movi	r3,63
 200f8f8:	1a805016 	blt	r3,r10,200fa3c <_fpadd_parts+0x19c>
 200f8fc:	0100870e 	bge	zero,r4,200fb1c <_fpadd_parts+0x27c>
 200f900:	50fff804 	addi	r3,r10,-32
 200f904:	18009916 	blt	r3,zero,200fb6c <_fpadd_parts+0x2cc>
 200f908:	48d6d83a 	srl	r11,r9,r3
 200f90c:	001d883a 	mov	r14,zero
 200f910:	18009e16 	blt	r3,zero,200fb8c <_fpadd_parts+0x2ec>
 200f914:	01000044 	movi	r4,1
 200f918:	20c6983a 	sll	r3,r4,r3
 200f91c:	0015883a 	mov	r10,zero
 200f920:	513fffc4 	addi	r4,r10,-1
 200f924:	2295403a 	cmpgeu	r10,r4,r10
 200f928:	1a87c83a 	sub	r3,r3,r10
 200f92c:	1a52703a 	and	r9,r3,r9
 200f930:	2210703a 	and	r8,r4,r8
 200f934:	4250b03a 	or	r8,r8,r9
 200f938:	4010c03a 	cmpne	r8,r8,zero
 200f93c:	42d0b03a 	or	r8,r8,r11
 200f940:	7013883a 	mov	r9,r14
 200f944:	11000117 	ldw	r4,4(r2)
 200f948:	28800117 	ldw	r2,4(r5)
 200f94c:	20804126 	beq	r4,r2,200fa54 <_fpadd_parts+0x1b4>
 200f950:	20006326 	beq	r4,zero,200fae0 <_fpadd_parts+0x240>
 200f954:	4305c83a 	sub	r2,r8,r12
 200f958:	4091803a 	cmpltu	r8,r8,r2
 200f95c:	4b47c83a 	sub	r3,r9,r13
 200f960:	1a07c83a 	sub	r3,r3,r8
 200f964:	18006316 	blt	r3,zero,200faf4 <_fpadd_parts+0x254>
 200f968:	30000115 	stw	zero,4(r6)
 200f96c:	31c00215 	stw	r7,8(r6)
 200f970:	30800315 	stw	r2,12(r6)
 200f974:	30c00415 	stw	r3,16(r6)
 200f978:	11ffffc4 	addi	r7,r2,-1
 200f97c:	388b403a 	cmpgeu	r5,r7,r2
 200f980:	194bc83a 	sub	r5,r3,r5
 200f984:	01040034 	movhi	r4,4096
 200f988:	213fffc4 	addi	r4,r4,-1
 200f98c:	21401736 	bltu	r4,r5,200f9ec <_fpadd_parts+0x14c>
 200f990:	29008226 	beq	r5,r4,200fb9c <_fpadd_parts+0x2fc>
 200f994:	31400217 	ldw	r5,8(r6)
 200f998:	02840034 	movhi	r10,4096
 200f99c:	52bfffc4 	addi	r10,r10,-1
 200f9a0:	033fff84 	movi	r12,-2
 200f9a4:	297fffc4 	addi	r5,r5,-1
 200f9a8:	00000106 	br	200f9b0 <_fpadd_parts+0x110>
 200f9ac:	3a804a26 	beq	r7,r10,200fad8 <_fpadd_parts+0x238>
 200f9b0:	1089883a 	add	r4,r2,r2
 200f9b4:	2091803a 	cmpltu	r8,r4,r2
 200f9b8:	18c7883a 	add	r3,r3,r3
 200f9bc:	227fffc4 	addi	r9,r4,-1
 200f9c0:	40d1883a 	add	r8,r8,r3
 200f9c4:	490f403a 	cmpgeu	r7,r9,r4
 200f9c8:	41cfc83a 	sub	r7,r8,r7
 200f9cc:	2817883a 	mov	r11,r5
 200f9d0:	2005883a 	mov	r2,r4
 200f9d4:	4007883a 	mov	r3,r8
 200f9d8:	297fffc4 	addi	r5,r5,-1
 200f9dc:	51fff32e 	bgeu	r10,r7,200f9ac <__alt_mem_epcs_flash_controller+0xfe0069ac>
 200f9e0:	31000315 	stw	r4,12(r6)
 200f9e4:	32000415 	stw	r8,16(r6)
 200f9e8:	32c00215 	stw	r11,8(r6)
 200f9ec:	010000c4 	movi	r4,3
 200f9f0:	31000015 	stw	r4,0(r6)
 200f9f4:	01080034 	movhi	r4,8192
 200f9f8:	213fffc4 	addi	r4,r4,-1
 200f9fc:	20c00b2e 	bgeu	r4,r3,200fa2c <_fpadd_parts+0x18c>
 200fa00:	180e97fa 	slli	r7,r3,31
 200fa04:	1008d07a 	srli	r4,r2,1
 200fa08:	31400217 	ldw	r5,8(r6)
 200fa0c:	1806d07a 	srli	r3,r3,1
 200fa10:	1080004c 	andi	r2,r2,1
 200fa14:	3908b03a 	or	r4,r7,r4
 200fa18:	1108b03a 	or	r4,r2,r4
 200fa1c:	29400044 	addi	r5,r5,1
 200fa20:	31000315 	stw	r4,12(r6)
 200fa24:	30c00415 	stw	r3,16(r6)
 200fa28:	31400215 	stw	r5,8(r6)
 200fa2c:	3005883a 	mov	r2,r6
 200fa30:	f800283a 	ret
 200fa34:	2805883a 	mov	r2,r5
 200fa38:	f800283a 	ret
 200fa3c:	59c01e0e 	bge	r11,r7,200fab8 <_fpadd_parts+0x218>
 200fa40:	11000117 	ldw	r4,4(r2)
 200fa44:	28800117 	ldw	r2,4(r5)
 200fa48:	0011883a 	mov	r8,zero
 200fa4c:	0013883a 	mov	r9,zero
 200fa50:	20bfbf1e 	bne	r4,r2,200f950 <__alt_mem_epcs_flash_controller+0xfe006950>
 200fa54:	4305883a 	add	r2,r8,r12
 200fa58:	1207803a 	cmpltu	r3,r2,r8
 200fa5c:	4b53883a 	add	r9,r9,r13
 200fa60:	1a47883a 	add	r3,r3,r9
 200fa64:	31000115 	stw	r4,4(r6)
 200fa68:	31c00215 	stw	r7,8(r6)
 200fa6c:	30800315 	stw	r2,12(r6)
 200fa70:	30c00415 	stw	r3,16(r6)
 200fa74:	003fdd06 	br	200f9ec <__alt_mem_epcs_flash_controller+0xfe0069ec>
 200fa78:	20ffef1e 	bne	r4,r3,200fa38 <__alt_mem_epcs_flash_controller+0xfe006a38>
 200fa7c:	31000015 	stw	r4,0(r6)
 200fa80:	10c00117 	ldw	r3,4(r2)
 200fa84:	30c00115 	stw	r3,4(r6)
 200fa88:	10c00217 	ldw	r3,8(r2)
 200fa8c:	11000117 	ldw	r4,4(r2)
 200fa90:	29400117 	ldw	r5,4(r5)
 200fa94:	30c00215 	stw	r3,8(r6)
 200fa98:	10c00317 	ldw	r3,12(r2)
 200fa9c:	2908703a 	and	r4,r5,r4
 200faa0:	30c00315 	stw	r3,12(r6)
 200faa4:	10c00417 	ldw	r3,16(r2)
 200faa8:	31000115 	stw	r4,4(r6)
 200faac:	3005883a 	mov	r2,r6
 200fab0:	30c00415 	stw	r3,16(r6)
 200fab4:	f800283a 	ret
 200fab8:	580f883a 	mov	r7,r11
 200fabc:	0019883a 	mov	r12,zero
 200fac0:	001b883a 	mov	r13,zero
 200fac4:	003f9f06 	br	200f944 <__alt_mem_epcs_flash_controller+0xfe006944>
 200fac8:	0115c83a 	sub	r10,zero,r4
 200facc:	00c00fc4 	movi	r3,63
 200fad0:	1abfda16 	blt	r3,r10,200fa3c <__alt_mem_epcs_flash_controller+0xfe006a3c>
 200fad4:	003f8906 	br	200f8fc <__alt_mem_epcs_flash_controller+0xfe0068fc>
 200fad8:	627fb52e 	bgeu	r12,r9,200f9b0 <__alt_mem_epcs_flash_controller+0xfe0069b0>
 200fadc:	003fc006 	br	200f9e0 <__alt_mem_epcs_flash_controller+0xfe0069e0>
 200fae0:	6205c83a 	sub	r2,r12,r8
 200fae4:	6099803a 	cmpltu	r12,r12,r2
 200fae8:	6a47c83a 	sub	r3,r13,r9
 200faec:	1b07c83a 	sub	r3,r3,r12
 200faf0:	183f9d0e 	bge	r3,zero,200f968 <__alt_mem_epcs_flash_controller+0xfe006968>
 200faf4:	0085c83a 	sub	r2,zero,r2
 200faf8:	1008c03a 	cmpne	r4,r2,zero
 200fafc:	00c7c83a 	sub	r3,zero,r3
 200fb00:	1907c83a 	sub	r3,r3,r4
 200fb04:	01000044 	movi	r4,1
 200fb08:	31000115 	stw	r4,4(r6)
 200fb0c:	31c00215 	stw	r7,8(r6)
 200fb10:	30800315 	stw	r2,12(r6)
 200fb14:	30c00415 	stw	r3,16(r6)
 200fb18:	003f9706 	br	200f978 <__alt_mem_epcs_flash_controller+0xfe006978>
 200fb1c:	203f8926 	beq	r4,zero,200f944 <__alt_mem_epcs_flash_controller+0xfe006944>
 200fb20:	50fff804 	addi	r3,r10,-32
 200fb24:	3a8f883a 	add	r7,r7,r10
 200fb28:	18002316 	blt	r3,zero,200fbb8 <_fpadd_parts+0x318>
 200fb2c:	68d6d83a 	srl	r11,r13,r3
 200fb30:	001d883a 	mov	r14,zero
 200fb34:	18001c16 	blt	r3,zero,200fba8 <_fpadd_parts+0x308>
 200fb38:	01000044 	movi	r4,1
 200fb3c:	20c6983a 	sll	r3,r4,r3
 200fb40:	0015883a 	mov	r10,zero
 200fb44:	513fffc4 	addi	r4,r10,-1
 200fb48:	2295403a 	cmpgeu	r10,r4,r10
 200fb4c:	1a87c83a 	sub	r3,r3,r10
 200fb50:	1b5a703a 	and	r13,r3,r13
 200fb54:	2318703a 	and	r12,r4,r12
 200fb58:	6358b03a 	or	r12,r12,r13
 200fb5c:	6018c03a 	cmpne	r12,r12,zero
 200fb60:	62d8b03a 	or	r12,r12,r11
 200fb64:	701b883a 	mov	r13,r14
 200fb68:	003f7606 	br	200f944 <__alt_mem_epcs_flash_controller+0xfe006944>
 200fb6c:	4808907a 	slli	r4,r9,1
 200fb70:	02c007c4 	movi	r11,31
 200fb74:	5a97c83a 	sub	r11,r11,r10
 200fb78:	22c8983a 	sll	r4,r4,r11
 200fb7c:	4296d83a 	srl	r11,r8,r10
 200fb80:	4a9cd83a 	srl	r14,r9,r10
 200fb84:	22d6b03a 	or	r11,r4,r11
 200fb88:	003f6106 	br	200f910 <__alt_mem_epcs_flash_controller+0xfe006910>
 200fb8c:	00c00044 	movi	r3,1
 200fb90:	1a94983a 	sll	r10,r3,r10
 200fb94:	0007883a 	mov	r3,zero
 200fb98:	003f6106 	br	200f920 <__alt_mem_epcs_flash_controller+0xfe006920>
 200fb9c:	013fff84 	movi	r4,-2
 200fba0:	21ff7c2e 	bgeu	r4,r7,200f994 <__alt_mem_epcs_flash_controller+0xfe006994>
 200fba4:	003f9106 	br	200f9ec <__alt_mem_epcs_flash_controller+0xfe0069ec>
 200fba8:	00c00044 	movi	r3,1
 200fbac:	1a94983a 	sll	r10,r3,r10
 200fbb0:	0007883a 	mov	r3,zero
 200fbb4:	003fe306 	br	200fb44 <__alt_mem_epcs_flash_controller+0xfe006b44>
 200fbb8:	6816907a 	slli	r11,r13,1
 200fbbc:	010007c4 	movi	r4,31
 200fbc0:	2289c83a 	sub	r4,r4,r10
 200fbc4:	5908983a 	sll	r4,r11,r4
 200fbc8:	6296d83a 	srl	r11,r12,r10
 200fbcc:	6a9cd83a 	srl	r14,r13,r10
 200fbd0:	22d6b03a 	or	r11,r4,r11
 200fbd4:	003fd706 	br	200fb34 <__alt_mem_epcs_flash_controller+0xfe006b34>
 200fbd8:	193f971e 	bne	r3,r4,200fa38 <__alt_mem_epcs_flash_controller+0xfe006a38>
 200fbdc:	11000117 	ldw	r4,4(r2)
 200fbe0:	28c00117 	ldw	r3,4(r5)
 200fbe4:	20ff9426 	beq	r4,r3,200fa38 <__alt_mem_epcs_flash_controller+0xfe006a38>
 200fbe8:	00808234 	movhi	r2,520
 200fbec:	109b0a04 	addi	r2,r2,27688
 200fbf0:	f800283a 	ret

0200fbf4 <__adddf3>:
 200fbf4:	deffec04 	addi	sp,sp,-80
 200fbf8:	d9001115 	stw	r4,68(sp)
 200fbfc:	d9401215 	stw	r5,72(sp)
 200fc00:	d9001104 	addi	r4,sp,68
 200fc04:	d9400a04 	addi	r5,sp,40
 200fc08:	dfc01315 	stw	ra,76(sp)
 200fc0c:	d9c01015 	stw	r7,64(sp)
 200fc10:	d9800f15 	stw	r6,60(sp)
 200fc14:	20023580 	call	2002358 <__unpack_d>
 200fc18:	d9000f04 	addi	r4,sp,60
 200fc1c:	d9400504 	addi	r5,sp,20
 200fc20:	20023580 	call	2002358 <__unpack_d>
 200fc24:	d9000a04 	addi	r4,sp,40
 200fc28:	d9400504 	addi	r5,sp,20
 200fc2c:	d80d883a 	mov	r6,sp
 200fc30:	200f8a00 	call	200f8a0 <_fpadd_parts>
 200fc34:	1009883a 	mov	r4,r2
 200fc38:	20021340 	call	2002134 <__pack_d>
 200fc3c:	dfc01317 	ldw	ra,76(sp)
 200fc40:	dec01404 	addi	sp,sp,80
 200fc44:	f800283a 	ret

0200fc48 <__subdf3>:
 200fc48:	deffec04 	addi	sp,sp,-80
 200fc4c:	d9001115 	stw	r4,68(sp)
 200fc50:	d9401215 	stw	r5,72(sp)
 200fc54:	d9001104 	addi	r4,sp,68
 200fc58:	d9400a04 	addi	r5,sp,40
 200fc5c:	dfc01315 	stw	ra,76(sp)
 200fc60:	d9c01015 	stw	r7,64(sp)
 200fc64:	d9800f15 	stw	r6,60(sp)
 200fc68:	20023580 	call	2002358 <__unpack_d>
 200fc6c:	d9000f04 	addi	r4,sp,60
 200fc70:	d9400504 	addi	r5,sp,20
 200fc74:	20023580 	call	2002358 <__unpack_d>
 200fc78:	d8800617 	ldw	r2,24(sp)
 200fc7c:	d9000a04 	addi	r4,sp,40
 200fc80:	d9400504 	addi	r5,sp,20
 200fc84:	d80d883a 	mov	r6,sp
 200fc88:	1080005c 	xori	r2,r2,1
 200fc8c:	d8800615 	stw	r2,24(sp)
 200fc90:	200f8a00 	call	200f8a0 <_fpadd_parts>
 200fc94:	1009883a 	mov	r4,r2
 200fc98:	20021340 	call	2002134 <__pack_d>
 200fc9c:	dfc01317 	ldw	ra,76(sp)
 200fca0:	dec01404 	addi	sp,sp,80
 200fca4:	f800283a 	ret

0200fca8 <__eqdf2>:
 200fca8:	defff104 	addi	sp,sp,-60
 200fcac:	d9000c15 	stw	r4,48(sp)
 200fcb0:	d9400d15 	stw	r5,52(sp)
 200fcb4:	d9000c04 	addi	r4,sp,48
 200fcb8:	d9400504 	addi	r5,sp,20
 200fcbc:	dfc00e15 	stw	ra,56(sp)
 200fcc0:	d9800a15 	stw	r6,40(sp)
 200fcc4:	d9c00b15 	stw	r7,44(sp)
 200fcc8:	20023580 	call	2002358 <__unpack_d>
 200fccc:	d9000a04 	addi	r4,sp,40
 200fcd0:	d80b883a 	mov	r5,sp
 200fcd4:	20023580 	call	2002358 <__unpack_d>
 200fcd8:	d8c00517 	ldw	r3,20(sp)
 200fcdc:	00800044 	movi	r2,1
 200fce0:	10c0052e 	bgeu	r2,r3,200fcf8 <__eqdf2+0x50>
 200fce4:	d8c00017 	ldw	r3,0(sp)
 200fce8:	10c0032e 	bgeu	r2,r3,200fcf8 <__eqdf2+0x50>
 200fcec:	d9000504 	addi	r4,sp,20
 200fcf0:	d80b883a 	mov	r5,sp
 200fcf4:	201020c0 	call	201020c <__fpcmp_parts_d>
 200fcf8:	dfc00e17 	ldw	ra,56(sp)
 200fcfc:	dec00f04 	addi	sp,sp,60
 200fd00:	f800283a 	ret

0200fd04 <__nedf2>:
 200fd04:	defff104 	addi	sp,sp,-60
 200fd08:	d9000c15 	stw	r4,48(sp)
 200fd0c:	d9400d15 	stw	r5,52(sp)
 200fd10:	d9000c04 	addi	r4,sp,48
 200fd14:	d9400504 	addi	r5,sp,20
 200fd18:	dfc00e15 	stw	ra,56(sp)
 200fd1c:	d9800a15 	stw	r6,40(sp)
 200fd20:	d9c00b15 	stw	r7,44(sp)
 200fd24:	20023580 	call	2002358 <__unpack_d>
 200fd28:	d9000a04 	addi	r4,sp,40
 200fd2c:	d80b883a 	mov	r5,sp
 200fd30:	20023580 	call	2002358 <__unpack_d>
 200fd34:	d8c00517 	ldw	r3,20(sp)
 200fd38:	00800044 	movi	r2,1
 200fd3c:	10c0052e 	bgeu	r2,r3,200fd54 <__nedf2+0x50>
 200fd40:	d8c00017 	ldw	r3,0(sp)
 200fd44:	10c0032e 	bgeu	r2,r3,200fd54 <__nedf2+0x50>
 200fd48:	d9000504 	addi	r4,sp,20
 200fd4c:	d80b883a 	mov	r5,sp
 200fd50:	201020c0 	call	201020c <__fpcmp_parts_d>
 200fd54:	dfc00e17 	ldw	ra,56(sp)
 200fd58:	dec00f04 	addi	sp,sp,60
 200fd5c:	f800283a 	ret

0200fd60 <__gtdf2>:
 200fd60:	defff104 	addi	sp,sp,-60
 200fd64:	d9000c15 	stw	r4,48(sp)
 200fd68:	d9400d15 	stw	r5,52(sp)
 200fd6c:	d9000c04 	addi	r4,sp,48
 200fd70:	d9400504 	addi	r5,sp,20
 200fd74:	dfc00e15 	stw	ra,56(sp)
 200fd78:	d9800a15 	stw	r6,40(sp)
 200fd7c:	d9c00b15 	stw	r7,44(sp)
 200fd80:	20023580 	call	2002358 <__unpack_d>
 200fd84:	d9000a04 	addi	r4,sp,40
 200fd88:	d80b883a 	mov	r5,sp
 200fd8c:	20023580 	call	2002358 <__unpack_d>
 200fd90:	d8c00517 	ldw	r3,20(sp)
 200fd94:	00800044 	movi	r2,1
 200fd98:	10c0082e 	bgeu	r2,r3,200fdbc <__gtdf2+0x5c>
 200fd9c:	d8c00017 	ldw	r3,0(sp)
 200fda0:	10c0062e 	bgeu	r2,r3,200fdbc <__gtdf2+0x5c>
 200fda4:	d9000504 	addi	r4,sp,20
 200fda8:	d80b883a 	mov	r5,sp
 200fdac:	201020c0 	call	201020c <__fpcmp_parts_d>
 200fdb0:	dfc00e17 	ldw	ra,56(sp)
 200fdb4:	dec00f04 	addi	sp,sp,60
 200fdb8:	f800283a 	ret
 200fdbc:	00bfffc4 	movi	r2,-1
 200fdc0:	003ffb06 	br	200fdb0 <__alt_mem_epcs_flash_controller+0xfe006db0>

0200fdc4 <__gedf2>:
 200fdc4:	defff104 	addi	sp,sp,-60
 200fdc8:	d9000c15 	stw	r4,48(sp)
 200fdcc:	d9400d15 	stw	r5,52(sp)
 200fdd0:	d9000c04 	addi	r4,sp,48
 200fdd4:	d9400504 	addi	r5,sp,20
 200fdd8:	dfc00e15 	stw	ra,56(sp)
 200fddc:	d9800a15 	stw	r6,40(sp)
 200fde0:	d9c00b15 	stw	r7,44(sp)
 200fde4:	20023580 	call	2002358 <__unpack_d>
 200fde8:	d9000a04 	addi	r4,sp,40
 200fdec:	d80b883a 	mov	r5,sp
 200fdf0:	20023580 	call	2002358 <__unpack_d>
 200fdf4:	d8c00517 	ldw	r3,20(sp)
 200fdf8:	00800044 	movi	r2,1
 200fdfc:	10c0082e 	bgeu	r2,r3,200fe20 <__gedf2+0x5c>
 200fe00:	d8c00017 	ldw	r3,0(sp)
 200fe04:	10c0062e 	bgeu	r2,r3,200fe20 <__gedf2+0x5c>
 200fe08:	d9000504 	addi	r4,sp,20
 200fe0c:	d80b883a 	mov	r5,sp
 200fe10:	201020c0 	call	201020c <__fpcmp_parts_d>
 200fe14:	dfc00e17 	ldw	ra,56(sp)
 200fe18:	dec00f04 	addi	sp,sp,60
 200fe1c:	f800283a 	ret
 200fe20:	00bfffc4 	movi	r2,-1
 200fe24:	003ffb06 	br	200fe14 <__alt_mem_epcs_flash_controller+0xfe006e14>

0200fe28 <__ltdf2>:
 200fe28:	defff104 	addi	sp,sp,-60
 200fe2c:	d9000c15 	stw	r4,48(sp)
 200fe30:	d9400d15 	stw	r5,52(sp)
 200fe34:	d9000c04 	addi	r4,sp,48
 200fe38:	d9400504 	addi	r5,sp,20
 200fe3c:	dfc00e15 	stw	ra,56(sp)
 200fe40:	d9800a15 	stw	r6,40(sp)
 200fe44:	d9c00b15 	stw	r7,44(sp)
 200fe48:	20023580 	call	2002358 <__unpack_d>
 200fe4c:	d9000a04 	addi	r4,sp,40
 200fe50:	d80b883a 	mov	r5,sp
 200fe54:	20023580 	call	2002358 <__unpack_d>
 200fe58:	d8c00517 	ldw	r3,20(sp)
 200fe5c:	00800044 	movi	r2,1
 200fe60:	10c0052e 	bgeu	r2,r3,200fe78 <__ltdf2+0x50>
 200fe64:	d8c00017 	ldw	r3,0(sp)
 200fe68:	10c0032e 	bgeu	r2,r3,200fe78 <__ltdf2+0x50>
 200fe6c:	d9000504 	addi	r4,sp,20
 200fe70:	d80b883a 	mov	r5,sp
 200fe74:	201020c0 	call	201020c <__fpcmp_parts_d>
 200fe78:	dfc00e17 	ldw	ra,56(sp)
 200fe7c:	dec00f04 	addi	sp,sp,60
 200fe80:	f800283a 	ret

0200fe84 <__ledf2>:
 200fe84:	defff104 	addi	sp,sp,-60
 200fe88:	d9000c15 	stw	r4,48(sp)
 200fe8c:	d9400d15 	stw	r5,52(sp)
 200fe90:	d9000c04 	addi	r4,sp,48
 200fe94:	d9400504 	addi	r5,sp,20
 200fe98:	dfc00e15 	stw	ra,56(sp)
 200fe9c:	d9800a15 	stw	r6,40(sp)
 200fea0:	d9c00b15 	stw	r7,44(sp)
 200fea4:	20023580 	call	2002358 <__unpack_d>
 200fea8:	d9000a04 	addi	r4,sp,40
 200feac:	d80b883a 	mov	r5,sp
 200feb0:	20023580 	call	2002358 <__unpack_d>
 200feb4:	d8c00517 	ldw	r3,20(sp)
 200feb8:	00800044 	movi	r2,1
 200febc:	10c0052e 	bgeu	r2,r3,200fed4 <__ledf2+0x50>
 200fec0:	d8c00017 	ldw	r3,0(sp)
 200fec4:	10c0032e 	bgeu	r2,r3,200fed4 <__ledf2+0x50>
 200fec8:	d9000504 	addi	r4,sp,20
 200fecc:	d80b883a 	mov	r5,sp
 200fed0:	201020c0 	call	201020c <__fpcmp_parts_d>
 200fed4:	dfc00e17 	ldw	ra,56(sp)
 200fed8:	dec00f04 	addi	sp,sp,60
 200fedc:	f800283a 	ret

0200fee0 <__truncdfsf2>:
 200fee0:	defff804 	addi	sp,sp,-32
 200fee4:	d9000515 	stw	r4,20(sp)
 200fee8:	d9400615 	stw	r5,24(sp)
 200feec:	d9000504 	addi	r4,sp,20
 200fef0:	d80b883a 	mov	r5,sp
 200fef4:	dfc00715 	stw	ra,28(sp)
 200fef8:	20023580 	call	2002358 <__unpack_d>
 200fefc:	d8800317 	ldw	r2,12(sp)
 200ff00:	d8c00417 	ldw	r3,16(sp)
 200ff04:	01100034 	movhi	r4,16384
 200ff08:	213fffc4 	addi	r4,r4,-1
 200ff0c:	100ed7ba 	srli	r7,r2,30
 200ff10:	180690ba 	slli	r3,r3,2
 200ff14:	1104703a 	and	r2,r2,r4
 200ff18:	19ceb03a 	or	r7,r3,r7
 200ff1c:	10000126 	beq	r2,zero,200ff24 <__truncdfsf2+0x44>
 200ff20:	39c00054 	ori	r7,r7,1
 200ff24:	d9000017 	ldw	r4,0(sp)
 200ff28:	d9400117 	ldw	r5,4(sp)
 200ff2c:	d9800217 	ldw	r6,8(sp)
 200ff30:	20101e00 	call	20101e0 <__make_fp>
 200ff34:	dfc00717 	ldw	ra,28(sp)
 200ff38:	dec00804 	addi	sp,sp,32
 200ff3c:	f800283a 	ret

0200ff40 <__floatunsidf>:
 200ff40:	defff904 	addi	sp,sp,-28
 200ff44:	dc000515 	stw	r16,20(sp)
 200ff48:	dfc00615 	stw	ra,24(sp)
 200ff4c:	d8000115 	stw	zero,4(sp)
 200ff50:	2021883a 	mov	r16,r4
 200ff54:	20001726 	beq	r4,zero,200ffb4 <__floatunsidf+0x74>
 200ff58:	008000c4 	movi	r2,3
 200ff5c:	d8800015 	stw	r2,0(sp)
 200ff60:	00800f04 	movi	r2,60
 200ff64:	d8800215 	stw	r2,8(sp)
 200ff68:	20020880 	call	2002088 <__clzsi2>
 200ff6c:	10c00744 	addi	r3,r2,29
 200ff70:	18001816 	blt	r3,zero,200ffd4 <__floatunsidf+0x94>
 200ff74:	18002d26 	beq	r3,zero,201002c <__floatunsidf+0xec>
 200ff78:	113fff44 	addi	r4,r2,-3
 200ff7c:	20002e16 	blt	r4,zero,2010038 <__floatunsidf+0xf8>
 200ff80:	8108983a 	sll	r4,r16,r4
 200ff84:	0021883a 	mov	r16,zero
 200ff88:	014007c4 	movi	r5,31
 200ff8c:	2885c83a 	sub	r2,r5,r2
 200ff90:	dc000315 	stw	r16,12(sp)
 200ff94:	d9000415 	stw	r4,16(sp)
 200ff98:	d8800215 	stw	r2,8(sp)
 200ff9c:	d809883a 	mov	r4,sp
 200ffa0:	20021340 	call	2002134 <__pack_d>
 200ffa4:	dfc00617 	ldw	ra,24(sp)
 200ffa8:	dc000517 	ldw	r16,20(sp)
 200ffac:	dec00704 	addi	sp,sp,28
 200ffb0:	f800283a 	ret
 200ffb4:	00800084 	movi	r2,2
 200ffb8:	d809883a 	mov	r4,sp
 200ffbc:	d8800015 	stw	r2,0(sp)
 200ffc0:	20021340 	call	2002134 <__pack_d>
 200ffc4:	dfc00617 	ldw	ra,24(sp)
 200ffc8:	dc000517 	ldw	r16,20(sp)
 200ffcc:	dec00704 	addi	sp,sp,28
 200ffd0:	f800283a 	ret
 200ffd4:	00c7c83a 	sub	r3,zero,r3
 200ffd8:	193ff804 	addi	r4,r3,-32
 200ffdc:	20001c16 	blt	r4,zero,2010050 <__floatunsidf+0x110>
 200ffe0:	000b883a 	mov	r5,zero
 200ffe4:	2009d7fa 	srai	r4,r4,31
 200ffe8:	80c6d83a 	srl	r3,r16,r3
 200ffec:	297fffc4 	addi	r5,r5,-1
 200fff0:	2c20703a 	and	r16,r5,r16
 200fff4:	8020c03a 	cmpne	r16,r16,zero
 200fff8:	1906703a 	and	r3,r3,r4
 200fffc:	010007c4 	movi	r4,31
 2010000:	80c6b03a 	or	r3,r16,r3
 2010004:	2085c83a 	sub	r2,r4,r2
 2010008:	d809883a 	mov	r4,sp
 201000c:	d8c00315 	stw	r3,12(sp)
 2010010:	d8000415 	stw	zero,16(sp)
 2010014:	d8800215 	stw	r2,8(sp)
 2010018:	20021340 	call	2002134 <__pack_d>
 201001c:	dfc00617 	ldw	ra,24(sp)
 2010020:	dc000517 	ldw	r16,20(sp)
 2010024:	dec00704 	addi	sp,sp,28
 2010028:	f800283a 	ret
 201002c:	dc000315 	stw	r16,12(sp)
 2010030:	d8000415 	stw	zero,16(sp)
 2010034:	003fd906 	br	200ff9c <__alt_mem_epcs_flash_controller+0xfe006f9c>
 2010038:	800ad07a 	srli	r5,r16,1
 201003c:	010007c4 	movi	r4,31
 2010040:	20c9c83a 	sub	r4,r4,r3
 2010044:	2908d83a 	srl	r4,r5,r4
 2010048:	80e0983a 	sll	r16,r16,r3
 201004c:	003fce06 	br	200ff88 <__alt_mem_epcs_flash_controller+0xfe006f88>
 2010050:	01400044 	movi	r5,1
 2010054:	28ca983a 	sll	r5,r5,r3
 2010058:	003fe206 	br	200ffe4 <__alt_mem_epcs_flash_controller+0xfe006fe4>

0201005c <__unpack_f>:
 201005c:	20c00017 	ldw	r3,0(r4)
 2010060:	00802034 	movhi	r2,128
 2010064:	10bfffc4 	addi	r2,r2,-1
 2010068:	1808d5fa 	srli	r4,r3,23
 201006c:	180cd7fa 	srli	r6,r3,31
 2010070:	1884703a 	and	r2,r3,r2
 2010074:	21003fcc 	andi	r4,r4,255
 2010078:	29800115 	stw	r6,4(r5)
 201007c:	2000111e 	bne	r4,zero,20100c4 <__unpack_f+0x68>
 2010080:	10001a26 	beq	r2,zero,20100ec <__unpack_f+0x90>
 2010084:	00ffe084 	movi	r3,-126
 2010088:	100491fa 	slli	r2,r2,7
 201008c:	28c00215 	stw	r3,8(r5)
 2010090:	00c000c4 	movi	r3,3
 2010094:	28c00015 	stw	r3,0(r5)
 2010098:	01900034 	movhi	r6,16384
 201009c:	31bfffc4 	addi	r6,r6,-1
 20100a0:	30801036 	bltu	r6,r2,20100e4 <__unpack_f+0x88>
 20100a4:	00ffe044 	movi	r3,-127
 20100a8:	1085883a 	add	r2,r2,r2
 20100ac:	1809883a 	mov	r4,r3
 20100b0:	18ffffc4 	addi	r3,r3,-1
 20100b4:	30bffc2e 	bgeu	r6,r2,20100a8 <__alt_mem_epcs_flash_controller+0xfe0070a8>
 20100b8:	29000215 	stw	r4,8(r5)
 20100bc:	28800315 	stw	r2,12(r5)
 20100c0:	f800283a 	ret
 20100c4:	01803fc4 	movi	r6,255
 20100c8:	21800b26 	beq	r4,r6,20100f8 <__unpack_f+0x9c>
 20100cc:	100491fa 	slli	r2,r2,7
 20100d0:	213fe044 	addi	r4,r4,-127
 20100d4:	00c000c4 	movi	r3,3
 20100d8:	10900034 	orhi	r2,r2,16384
 20100dc:	29000215 	stw	r4,8(r5)
 20100e0:	28c00015 	stw	r3,0(r5)
 20100e4:	28800315 	stw	r2,12(r5)
 20100e8:	f800283a 	ret
 20100ec:	00800084 	movi	r2,2
 20100f0:	28800015 	stw	r2,0(r5)
 20100f4:	f800283a 	ret
 20100f8:	10000526 	beq	r2,zero,2010110 <__unpack_f+0xb4>
 20100fc:	18c0042c 	andhi	r3,r3,16
 2010100:	18000626 	beq	r3,zero,201011c <__unpack_f+0xc0>
 2010104:	00c00044 	movi	r3,1
 2010108:	28c00015 	stw	r3,0(r5)
 201010c:	003ff506 	br	20100e4 <__alt_mem_epcs_flash_controller+0xfe0070e4>
 2010110:	00800104 	movi	r2,4
 2010114:	28800015 	stw	r2,0(r5)
 2010118:	f800283a 	ret
 201011c:	28000015 	stw	zero,0(r5)
 2010120:	003ff006 	br	20100e4 <__alt_mem_epcs_flash_controller+0xfe0070e4>

02010124 <__fpcmp_parts_f>:
 2010124:	20c00017 	ldw	r3,0(r4)
 2010128:	00800044 	movi	r2,1
 201012c:	10c0172e 	bgeu	r2,r3,201018c <__fpcmp_parts_f+0x68>
 2010130:	29800017 	ldw	r6,0(r5)
 2010134:	1180152e 	bgeu	r2,r6,201018c <__fpcmp_parts_f+0x68>
 2010138:	01c00104 	movi	r7,4
 201013c:	19c02326 	beq	r3,r7,20101cc <__fpcmp_parts_f+0xa8>
 2010140:	31c00926 	beq	r6,r7,2010168 <__fpcmp_parts_f+0x44>
 2010144:	01c00084 	movi	r7,2
 2010148:	19c00626 	beq	r3,r7,2010164 <__fpcmp_parts_f+0x40>
 201014c:	31c01126 	beq	r6,r7,2010194 <__fpcmp_parts_f+0x70>
 2010150:	20c00117 	ldw	r3,4(r4)
 2010154:	29800117 	ldw	r6,4(r5)
 2010158:	19801226 	beq	r3,r6,20101a4 <__fpcmp_parts_f+0x80>
 201015c:	1800041e 	bne	r3,zero,2010170 <__fpcmp_parts_f+0x4c>
 2010160:	f800283a 	ret
 2010164:	30c01526 	beq	r6,r3,20101bc <__fpcmp_parts_f+0x98>
 2010168:	28800117 	ldw	r2,4(r5)
 201016c:	1000071e 	bne	r2,zero,201018c <__fpcmp_parts_f+0x68>
 2010170:	00bfffc4 	movi	r2,-1
 2010174:	f800283a 	ret
 2010178:	39801216 	blt	r7,r6,20101c4 <__fpcmp_parts_f+0xa0>
 201017c:	21000317 	ldw	r4,12(r4)
 2010180:	28800317 	ldw	r2,12(r5)
 2010184:	11000c2e 	bgeu	r2,r4,20101b8 <__fpcmp_parts_f+0x94>
 2010188:	183ff91e 	bne	r3,zero,2010170 <__alt_mem_epcs_flash_controller+0xfe007170>
 201018c:	00800044 	movi	r2,1
 2010190:	f800283a 	ret
 2010194:	20800117 	ldw	r2,4(r4)
 2010198:	103ff51e 	bne	r2,zero,2010170 <__alt_mem_epcs_flash_controller+0xfe007170>
 201019c:	00800044 	movi	r2,1
 20101a0:	f800283a 	ret
 20101a4:	21c00217 	ldw	r7,8(r4)
 20101a8:	29800217 	ldw	r6,8(r5)
 20101ac:	31fff20e 	bge	r6,r7,2010178 <__alt_mem_epcs_flash_controller+0xfe007178>
 20101b0:	183fef1e 	bne	r3,zero,2010170 <__alt_mem_epcs_flash_controller+0xfe007170>
 20101b4:	f800283a 	ret
 20101b8:	20800236 	bltu	r4,r2,20101c4 <__fpcmp_parts_f+0xa0>
 20101bc:	0005883a 	mov	r2,zero
 20101c0:	f800283a 	ret
 20101c4:	183fea26 	beq	r3,zero,2010170 <__alt_mem_epcs_flash_controller+0xfe007170>
 20101c8:	003ff006 	br	201018c <__alt_mem_epcs_flash_controller+0xfe00718c>
 20101cc:	30fff11e 	bne	r6,r3,2010194 <__alt_mem_epcs_flash_controller+0xfe007194>
 20101d0:	28c00117 	ldw	r3,4(r5)
 20101d4:	20800117 	ldw	r2,4(r4)
 20101d8:	1885c83a 	sub	r2,r3,r2
 20101dc:	f800283a 	ret

020101e0 <__make_fp>:
 20101e0:	defffb04 	addi	sp,sp,-20
 20101e4:	d9000015 	stw	r4,0(sp)
 20101e8:	d809883a 	mov	r4,sp
 20101ec:	dfc00415 	stw	ra,16(sp)
 20101f0:	d9400115 	stw	r5,4(sp)
 20101f4:	d9800215 	stw	r6,8(sp)
 20101f8:	d9c00315 	stw	r7,12(sp)
 20101fc:	20102dc0 	call	20102dc <__pack_f>
 2010200:	dfc00417 	ldw	ra,16(sp)
 2010204:	dec00504 	addi	sp,sp,20
 2010208:	f800283a 	ret

0201020c <__fpcmp_parts_d>:
 201020c:	20c00017 	ldw	r3,0(r4)
 2010210:	00800044 	movi	r2,1
 2010214:	10c0142e 	bgeu	r2,r3,2010268 <__fpcmp_parts_d+0x5c>
 2010218:	29800017 	ldw	r6,0(r5)
 201021c:	1180122e 	bgeu	r2,r6,2010268 <__fpcmp_parts_d+0x5c>
 2010220:	01c00104 	movi	r7,4
 2010224:	19c02826 	beq	r3,r7,20102c8 <__fpcmp_parts_d+0xbc>
 2010228:	31c00926 	beq	r6,r7,2010250 <__fpcmp_parts_d+0x44>
 201022c:	01c00084 	movi	r7,2
 2010230:	19c00626 	beq	r3,r7,201024c <__fpcmp_parts_d+0x40>
 2010234:	31c00a26 	beq	r6,r7,2010260 <__fpcmp_parts_d+0x54>
 2010238:	20c00117 	ldw	r3,4(r4)
 201023c:	29800117 	ldw	r6,4(r5)
 2010240:	19800b26 	beq	r3,r6,2010270 <__fpcmp_parts_d+0x64>
 2010244:	1800041e 	bne	r3,zero,2010258 <__fpcmp_parts_d+0x4c>
 2010248:	f800283a 	ret
 201024c:	30c01a26 	beq	r6,r3,20102b8 <__fpcmp_parts_d+0xac>
 2010250:	28800117 	ldw	r2,4(r5)
 2010254:	1000041e 	bne	r2,zero,2010268 <__fpcmp_parts_d+0x5c>
 2010258:	00bfffc4 	movi	r2,-1
 201025c:	f800283a 	ret
 2010260:	20800117 	ldw	r2,4(r4)
 2010264:	103ffc1e 	bne	r2,zero,2010258 <__alt_mem_epcs_flash_controller+0xfe007258>
 2010268:	00800044 	movi	r2,1
 201026c:	f800283a 	ret
 2010270:	21c00217 	ldw	r7,8(r4)
 2010274:	29800217 	ldw	r6,8(r5)
 2010278:	31c0020e 	bge	r6,r7,2010284 <__fpcmp_parts_d+0x78>
 201027c:	183ff61e 	bne	r3,zero,2010258 <__alt_mem_epcs_flash_controller+0xfe007258>
 2010280:	f800283a 	ret
 2010284:	39800a16 	blt	r7,r6,20102b0 <__fpcmp_parts_d+0xa4>
 2010288:	20800417 	ldw	r2,16(r4)
 201028c:	29800417 	ldw	r6,16(r5)
 2010290:	21c00317 	ldw	r7,12(r4)
 2010294:	29000317 	ldw	r4,12(r5)
 2010298:	30800936 	bltu	r6,r2,20102c0 <__fpcmp_parts_d+0xb4>
 201029c:	1180011e 	bne	r2,r6,20102a4 <__fpcmp_parts_d+0x98>
 20102a0:	21c00736 	bltu	r4,r7,20102c0 <__fpcmp_parts_d+0xb4>
 20102a4:	11800236 	bltu	r2,r6,20102b0 <__fpcmp_parts_d+0xa4>
 20102a8:	3080031e 	bne	r6,r2,20102b8 <__fpcmp_parts_d+0xac>
 20102ac:	3900022e 	bgeu	r7,r4,20102b8 <__fpcmp_parts_d+0xac>
 20102b0:	183fe926 	beq	r3,zero,2010258 <__alt_mem_epcs_flash_controller+0xfe007258>
 20102b4:	003fec06 	br	2010268 <__alt_mem_epcs_flash_controller+0xfe007268>
 20102b8:	0005883a 	mov	r2,zero
 20102bc:	f800283a 	ret
 20102c0:	183fe926 	beq	r3,zero,2010268 <__alt_mem_epcs_flash_controller+0xfe007268>
 20102c4:	003fe406 	br	2010258 <__alt_mem_epcs_flash_controller+0xfe007258>
 20102c8:	30ffe51e 	bne	r6,r3,2010260 <__alt_mem_epcs_flash_controller+0xfe007260>
 20102cc:	28c00117 	ldw	r3,4(r5)
 20102d0:	20800117 	ldw	r2,4(r4)
 20102d4:	1885c83a 	sub	r2,r3,r2
 20102d8:	f800283a 	ret

020102dc <__pack_f>:
 20102dc:	21400017 	ldw	r5,0(r4)
 20102e0:	01800044 	movi	r6,1
 20102e4:	20c00317 	ldw	r3,12(r4)
 20102e8:	21c00117 	ldw	r7,4(r4)
 20102ec:	3140282e 	bgeu	r6,r5,2010390 <__pack_f+0xb4>
 20102f0:	00800104 	movi	r2,4
 20102f4:	28802326 	beq	r5,r2,2010384 <__pack_f+0xa8>
 20102f8:	00800084 	movi	r2,2
 20102fc:	28800f26 	beq	r5,r2,201033c <__pack_f+0x60>
 2010300:	18000e26 	beq	r3,zero,201033c <__pack_f+0x60>
 2010304:	21000217 	ldw	r4,8(r4)
 2010308:	00bfe084 	movi	r2,-126
 201030c:	20802616 	blt	r4,r2,20103a8 <__pack_f+0xcc>
 2010310:	00801fc4 	movi	r2,127
 2010314:	11001b16 	blt	r2,r4,2010384 <__pack_f+0xa8>
 2010318:	188a703a 	and	r5,r3,r2
 201031c:	00801004 	movi	r2,64
 2010320:	28801126 	beq	r5,r2,2010368 <__pack_f+0x8c>
 2010324:	18c00fc4 	addi	r3,r3,63
 2010328:	18001316 	blt	r3,zero,2010378 <__pack_f+0x9c>
 201032c:	21001fc4 	addi	r4,r4,127
 2010330:	180690ba 	slli	r3,r3,2
 2010334:	1806d27a 	srli	r3,r3,9
 2010338:	00000206 	br	2010344 <__pack_f+0x68>
 201033c:	0009883a 	mov	r4,zero
 2010340:	0007883a 	mov	r3,zero
 2010344:	21003fcc 	andi	r4,r4,255
 2010348:	200895fa 	slli	r4,r4,23
 201034c:	380a97fa 	slli	r5,r7,31
 2010350:	00802034 	movhi	r2,128
 2010354:	10bfffc4 	addi	r2,r2,-1
 2010358:	1886703a 	and	r3,r3,r2
 201035c:	1904b03a 	or	r2,r3,r4
 2010360:	1144b03a 	or	r2,r2,r5
 2010364:	f800283a 	ret
 2010368:	1880200c 	andi	r2,r3,128
 201036c:	103fee26 	beq	r2,zero,2010328 <__alt_mem_epcs_flash_controller+0xfe007328>
 2010370:	18c01004 	addi	r3,r3,64
 2010374:	183fed0e 	bge	r3,zero,201032c <__alt_mem_epcs_flash_controller+0xfe00732c>
 2010378:	1806d07a 	srli	r3,r3,1
 201037c:	21002004 	addi	r4,r4,128
 2010380:	003feb06 	br	2010330 <__alt_mem_epcs_flash_controller+0xfe007330>
 2010384:	013fffc4 	movi	r4,-1
 2010388:	0007883a 	mov	r3,zero
 201038c:	003fed06 	br	2010344 <__alt_mem_epcs_flash_controller+0xfe007344>
 2010390:	18c00434 	orhi	r3,r3,16
 2010394:	00802034 	movhi	r2,128
 2010398:	10bfffc4 	addi	r2,r2,-1
 201039c:	1886703a 	and	r3,r3,r2
 20103a0:	013fffc4 	movi	r4,-1
 20103a4:	003fe706 	br	2010344 <__alt_mem_epcs_flash_controller+0xfe007344>
 20103a8:	1105c83a 	sub	r2,r2,r4
 20103ac:	01000644 	movi	r4,25
 20103b0:	20801216 	blt	r4,r2,20103fc <__pack_f+0x120>
 20103b4:	3088983a 	sll	r4,r6,r2
 20103b8:	1884d83a 	srl	r2,r3,r2
 20103bc:	213fffc4 	addi	r4,r4,-1
 20103c0:	20c6703a 	and	r3,r4,r3
 20103c4:	1806c03a 	cmpne	r3,r3,zero
 20103c8:	1884b03a 	or	r2,r3,r2
 20103cc:	11001fcc 	andi	r4,r2,127
 20103d0:	00c01004 	movi	r3,64
 20103d4:	20c00a1e 	bne	r4,r3,2010400 <__pack_f+0x124>
 20103d8:	10c0200c 	andi	r3,r2,128
 20103dc:	18000126 	beq	r3,zero,20103e4 <__pack_f+0x108>
 20103e0:	10801004 	addi	r2,r2,64
 20103e4:	100690ba 	slli	r3,r2,2
 20103e8:	01100034 	movhi	r4,16384
 20103ec:	1105403a 	cmpgeu	r2,r2,r4
 20103f0:	1806d27a 	srli	r3,r3,9
 20103f4:	1009883a 	mov	r4,r2
 20103f8:	003fd206 	br	2010344 <__alt_mem_epcs_flash_controller+0xfe007344>
 20103fc:	0005883a 	mov	r2,zero
 2010400:	10800fc4 	addi	r2,r2,63
 2010404:	003ff706 	br	20103e4 <__alt_mem_epcs_flash_controller+0xfe0073e4>

02010408 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 2010408:	defff504 	addi	sp,sp,-44
 201040c:	df000a15 	stw	fp,40(sp)
 2010410:	df000a04 	addi	fp,sp,40
 2010414:	e13ffc15 	stw	r4,-16(fp)
 2010418:	e17ffd15 	stw	r5,-12(fp)
 201041c:	e1bffe15 	stw	r6,-8(fp)
 2010420:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 2010424:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 2010428:	00808274 	movhi	r2,521
 201042c:	10ab0204 	addi	r2,r2,-21496
 2010430:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
 2010434:	10003f26 	beq	r2,zero,2010534 <alt_alarm_start+0x12c>
  {
    if (alarm)
 2010438:	e0bffc17 	ldw	r2,-16(fp)
 201043c:	10003b26 	beq	r2,zero,201052c <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
 2010440:	e0bffc17 	ldw	r2,-16(fp)
 2010444:	e0fffe17 	ldw	r3,-8(fp)
 2010448:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 201044c:	e0bffc17 	ldw	r2,-16(fp)
 2010450:	e0ffff17 	ldw	r3,-4(fp)
 2010454:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2010458:	0005303a 	rdctl	r2,status
 201045c:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2010460:	e0fff817 	ldw	r3,-32(fp)
 2010464:	00bfff84 	movi	r2,-2
 2010468:	1884703a 	and	r2,r3,r2
 201046c:	1001703a 	wrctl	status,r2
  
  return context;
 2010470:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
 2010474:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 2010478:	00808274 	movhi	r2,521
 201047c:	10ab0304 	addi	r2,r2,-21492
 2010480:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
 2010484:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 2010488:	e0fffd17 	ldw	r3,-12(fp)
 201048c:	e0bff617 	ldw	r2,-40(fp)
 2010490:	1885883a 	add	r2,r3,r2
 2010494:	10c00044 	addi	r3,r2,1
 2010498:	e0bffc17 	ldw	r2,-16(fp)
 201049c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 20104a0:	e0bffc17 	ldw	r2,-16(fp)
 20104a4:	10c00217 	ldw	r3,8(r2)
 20104a8:	e0bff617 	ldw	r2,-40(fp)
 20104ac:	1880042e 	bgeu	r3,r2,20104c0 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
 20104b0:	e0bffc17 	ldw	r2,-16(fp)
 20104b4:	00c00044 	movi	r3,1
 20104b8:	10c00405 	stb	r3,16(r2)
 20104bc:	00000206 	br	20104c8 <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
 20104c0:	e0bffc17 	ldw	r2,-16(fp)
 20104c4:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 20104c8:	e0bffc17 	ldw	r2,-16(fp)
 20104cc:	00c08274 	movhi	r3,521
 20104d0:	18e3c304 	addi	r3,r3,-28916
 20104d4:	e0fff915 	stw	r3,-28(fp)
 20104d8:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 20104dc:	e0bffa17 	ldw	r2,-24(fp)
 20104e0:	e0fff917 	ldw	r3,-28(fp)
 20104e4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 20104e8:	e0bff917 	ldw	r2,-28(fp)
 20104ec:	10c00017 	ldw	r3,0(r2)
 20104f0:	e0bffa17 	ldw	r2,-24(fp)
 20104f4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 20104f8:	e0bff917 	ldw	r2,-28(fp)
 20104fc:	10800017 	ldw	r2,0(r2)
 2010500:	e0fffa17 	ldw	r3,-24(fp)
 2010504:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 2010508:	e0bff917 	ldw	r2,-28(fp)
 201050c:	e0fffa17 	ldw	r3,-24(fp)
 2010510:	10c00015 	stw	r3,0(r2)
 2010514:	e0bff717 	ldw	r2,-36(fp)
 2010518:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 201051c:	e0bffb17 	ldw	r2,-20(fp)
 2010520:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 2010524:	0005883a 	mov	r2,zero
 2010528:	00000306 	br	2010538 <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
 201052c:	00bffa84 	movi	r2,-22
 2010530:	00000106 	br	2010538 <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
 2010534:	00bfde84 	movi	r2,-134
  }
}
 2010538:	e037883a 	mov	sp,fp
 201053c:	df000017 	ldw	fp,0(sp)
 2010540:	dec00104 	addi	sp,sp,4
 2010544:	f800283a 	ret

02010548 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2010548:	defffe04 	addi	sp,sp,-8
 201054c:	dfc00115 	stw	ra,4(sp)
 2010550:	df000015 	stw	fp,0(sp)
 2010554:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 2010558:	00808274 	movhi	r2,521
 201055c:	10a3c104 	addi	r2,r2,-28924
 2010560:	10800017 	ldw	r2,0(r2)
 2010564:	10000526 	beq	r2,zero,201057c <alt_get_errno+0x34>
 2010568:	00808274 	movhi	r2,521
 201056c:	10a3c104 	addi	r2,r2,-28924
 2010570:	10800017 	ldw	r2,0(r2)
 2010574:	103ee83a 	callr	r2
 2010578:	00000206 	br	2010584 <alt_get_errno+0x3c>
 201057c:	00808274 	movhi	r2,521
 2010580:	10aafb04 	addi	r2,r2,-21524
}
 2010584:	e037883a 	mov	sp,fp
 2010588:	dfc00117 	ldw	ra,4(sp)
 201058c:	df000017 	ldw	fp,0(sp)
 2010590:	dec00204 	addi	sp,sp,8
 2010594:	f800283a 	ret

02010598 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 2010598:	defffb04 	addi	sp,sp,-20
 201059c:	dfc00415 	stw	ra,16(sp)
 20105a0:	df000315 	stw	fp,12(sp)
 20105a4:	df000304 	addi	fp,sp,12
 20105a8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 20105ac:	e0bfff17 	ldw	r2,-4(fp)
 20105b0:	10000716 	blt	r2,zero,20105d0 <close+0x38>
 20105b4:	e13fff17 	ldw	r4,-4(fp)
 20105b8:	01400304 	movi	r5,12
 20105bc:	2001f500 	call	2001f50 <__mulsi3>
 20105c0:	00c08234 	movhi	r3,520
 20105c4:	18df0c04 	addi	r3,r3,31792
 20105c8:	10c5883a 	add	r2,r2,r3
 20105cc:	00000106 	br	20105d4 <close+0x3c>
 20105d0:	0005883a 	mov	r2,zero
 20105d4:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 20105d8:	e0bffd17 	ldw	r2,-12(fp)
 20105dc:	10001826 	beq	r2,zero,2010640 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 20105e0:	e0bffd17 	ldw	r2,-12(fp)
 20105e4:	10800017 	ldw	r2,0(r2)
 20105e8:	10800417 	ldw	r2,16(r2)
 20105ec:	10000626 	beq	r2,zero,2010608 <close+0x70>
 20105f0:	e0bffd17 	ldw	r2,-12(fp)
 20105f4:	10800017 	ldw	r2,0(r2)
 20105f8:	10800417 	ldw	r2,16(r2)
 20105fc:	e13ffd17 	ldw	r4,-12(fp)
 2010600:	103ee83a 	callr	r2
 2010604:	00000106 	br	201060c <close+0x74>
 2010608:	0005883a 	mov	r2,zero
 201060c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 2010610:	e13fff17 	ldw	r4,-4(fp)
 2010614:	2010c900 	call	2010c90 <alt_release_fd>
    if (rval < 0)
 2010618:	e0bffe17 	ldw	r2,-8(fp)
 201061c:	1000060e 	bge	r2,zero,2010638 <close+0xa0>
    {
      ALT_ERRNO = -rval;
 2010620:	20105480 	call	2010548 <alt_get_errno>
 2010624:	e0fffe17 	ldw	r3,-8(fp)
 2010628:	00c7c83a 	sub	r3,zero,r3
 201062c:	10c00015 	stw	r3,0(r2)
      return -1;
 2010630:	00bfffc4 	movi	r2,-1
 2010634:	00000606 	br	2010650 <close+0xb8>
    }
    return 0;
 2010638:	0005883a 	mov	r2,zero
 201063c:	00000406 	br	2010650 <close+0xb8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 2010640:	20105480 	call	2010548 <alt_get_errno>
 2010644:	00c01444 	movi	r3,81
 2010648:	10c00015 	stw	r3,0(r2)
    return -1;
 201064c:	00bfffc4 	movi	r2,-1
  }
}
 2010650:	e037883a 	mov	sp,fp
 2010654:	dfc00117 	ldw	ra,4(sp)
 2010658:	df000017 	ldw	fp,0(sp)
 201065c:	dec00204 	addi	sp,sp,8
 2010660:	f800283a 	ret

02010664 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 2010664:	defffc04 	addi	sp,sp,-16
 2010668:	df000315 	stw	fp,12(sp)
 201066c:	df000304 	addi	fp,sp,12
 2010670:	e13ffd15 	stw	r4,-12(fp)
 2010674:	e17ffe15 	stw	r5,-8(fp)
 2010678:	e1bfff15 	stw	r6,-4(fp)
  return len;
 201067c:	e0bfff17 	ldw	r2,-4(fp)
}
 2010680:	e037883a 	mov	sp,fp
 2010684:	df000017 	ldw	fp,0(sp)
 2010688:	dec00104 	addi	sp,sp,4
 201068c:	f800283a 	ret

02010690 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2010690:	defffe04 	addi	sp,sp,-8
 2010694:	dfc00115 	stw	ra,4(sp)
 2010698:	df000015 	stw	fp,0(sp)
 201069c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 20106a0:	00808274 	movhi	r2,521
 20106a4:	10a3c104 	addi	r2,r2,-28924
 20106a8:	10800017 	ldw	r2,0(r2)
 20106ac:	10000526 	beq	r2,zero,20106c4 <alt_get_errno+0x34>
 20106b0:	00808274 	movhi	r2,521
 20106b4:	10a3c104 	addi	r2,r2,-28924
 20106b8:	10800017 	ldw	r2,0(r2)
 20106bc:	103ee83a 	callr	r2
 20106c0:	00000206 	br	20106cc <alt_get_errno+0x3c>
 20106c4:	00808274 	movhi	r2,521
 20106c8:	10aafb04 	addi	r2,r2,-21524
}
 20106cc:	e037883a 	mov	sp,fp
 20106d0:	dfc00117 	ldw	ra,4(sp)
 20106d4:	df000017 	ldw	fp,0(sp)
 20106d8:	dec00204 	addi	sp,sp,8
 20106dc:	f800283a 	ret

020106e0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 20106e0:	defffb04 	addi	sp,sp,-20
 20106e4:	dfc00415 	stw	ra,16(sp)
 20106e8:	df000315 	stw	fp,12(sp)
 20106ec:	df000304 	addi	fp,sp,12
 20106f0:	e13ffe15 	stw	r4,-8(fp)
 20106f4:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 20106f8:	e0bffe17 	ldw	r2,-8(fp)
 20106fc:	10000716 	blt	r2,zero,201071c <fstat+0x3c>
 2010700:	e13ffe17 	ldw	r4,-8(fp)
 2010704:	01400304 	movi	r5,12
 2010708:	2001f500 	call	2001f50 <__mulsi3>
 201070c:	00c08234 	movhi	r3,520
 2010710:	18df0c04 	addi	r3,r3,31792
 2010714:	10c5883a 	add	r2,r2,r3
 2010718:	00000106 	br	2010720 <fstat+0x40>
 201071c:	0005883a 	mov	r2,zero
 2010720:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 2010724:	e0bffd17 	ldw	r2,-12(fp)
 2010728:	10001026 	beq	r2,zero,201076c <fstat+0x8c>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 201072c:	e0bffd17 	ldw	r2,-12(fp)
 2010730:	10800017 	ldw	r2,0(r2)
 2010734:	10800817 	ldw	r2,32(r2)
 2010738:	10000726 	beq	r2,zero,2010758 <fstat+0x78>
    {
      return fd->dev->fstat(fd, st);
 201073c:	e0bffd17 	ldw	r2,-12(fp)
 2010740:	10800017 	ldw	r2,0(r2)
 2010744:	10800817 	ldw	r2,32(r2)
 2010748:	e13ffd17 	ldw	r4,-12(fp)
 201074c:	e17fff17 	ldw	r5,-4(fp)
 2010750:	103ee83a 	callr	r2
 2010754:	00000906 	br	201077c <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 2010758:	e0bfff17 	ldw	r2,-4(fp)
 201075c:	00c80004 	movi	r3,8192
 2010760:	10c00115 	stw	r3,4(r2)
      return 0;
 2010764:	0005883a 	mov	r2,zero
 2010768:	00000406 	br	201077c <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 201076c:	20106900 	call	2010690 <alt_get_errno>
 2010770:	00c01444 	movi	r3,81
 2010774:	10c00015 	stw	r3,0(r2)
    return -1;
 2010778:	00bfffc4 	movi	r2,-1
  }
}
 201077c:	e037883a 	mov	sp,fp
 2010780:	dfc00117 	ldw	ra,4(sp)
 2010784:	df000017 	ldw	fp,0(sp)
 2010788:	dec00204 	addi	sp,sp,8
 201078c:	f800283a 	ret

02010790 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2010790:	defffe04 	addi	sp,sp,-8
 2010794:	dfc00115 	stw	ra,4(sp)
 2010798:	df000015 	stw	fp,0(sp)
 201079c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 20107a0:	00808274 	movhi	r2,521
 20107a4:	10a3c104 	addi	r2,r2,-28924
 20107a8:	10800017 	ldw	r2,0(r2)
 20107ac:	10000526 	beq	r2,zero,20107c4 <alt_get_errno+0x34>
 20107b0:	00808274 	movhi	r2,521
 20107b4:	10a3c104 	addi	r2,r2,-28924
 20107b8:	10800017 	ldw	r2,0(r2)
 20107bc:	103ee83a 	callr	r2
 20107c0:	00000206 	br	20107cc <alt_get_errno+0x3c>
 20107c4:	00808274 	movhi	r2,521
 20107c8:	10aafb04 	addi	r2,r2,-21524
}
 20107cc:	e037883a 	mov	sp,fp
 20107d0:	dfc00117 	ldw	ra,4(sp)
 20107d4:	df000017 	ldw	fp,0(sp)
 20107d8:	dec00204 	addi	sp,sp,8
 20107dc:	f800283a 	ret

020107e0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 20107e0:	deffed04 	addi	sp,sp,-76
 20107e4:	dfc01215 	stw	ra,72(sp)
 20107e8:	df001115 	stw	fp,68(sp)
 20107ec:	df001104 	addi	fp,sp,68
 20107f0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 20107f4:	e0bfff17 	ldw	r2,-4(fp)
 20107f8:	10000716 	blt	r2,zero,2010818 <isatty+0x38>
 20107fc:	e13fff17 	ldw	r4,-4(fp)
 2010800:	01400304 	movi	r5,12
 2010804:	2001f500 	call	2001f50 <__mulsi3>
 2010808:	00c08234 	movhi	r3,520
 201080c:	18df0c04 	addi	r3,r3,31792
 2010810:	10c5883a 	add	r2,r2,r3
 2010814:	00000106 	br	201081c <isatty+0x3c>
 2010818:	0005883a 	mov	r2,zero
 201081c:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 2010820:	e0bfef17 	ldw	r2,-68(fp)
 2010824:	10000e26 	beq	r2,zero,2010860 <isatty+0x80>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 2010828:	e0bfef17 	ldw	r2,-68(fp)
 201082c:	10800017 	ldw	r2,0(r2)
 2010830:	10800817 	ldw	r2,32(r2)
 2010834:	1000021e 	bne	r2,zero,2010840 <isatty+0x60>
    {
      return 1;
 2010838:	00800044 	movi	r2,1
 201083c:	00000c06 	br	2010870 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 2010840:	e0bff004 	addi	r2,fp,-64
 2010844:	e13fff17 	ldw	r4,-4(fp)
 2010848:	100b883a 	mov	r5,r2
 201084c:	20106e00 	call	20106e0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 2010850:	e0bff117 	ldw	r2,-60(fp)
 2010854:	10880020 	cmpeqi	r2,r2,8192
 2010858:	10803fcc 	andi	r2,r2,255
 201085c:	00000406 	br	2010870 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 2010860:	20107900 	call	2010790 <alt_get_errno>
 2010864:	00c01444 	movi	r3,81
 2010868:	10c00015 	stw	r3,0(r2)
    return 0;
 201086c:	0005883a 	mov	r2,zero
  }
}
 2010870:	e037883a 	mov	sp,fp
 2010874:	dfc00117 	ldw	ra,4(sp)
 2010878:	df000017 	ldw	fp,0(sp)
 201087c:	dec00204 	addi	sp,sp,8
 2010880:	f800283a 	ret

02010884 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 2010884:	defffc04 	addi	sp,sp,-16
 2010888:	df000315 	stw	fp,12(sp)
 201088c:	df000304 	addi	fp,sp,12
 2010890:	e13ffd15 	stw	r4,-12(fp)
 2010894:	e17ffe15 	stw	r5,-8(fp)
 2010898:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 201089c:	e0fffe17 	ldw	r3,-8(fp)
 20108a0:	e0bffd17 	ldw	r2,-12(fp)
 20108a4:	18800e26 	beq	r3,r2,20108e0 <alt_load_section+0x5c>
  {
    while( to != end )
 20108a8:	00000a06 	br	20108d4 <alt_load_section+0x50>
    {
      *to++ = *from++;
 20108ac:	e0bffd17 	ldw	r2,-12(fp)
 20108b0:	10c00017 	ldw	r3,0(r2)
 20108b4:	e0bffe17 	ldw	r2,-8(fp)
 20108b8:	10c00015 	stw	r3,0(r2)
 20108bc:	e0bffe17 	ldw	r2,-8(fp)
 20108c0:	10800104 	addi	r2,r2,4
 20108c4:	e0bffe15 	stw	r2,-8(fp)
 20108c8:	e0bffd17 	ldw	r2,-12(fp)
 20108cc:	10800104 	addi	r2,r2,4
 20108d0:	e0bffd15 	stw	r2,-12(fp)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 20108d4:	e0fffe17 	ldw	r3,-8(fp)
 20108d8:	e0bfff17 	ldw	r2,-4(fp)
 20108dc:	18bff31e 	bne	r3,r2,20108ac <__alt_mem_epcs_flash_controller+0xfe0078ac>
    {
      *to++ = *from++;
    }
  }
}
 20108e0:	e037883a 	mov	sp,fp
 20108e4:	df000017 	ldw	fp,0(sp)
 20108e8:	dec00104 	addi	sp,sp,4
 20108ec:	f800283a 	ret

020108f0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 20108f0:	defffe04 	addi	sp,sp,-8
 20108f4:	dfc00115 	stw	ra,4(sp)
 20108f8:	df000015 	stw	fp,0(sp)
 20108fc:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 2010900:	01008274 	movhi	r4,521
 2010904:	2123c804 	addi	r4,r4,-28896
 2010908:	01408234 	movhi	r5,520
 201090c:	295c9904 	addi	r5,r5,29284
 2010910:	01808274 	movhi	r6,521
 2010914:	31a3c804 	addi	r6,r6,-28896
 2010918:	20108840 	call	2010884 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 201091c:	01008034 	movhi	r4,512
 2010920:	21000804 	addi	r4,r4,32
 2010924:	01408034 	movhi	r5,512
 2010928:	29400804 	addi	r5,r5,32
 201092c:	01808034 	movhi	r6,512
 2010930:	31806e04 	addi	r6,r6,440
 2010934:	20108840 	call	2010884 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 2010938:	01008074 	movhi	r4,513
 201093c:	210f9204 	addi	r4,r4,15944
 2010940:	01408074 	movhi	r5,513
 2010944:	294f9204 	addi	r5,r5,15944
 2010948:	01808234 	movhi	r6,520
 201094c:	319c9904 	addi	r6,r6,29284
 2010950:	20108840 	call	2010884 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 2010954:	2012c840 	call	2012c84 <alt_dcache_flush_all>
  alt_icache_flush_all();
 2010958:	2012f000 	call	2012f00 <alt_icache_flush_all>
}
 201095c:	e037883a 	mov	sp,fp
 2010960:	dfc00117 	ldw	ra,4(sp)
 2010964:	df000017 	ldw	fp,0(sp)
 2010968:	dec00204 	addi	sp,sp,8
 201096c:	f800283a 	ret

02010970 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2010970:	defffe04 	addi	sp,sp,-8
 2010974:	dfc00115 	stw	ra,4(sp)
 2010978:	df000015 	stw	fp,0(sp)
 201097c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 2010980:	00808274 	movhi	r2,521
 2010984:	10a3c104 	addi	r2,r2,-28924
 2010988:	10800017 	ldw	r2,0(r2)
 201098c:	10000526 	beq	r2,zero,20109a4 <alt_get_errno+0x34>
 2010990:	00808274 	movhi	r2,521
 2010994:	10a3c104 	addi	r2,r2,-28924
 2010998:	10800017 	ldw	r2,0(r2)
 201099c:	103ee83a 	callr	r2
 20109a0:	00000206 	br	20109ac <alt_get_errno+0x3c>
 20109a4:	00808274 	movhi	r2,521
 20109a8:	10aafb04 	addi	r2,r2,-21524
}
 20109ac:	e037883a 	mov	sp,fp
 20109b0:	dfc00117 	ldw	ra,4(sp)
 20109b4:	df000017 	ldw	fp,0(sp)
 20109b8:	dec00204 	addi	sp,sp,8
 20109bc:	f800283a 	ret

020109c0 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 20109c0:	defff904 	addi	sp,sp,-28
 20109c4:	dfc00615 	stw	ra,24(sp)
 20109c8:	df000515 	stw	fp,20(sp)
 20109cc:	df000504 	addi	fp,sp,20
 20109d0:	e13ffd15 	stw	r4,-12(fp)
 20109d4:	e17ffe15 	stw	r5,-8(fp)
 20109d8:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 20109dc:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 20109e0:	e0bffd17 	ldw	r2,-12(fp)
 20109e4:	10000716 	blt	r2,zero,2010a04 <lseek+0x44>
 20109e8:	e13ffd17 	ldw	r4,-12(fp)
 20109ec:	01400304 	movi	r5,12
 20109f0:	2001f500 	call	2001f50 <__mulsi3>
 20109f4:	00c08234 	movhi	r3,520
 20109f8:	18df0c04 	addi	r3,r3,31792
 20109fc:	10c5883a 	add	r2,r2,r3
 2010a00:	00000106 	br	2010a08 <lseek+0x48>
 2010a04:	0005883a 	mov	r2,zero
 2010a08:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 2010a0c:	e0bffc17 	ldw	r2,-16(fp)
 2010a10:	10001026 	beq	r2,zero,2010a54 <lseek+0x94>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 2010a14:	e0bffc17 	ldw	r2,-16(fp)
 2010a18:	10800017 	ldw	r2,0(r2)
 2010a1c:	10800717 	ldw	r2,28(r2)
 2010a20:	10000926 	beq	r2,zero,2010a48 <lseek+0x88>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 2010a24:	e0bffc17 	ldw	r2,-16(fp)
 2010a28:	10800017 	ldw	r2,0(r2)
 2010a2c:	10800717 	ldw	r2,28(r2)
 2010a30:	e13ffc17 	ldw	r4,-16(fp)
 2010a34:	e17ffe17 	ldw	r5,-8(fp)
 2010a38:	e1bfff17 	ldw	r6,-4(fp)
 2010a3c:	103ee83a 	callr	r2
 2010a40:	e0bffb15 	stw	r2,-20(fp)
 2010a44:	00000506 	br	2010a5c <lseek+0x9c>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 2010a48:	00bfde84 	movi	r2,-134
 2010a4c:	e0bffb15 	stw	r2,-20(fp)
 2010a50:	00000206 	br	2010a5c <lseek+0x9c>
    }
  }
  else  
  {
    rc = -EBADFD;
 2010a54:	00bfebc4 	movi	r2,-81
 2010a58:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 2010a5c:	e0bffb17 	ldw	r2,-20(fp)
 2010a60:	1000060e 	bge	r2,zero,2010a7c <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
 2010a64:	20109700 	call	2010970 <alt_get_errno>
 2010a68:	e0fffb17 	ldw	r3,-20(fp)
 2010a6c:	00c7c83a 	sub	r3,zero,r3
 2010a70:	10c00015 	stw	r3,0(r2)
    rc = -1;
 2010a74:	00bfffc4 	movi	r2,-1
 2010a78:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 2010a7c:	e0bffb17 	ldw	r2,-20(fp)
}
 2010a80:	e037883a 	mov	sp,fp
 2010a84:	dfc00117 	ldw	ra,4(sp)
 2010a88:	df000017 	ldw	fp,0(sp)
 2010a8c:	dec00204 	addi	sp,sp,8
 2010a90:	f800283a 	ret

02010a94 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 2010a94:	defffd04 	addi	sp,sp,-12
 2010a98:	dfc00215 	stw	ra,8(sp)
 2010a9c:	df000115 	stw	fp,4(sp)
 2010aa0:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 2010aa4:	0009883a 	mov	r4,zero
 2010aa8:	20110d40 	call	20110d4 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 2010aac:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 2010ab0:	20111080 	call	2011108 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 2010ab4:	01008234 	movhi	r4,520
 2010ab8:	211c8a04 	addi	r4,r4,29224
 2010abc:	01408234 	movhi	r5,520
 2010ac0:	295c8a04 	addi	r5,r5,29224
 2010ac4:	01808234 	movhi	r6,520
 2010ac8:	319c8a04 	addi	r6,r6,29224
 2010acc:	20132c40 	call	20132c4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 2010ad0:	2012d900 	call	2012d90 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 2010ad4:	01008074 	movhi	r4,513
 2010ad8:	210b7b04 	addi	r4,r4,11756
 2010adc:	2013a740 	call	2013a74 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 2010ae0:	d1274917 	ldw	r4,-25308(gp)
 2010ae4:	d0e74a17 	ldw	r3,-25304(gp)
 2010ae8:	d0a74b17 	ldw	r2,-25300(gp)
 2010aec:	180b883a 	mov	r5,r3
 2010af0:	100d883a 	mov	r6,r2
 2010af4:	20015900 	call	2001590 <main>
 2010af8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 2010afc:	01000044 	movi	r4,1
 2010b00:	20105980 	call	2010598 <close>
  exit (result);
 2010b04:	e13fff17 	ldw	r4,-4(fp)
 2010b08:	2013a880 	call	2013a88 <exit>

02010b0c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 2010b0c:	defffe04 	addi	sp,sp,-8
 2010b10:	df000115 	stw	fp,4(sp)
 2010b14:	df000104 	addi	fp,sp,4
 2010b18:	e13fff15 	stw	r4,-4(fp)
}
 2010b1c:	e037883a 	mov	sp,fp
 2010b20:	df000017 	ldw	fp,0(sp)
 2010b24:	dec00104 	addi	sp,sp,4
 2010b28:	f800283a 	ret

02010b2c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 2010b2c:	defffe04 	addi	sp,sp,-8
 2010b30:	df000115 	stw	fp,4(sp)
 2010b34:	df000104 	addi	fp,sp,4
 2010b38:	e13fff15 	stw	r4,-4(fp)
}
 2010b3c:	e037883a 	mov	sp,fp
 2010b40:	df000017 	ldw	fp,0(sp)
 2010b44:	dec00104 	addi	sp,sp,4
 2010b48:	f800283a 	ret

02010b4c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2010b4c:	defffe04 	addi	sp,sp,-8
 2010b50:	dfc00115 	stw	ra,4(sp)
 2010b54:	df000015 	stw	fp,0(sp)
 2010b58:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 2010b5c:	00808274 	movhi	r2,521
 2010b60:	10a3c104 	addi	r2,r2,-28924
 2010b64:	10800017 	ldw	r2,0(r2)
 2010b68:	10000526 	beq	r2,zero,2010b80 <alt_get_errno+0x34>
 2010b6c:	00808274 	movhi	r2,521
 2010b70:	10a3c104 	addi	r2,r2,-28924
 2010b74:	10800017 	ldw	r2,0(r2)
 2010b78:	103ee83a 	callr	r2
 2010b7c:	00000206 	br	2010b88 <alt_get_errno+0x3c>
 2010b80:	00808274 	movhi	r2,521
 2010b84:	10aafb04 	addi	r2,r2,-21524
}
 2010b88:	e037883a 	mov	sp,fp
 2010b8c:	dfc00117 	ldw	ra,4(sp)
 2010b90:	df000017 	ldw	fp,0(sp)
 2010b94:	dec00204 	addi	sp,sp,8
 2010b98:	f800283a 	ret

02010b9c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 2010b9c:	defff904 	addi	sp,sp,-28
 2010ba0:	dfc00615 	stw	ra,24(sp)
 2010ba4:	df000515 	stw	fp,20(sp)
 2010ba8:	df000504 	addi	fp,sp,20
 2010bac:	e13ffd15 	stw	r4,-12(fp)
 2010bb0:	e17ffe15 	stw	r5,-8(fp)
 2010bb4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 2010bb8:	e0bffd17 	ldw	r2,-12(fp)
 2010bbc:	10000716 	blt	r2,zero,2010bdc <read+0x40>
 2010bc0:	e13ffd17 	ldw	r4,-12(fp)
 2010bc4:	01400304 	movi	r5,12
 2010bc8:	2001f500 	call	2001f50 <__mulsi3>
 2010bcc:	00c08234 	movhi	r3,520
 2010bd0:	18df0c04 	addi	r3,r3,31792
 2010bd4:	10c5883a 	add	r2,r2,r3
 2010bd8:	00000106 	br	2010be0 <read+0x44>
 2010bdc:	0005883a 	mov	r2,zero
 2010be0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 2010be4:	e0bffb17 	ldw	r2,-20(fp)
 2010be8:	10002026 	beq	r2,zero,2010c6c <read+0xd0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 2010bec:	e0bffb17 	ldw	r2,-20(fp)
 2010bf0:	10800217 	ldw	r2,8(r2)
 2010bf4:	108000cc 	andi	r2,r2,3
 2010bf8:	10800060 	cmpeqi	r2,r2,1
 2010bfc:	1000171e 	bne	r2,zero,2010c5c <read+0xc0>
        (fd->dev->read))
 2010c00:	e0bffb17 	ldw	r2,-20(fp)
 2010c04:	10800017 	ldw	r2,0(r2)
 2010c08:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 2010c0c:	10001326 	beq	r2,zero,2010c5c <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 2010c10:	e0bffb17 	ldw	r2,-20(fp)
 2010c14:	10800017 	ldw	r2,0(r2)
 2010c18:	10c00517 	ldw	r3,20(r2)
 2010c1c:	e0bfff17 	ldw	r2,-4(fp)
 2010c20:	e13ffb17 	ldw	r4,-20(fp)
 2010c24:	e17ffe17 	ldw	r5,-8(fp)
 2010c28:	100d883a 	mov	r6,r2
 2010c2c:	183ee83a 	callr	r3
 2010c30:	e0bffc15 	stw	r2,-16(fp)
 2010c34:	e0bffc17 	ldw	r2,-16(fp)
 2010c38:	1000060e 	bge	r2,zero,2010c54 <read+0xb8>
        {
          ALT_ERRNO = -rval;
 2010c3c:	2010b4c0 	call	2010b4c <alt_get_errno>
 2010c40:	e0fffc17 	ldw	r3,-16(fp)
 2010c44:	00c7c83a 	sub	r3,zero,r3
 2010c48:	10c00015 	stw	r3,0(r2)
          return -1;
 2010c4c:	00bfffc4 	movi	r2,-1
 2010c50:	00000a06 	br	2010c7c <read+0xe0>
        }
        return rval;
 2010c54:	e0bffc17 	ldw	r2,-16(fp)
 2010c58:	00000806 	br	2010c7c <read+0xe0>
      }
      else
      {
        ALT_ERRNO = EACCES;
 2010c5c:	2010b4c0 	call	2010b4c <alt_get_errno>
 2010c60:	00c00344 	movi	r3,13
 2010c64:	10c00015 	stw	r3,0(r2)
 2010c68:	00000306 	br	2010c78 <read+0xdc>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 2010c6c:	2010b4c0 	call	2010b4c <alt_get_errno>
 2010c70:	00c01444 	movi	r3,81
 2010c74:	10c00015 	stw	r3,0(r2)
  }
  return -1;
 2010c78:	00bfffc4 	movi	r2,-1
}
 2010c7c:	e037883a 	mov	sp,fp
 2010c80:	dfc00117 	ldw	ra,4(sp)
 2010c84:	df000017 	ldw	fp,0(sp)
 2010c88:	dec00204 	addi	sp,sp,8
 2010c8c:	f800283a 	ret

02010c90 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 2010c90:	defffc04 	addi	sp,sp,-16
 2010c94:	dfc00315 	stw	ra,12(sp)
 2010c98:	df000215 	stw	fp,8(sp)
 2010c9c:	dc000115 	stw	r16,4(sp)
 2010ca0:	df000104 	addi	fp,sp,4
 2010ca4:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 2010ca8:	e0bfff17 	ldw	r2,-4(fp)
 2010cac:	108000d0 	cmplti	r2,r2,3
 2010cb0:	1000111e 	bne	r2,zero,2010cf8 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
 2010cb4:	04008234 	movhi	r16,520
 2010cb8:	841f0c04 	addi	r16,r16,31792
 2010cbc:	e0bfff17 	ldw	r2,-4(fp)
 2010cc0:	1009883a 	mov	r4,r2
 2010cc4:	01400304 	movi	r5,12
 2010cc8:	2001f500 	call	2001f50 <__mulsi3>
 2010ccc:	8085883a 	add	r2,r16,r2
 2010cd0:	10800204 	addi	r2,r2,8
 2010cd4:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 2010cd8:	04008234 	movhi	r16,520
 2010cdc:	841f0c04 	addi	r16,r16,31792
 2010ce0:	e0bfff17 	ldw	r2,-4(fp)
 2010ce4:	1009883a 	mov	r4,r2
 2010ce8:	01400304 	movi	r5,12
 2010cec:	2001f500 	call	2001f50 <__mulsi3>
 2010cf0:	8085883a 	add	r2,r16,r2
 2010cf4:	10000015 	stw	zero,0(r2)
  }
}
 2010cf8:	e037883a 	mov	sp,fp
 2010cfc:	dfc00217 	ldw	ra,8(sp)
 2010d00:	df000117 	ldw	fp,4(sp)
 2010d04:	dc000017 	ldw	r16,0(sp)
 2010d08:	dec00304 	addi	sp,sp,12
 2010d0c:	f800283a 	ret

02010d10 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 2010d10:	defff904 	addi	sp,sp,-28
 2010d14:	df000615 	stw	fp,24(sp)
 2010d18:	df000604 	addi	fp,sp,24
 2010d1c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2010d20:	0005303a 	rdctl	r2,status
 2010d24:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2010d28:	e0fffc17 	ldw	r3,-16(fp)
 2010d2c:	00bfff84 	movi	r2,-2
 2010d30:	1884703a 	and	r2,r3,r2
 2010d34:	1001703a 	wrctl	status,r2
  
  return context;
 2010d38:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 2010d3c:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 2010d40:	d0a00c17 	ldw	r2,-32720(gp)
 2010d44:	10c000c4 	addi	r3,r2,3
 2010d48:	00bfff04 	movi	r2,-4
 2010d4c:	1884703a 	and	r2,r3,r2
 2010d50:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 2010d54:	d0e00c17 	ldw	r3,-32720(gp)
 2010d58:	e0bfff17 	ldw	r2,-4(fp)
 2010d5c:	1885883a 	add	r2,r3,r2
 2010d60:	00c10034 	movhi	r3,1024
 2010d64:	18c00004 	addi	r3,r3,0
 2010d68:	1880062e 	bgeu	r3,r2,2010d84 <sbrk+0x74>
 2010d6c:	e0bffa17 	ldw	r2,-24(fp)
 2010d70:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 2010d74:	e0bffd17 	ldw	r2,-12(fp)
 2010d78:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 2010d7c:	00bfffc4 	movi	r2,-1
 2010d80:	00000b06 	br	2010db0 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 2010d84:	d0a00c17 	ldw	r2,-32720(gp)
 2010d88:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
 2010d8c:	d0e00c17 	ldw	r3,-32720(gp)
 2010d90:	e0bfff17 	ldw	r2,-4(fp)
 2010d94:	1885883a 	add	r2,r3,r2
 2010d98:	d0a00c15 	stw	r2,-32720(gp)
 2010d9c:	e0bffa17 	ldw	r2,-24(fp)
 2010da0:	e0bffe15 	stw	r2,-8(fp)
 2010da4:	e0bffe17 	ldw	r2,-8(fp)
 2010da8:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 2010dac:	e0bffb17 	ldw	r2,-20(fp)
} 
 2010db0:	e037883a 	mov	sp,fp
 2010db4:	df000017 	ldw	fp,0(sp)
 2010db8:	dec00104 	addi	sp,sp,4
 2010dbc:	f800283a 	ret

02010dc0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 2010dc0:	defffa04 	addi	sp,sp,-24
 2010dc4:	df000515 	stw	fp,20(sp)
 2010dc8:	df000504 	addi	fp,sp,20
 2010dcc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2010dd0:	0005303a 	rdctl	r2,status
 2010dd4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2010dd8:	e0fffc17 	ldw	r3,-16(fp)
 2010ddc:	00bfff84 	movi	r2,-2
 2010de0:	1884703a 	and	r2,r3,r2
 2010de4:	1001703a 	wrctl	status,r2
  
  return context;
 2010de8:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 2010dec:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 2010df0:	e0bfff17 	ldw	r2,-4(fp)
 2010df4:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 2010df8:	e0bffd17 	ldw	r2,-12(fp)
 2010dfc:	10800017 	ldw	r2,0(r2)
 2010e00:	e0fffd17 	ldw	r3,-12(fp)
 2010e04:	18c00117 	ldw	r3,4(r3)
 2010e08:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 2010e0c:	e0bffd17 	ldw	r2,-12(fp)
 2010e10:	10800117 	ldw	r2,4(r2)
 2010e14:	e0fffd17 	ldw	r3,-12(fp)
 2010e18:	18c00017 	ldw	r3,0(r3)
 2010e1c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 2010e20:	e0bffd17 	ldw	r2,-12(fp)
 2010e24:	e0fffd17 	ldw	r3,-12(fp)
 2010e28:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 2010e2c:	e0bffd17 	ldw	r2,-12(fp)
 2010e30:	e0fffd17 	ldw	r3,-12(fp)
 2010e34:	10c00015 	stw	r3,0(r2)
 2010e38:	e0bffb17 	ldw	r2,-20(fp)
 2010e3c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 2010e40:	e0bffe17 	ldw	r2,-8(fp)
 2010e44:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 2010e48:	e037883a 	mov	sp,fp
 2010e4c:	df000017 	ldw	fp,0(sp)
 2010e50:	dec00104 	addi	sp,sp,4
 2010e54:	f800283a 	ret

02010e58 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 2010e58:	defffb04 	addi	sp,sp,-20
 2010e5c:	dfc00415 	stw	ra,16(sp)
 2010e60:	df000315 	stw	fp,12(sp)
 2010e64:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 2010e68:	d0a00d17 	ldw	r2,-32716(gp)
 2010e6c:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 2010e70:	d0a74d17 	ldw	r2,-25292(gp)
 2010e74:	10800044 	addi	r2,r2,1
 2010e78:	d0a74d15 	stw	r2,-25292(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 2010e7c:	00002e06 	br	2010f38 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 2010e80:	e0bffd17 	ldw	r2,-12(fp)
 2010e84:	10800017 	ldw	r2,0(r2)
 2010e88:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 2010e8c:	e0bffd17 	ldw	r2,-12(fp)
 2010e90:	10800403 	ldbu	r2,16(r2)
 2010e94:	10803fcc 	andi	r2,r2,255
 2010e98:	10000426 	beq	r2,zero,2010eac <alt_tick+0x54>
 2010e9c:	d0a74d17 	ldw	r2,-25292(gp)
 2010ea0:	1000021e 	bne	r2,zero,2010eac <alt_tick+0x54>
    {
      alarm->rollover = 0;
 2010ea4:	e0bffd17 	ldw	r2,-12(fp)
 2010ea8:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 2010eac:	e0bffd17 	ldw	r2,-12(fp)
 2010eb0:	10800217 	ldw	r2,8(r2)
 2010eb4:	d0e74d17 	ldw	r3,-25292(gp)
 2010eb8:	18801d36 	bltu	r3,r2,2010f30 <alt_tick+0xd8>
 2010ebc:	e0bffd17 	ldw	r2,-12(fp)
 2010ec0:	10800403 	ldbu	r2,16(r2)
 2010ec4:	10803fcc 	andi	r2,r2,255
 2010ec8:	1000191e 	bne	r2,zero,2010f30 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 2010ecc:	e0bffd17 	ldw	r2,-12(fp)
 2010ed0:	10c00317 	ldw	r3,12(r2)
 2010ed4:	e0bffd17 	ldw	r2,-12(fp)
 2010ed8:	10800517 	ldw	r2,20(r2)
 2010edc:	1009883a 	mov	r4,r2
 2010ee0:	183ee83a 	callr	r3
 2010ee4:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 2010ee8:	e0bfff17 	ldw	r2,-4(fp)
 2010eec:	1000031e 	bne	r2,zero,2010efc <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 2010ef0:	e13ffd17 	ldw	r4,-12(fp)
 2010ef4:	2010dc00 	call	2010dc0 <alt_alarm_stop>
 2010ef8:	00000d06 	br	2010f30 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 2010efc:	e0bffd17 	ldw	r2,-12(fp)
 2010f00:	10c00217 	ldw	r3,8(r2)
 2010f04:	e0bfff17 	ldw	r2,-4(fp)
 2010f08:	1887883a 	add	r3,r3,r2
 2010f0c:	e0bffd17 	ldw	r2,-12(fp)
 2010f10:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 2010f14:	e0bffd17 	ldw	r2,-12(fp)
 2010f18:	10c00217 	ldw	r3,8(r2)
 2010f1c:	d0a74d17 	ldw	r2,-25292(gp)
 2010f20:	1880032e 	bgeu	r3,r2,2010f30 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 2010f24:	e0bffd17 	ldw	r2,-12(fp)
 2010f28:	00c00044 	movi	r3,1
 2010f2c:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 2010f30:	e0bffe17 	ldw	r2,-8(fp)
 2010f34:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 2010f38:	e0fffd17 	ldw	r3,-12(fp)
 2010f3c:	d0a00d04 	addi	r2,gp,-32716
 2010f40:	18bfcf1e 	bne	r3,r2,2010e80 <__alt_mem_epcs_flash_controller+0xfe007e80>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 2010f44:	0001883a 	nop
}
 2010f48:	e037883a 	mov	sp,fp
 2010f4c:	dfc00117 	ldw	ra,4(sp)
 2010f50:	df000017 	ldw	fp,0(sp)
 2010f54:	dec00204 	addi	sp,sp,8
 2010f58:	f800283a 	ret

02010f5c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2010f5c:	defffe04 	addi	sp,sp,-8
 2010f60:	dfc00115 	stw	ra,4(sp)
 2010f64:	df000015 	stw	fp,0(sp)
 2010f68:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 2010f6c:	00808274 	movhi	r2,521
 2010f70:	10a3c104 	addi	r2,r2,-28924
 2010f74:	10800017 	ldw	r2,0(r2)
 2010f78:	10000526 	beq	r2,zero,2010f90 <alt_get_errno+0x34>
 2010f7c:	00808274 	movhi	r2,521
 2010f80:	10a3c104 	addi	r2,r2,-28924
 2010f84:	10800017 	ldw	r2,0(r2)
 2010f88:	103ee83a 	callr	r2
 2010f8c:	00000206 	br	2010f98 <alt_get_errno+0x3c>
 2010f90:	00808274 	movhi	r2,521
 2010f94:	10aafb04 	addi	r2,r2,-21524
}
 2010f98:	e037883a 	mov	sp,fp
 2010f9c:	dfc00117 	ldw	ra,4(sp)
 2010fa0:	df000017 	ldw	fp,0(sp)
 2010fa4:	dec00204 	addi	sp,sp,8
 2010fa8:	f800283a 	ret

02010fac <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 2010fac:	defff904 	addi	sp,sp,-28
 2010fb0:	dfc00615 	stw	ra,24(sp)
 2010fb4:	df000515 	stw	fp,20(sp)
 2010fb8:	df000504 	addi	fp,sp,20
 2010fbc:	e13ffd15 	stw	r4,-12(fp)
 2010fc0:	e17ffe15 	stw	r5,-8(fp)
 2010fc4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 2010fc8:	e0bffd17 	ldw	r2,-12(fp)
 2010fcc:	10000716 	blt	r2,zero,2010fec <write+0x40>
 2010fd0:	e13ffd17 	ldw	r4,-12(fp)
 2010fd4:	01400304 	movi	r5,12
 2010fd8:	2001f500 	call	2001f50 <__mulsi3>
 2010fdc:	00c08234 	movhi	r3,520
 2010fe0:	18df0c04 	addi	r3,r3,31792
 2010fe4:	10c5883a 	add	r2,r2,r3
 2010fe8:	00000106 	br	2010ff0 <write+0x44>
 2010fec:	0005883a 	mov	r2,zero
 2010ff0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 2010ff4:	e0bffb17 	ldw	r2,-20(fp)
 2010ff8:	10001f26 	beq	r2,zero,2011078 <write+0xcc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 2010ffc:	e0bffb17 	ldw	r2,-20(fp)
 2011000:	10800217 	ldw	r2,8(r2)
 2011004:	108000cc 	andi	r2,r2,3
 2011008:	10001726 	beq	r2,zero,2011068 <write+0xbc>
 201100c:	e0bffb17 	ldw	r2,-20(fp)
 2011010:	10800017 	ldw	r2,0(r2)
 2011014:	10800617 	ldw	r2,24(r2)
 2011018:	10001326 	beq	r2,zero,2011068 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 201101c:	e0bffb17 	ldw	r2,-20(fp)
 2011020:	10800017 	ldw	r2,0(r2)
 2011024:	10c00617 	ldw	r3,24(r2)
 2011028:	e0bfff17 	ldw	r2,-4(fp)
 201102c:	e13ffb17 	ldw	r4,-20(fp)
 2011030:	e17ffe17 	ldw	r5,-8(fp)
 2011034:	100d883a 	mov	r6,r2
 2011038:	183ee83a 	callr	r3
 201103c:	e0bffc15 	stw	r2,-16(fp)
 2011040:	e0bffc17 	ldw	r2,-16(fp)
 2011044:	1000060e 	bge	r2,zero,2011060 <write+0xb4>
      {
        ALT_ERRNO = -rval;
 2011048:	2010f5c0 	call	2010f5c <alt_get_errno>
 201104c:	e0fffc17 	ldw	r3,-16(fp)
 2011050:	00c7c83a 	sub	r3,zero,r3
 2011054:	10c00015 	stw	r3,0(r2)
        return -1;
 2011058:	00bfffc4 	movi	r2,-1
 201105c:	00000a06 	br	2011088 <write+0xdc>
      }
      return rval;
 2011060:	e0bffc17 	ldw	r2,-16(fp)
 2011064:	00000806 	br	2011088 <write+0xdc>
    }
    else
    {
      ALT_ERRNO = EACCES;
 2011068:	2010f5c0 	call	2010f5c <alt_get_errno>
 201106c:	00c00344 	movi	r3,13
 2011070:	10c00015 	stw	r3,0(r2)
 2011074:	00000306 	br	2011084 <write+0xd8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 2011078:	2010f5c0 	call	2010f5c <alt_get_errno>
 201107c:	00c01444 	movi	r3,81
 2011080:	10c00015 	stw	r3,0(r2)
  }
  return -1;
 2011084:	00bfffc4 	movi	r2,-1
}
 2011088:	e037883a 	mov	sp,fp
 201108c:	dfc00117 	ldw	ra,4(sp)
 2011090:	df000017 	ldw	fp,0(sp)
 2011094:	dec00204 	addi	sp,sp,8
 2011098:	f800283a 	ret

0201109c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 201109c:	defffd04 	addi	sp,sp,-12
 20110a0:	dfc00215 	stw	ra,8(sp)
 20110a4:	df000115 	stw	fp,4(sp)
 20110a8:	df000104 	addi	fp,sp,4
 20110ac:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 20110b0:	e13fff17 	ldw	r4,-4(fp)
 20110b4:	01408274 	movhi	r5,521
 20110b8:	2963be04 	addi	r5,r5,-28936
 20110bc:	2012cf00 	call	2012cf0 <alt_dev_llist_insert>
}
 20110c0:	e037883a 	mov	sp,fp
 20110c4:	dfc00117 	ldw	ra,4(sp)
 20110c8:	df000017 	ldw	fp,0(sp)
 20110cc:	dec00204 	addi	sp,sp,8
 20110d0:	f800283a 	ret

020110d4 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 20110d4:	defffd04 	addi	sp,sp,-12
 20110d8:	dfc00215 	stw	ra,8(sp)
 20110dc:	df000115 	stw	fp,4(sp)
 20110e0:	df000104 	addi	fp,sp,4
 20110e4:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( CPU, cpu);
 20110e8:	20135d40 	call	20135d4 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 20110ec:	00800044 	movi	r2,1
 20110f0:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 20110f4:	e037883a 	mov	sp,fp
 20110f8:	dfc00117 	ldw	ra,4(sp)
 20110fc:	df000017 	ldw	fp,0(sp)
 2011100:	dec00204 	addi	sp,sp,8
 2011104:	f800283a 	ret

02011108 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 2011108:	defffe04 	addi	sp,sp,-8
 201110c:	dfc00115 	stw	ra,4(sp)
 2011110:	df000015 	stw	fp,0(sp)
 2011114:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
 2011118:	01010074 	movhi	r4,1025
 201111c:	21280804 	addi	r4,r4,-24544
 2011120:	000b883a 	mov	r5,zero
 2011124:	000d883a 	mov	r6,zero
 2011128:	01c0fa04 	movi	r7,1000
 201112c:	20125d80 	call	20125d8 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
    ALTERA_AVALON_EPCS_FLASH_CONTROLLER_INIT ( EPCS_FLASH_CONTROLLER, epcs_flash_controller);
 2011130:	01008234 	movhi	r4,520
 2011134:	211f6c04 	addi	r4,r4,32176
 2011138:	20111ac0 	call	20111ac <alt_epcs_flash_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
 201113c:	01008234 	movhi	r4,520
 2011140:	211fa804 	addi	r4,r4,32416
 2011144:	000b883a 	mov	r5,zero
 2011148:	01800084 	movi	r6,2
 201114c:	2011c680 	call	2011c68 <altera_avalon_jtag_uart_init>
 2011150:	01008234 	movhi	r4,520
 2011154:	211f9e04 	addi	r4,r4,32376
 2011158:	201109c0 	call	201109c <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
 201115c:	0001883a 	nop
}
 2011160:	e037883a 	mov	sp,fp
 2011164:	dfc00117 	ldw	ra,4(sp)
 2011168:	df000017 	ldw	fp,0(sp)
 201116c:	dec00204 	addi	sp,sp,8
 2011170:	f800283a 	ret

02011174 <alt_flash_device_register>:

typedef struct alt_flash_dev alt_flash_dev; 
typedef alt_flash_dev alt_flash_fd;

static ALT_INLINE int alt_flash_device_register( alt_flash_fd* fd)
{
 2011174:	defffd04 	addi	sp,sp,-12
 2011178:	dfc00215 	stw	ra,8(sp)
 201117c:	df000115 	stw	fp,4(sp)
 2011180:	df000104 	addi	fp,sp,4
 2011184:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_flash_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) fd, &alt_flash_dev_list);
 2011188:	e13fff17 	ldw	r4,-4(fp)
 201118c:	01408274 	movhi	r5,521
 2011190:	2963c504 	addi	r5,r5,-28908
 2011194:	2012cf00 	call	2012cf0 <alt_dev_llist_insert>
}
 2011198:	e037883a 	mov	sp,fp
 201119c:	dfc00117 	ldw	ra,4(sp)
 20111a0:	df000017 	ldw	fp,0(sp)
 20111a4:	dec00204 	addi	sp,sp,8
 20111a8:	f800283a 	ret

020111ac <alt_epcs_flash_init>:
/*
 * alt_epcs_flash_init
 *
 */
int alt_epcs_flash_init(alt_flash_epcs_dev* flash)
{
 20111ac:	defffc04 	addi	sp,sp,-16
 20111b0:	dfc00315 	stw	ra,12(sp)
 20111b4:	df000215 	stw	fp,8(sp)
 20111b8:	df000204 	addi	fp,sp,8
 20111bc:	e13fff15 	stw	r4,-4(fp)
  int ret_code = 0;
 20111c0:	e03ffe15 	stw	zero,-8(fp)

  /* Set up function pointers and/or data structures as needed. */
  ret_code = alt_epcs_flash_query(flash);
 20111c4:	e13fff17 	ldw	r4,-4(fp)
 20111c8:	20112000 	call	2011200 <alt_epcs_flash_query>
 20111cc:	e0bffe15 	stw	r2,-8(fp)
  */

  /*
  *  Register this device as a valid flash device type
  */
  if (!ret_code)
 20111d0:	e0bffe17 	ldw	r2,-8(fp)
 20111d4:	1000041e 	bne	r2,zero,20111e8 <alt_epcs_flash_init+0x3c>
    ret_code = alt_flash_device_register(&(flash->dev));
 20111d8:	e0bfff17 	ldw	r2,-4(fp)
 20111dc:	1009883a 	mov	r4,r2
 20111e0:	20111740 	call	2011174 <alt_flash_device_register>
 20111e4:	e0bffe15 	stw	r2,-8(fp)

  return ret_code;
 20111e8:	e0bffe17 	ldw	r2,-8(fp)
}
 20111ec:	e037883a 	mov	sp,fp
 20111f0:	dfc00117 	ldw	ra,4(sp)
 20111f4:	df000017 	ldw	fp,0(sp)
 20111f8:	dec00204 	addi	sp,sp,8
 20111fc:	f800283a 	ret

02011200 <alt_epcs_flash_query>:


static int alt_epcs_flash_query(alt_flash_epcs_dev* flash)
{
 2011200:	defffc04 	addi	sp,sp,-16
 2011204:	dfc00315 	stw	ra,12(sp)
 2011208:	df000215 	stw	fp,8(sp)
 201120c:	df000204 	addi	fp,sp,8
 2011210:	e13fff15 	stw	r4,-4(fp)
  int ret_code = 0;
 2011214:	e03ffe15 	stw	zero,-8(fp)
   * reset the device, or whatever, to ensure that
   * it's in a known working state.
  */
  
  /* Disable 4-bytes address mode. */
  flash->four_bytes_mode = 0;
 2011218:	e0bfff17 	ldw	r2,-4(fp)
 201121c:	10003115 	stw	zero,196(r2)
  
  /* Send the RES command sequence */
  flash->silicon_id =
    epcs_read_electronic_signature(flash->register_base);
 2011220:	e0bfff17 	ldw	r2,-4(fp)
 2011224:	10802d17 	ldw	r2,180(r2)
 2011228:	1009883a 	mov	r4,r2
 201122c:	2012aec0 	call	2012aec <epcs_read_electronic_signature>
  
  /* Disable 4-bytes address mode. */
  flash->four_bytes_mode = 0;
  
  /* Send the RES command sequence */
  flash->silicon_id =
 2011230:	10c03fcc 	andi	r3,r2,255
 2011234:	e0bfff17 	ldw	r2,-4(fp)
 2011238:	10c02f15 	stw	r3,188(r2)
    epcs_read_electronic_signature(flash->register_base);

  /* Fill in all device-specific parameters. */
  if (flash->silicon_id == 0x16) /* EPCS64 */
 201123c:	e0bfff17 	ldw	r2,-4(fp)
 2011240:	10802f17 	ldw	r2,188(r2)
 2011244:	10800598 	cmpnei	r2,r2,22
 2011248:	10000a1e 	bne	r2,zero,2011274 <alt_epcs_flash_query+0x74>
  {
    flash->dev.region_info[0].region_size = 64 * 1024 * 1024 / 8;
 201124c:	e0bfff17 	ldw	r2,-4(fp)
 2011250:	00c02034 	movhi	r3,128
 2011254:	10c00e15 	stw	r3,56(r2)
    flash->dev.region_info[0].number_of_blocks = 128;
 2011258:	e0bfff17 	ldw	r2,-4(fp)
 201125c:	00c02004 	movi	r3,128
 2011260:	10c00f15 	stw	r3,60(r2)
    flash->dev.region_info[0].block_size = 65536;
 2011264:	e0bfff17 	ldw	r2,-4(fp)
 2011268:	00c00074 	movhi	r3,1
 201126c:	10c01015 	stw	r3,64(r2)
 2011270:	00007306 	br	2011440 <alt_epcs_flash_query+0x240>
  }
  else if (flash->silicon_id == 0x14) /* EPCS16 */
 2011274:	e0bfff17 	ldw	r2,-4(fp)
 2011278:	10802f17 	ldw	r2,188(r2)
 201127c:	10800518 	cmpnei	r2,r2,20
 2011280:	10000a1e 	bne	r2,zero,20112ac <alt_epcs_flash_query+0xac>
  {
    flash->dev.region_info[0].region_size = 16 * 1024 * 1024 / 8;
 2011284:	e0bfff17 	ldw	r2,-4(fp)
 2011288:	00c00834 	movhi	r3,32
 201128c:	10c00e15 	stw	r3,56(r2)
    flash->dev.region_info[0].number_of_blocks = 32;
 2011290:	e0bfff17 	ldw	r2,-4(fp)
 2011294:	00c00804 	movi	r3,32
 2011298:	10c00f15 	stw	r3,60(r2)
    flash->dev.region_info[0].block_size = 65536;
 201129c:	e0bfff17 	ldw	r2,-4(fp)
 20112a0:	00c00074 	movhi	r3,1
 20112a4:	10c01015 	stw	r3,64(r2)
 20112a8:	00006506 	br	2011440 <alt_epcs_flash_query+0x240>
  }
  else if (flash->silicon_id == 0x13) /* EPCS8 */
 20112ac:	e0bfff17 	ldw	r2,-4(fp)
 20112b0:	10802f17 	ldw	r2,188(r2)
 20112b4:	108004d8 	cmpnei	r2,r2,19
 20112b8:	10000a1e 	bne	r2,zero,20112e4 <alt_epcs_flash_query+0xe4>
  {
    flash->dev.region_info[0].region_size = 8 * 1024 * 1024 / 8;
 20112bc:	e0bfff17 	ldw	r2,-4(fp)
 20112c0:	00c00434 	movhi	r3,16
 20112c4:	10c00e15 	stw	r3,56(r2)
    flash->dev.region_info[0].number_of_blocks = 16;
 20112c8:	e0bfff17 	ldw	r2,-4(fp)
 20112cc:	00c00404 	movi	r3,16
 20112d0:	10c00f15 	stw	r3,60(r2)
    flash->dev.region_info[0].block_size = 65536;
 20112d4:	e0bfff17 	ldw	r2,-4(fp)
 20112d8:	00c00074 	movhi	r3,1
 20112dc:	10c01015 	stw	r3,64(r2)
 20112e0:	00005706 	br	2011440 <alt_epcs_flash_query+0x240>
  }
  else if (flash->silicon_id == 0x12) /* EPCS4 */
 20112e4:	e0bfff17 	ldw	r2,-4(fp)
 20112e8:	10802f17 	ldw	r2,188(r2)
 20112ec:	10800498 	cmpnei	r2,r2,18
 20112f0:	10000a1e 	bne	r2,zero,201131c <alt_epcs_flash_query+0x11c>
  {
    flash->dev.region_info[0].region_size = 4 * 1024 * 1024 / 8;
 20112f4:	e0bfff17 	ldw	r2,-4(fp)
 20112f8:	00c00234 	movhi	r3,8
 20112fc:	10c00e15 	stw	r3,56(r2)
    flash->dev.region_info[0].number_of_blocks = 8;
 2011300:	e0bfff17 	ldw	r2,-4(fp)
 2011304:	00c00204 	movi	r3,8
 2011308:	10c00f15 	stw	r3,60(r2)
    flash->dev.region_info[0].block_size = 65536;
 201130c:	e0bfff17 	ldw	r2,-4(fp)
 2011310:	00c00074 	movhi	r3,1
 2011314:	10c01015 	stw	r3,64(r2)
 2011318:	00004906 	br	2011440 <alt_epcs_flash_query+0x240>
  }
  else if (flash->silicon_id == 0x10) /* EPCS1 */
 201131c:	e0bfff17 	ldw	r2,-4(fp)
 2011320:	10802f17 	ldw	r2,188(r2)
 2011324:	10800418 	cmpnei	r2,r2,16
 2011328:	10000a1e 	bne	r2,zero,2011354 <alt_epcs_flash_query+0x154>
  {
    flash->dev.region_info[0].region_size = 1 * 1024 * 1024 / 8;
 201132c:	e0bfff17 	ldw	r2,-4(fp)
 2011330:	00c000b4 	movhi	r3,2
 2011334:	10c00e15 	stw	r3,56(r2)
    flash->dev.region_info[0].number_of_blocks = 4;
 2011338:	e0bfff17 	ldw	r2,-4(fp)
 201133c:	00c00104 	movi	r3,4
 2011340:	10c00f15 	stw	r3,60(r2)
    flash->dev.region_info[0].block_size = 32768;
 2011344:	e0bfff17 	ldw	r2,-4(fp)
 2011348:	00e00014 	movui	r3,32768
 201134c:	10c01015 	stw	r3,64(r2)
 2011350:	00003b06 	br	2011440 <alt_epcs_flash_query+0x240>
  {
    /* 
     * Read electronic signature doesn't work for the EPCS128; try 
     * the "Read Device ID" command" before giving up.
     */
    flash->silicon_id = epcs_read_device_id(flash->register_base);
 2011354:	e0bfff17 	ldw	r2,-4(fp)
 2011358:	10802d17 	ldw	r2,180(r2)
 201135c:	1009883a 	mov	r4,r2
 2011360:	2012b540 	call	2012b54 <epcs_read_device_id>
 2011364:	e0ffff17 	ldw	r3,-4(fp)
 2011368:	18802f15 	stw	r2,188(r3)
    /*
     * Last byte is the density ID. Note the difference between
     * EPCS128 and EPCQ128 -- arranged differently, though the 
     * least significant byte of each is '0x18'.
     */
    if((flash->silicon_id & 0xFFFFFF) == 0x20BA18) /* EPCQ128 */
 201136c:	e0bfff17 	ldw	r2,-4(fp)
 2011370:	10c02f17 	ldw	r3,188(r2)
 2011374:	00804034 	movhi	r2,256
 2011378:	10bfffc4 	addi	r2,r2,-1
 201137c:	1886703a 	and	r3,r3,r2
 2011380:	00800874 	movhi	r2,33
 2011384:	10ae8604 	addi	r2,r2,-17896
 2011388:	18800a1e 	bne	r3,r2,20113b4 <alt_epcs_flash_query+0x1b4>
    {
      flash->dev.region_info[0].region_size = 128 * 1024 * 1024 / 8;
 201138c:	e0bfff17 	ldw	r2,-4(fp)
 2011390:	00c04034 	movhi	r3,256
 2011394:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 256; /* number of sectors */
 2011398:	e0bfff17 	ldw	r2,-4(fp)
 201139c:	00c04004 	movi	r3,256
 20113a0:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
 20113a4:	e0bfff17 	ldw	r2,-4(fp)
 20113a8:	00c00074 	movhi	r3,1
 20113ac:	10c01015 	stw	r3,64(r2)
 20113b0:	00002306 	br	2011440 <alt_epcs_flash_query+0x240>
    }
    else if((flash->silicon_id & 0xFF) == 0x18) /* EPCS128 */
 20113b4:	e0bfff17 	ldw	r2,-4(fp)
 20113b8:	10802f17 	ldw	r2,188(r2)
 20113bc:	10803fcc 	andi	r2,r2,255
 20113c0:	10800618 	cmpnei	r2,r2,24
 20113c4:	10000a1e 	bne	r2,zero,20113f0 <alt_epcs_flash_query+0x1f0>
    {
      flash->dev.region_info[0].region_size = 128 * 1024 * 1024 / 8;
 20113c8:	e0bfff17 	ldw	r2,-4(fp)
 20113cc:	00c04034 	movhi	r3,256
 20113d0:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 64;
 20113d4:	e0bfff17 	ldw	r2,-4(fp)
 20113d8:	00c01004 	movi	r3,64
 20113dc:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 262144;
 20113e0:	e0bfff17 	ldw	r2,-4(fp)
 20113e4:	00c00134 	movhi	r3,4
 20113e8:	10c01015 	stw	r3,64(r2)
 20113ec:	00001406 	br	2011440 <alt_epcs_flash_query+0x240>
    }
    else if((flash->silicon_id & 0xFF ) == 0x19) /* EPCQ256 */
 20113f0:	e0bfff17 	ldw	r2,-4(fp)
 20113f4:	10802f17 	ldw	r2,188(r2)
 20113f8:	10803fcc 	andi	r2,r2,255
 20113fc:	10800658 	cmpnei	r2,r2,25
 2011400:	10000d1e 	bne	r2,zero,2011438 <alt_epcs_flash_query+0x238>
    {
      flash->dev.region_info[0].region_size = 256 * 1024 * 1024 / 8;
 2011404:	e0bfff17 	ldw	r2,-4(fp)
 2011408:	00c08034 	movhi	r3,512
 201140c:	10c00e15 	stw	r3,56(r2)
      flash->dev.region_info[0].number_of_blocks = 512; /* number of sectors */
 2011410:	e0bfff17 	ldw	r2,-4(fp)
 2011414:	00c08004 	movi	r3,512
 2011418:	10c00f15 	stw	r3,60(r2)
      flash->dev.region_info[0].block_size = 65536;  /* sector size */
 201141c:	e0bfff17 	ldw	r2,-4(fp)
 2011420:	00c00074 	movhi	r3,1
 2011424:	10c01015 	stw	r3,64(r2)
       * must first be programmed into the device, though. To complicate things, 
       * other Altera IP expects the chip to be in 3 byte address mode when they 
       * start using it. To be nice, we'll place the device into 4-byte address mode
       * when we need to, and take it back out when we're done.
       */
      flash->four_bytes_mode = 1;
 2011428:	e0bfff17 	ldw	r2,-4(fp)
 201142c:	00c00044 	movi	r3,1
 2011430:	10c03115 	stw	r3,196(r2)
 2011434:	00000206 	br	2011440 <alt_epcs_flash_query+0x240>
    }
    else 
    {
      ret_code = -ENODEV; /* No known device found! */
 2011438:	00bffb44 	movi	r2,-19
 201143c:	e0bffe15 	stw	r2,-8(fp)
    }
  }
  
  flash->size_in_bytes = flash->dev.region_info[0].region_size;
 2011440:	e0bfff17 	ldw	r2,-4(fp)
 2011444:	10800e17 	ldw	r2,56(r2)
 2011448:	1007883a 	mov	r3,r2
 201144c:	e0bfff17 	ldw	r2,-4(fp)
 2011450:	10c02e15 	stw	r3,184(r2)
  flash->dev.number_of_regions = 1;
 2011454:	e0bfff17 	ldw	r2,-4(fp)
 2011458:	00c00044 	movi	r3,1
 201145c:	10c00c15 	stw	r3,48(r2)
  flash->dev.region_info[0].offset = 0;
 2011460:	e0bfff17 	ldw	r2,-4(fp)
 2011464:	10000d15 	stw	zero,52(r2)
  flash->page_size = 256;
 2011468:	e0bfff17 	ldw	r2,-4(fp)
 201146c:	00c04004 	movi	r3,256
 2011470:	10c03015 	stw	r3,192(r2)

  /* Consider clearing all BP bits here. */
  return ret_code;
 2011474:	e0bffe17 	ldw	r2,-8(fp)
}
 2011478:	e037883a 	mov	sp,fp
 201147c:	dfc00117 	ldw	ra,4(sp)
 2011480:	df000017 	ldw	fp,0(sp)
 2011484:	dec00204 	addi	sp,sp,8
 2011488:	f800283a 	ret

0201148c <alt_epcs_flash_memcmp>:
  alt_flash_dev* flash_info,
  const void* src_buffer,
  int offset,
  size_t n
)
{
 201148c:	deffee04 	addi	sp,sp,-72
 2011490:	dfc01115 	stw	ra,68(sp)
 2011494:	df001015 	stw	fp,64(sp)
 2011498:	df001004 	addi	fp,sp,64
 201149c:	e13ffc15 	stw	r4,-16(fp)
 20114a0:	e17ffd15 	stw	r5,-12(fp)
 20114a4:	e1bffe15 	stw	r6,-8(fp)
 20114a8:	e1ffff15 	stw	r7,-4(fp)
  /*
   * Compare chunks of memory at a time, for better serial-flash
   * read efficiency.
   */
  alt_u8 chunk_buffer[32];
  const int chunk_size = sizeof(chunk_buffer) / sizeof(*chunk_buffer);
 20114ac:	00800804 	movi	r2,32
 20114b0:	e0bff115 	stw	r2,-60(fp)
  int current_offset = 0;
 20114b4:	e03ff015 	stw	zero,-64(fp)

  while (n > 0)
 20114b8:	00002606 	br	2011554 <alt_epcs_flash_memcmp+0xc8>
  {
    int this_chunk_size = n > chunk_size ? chunk_size : n;
 20114bc:	e0bff117 	ldw	r2,-60(fp)
 20114c0:	e0ffff17 	ldw	r3,-4(fp)
 20114c4:	1880012e 	bgeu	r3,r2,20114cc <alt_epcs_flash_memcmp+0x40>
 20114c8:	1805883a 	mov	r2,r3
 20114cc:	e0bff215 	stw	r2,-56(fp)
    int this_chunk_cmp;

    if (
      alt_epcs_flash_read(
 20114d0:	e0fffe17 	ldw	r3,-8(fp)
 20114d4:	e0bff017 	ldw	r2,-64(fp)
 20114d8:	1887883a 	add	r3,r3,r2
 20114dc:	e0bff404 	addi	r2,fp,-48
 20114e0:	e13ffc17 	ldw	r4,-16(fp)
 20114e4:	180b883a 	mov	r5,r3
 20114e8:	100d883a 	mov	r6,r2
 20114ec:	e1fff217 	ldw	r7,-56(fp)
 20114f0:	2011a6c0 	call	2011a6c <alt_epcs_flash_read>
  while (n > 0)
  {
    int this_chunk_size = n > chunk_size ? chunk_size : n;
    int this_chunk_cmp;

    if (
 20114f4:	1000020e 	bge	r2,zero,2011500 <alt_epcs_flash_memcmp+0x74>
    {
      /*
      * If the read fails, I'm not sure what the appropriate action is.
      * Compare success seems wrong, so make it compare fail.
      */
      return -1;
 20114f8:	00bfffc4 	movi	r2,-1
 20114fc:	00001806 	br	2011560 <alt_epcs_flash_memcmp+0xd4>
    }

    /* Compare this chunk against the source memory buffer. */
    this_chunk_cmp = memcmp(&((unsigned char*)(src_buffer))[current_offset], chunk_buffer, this_chunk_size);
 2011500:	e0bff017 	ldw	r2,-64(fp)
 2011504:	e0fffd17 	ldw	r3,-12(fp)
 2011508:	1889883a 	add	r4,r3,r2
 201150c:	e0bff217 	ldw	r2,-56(fp)
 2011510:	e0fff404 	addi	r3,fp,-48
 2011514:	180b883a 	mov	r5,r3
 2011518:	100d883a 	mov	r6,r2
 201151c:	2013ac00 	call	2013ac0 <memcmp>
 2011520:	e0bff315 	stw	r2,-52(fp)
    if (this_chunk_cmp)
 2011524:	e0bff317 	ldw	r2,-52(fp)
 2011528:	10000226 	beq	r2,zero,2011534 <alt_epcs_flash_memcmp+0xa8>
    {
      return this_chunk_cmp;
 201152c:	e0bff317 	ldw	r2,-52(fp)
 2011530:	00000b06 	br	2011560 <alt_epcs_flash_memcmp+0xd4>
    }

    n -= this_chunk_size;
 2011534:	e0bff217 	ldw	r2,-56(fp)
 2011538:	e0ffff17 	ldw	r3,-4(fp)
 201153c:	1885c83a 	sub	r2,r3,r2
 2011540:	e0bfff15 	stw	r2,-4(fp)
    current_offset += this_chunk_size;
 2011544:	e0fff017 	ldw	r3,-64(fp)
 2011548:	e0bff217 	ldw	r2,-56(fp)
 201154c:	1885883a 	add	r2,r3,r2
 2011550:	e0bff015 	stw	r2,-64(fp)
   */
  alt_u8 chunk_buffer[32];
  const int chunk_size = sizeof(chunk_buffer) / sizeof(*chunk_buffer);
  int current_offset = 0;

  while (n > 0)
 2011554:	e0bfff17 	ldw	r2,-4(fp)
 2011558:	103fd81e 	bne	r2,zero,20114bc <__alt_mem_epcs_flash_controller+0xfe0084bc>
  }

  /*
   * If execution made it to this point, compare is successful.
   */
  return 0;
 201155c:	0005883a 	mov	r2,zero
}
 2011560:	e037883a 	mov	sp,fp
 2011564:	dfc00117 	ldw	ra,4(sp)
 2011568:	df000017 	ldw	fp,0(sp)
 201156c:	dec00204 	addi	sp,sp,8
 2011570:	f800283a 	ret

02011574 <alt_epcs_flash_write>:
 * large buffer to tie up in our programming library, when not all users will
 * want that functionality.
 */
int alt_epcs_flash_write(alt_flash_dev* flash_info, int offset,
                          const void* src_addr, int length)
{
 2011574:	defff404 	addi	sp,sp,-48
 2011578:	dfc00b15 	stw	ra,44(sp)
 201157c:	df000a15 	stw	fp,40(sp)
 2011580:	df000a04 	addi	fp,sp,40
 2011584:	e13ffc15 	stw	r4,-16(fp)
 2011588:	e17ffd15 	stw	r5,-12(fp)
 201158c:	e1bffe15 	stw	r6,-8(fp)
 2011590:	e1ffff15 	stw	r7,-4(fp)
  int         ret_code = 0;
 2011594:	e03ff715 	stw	zero,-36(fp)
  int         current_offset;

  /*
   * First and foremost which sectors are affected?
   */
  for(i = 0; i < flash_info->number_of_regions; i++)
 2011598:	e03ff815 	stw	zero,-32(fp)
 201159c:	00008306 	br	20117ac <alt_epcs_flash_write+0x238>
  {
    /* Is it in this erase block region?*/
    if((offset >= flash_info->region_info[i].offset) &&
 20115a0:	e0fffc17 	ldw	r3,-16(fp)
 20115a4:	e0bff817 	ldw	r2,-32(fp)
 20115a8:	1004913a 	slli	r2,r2,4
 20115ac:	1885883a 	add	r2,r3,r2
 20115b0:	10800d04 	addi	r2,r2,52
 20115b4:	10800017 	ldw	r2,0(r2)
 20115b8:	e0fffd17 	ldw	r3,-12(fp)
 20115bc:	18807816 	blt	r3,r2,20117a0 <alt_epcs_flash_write+0x22c>
      (offset < (flash_info->region_info[i].offset +
 20115c0:	e0fffc17 	ldw	r3,-16(fp)
 20115c4:	e0bff817 	ldw	r2,-32(fp)
 20115c8:	1004913a 	slli	r2,r2,4
 20115cc:	1885883a 	add	r2,r3,r2
 20115d0:	10800d04 	addi	r2,r2,52
 20115d4:	10c00017 	ldw	r3,0(r2)
      flash_info->region_info[i].region_size)))
 20115d8:	e13ffc17 	ldw	r4,-16(fp)
 20115dc:	e0bff817 	ldw	r2,-32(fp)
 20115e0:	1004913a 	slli	r2,r2,4
 20115e4:	2085883a 	add	r2,r4,r2
 20115e8:	10800e04 	addi	r2,r2,56
 20115ec:	10800017 	ldw	r2,0(r2)
   */
  for(i = 0; i < flash_info->number_of_regions; i++)
  {
    /* Is it in this erase block region?*/
    if((offset >= flash_info->region_info[i].offset) &&
      (offset < (flash_info->region_info[i].offset +
 20115f0:	1885883a 	add	r2,r3,r2
   * First and foremost which sectors are affected?
   */
  for(i = 0; i < flash_info->number_of_regions; i++)
  {
    /* Is it in this erase block region?*/
    if((offset >= flash_info->region_info[i].offset) &&
 20115f4:	e0fffd17 	ldw	r3,-12(fp)
 20115f8:	1880690e 	bge	r3,r2,20117a0 <alt_epcs_flash_write+0x22c>
      (offset < (flash_info->region_info[i].offset +
      flash_info->region_info[i].region_size)))
    {
      current_offset = flash_info->region_info[i].offset;
 20115fc:	e0fffc17 	ldw	r3,-16(fp)
 2011600:	e0bff817 	ldw	r2,-32(fp)
 2011604:	1004913a 	slli	r2,r2,4
 2011608:	1885883a 	add	r2,r3,r2
 201160c:	10800d04 	addi	r2,r2,52
 2011610:	10800017 	ldw	r2,0(r2)
 2011614:	e0bffa15 	stw	r2,-24(fp)

      for(j=0;j<flash_info->region_info[i].number_of_blocks;j++)
 2011618:	e03ff915 	stw	zero,-28(fp)
 201161c:	00005806 	br	2011780 <alt_epcs_flash_write+0x20c>
      {
        if ((offset >= current_offset ) &&
 2011620:	e0fffd17 	ldw	r3,-12(fp)
 2011624:	e0bffa17 	ldw	r2,-24(fp)
 2011628:	18804916 	blt	r3,r2,2011750 <alt_epcs_flash_write+0x1dc>
            (offset < (current_offset +
            flash_info->region_info[i].block_size)))
 201162c:	e0fffc17 	ldw	r3,-16(fp)
 2011630:	e0bff817 	ldw	r2,-32(fp)
 2011634:	10800104 	addi	r2,r2,4
 2011638:	1004913a 	slli	r2,r2,4
 201163c:	1885883a 	add	r2,r3,r2
 2011640:	10c00017 	ldw	r3,0(r2)
      current_offset = flash_info->region_info[i].offset;

      for(j=0;j<flash_info->region_info[i].number_of_blocks;j++)
      {
        if ((offset >= current_offset ) &&
            (offset < (current_offset +
 2011644:	e0bffa17 	ldw	r2,-24(fp)
 2011648:	1885883a 	add	r2,r3,r2
    {
      current_offset = flash_info->region_info[i].offset;

      for(j=0;j<flash_info->region_info[i].number_of_blocks;j++)
      {
        if ((offset >= current_offset ) &&
 201164c:	e0fffd17 	ldw	r3,-12(fp)
 2011650:	18803f0e 	bge	r3,r2,2011750 <alt_epcs_flash_write+0x1dc>
        {
          /*
           * Check if the contents of the block are different
           * from the data we wish to put there
           */
          data_to_write = ( current_offset + flash_info->region_info[i].block_size
 2011654:	e0fffc17 	ldw	r3,-16(fp)
 2011658:	e0bff817 	ldw	r2,-32(fp)
 201165c:	10800104 	addi	r2,r2,4
 2011660:	1004913a 	slli	r2,r2,4
 2011664:	1885883a 	add	r2,r3,r2
 2011668:	10c00017 	ldw	r3,0(r2)
 201166c:	e0bffa17 	ldw	r2,-24(fp)
 2011670:	1887883a 	add	r3,r3,r2
 2011674:	e0bffd17 	ldw	r2,-12(fp)
 2011678:	1885c83a 	sub	r2,r3,r2
 201167c:	e0bffb15 	stw	r2,-20(fp)
                            - offset);
          data_to_write = MIN(data_to_write, length);
 2011680:	e0fffb17 	ldw	r3,-20(fp)
 2011684:	e0bfff17 	ldw	r2,-4(fp)
 2011688:	1880010e 	bge	r3,r2,2011690 <alt_epcs_flash_write+0x11c>
 201168c:	1805883a 	mov	r2,r3
 2011690:	e0bffb15 	stw	r2,-20(fp)

          if(alt_epcs_flash_memcmp(flash_info, src_addr, offset, data_to_write))
 2011694:	e0bffb17 	ldw	r2,-20(fp)
 2011698:	e13ffc17 	ldw	r4,-16(fp)
 201169c:	e17ffe17 	ldw	r5,-8(fp)
 20116a0:	e1bffd17 	ldw	r6,-12(fp)
 20116a4:	100f883a 	mov	r7,r2
 20116a8:	201148c0 	call	201148c <alt_epcs_flash_memcmp>
 20116ac:	10001226 	beq	r2,zero,20116f8 <alt_epcs_flash_write+0x184>
          {
            ret_code = (*flash_info->erase_block)(flash_info, current_offset);
 20116b0:	e0bffc17 	ldw	r2,-16(fp)
 20116b4:	10800817 	ldw	r2,32(r2)
 20116b8:	e13ffc17 	ldw	r4,-16(fp)
 20116bc:	e17ffa17 	ldw	r5,-24(fp)
 20116c0:	103ee83a 	callr	r2
 20116c4:	e0bff715 	stw	r2,-36(fp)

            if (!ret_code)
 20116c8:	e0bff717 	ldw	r2,-36(fp)
 20116cc:	10000a1e 	bne	r2,zero,20116f8 <alt_epcs_flash_write+0x184>
            {
              ret_code = (*flash_info->write_block)(
 20116d0:	e0bffc17 	ldw	r2,-16(fp)
 20116d4:	10800917 	ldw	r2,36(r2)
 20116d8:	e0fffb17 	ldw	r3,-20(fp)
 20116dc:	d8c00015 	stw	r3,0(sp)
 20116e0:	e13ffc17 	ldw	r4,-16(fp)
 20116e4:	e17ffa17 	ldw	r5,-24(fp)
 20116e8:	e1bffd17 	ldw	r6,-12(fp)
 20116ec:	e1fffe17 	ldw	r7,-8(fp)
 20116f0:	103ee83a 	callr	r2
 20116f4:	e0bff715 	stw	r2,-36(fp)
                                                  data_to_write);
            }
          }

          /* Was this the last block? */
          if ((length == data_to_write) || ret_code)
 20116f8:	e0ffff17 	ldw	r3,-4(fp)
 20116fc:	e0bffb17 	ldw	r2,-20(fp)
 2011700:	18802e26 	beq	r3,r2,20117bc <alt_epcs_flash_write+0x248>
 2011704:	e0bff717 	ldw	r2,-36(fp)
 2011708:	10002c1e 	bne	r2,zero,20117bc <alt_epcs_flash_write+0x248>
          {
            goto finished;
          }

          length -= data_to_write;
 201170c:	e0ffff17 	ldw	r3,-4(fp)
 2011710:	e0bffb17 	ldw	r2,-20(fp)
 2011714:	1885c83a 	sub	r2,r3,r2
 2011718:	e0bfff15 	stw	r2,-4(fp)
          offset = current_offset + flash_info->region_info[i].block_size;
 201171c:	e0fffc17 	ldw	r3,-16(fp)
 2011720:	e0bff817 	ldw	r2,-32(fp)
 2011724:	10800104 	addi	r2,r2,4
 2011728:	1004913a 	slli	r2,r2,4
 201172c:	1885883a 	add	r2,r3,r2
 2011730:	10c00017 	ldw	r3,0(r2)
 2011734:	e0bffa17 	ldw	r2,-24(fp)
 2011738:	1885883a 	add	r2,r3,r2
 201173c:	e0bffd15 	stw	r2,-12(fp)
          src_addr = (alt_u8*)src_addr + data_to_write;
 2011740:	e0bffb17 	ldw	r2,-20(fp)
 2011744:	e0fffe17 	ldw	r3,-8(fp)
 2011748:	1885883a 	add	r2,r3,r2
 201174c:	e0bffe15 	stw	r2,-8(fp)
        }
        current_offset += flash_info->region_info[i].block_size;
 2011750:	e0fffc17 	ldw	r3,-16(fp)
 2011754:	e0bff817 	ldw	r2,-32(fp)
 2011758:	10800104 	addi	r2,r2,4
 201175c:	1004913a 	slli	r2,r2,4
 2011760:	1885883a 	add	r2,r3,r2
 2011764:	10800017 	ldw	r2,0(r2)
 2011768:	e0fffa17 	ldw	r3,-24(fp)
 201176c:	1885883a 	add	r2,r3,r2
 2011770:	e0bffa15 	stw	r2,-24(fp)
      (offset < (flash_info->region_info[i].offset +
      flash_info->region_info[i].region_size)))
    {
      current_offset = flash_info->region_info[i].offset;

      for(j=0;j<flash_info->region_info[i].number_of_blocks;j++)
 2011774:	e0bff917 	ldw	r2,-28(fp)
 2011778:	10800044 	addi	r2,r2,1
 201177c:	e0bff915 	stw	r2,-28(fp)
 2011780:	e0fffc17 	ldw	r3,-16(fp)
 2011784:	e0bff817 	ldw	r2,-32(fp)
 2011788:	1004913a 	slli	r2,r2,4
 201178c:	1885883a 	add	r2,r3,r2
 2011790:	10800f04 	addi	r2,r2,60
 2011794:	10800017 	ldw	r2,0(r2)
 2011798:	e0fff917 	ldw	r3,-28(fp)
 201179c:	18bfa016 	blt	r3,r2,2011620 <__alt_mem_epcs_flash_controller+0xfe008620>
  int         current_offset;

  /*
   * First and foremost which sectors are affected?
   */
  for(i = 0; i < flash_info->number_of_regions; i++)
 20117a0:	e0bff817 	ldw	r2,-32(fp)
 20117a4:	10800044 	addi	r2,r2,1
 20117a8:	e0bff815 	stw	r2,-32(fp)
 20117ac:	e0bffc17 	ldw	r2,-16(fp)
 20117b0:	10800c17 	ldw	r2,48(r2)
 20117b4:	e0fff817 	ldw	r3,-32(fp)
 20117b8:	18bf7916 	blt	r3,r2,20115a0 <__alt_mem_epcs_flash_controller+0xfe0085a0>
      }
    }
  }

finished:
  return ret_code;
 20117bc:	e0bff717 	ldw	r2,-36(fp)
}
 20117c0:	e037883a 	mov	sp,fp
 20117c4:	dfc00117 	ldw	ra,4(sp)
 20117c8:	df000017 	ldw	fp,0(sp)
 20117cc:	dec00204 	addi	sp,sp,8
 20117d0:	f800283a 	ret

020117d4 <alt_epcs_flash_get_info>:
 *
 *  Pass the table of erase blocks to the user
 */
int alt_epcs_flash_get_info(alt_flash_fd* fd, flash_region** info,
                            int* number_of_regions)
{
 20117d4:	defffa04 	addi	sp,sp,-24
 20117d8:	df000515 	stw	fp,20(sp)
 20117dc:	df000504 	addi	fp,sp,20
 20117e0:	e13ffd15 	stw	r4,-12(fp)
 20117e4:	e17ffe15 	stw	r5,-8(fp)
 20117e8:	e1bfff15 	stw	r6,-4(fp)
  int ret_code = 0;
 20117ec:	e03ffb15 	stw	zero,-20(fp)

  alt_flash_dev* flash = (alt_flash_dev*)fd;
 20117f0:	e0bffd17 	ldw	r2,-12(fp)
 20117f4:	e0bffc15 	stw	r2,-16(fp)

  *number_of_regions = flash->number_of_regions;
 20117f8:	e0bffc17 	ldw	r2,-16(fp)
 20117fc:	10c00c17 	ldw	r3,48(r2)
 2011800:	e0bfff17 	ldw	r2,-4(fp)
 2011804:	10c00015 	stw	r3,0(r2)

  if (!flash->number_of_regions)
 2011808:	e0bffc17 	ldw	r2,-16(fp)
 201180c:	10800c17 	ldw	r2,48(r2)
 2011810:	1000031e 	bne	r2,zero,2011820 <alt_epcs_flash_get_info+0x4c>
  {
    ret_code = -EIO;
 2011814:	00bffec4 	movi	r2,-5
 2011818:	e0bffb15 	stw	r2,-20(fp)
 201181c:	00000b06 	br	201184c <alt_epcs_flash_get_info+0x78>
  }
  else if (flash->number_of_regions > ALT_MAX_NUMBER_OF_FLASH_REGIONS)
 2011820:	e0bffc17 	ldw	r2,-16(fp)
 2011824:	10800c17 	ldw	r2,48(r2)
 2011828:	10800250 	cmplti	r2,r2,9
 201182c:	1000031e 	bne	r2,zero,201183c <alt_epcs_flash_get_info+0x68>
  {
    ret_code = -ENOMEM;
 2011830:	00bffd04 	movi	r2,-12
 2011834:	e0bffb15 	stw	r2,-20(fp)
 2011838:	00000406 	br	201184c <alt_epcs_flash_get_info+0x78>
  }
  else
  {
    *info = &flash->region_info[0];
 201183c:	e0bffc17 	ldw	r2,-16(fp)
 2011840:	10c00d04 	addi	r3,r2,52
 2011844:	e0bffe17 	ldw	r2,-8(fp)
 2011848:	10c00015 	stw	r3,0(r2)
  }

  return ret_code;
 201184c:	e0bffb17 	ldw	r2,-20(fp)
}
 2011850:	e037883a 	mov	sp,fp
 2011854:	df000017 	ldw	fp,0(sp)
 2011858:	dec00104 	addi	sp,sp,4
 201185c:	f800283a 	ret

02011860 <alt_epcs_test_address>:


/* This might be a candidate for optimization.  Precompute the last-address? */
static ALT_INLINE int alt_epcs_test_address(alt_flash_dev* flash_info, int offset)
{
 2011860:	defff904 	addi	sp,sp,-28
 2011864:	df000615 	stw	fp,24(sp)
 2011868:	df000604 	addi	fp,sp,24
 201186c:	e13ffe15 	stw	r4,-8(fp)
 2011870:	e17fff15 	stw	r5,-4(fp)
  int ret_code = 0;
 2011874:	e03ffa15 	stw	zero,-24(fp)
  /* Error checking:
   * if the block offset is outside of the memory, return -EIO.
   */
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;
 2011878:	e0bffe17 	ldw	r2,-8(fp)
 201187c:	e0bffb15 	stw	r2,-20(fp)

  const alt_u32 last_region_index = f->dev.number_of_regions - 1;
 2011880:	e0bffb17 	ldw	r2,-20(fp)
 2011884:	10800c17 	ldw	r2,48(r2)
 2011888:	10bfffc4 	addi	r2,r2,-1
 201188c:	e0bffc15 	stw	r2,-16(fp)
  alt_u32 last_device_address =
    -1 +
    f->dev.region_info[last_region_index].offset +
 2011890:	e0fffb17 	ldw	r3,-20(fp)
 2011894:	e0bffc17 	ldw	r2,-16(fp)
 2011898:	1004913a 	slli	r2,r2,4
 201189c:	1885883a 	add	r2,r3,r2
 20118a0:	10800d04 	addi	r2,r2,52
 20118a4:	10800017 	ldw	r2,0(r2)
   */
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;

  const alt_u32 last_region_index = f->dev.number_of_regions - 1;
  alt_u32 last_device_address =
    -1 +
 20118a8:	10ffffc4 	addi	r3,r2,-1
    f->dev.region_info[last_region_index].offset +
    f->dev.region_info[last_region_index].region_size;
 20118ac:	e13ffb17 	ldw	r4,-20(fp)
 20118b0:	e0bffc17 	ldw	r2,-16(fp)
 20118b4:	1004913a 	slli	r2,r2,4
 20118b8:	2085883a 	add	r2,r4,r2
 20118bc:	10800e04 	addi	r2,r2,56
 20118c0:	10800017 	ldw	r2,0(r2)
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;

  const alt_u32 last_region_index = f->dev.number_of_regions - 1;
  alt_u32 last_device_address =
    -1 +
    f->dev.region_info[last_region_index].offset +
 20118c4:	1885883a 	add	r2,r3,r2
   * if the block offset is outside of the memory, return -EIO.
   */
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;

  const alt_u32 last_region_index = f->dev.number_of_regions - 1;
  alt_u32 last_device_address =
 20118c8:	e0bffd15 	stw	r2,-12(fp)
    -1 +
    f->dev.region_info[last_region_index].offset +
    f->dev.region_info[last_region_index].region_size;

  if (offset > last_device_address)
 20118cc:	e0bfff17 	ldw	r2,-4(fp)
 20118d0:	e0fffd17 	ldw	r3,-12(fp)
 20118d4:	1880022e 	bgeu	r3,r2,20118e0 <alt_epcs_test_address+0x80>
  {
    /* Someone tried to erase a block outside of this device's range. */
    ret_code = -EIO;
 20118d8:	00bffec4 	movi	r2,-5
 20118dc:	e0bffa15 	stw	r2,-24(fp)
  }
  return ret_code;
 20118e0:	e0bffa17 	ldw	r2,-24(fp)
}
 20118e4:	e037883a 	mov	sp,fp
 20118e8:	df000017 	ldw	fp,0(sp)
 20118ec:	dec00104 	addi	sp,sp,4
 20118f0:	f800283a 	ret

020118f4 <alt_epcs_flash_erase_block>:
 *
 * Erase the selected erase block ("sector erase", from the POV
 * of the EPCS data sheet).
 */
int alt_epcs_flash_erase_block(alt_flash_dev* flash_info, int block_offset)
{
 20118f4:	defffa04 	addi	sp,sp,-24
 20118f8:	dfc00515 	stw	ra,20(sp)
 20118fc:	df000415 	stw	fp,16(sp)
 2011900:	df000404 	addi	fp,sp,16
 2011904:	e13ffe15 	stw	r4,-8(fp)
 2011908:	e17fff15 	stw	r5,-4(fp)
  int ret_code = 0;
 201190c:	e03ffc15 	stw	zero,-16(fp)
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;
 2011910:	e0bffe17 	ldw	r2,-8(fp)
 2011914:	e0bffd15 	stw	r2,-12(fp)

  ret_code = alt_epcs_test_address(flash_info, block_offset);
 2011918:	e13ffe17 	ldw	r4,-8(fp)
 201191c:	e17fff17 	ldw	r5,-4(fp)
 2011920:	20118600 	call	2011860 <alt_epcs_test_address>
 2011924:	e0bffc15 	stw	r2,-16(fp)

  if (ret_code >= 0)
 2011928:	e0bffc17 	ldw	r2,-16(fp)
 201192c:	10000816 	blt	r2,zero,2011950 <alt_epcs_flash_erase_block+0x5c>
  {
    /* Send the Sector Erase command, whose 3 address bytes are anywhere
     * within the chosen sector.
     */
    epcs_sector_erase(f->register_base, block_offset, f->four_bytes_mode);
 2011930:	e0bffd17 	ldw	r2,-12(fp)
 2011934:	11002d17 	ldw	r4,180(r2)
 2011938:	e0ffff17 	ldw	r3,-4(fp)
 201193c:	e0bffd17 	ldw	r2,-12(fp)
 2011940:	10803117 	ldw	r2,196(r2)
 2011944:	180b883a 	mov	r5,r3
 2011948:	100d883a 	mov	r6,r2
 201194c:	201272c0 	call	201272c <epcs_sector_erase>
  }
  return ret_code;
 2011950:	e0bffc17 	ldw	r2,-16(fp)
}
 2011954:	e037883a 	mov	sp,fp
 2011958:	dfc00117 	ldw	ra,4(sp)
 201195c:	df000017 	ldw	fp,0(sp)
 2011960:	dec00204 	addi	sp,sp,8
 2011964:	f800283a 	ret

02011968 <alt_epcs_flash_write_block>:
 * function type compatibility.
 */
int alt_epcs_flash_write_block(alt_flash_dev* flash_info, int block_offset,
                                      int data_offset, const void* data,
                                      int length)
{
 2011968:	defff404 	addi	sp,sp,-48
 201196c:	dfc00b15 	stw	ra,44(sp)
 2011970:	df000a15 	stw	fp,40(sp)
 2011974:	df000a04 	addi	fp,sp,40
 2011978:	e13ffc15 	stw	r4,-16(fp)
 201197c:	e17ffd15 	stw	r5,-12(fp)
 2011980:	e1bffe15 	stw	r6,-8(fp)
 2011984:	e1ffff15 	stw	r7,-4(fp)
  int ret_code;
  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;
 2011988:	e0bffc17 	ldw	r2,-16(fp)
 201198c:	e0bff815 	stw	r2,-32(fp)

  int buffer_offset = 0;
 2011990:	e03ff715 	stw	zero,-36(fp)
  int length_of_current_write;
  ret_code = alt_epcs_test_address(flash_info, data_offset);
 2011994:	e13ffc17 	ldw	r4,-16(fp)
 2011998:	e17ffe17 	ldw	r5,-8(fp)
 201199c:	20118600 	call	2011860 <alt_epcs_test_address>
 20119a0:	e0bff915 	stw	r2,-28(fp)

  if (ret_code >= 0)
 20119a4:	e0bff917 	ldw	r2,-28(fp)
 20119a8:	10002a16 	blt	r2,zero,2011a54 <alt_epcs_flash_write_block+0xec>
  {

    /* "Block" writes must be broken up into the page writes that
     * the device understands.  Partial page writes are allowed.
     */
    while (length)
 20119ac:	00002706 	br	2011a4c <alt_epcs_flash_write_block+0xe4>
    {
      int next_page_start = (data_offset + f->page_size) & ~(f->page_size - 1);
 20119b0:	e0bff817 	ldw	r2,-32(fp)
 20119b4:	10c03017 	ldw	r3,192(r2)
 20119b8:	e0bffe17 	ldw	r2,-8(fp)
 20119bc:	1887883a 	add	r3,r3,r2
 20119c0:	e0bff817 	ldw	r2,-32(fp)
 20119c4:	10803017 	ldw	r2,192(r2)
 20119c8:	0085c83a 	sub	r2,zero,r2
 20119cc:	1884703a 	and	r2,r3,r2
 20119d0:	e0bffa15 	stw	r2,-24(fp)
      length_of_current_write = MIN(length, next_page_start - data_offset);
 20119d4:	e0fffa17 	ldw	r3,-24(fp)
 20119d8:	e0bffe17 	ldw	r2,-8(fp)
 20119dc:	1885c83a 	sub	r2,r3,r2
 20119e0:	e0c00217 	ldw	r3,8(fp)
 20119e4:	1880010e 	bge	r3,r2,20119ec <alt_epcs_flash_write_block+0x84>
 20119e8:	1805883a 	mov	r2,r3
 20119ec:	e0bffb15 	stw	r2,-20(fp)

      epcs_write_buffer(f->register_base, data_offset, &((const alt_u8*)data)[buffer_offset], length_of_current_write,
 20119f0:	e0bff817 	ldw	r2,-32(fp)
 20119f4:	10c02d17 	ldw	r3,180(r2)
 20119f8:	e0bff717 	ldw	r2,-36(fp)
 20119fc:	e13fff17 	ldw	r4,-4(fp)
 2011a00:	2085883a 	add	r2,r4,r2
          f->four_bytes_mode);
 2011a04:	e13ff817 	ldw	r4,-32(fp)
    while (length)
    {
      int next_page_start = (data_offset + f->page_size) & ~(f->page_size - 1);
      length_of_current_write = MIN(length, next_page_start - data_offset);

      epcs_write_buffer(f->register_base, data_offset, &((const alt_u8*)data)[buffer_offset], length_of_current_write,
 2011a08:	21003117 	ldw	r4,196(r4)
 2011a0c:	d9000015 	stw	r4,0(sp)
 2011a10:	1809883a 	mov	r4,r3
 2011a14:	e17ffe17 	ldw	r5,-8(fp)
 2011a18:	100d883a 	mov	r6,r2
 2011a1c:	e1fffb17 	ldw	r7,-20(fp)
 2011a20:	20129d00 	call	20129d0 <epcs_write_buffer>
          f->four_bytes_mode);

      length -= length_of_current_write;
 2011a24:	e0c00217 	ldw	r3,8(fp)
 2011a28:	e0bffb17 	ldw	r2,-20(fp)
 2011a2c:	1885c83a 	sub	r2,r3,r2
 2011a30:	e0800215 	stw	r2,8(fp)
      buffer_offset += length_of_current_write;
 2011a34:	e0fff717 	ldw	r3,-36(fp)
 2011a38:	e0bffb17 	ldw	r2,-20(fp)
 2011a3c:	1885883a 	add	r2,r3,r2
 2011a40:	e0bff715 	stw	r2,-36(fp)
      data_offset = next_page_start;
 2011a44:	e0bffa17 	ldw	r2,-24(fp)
 2011a48:	e0bffe15 	stw	r2,-8(fp)
  {

    /* "Block" writes must be broken up into the page writes that
     * the device understands.  Partial page writes are allowed.
     */
    while (length)
 2011a4c:	e0800217 	ldw	r2,8(fp)
 2011a50:	103fd71e 	bne	r2,zero,20119b0 <__alt_mem_epcs_flash_controller+0xfe0089b0>
      length -= length_of_current_write;
      buffer_offset += length_of_current_write;
      data_offset = next_page_start;
    }
  }
  return ret_code;
 2011a54:	e0bff917 	ldw	r2,-28(fp)
}
 2011a58:	e037883a 	mov	sp,fp
 2011a5c:	dfc00117 	ldw	ra,4(sp)
 2011a60:	df000017 	ldw	fp,0(sp)
 2011a64:	dec00204 	addi	sp,sp,8
 2011a68:	f800283a 	ret

02011a6c <alt_epcs_flash_read>:
 *  to the beginning.  Reads that start beyond the end of the memory are
 *  flagged as errors with EIO (is there a better error code?).
 */
int alt_epcs_flash_read(alt_flash_dev* flash_info, int offset,
                        void* dest_addr, int length)
{
 2011a6c:	defff704 	addi	sp,sp,-36
 2011a70:	dfc00815 	stw	ra,32(sp)
 2011a74:	df000715 	stw	fp,28(sp)
 2011a78:	df000704 	addi	fp,sp,28
 2011a7c:	e13ffc15 	stw	r4,-16(fp)
 2011a80:	e17ffd15 	stw	r5,-12(fp)
 2011a84:	e1bffe15 	stw	r6,-8(fp)
 2011a88:	e1ffff15 	stw	r7,-4(fp)
  int ret_code = 0;
 2011a8c:	e03ffa15 	stw	zero,-24(fp)

  alt_flash_epcs_dev *f = (alt_flash_epcs_dev*)flash_info;
 2011a90:	e0bffc17 	ldw	r2,-16(fp)
 2011a94:	e0bffb15 	stw	r2,-20(fp)

  ret_code = alt_epcs_test_address(flash_info, offset);
 2011a98:	e13ffc17 	ldw	r4,-16(fp)
 2011a9c:	e17ffd17 	ldw	r5,-12(fp)
 2011aa0:	20118600 	call	2011860 <alt_epcs_test_address>
 2011aa4:	e0bffa15 	stw	r2,-24(fp)

  if (ret_code >= 0)
 2011aa8:	e0bffa17 	ldw	r2,-24(fp)
 2011aac:	10000f16 	blt	r2,zero,2011aec <alt_epcs_flash_read+0x80>
  {
    ret_code = epcs_read_buffer(f->register_base, offset, dest_addr, length,
 2011ab0:	e0bffb17 	ldw	r2,-20(fp)
 2011ab4:	10802d17 	ldw	r2,180(r2)
                                f->four_bytes_mode);
 2011ab8:	e0fffb17 	ldw	r3,-20(fp)

  ret_code = alt_epcs_test_address(flash_info, offset);

  if (ret_code >= 0)
  {
    ret_code = epcs_read_buffer(f->register_base, offset, dest_addr, length,
 2011abc:	18c03117 	ldw	r3,196(r3)
 2011ac0:	d8c00015 	stw	r3,0(sp)
 2011ac4:	1009883a 	mov	r4,r2
 2011ac8:	e17ffd17 	ldw	r5,-12(fp)
 2011acc:	e1bffe17 	ldw	r6,-8(fp)
 2011ad0:	e1ffff17 	ldw	r7,-4(fp)
 2011ad4:	20128240 	call	2012824 <epcs_read_buffer>
 2011ad8:	e0bffa15 	stw	r2,-24(fp)
                                f->four_bytes_mode);

    /* epcs_read_buffer returns the number of buffers read, but
     * alt_epcs_flash_read returns 0 on success, <0 on failure.
     */
    if (ret_code == length)
 2011adc:	e0fffa17 	ldw	r3,-24(fp)
 2011ae0:	e0bfff17 	ldw	r2,-4(fp)
 2011ae4:	1880011e 	bne	r3,r2,2011aec <alt_epcs_flash_read+0x80>
    {
      ret_code = 0;
 2011ae8:	e03ffa15 	stw	zero,-24(fp)
    }
  }
  return ret_code;
 2011aec:	e0bffa17 	ldw	r2,-24(fp)
}
 2011af0:	e037883a 	mov	sp,fp
 2011af4:	dfc00117 	ldw	ra,4(sp)
 2011af8:	df000017 	ldw	fp,0(sp)
 2011afc:	dec00204 	addi	sp,sp,8
 2011b00:	f800283a 	ret

02011b04 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 2011b04:	defffa04 	addi	sp,sp,-24
 2011b08:	dfc00515 	stw	ra,20(sp)
 2011b0c:	df000415 	stw	fp,16(sp)
 2011b10:	df000404 	addi	fp,sp,16
 2011b14:	e13ffd15 	stw	r4,-12(fp)
 2011b18:	e17ffe15 	stw	r5,-8(fp)
 2011b1c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 2011b20:	e0bffd17 	ldw	r2,-12(fp)
 2011b24:	10800017 	ldw	r2,0(r2)
 2011b28:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 2011b2c:	e0bffc17 	ldw	r2,-16(fp)
 2011b30:	10c00a04 	addi	r3,r2,40
      fd->fd_flags);
 2011b34:	e0bffd17 	ldw	r2,-12(fp)
int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 2011b38:	10800217 	ldw	r2,8(r2)
 2011b3c:	1809883a 	mov	r4,r3
 2011b40:	e17ffe17 	ldw	r5,-8(fp)
 2011b44:	e1bfff17 	ldw	r6,-4(fp)
 2011b48:	100f883a 	mov	r7,r2
 2011b4c:	201212c0 	call	201212c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 2011b50:	e037883a 	mov	sp,fp
 2011b54:	dfc00117 	ldw	ra,4(sp)
 2011b58:	df000017 	ldw	fp,0(sp)
 2011b5c:	dec00204 	addi	sp,sp,8
 2011b60:	f800283a 	ret

02011b64 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 2011b64:	defffa04 	addi	sp,sp,-24
 2011b68:	dfc00515 	stw	ra,20(sp)
 2011b6c:	df000415 	stw	fp,16(sp)
 2011b70:	df000404 	addi	fp,sp,16
 2011b74:	e13ffd15 	stw	r4,-12(fp)
 2011b78:	e17ffe15 	stw	r5,-8(fp)
 2011b7c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 2011b80:	e0bffd17 	ldw	r2,-12(fp)
 2011b84:	10800017 	ldw	r2,0(r2)
 2011b88:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 2011b8c:	e0bffc17 	ldw	r2,-16(fp)
 2011b90:	10c00a04 	addi	r3,r2,40
      fd->fd_flags);
 2011b94:	e0bffd17 	ldw	r2,-12(fp)
int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 2011b98:	10800217 	ldw	r2,8(r2)
 2011b9c:	1809883a 	mov	r4,r3
 2011ba0:	e17ffe17 	ldw	r5,-8(fp)
 2011ba4:	e1bfff17 	ldw	r6,-4(fp)
 2011ba8:	100f883a 	mov	r7,r2
 2011bac:	20123440 	call	2012344 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 2011bb0:	e037883a 	mov	sp,fp
 2011bb4:	dfc00117 	ldw	ra,4(sp)
 2011bb8:	df000017 	ldw	fp,0(sp)
 2011bbc:	dec00204 	addi	sp,sp,8
 2011bc0:	f800283a 	ret

02011bc4 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 2011bc4:	defffc04 	addi	sp,sp,-16
 2011bc8:	dfc00315 	stw	ra,12(sp)
 2011bcc:	df000215 	stw	fp,8(sp)
 2011bd0:	df000204 	addi	fp,sp,8
 2011bd4:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 2011bd8:	e0bfff17 	ldw	r2,-4(fp)
 2011bdc:	10800017 	ldw	r2,0(r2)
 2011be0:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 2011be4:	e0bffe17 	ldw	r2,-8(fp)
 2011be8:	10c00a04 	addi	r3,r2,40
 2011bec:	e0bfff17 	ldw	r2,-4(fp)
 2011bf0:	10800217 	ldw	r2,8(r2)
 2011bf4:	1809883a 	mov	r4,r3
 2011bf8:	100b883a 	mov	r5,r2
 2011bfc:	2011fd00 	call	2011fd0 <altera_avalon_jtag_uart_close>
}
 2011c00:	e037883a 	mov	sp,fp
 2011c04:	dfc00117 	ldw	ra,4(sp)
 2011c08:	df000017 	ldw	fp,0(sp)
 2011c0c:	dec00204 	addi	sp,sp,8
 2011c10:	f800283a 	ret

02011c14 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 2011c14:	defffa04 	addi	sp,sp,-24
 2011c18:	dfc00515 	stw	ra,20(sp)
 2011c1c:	df000415 	stw	fp,16(sp)
 2011c20:	df000404 	addi	fp,sp,16
 2011c24:	e13ffd15 	stw	r4,-12(fp)
 2011c28:	e17ffe15 	stw	r5,-8(fp)
 2011c2c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 2011c30:	e0bffd17 	ldw	r2,-12(fp)
 2011c34:	10800017 	ldw	r2,0(r2)
 2011c38:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 2011c3c:	e0bffc17 	ldw	r2,-16(fp)
 2011c40:	10800a04 	addi	r2,r2,40
 2011c44:	1009883a 	mov	r4,r2
 2011c48:	e17ffe17 	ldw	r5,-8(fp)
 2011c4c:	e1bfff17 	ldw	r6,-4(fp)
 2011c50:	20120380 	call	2012038 <altera_avalon_jtag_uart_ioctl>
}
 2011c54:	e037883a 	mov	sp,fp
 2011c58:	dfc00117 	ldw	ra,4(sp)
 2011c5c:	df000017 	ldw	fp,0(sp)
 2011c60:	dec00204 	addi	sp,sp,8
 2011c64:	f800283a 	ret

02011c68 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 2011c68:	defffa04 	addi	sp,sp,-24
 2011c6c:	dfc00515 	stw	ra,20(sp)
 2011c70:	df000415 	stw	fp,16(sp)
 2011c74:	df000404 	addi	fp,sp,16
 2011c78:	e13ffd15 	stw	r4,-12(fp)
 2011c7c:	e17ffe15 	stw	r5,-8(fp)
 2011c80:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 2011c84:	e0bffd17 	ldw	r2,-12(fp)
 2011c88:	00c00044 	movi	r3,1
 2011c8c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 2011c90:	e0bffd17 	ldw	r2,-12(fp)
 2011c94:	10800017 	ldw	r2,0(r2)
 2011c98:	10800104 	addi	r2,r2,4
 2011c9c:	e0fffd17 	ldw	r3,-12(fp)
 2011ca0:	18c00817 	ldw	r3,32(r3)
 2011ca4:	10c00035 	stwio	r3,0(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 2011ca8:	e0fffe17 	ldw	r3,-8(fp)
 2011cac:	e0bfff17 	ldw	r2,-4(fp)
 2011cb0:	d8000015 	stw	zero,0(sp)
 2011cb4:	1809883a 	mov	r4,r3
 2011cb8:	100b883a 	mov	r5,r2
 2011cbc:	01808074 	movhi	r6,513
 2011cc0:	31874a04 	addi	r6,r6,7464
 2011cc4:	e1fffd17 	ldw	r7,-12(fp)
 2011cc8:	2012f1c0 	call	2012f1c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 2011ccc:	e0bffd17 	ldw	r2,-12(fp)
 2011cd0:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 2011cd4:	e0bffd17 	ldw	r2,-12(fp)
 2011cd8:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 2011cdc:	00808274 	movhi	r2,521
 2011ce0:	10ab0204 	addi	r2,r2,-21496
 2011ce4:	10800017 	ldw	r2,0(r2)
 2011ce8:	1809883a 	mov	r4,r3
 2011cec:	100b883a 	mov	r5,r2
 2011cf0:	01808074 	movhi	r6,513
 2011cf4:	3187cb04 	addi	r6,r6,7980
 2011cf8:	e1fffd17 	ldw	r7,-12(fp)
 2011cfc:	20104080 	call	2010408 <alt_alarm_start>
 2011d00:	1000040e 	bge	r2,zero,2011d14 <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 2011d04:	e0bffd17 	ldw	r2,-12(fp)
 2011d08:	00e00034 	movhi	r3,32768
 2011d0c:	18ffffc4 	addi	r3,r3,-1
 2011d10:	10c00115 	stw	r3,4(r2)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 2011d14:	e037883a 	mov	sp,fp
 2011d18:	dfc00117 	ldw	ra,4(sp)
 2011d1c:	df000017 	ldw	fp,0(sp)
 2011d20:	dec00204 	addi	sp,sp,8
 2011d24:	f800283a 	ret

02011d28 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 2011d28:	defff804 	addi	sp,sp,-32
 2011d2c:	df000715 	stw	fp,28(sp)
 2011d30:	df000704 	addi	fp,sp,28
 2011d34:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 2011d38:	e0bfff17 	ldw	r2,-4(fp)
 2011d3c:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 2011d40:	e0bffb17 	ldw	r2,-20(fp)
 2011d44:	10800017 	ldw	r2,0(r2)
 2011d48:	e0bffc15 	stw	r2,-16(fp)
 2011d4c:	00000106 	br	2011d54 <altera_avalon_jtag_uart_irq+0x2c>
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
 2011d50:	0001883a 	nop
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 2011d54:	e0bffc17 	ldw	r2,-16(fp)
 2011d58:	10800104 	addi	r2,r2,4
 2011d5c:	10800037 	ldwio	r2,0(r2)
 2011d60:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 2011d64:	e0bffd17 	ldw	r2,-12(fp)
 2011d68:	1080c00c 	andi	r2,r2,768
 2011d6c:	10006a26 	beq	r2,zero,2011f18 <altera_avalon_jtag_uart_irq+0x1f0>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 2011d70:	e0bffd17 	ldw	r2,-12(fp)
 2011d74:	1080400c 	andi	r2,r2,256
 2011d78:	10003326 	beq	r2,zero,2011e48 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 2011d7c:	00800074 	movhi	r2,1
 2011d80:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 2011d84:	e0bffb17 	ldw	r2,-20(fp)
 2011d88:	10800a17 	ldw	r2,40(r2)
 2011d8c:	10800044 	addi	r2,r2,1
 2011d90:	1081ffcc 	andi	r2,r2,2047
 2011d94:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 2011d98:	e0bffb17 	ldw	r2,-20(fp)
 2011d9c:	10c00b17 	ldw	r3,44(r2)
 2011da0:	e0bffe17 	ldw	r2,-8(fp)
 2011da4:	18801426 	beq	r3,r2,2011df8 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 2011da8:	e0bffc17 	ldw	r2,-16(fp)
 2011dac:	10800037 	ldwio	r2,0(r2)
 2011db0:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 2011db4:	e0bff917 	ldw	r2,-28(fp)
 2011db8:	10a0000c 	andi	r2,r2,32768
 2011dbc:	10001026 	beq	r2,zero,2011e00 <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 2011dc0:	e0bffb17 	ldw	r2,-20(fp)
 2011dc4:	10800a17 	ldw	r2,40(r2)
 2011dc8:	e0fff917 	ldw	r3,-28(fp)
 2011dcc:	e13ffb17 	ldw	r4,-20(fp)
 2011dd0:	2085883a 	add	r2,r4,r2
 2011dd4:	10800e04 	addi	r2,r2,56
 2011dd8:	10c00005 	stb	r3,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 2011ddc:	e0bffb17 	ldw	r2,-20(fp)
 2011de0:	10800a17 	ldw	r2,40(r2)
 2011de4:	10800044 	addi	r2,r2,1
 2011de8:	10c1ffcc 	andi	r3,r2,2047
 2011dec:	e0bffb17 	ldw	r2,-20(fp)
 2011df0:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 2011df4:	003fe306 	br	2011d84 <__alt_mem_epcs_flash_controller+0xfe008d84>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 2011df8:	0001883a 	nop
 2011dfc:	00000106 	br	2011e04 <altera_avalon_jtag_uart_irq+0xdc>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 2011e00:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 2011e04:	e0bff917 	ldw	r2,-28(fp)
 2011e08:	10bfffec 	andhi	r2,r2,65535
 2011e0c:	10000e26 	beq	r2,zero,2011e48 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 2011e10:	e0bffb17 	ldw	r2,-20(fp)
 2011e14:	10c00817 	ldw	r3,32(r2)
 2011e18:	00bfff84 	movi	r2,-2
 2011e1c:	1886703a 	and	r3,r3,r2
 2011e20:	e0bffb17 	ldw	r2,-20(fp)
 2011e24:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 2011e28:	e0bffc17 	ldw	r2,-16(fp)
 2011e2c:	10800104 	addi	r2,r2,4
 2011e30:	e0fffb17 	ldw	r3,-20(fp)
 2011e34:	18c00817 	ldw	r3,32(r3)
 2011e38:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 2011e3c:	e0bffc17 	ldw	r2,-16(fp)
 2011e40:	10800104 	addi	r2,r2,4
 2011e44:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 2011e48:	e0bffd17 	ldw	r2,-12(fp)
 2011e4c:	1080800c 	andi	r2,r2,512
 2011e50:	103fbf26 	beq	r2,zero,2011d50 <__alt_mem_epcs_flash_controller+0xfe008d50>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 2011e54:	e0bffd17 	ldw	r2,-12(fp)
 2011e58:	1004d43a 	srli	r2,r2,16
 2011e5c:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 2011e60:	00001406 	br	2011eb4 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 2011e64:	e0bffc17 	ldw	r2,-16(fp)
 2011e68:	e0fffb17 	ldw	r3,-20(fp)
 2011e6c:	18c00d17 	ldw	r3,52(r3)
 2011e70:	e13ffb17 	ldw	r4,-20(fp)
 2011e74:	20c7883a 	add	r3,r4,r3
 2011e78:	18c20e04 	addi	r3,r3,2104
 2011e7c:	18c00003 	ldbu	r3,0(r3)
 2011e80:	18c03fcc 	andi	r3,r3,255
 2011e84:	18c0201c 	xori	r3,r3,128
 2011e88:	18ffe004 	addi	r3,r3,-128
 2011e8c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 2011e90:	e0bffb17 	ldw	r2,-20(fp)
 2011e94:	10800d17 	ldw	r2,52(r2)
 2011e98:	10800044 	addi	r2,r2,1
 2011e9c:	10c1ffcc 	andi	r3,r2,2047
 2011ea0:	e0bffb17 	ldw	r2,-20(fp)
 2011ea4:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 2011ea8:	e0bffa17 	ldw	r2,-24(fp)
 2011eac:	10bfffc4 	addi	r2,r2,-1
 2011eb0:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 2011eb4:	e0bffa17 	ldw	r2,-24(fp)
 2011eb8:	10000526 	beq	r2,zero,2011ed0 <altera_avalon_jtag_uart_irq+0x1a8>
 2011ebc:	e0bffb17 	ldw	r2,-20(fp)
 2011ec0:	10c00d17 	ldw	r3,52(r2)
 2011ec4:	e0bffb17 	ldw	r2,-20(fp)
 2011ec8:	10800c17 	ldw	r2,48(r2)
 2011ecc:	18bfe51e 	bne	r3,r2,2011e64 <__alt_mem_epcs_flash_controller+0xfe008e64>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 2011ed0:	e0bffa17 	ldw	r2,-24(fp)
 2011ed4:	103f9e26 	beq	r2,zero,2011d50 <__alt_mem_epcs_flash_controller+0xfe008d50>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 2011ed8:	e0bffb17 	ldw	r2,-20(fp)
 2011edc:	10c00817 	ldw	r3,32(r2)
 2011ee0:	00bfff44 	movi	r2,-3
 2011ee4:	1886703a 	and	r3,r3,r2
 2011ee8:	e0bffb17 	ldw	r2,-20(fp)
 2011eec:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 2011ef0:	e0bffb17 	ldw	r2,-20(fp)
 2011ef4:	10800017 	ldw	r2,0(r2)
 2011ef8:	10800104 	addi	r2,r2,4
 2011efc:	e0fffb17 	ldw	r3,-20(fp)
 2011f00:	18c00817 	ldw	r3,32(r3)
 2011f04:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 2011f08:	e0bffc17 	ldw	r2,-16(fp)
 2011f0c:	10800104 	addi	r2,r2,4
 2011f10:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 2011f14:	003f8e06 	br	2011d50 <__alt_mem_epcs_flash_controller+0xfe008d50>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 2011f18:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 2011f1c:	e037883a 	mov	sp,fp
 2011f20:	df000017 	ldw	fp,0(sp)
 2011f24:	dec00104 	addi	sp,sp,4
 2011f28:	f800283a 	ret

02011f2c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 2011f2c:	defffc04 	addi	sp,sp,-16
 2011f30:	df000315 	stw	fp,12(sp)
 2011f34:	df000304 	addi	fp,sp,12
 2011f38:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 2011f3c:	e0bfff17 	ldw	r2,-4(fp)
 2011f40:	e0bffd15 	stw	r2,-12(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 2011f44:	e0bffd17 	ldw	r2,-12(fp)
 2011f48:	10800017 	ldw	r2,0(r2)
 2011f4c:	10800104 	addi	r2,r2,4
 2011f50:	10800037 	ldwio	r2,0(r2)
 2011f54:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 2011f58:	e0bffe17 	ldw	r2,-8(fp)
 2011f5c:	1081000c 	andi	r2,r2,1024
 2011f60:	10000a26 	beq	r2,zero,2011f8c <altera_avalon_jtag_uart_timeout+0x60>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 2011f64:	e0bffd17 	ldw	r2,-12(fp)
 2011f68:	10800017 	ldw	r2,0(r2)
 2011f6c:	10800104 	addi	r2,r2,4
 2011f70:	e0fffd17 	ldw	r3,-12(fp)
 2011f74:	18c00817 	ldw	r3,32(r3)
 2011f78:	18c10014 	ori	r3,r3,1024
 2011f7c:	10c00035 	stwio	r3,0(r2)
    sp->host_inactive = 0;
 2011f80:	e0bffd17 	ldw	r2,-12(fp)
 2011f84:	10000915 	stw	zero,36(r2)
 2011f88:	00000a06 	br	2011fb4 <altera_avalon_jtag_uart_timeout+0x88>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 2011f8c:	e0bffd17 	ldw	r2,-12(fp)
 2011f90:	10800917 	ldw	r2,36(r2)
 2011f94:	00e00034 	movhi	r3,32768
 2011f98:	18ffff04 	addi	r3,r3,-4
 2011f9c:	18800536 	bltu	r3,r2,2011fb4 <altera_avalon_jtag_uart_timeout+0x88>
    sp->host_inactive++;
 2011fa0:	e0bffd17 	ldw	r2,-12(fp)
 2011fa4:	10800917 	ldw	r2,36(r2)
 2011fa8:	10c00044 	addi	r3,r2,1
 2011fac:	e0bffd17 	ldw	r2,-12(fp)
 2011fb0:	10c00915 	stw	r3,36(r2)
 2011fb4:	00808274 	movhi	r2,521
 2011fb8:	10ab0204 	addi	r2,r2,-21496
 2011fbc:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 2011fc0:	e037883a 	mov	sp,fp
 2011fc4:	df000017 	ldw	fp,0(sp)
 2011fc8:	dec00104 	addi	sp,sp,4
 2011fcc:	f800283a 	ret

02011fd0 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 2011fd0:	defffd04 	addi	sp,sp,-12
 2011fd4:	df000215 	stw	fp,8(sp)
 2011fd8:	df000204 	addi	fp,sp,8
 2011fdc:	e13ffe15 	stw	r4,-8(fp)
 2011fe0:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 2011fe4:	00000506 	br	2011ffc <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 2011fe8:	e0bfff17 	ldw	r2,-4(fp)
 2011fec:	1090000c 	andi	r2,r2,16384
 2011ff0:	10000226 	beq	r2,zero,2011ffc <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 2011ff4:	00bffd44 	movi	r2,-11
 2011ff8:	00000b06 	br	2012028 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 2011ffc:	e0bffe17 	ldw	r2,-8(fp)
 2012000:	10c00d17 	ldw	r3,52(r2)
 2012004:	e0bffe17 	ldw	r2,-8(fp)
 2012008:	10800c17 	ldw	r2,48(r2)
 201200c:	18800526 	beq	r3,r2,2012024 <altera_avalon_jtag_uart_close+0x54>
 2012010:	e0bffe17 	ldw	r2,-8(fp)
 2012014:	10c00917 	ldw	r3,36(r2)
 2012018:	e0bffe17 	ldw	r2,-8(fp)
 201201c:	10800117 	ldw	r2,4(r2)
 2012020:	18bff136 	bltu	r3,r2,2011fe8 <__alt_mem_epcs_flash_controller+0xfe008fe8>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 2012024:	0005883a 	mov	r2,zero
}
 2012028:	e037883a 	mov	sp,fp
 201202c:	df000017 	ldw	fp,0(sp)
 2012030:	dec00104 	addi	sp,sp,4
 2012034:	f800283a 	ret

02012038 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 2012038:	defffa04 	addi	sp,sp,-24
 201203c:	df000515 	stw	fp,20(sp)
 2012040:	df000504 	addi	fp,sp,20
 2012044:	e13ffd15 	stw	r4,-12(fp)
 2012048:	e17ffe15 	stw	r5,-8(fp)
 201204c:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 2012050:	00bff9c4 	movi	r2,-25
 2012054:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 2012058:	e0bffe17 	ldw	r2,-8(fp)
 201205c:	10da8060 	cmpeqi	r3,r2,27137
 2012060:	1800031e 	bne	r3,zero,2012070 <altera_avalon_jtag_uart_ioctl+0x38>
 2012064:	109a80a0 	cmpeqi	r2,r2,27138
 2012068:	1000181e 	bne	r2,zero,20120cc <altera_avalon_jtag_uart_ioctl+0x94>
 201206c:	00002606 	br	2012108 <altera_avalon_jtag_uart_ioctl+0xd0>
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 2012070:	e0bffd17 	ldw	r2,-12(fp)
 2012074:	10c00117 	ldw	r3,4(r2)
 2012078:	00a00034 	movhi	r2,32768
 201207c:	10bfffc4 	addi	r2,r2,-1
 2012080:	18802226 	beq	r3,r2,201210c <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      int timeout = *((int *)arg);
 2012084:	e0bfff17 	ldw	r2,-4(fp)
 2012088:	10800017 	ldw	r2,0(r2)
 201208c:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 2012090:	e0bffc17 	ldw	r2,-16(fp)
 2012094:	10800090 	cmplti	r2,r2,2
 2012098:	1000061e 	bne	r2,zero,20120b4 <altera_avalon_jtag_uart_ioctl+0x7c>
 201209c:	e0fffc17 	ldw	r3,-16(fp)
 20120a0:	00a00034 	movhi	r2,32768
 20120a4:	10bfffc4 	addi	r2,r2,-1
 20120a8:	18800226 	beq	r3,r2,20120b4 <altera_avalon_jtag_uart_ioctl+0x7c>
 20120ac:	e0bffc17 	ldw	r2,-16(fp)
 20120b0:	00000206 	br	20120bc <altera_avalon_jtag_uart_ioctl+0x84>
 20120b4:	00a00034 	movhi	r2,32768
 20120b8:	10bfff84 	addi	r2,r2,-2
 20120bc:	e0fffd17 	ldw	r3,-12(fp)
 20120c0:	18800115 	stw	r2,4(r3)
      rc = 0;
 20120c4:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 20120c8:	00001006 	br	201210c <altera_avalon_jtag_uart_ioctl+0xd4>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 20120cc:	e0bffd17 	ldw	r2,-12(fp)
 20120d0:	10c00117 	ldw	r3,4(r2)
 20120d4:	00a00034 	movhi	r2,32768
 20120d8:	10bfffc4 	addi	r2,r2,-1
 20120dc:	18800d26 	beq	r3,r2,2012114 <altera_avalon_jtag_uart_ioctl+0xdc>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 20120e0:	e0bffd17 	ldw	r2,-12(fp)
 20120e4:	10c00917 	ldw	r3,36(r2)
 20120e8:	e0bffd17 	ldw	r2,-12(fp)
 20120ec:	10800117 	ldw	r2,4(r2)
 20120f0:	1885803a 	cmpltu	r2,r3,r2
 20120f4:	10c03fcc 	andi	r3,r2,255
 20120f8:	e0bfff17 	ldw	r2,-4(fp)
 20120fc:	10c00015 	stw	r3,0(r2)
      rc = 0;
 2012100:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 2012104:	00000306 	br	2012114 <altera_avalon_jtag_uart_ioctl+0xdc>

  default:
    break;
 2012108:	00000306 	br	2012118 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 201210c:	0001883a 	nop
 2012110:	00000106 	br	2012118 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 2012114:	0001883a 	nop

  default:
    break;
  }

  return rc;
 2012118:	e0bffb17 	ldw	r2,-20(fp)
}
 201211c:	e037883a 	mov	sp,fp
 2012120:	df000017 	ldw	fp,0(sp)
 2012124:	dec00104 	addi	sp,sp,4
 2012128:	f800283a 	ret

0201212c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 201212c:	defff304 	addi	sp,sp,-52
 2012130:	dfc00c15 	stw	ra,48(sp)
 2012134:	df000b15 	stw	fp,44(sp)
 2012138:	df000b04 	addi	fp,sp,44
 201213c:	e13ffc15 	stw	r4,-16(fp)
 2012140:	e17ffd15 	stw	r5,-12(fp)
 2012144:	e1bffe15 	stw	r6,-8(fp)
 2012148:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 201214c:	e0bffd17 	ldw	r2,-12(fp)
 2012150:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 2012154:	00004706 	br	2012274 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 2012158:	e0bffc17 	ldw	r2,-16(fp)
 201215c:	10800a17 	ldw	r2,40(r2)
 2012160:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 2012164:	e0bffc17 	ldw	r2,-16(fp)
 2012168:	10800b17 	ldw	r2,44(r2)
 201216c:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 2012170:	e0fff717 	ldw	r3,-36(fp)
 2012174:	e0bff817 	ldw	r2,-32(fp)
 2012178:	18800536 	bltu	r3,r2,2012190 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 201217c:	e0fff717 	ldw	r3,-36(fp)
 2012180:	e0bff817 	ldw	r2,-32(fp)
 2012184:	1885c83a 	sub	r2,r3,r2
 2012188:	e0bff615 	stw	r2,-40(fp)
 201218c:	00000406 	br	20121a0 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 2012190:	00c20004 	movi	r3,2048
 2012194:	e0bff817 	ldw	r2,-32(fp)
 2012198:	1885c83a 	sub	r2,r3,r2
 201219c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 20121a0:	e0bff617 	ldw	r2,-40(fp)
 20121a4:	10001e26 	beq	r2,zero,2012220 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 20121a8:	e0fffe17 	ldw	r3,-8(fp)
 20121ac:	e0bff617 	ldw	r2,-40(fp)
 20121b0:	1880022e 	bgeu	r3,r2,20121bc <altera_avalon_jtag_uart_read+0x90>
        n = space;
 20121b4:	e0bffe17 	ldw	r2,-8(fp)
 20121b8:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 20121bc:	e0bff817 	ldw	r2,-32(fp)
 20121c0:	10800e04 	addi	r2,r2,56
 20121c4:	e0fffc17 	ldw	r3,-16(fp)
 20121c8:	1885883a 	add	r2,r3,r2
 20121cc:	e13ff517 	ldw	r4,-44(fp)
 20121d0:	100b883a 	mov	r5,r2
 20121d4:	e1bff617 	ldw	r6,-40(fp)
 20121d8:	2009a000 	call	2009a00 <memcpy>
      ptr   += n;
 20121dc:	e0fff517 	ldw	r3,-44(fp)
 20121e0:	e0bff617 	ldw	r2,-40(fp)
 20121e4:	1885883a 	add	r2,r3,r2
 20121e8:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 20121ec:	e0fffe17 	ldw	r3,-8(fp)
 20121f0:	e0bff617 	ldw	r2,-40(fp)
 20121f4:	1885c83a 	sub	r2,r3,r2
 20121f8:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 20121fc:	e0fff817 	ldw	r3,-32(fp)
 2012200:	e0bff617 	ldw	r2,-40(fp)
 2012204:	1885883a 	add	r2,r3,r2
 2012208:	10c1ffcc 	andi	r3,r2,2047
 201220c:	e0bffc17 	ldw	r2,-16(fp)
 2012210:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 2012214:	e0bffe17 	ldw	r2,-8(fp)
 2012218:	00bfcf16 	blt	zero,r2,2012158 <__alt_mem_epcs_flash_controller+0xfe009158>
 201221c:	00000106 	br	2012224 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 2012220:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 2012224:	e0fff517 	ldw	r3,-44(fp)
 2012228:	e0bffd17 	ldw	r2,-12(fp)
 201222c:	1880141e 	bne	r3,r2,2012280 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 2012230:	e0bfff17 	ldw	r2,-4(fp)
 2012234:	1090000c 	andi	r2,r2,16384
 2012238:	1000131e 	bne	r2,zero,2012288 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 201223c:	0001883a 	nop
 2012240:	e0bffc17 	ldw	r2,-16(fp)
 2012244:	10c00a17 	ldw	r3,40(r2)
 2012248:	e0bff717 	ldw	r2,-36(fp)
 201224c:	1880051e 	bne	r3,r2,2012264 <altera_avalon_jtag_uart_read+0x138>
 2012250:	e0bffc17 	ldw	r2,-16(fp)
 2012254:	10c00917 	ldw	r3,36(r2)
 2012258:	e0bffc17 	ldw	r2,-16(fp)
 201225c:	10800117 	ldw	r2,4(r2)
 2012260:	18bff736 	bltu	r3,r2,2012240 <__alt_mem_epcs_flash_controller+0xfe009240>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 2012264:	e0bffc17 	ldw	r2,-16(fp)
 2012268:	10c00a17 	ldw	r3,40(r2)
 201226c:	e0bff717 	ldw	r2,-36(fp)
 2012270:	18800726 	beq	r3,r2,2012290 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 2012274:	e0bffe17 	ldw	r2,-8(fp)
 2012278:	00bfb716 	blt	zero,r2,2012158 <__alt_mem_epcs_flash_controller+0xfe009158>
 201227c:	00000506 	br	2012294 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 2012280:	0001883a 	nop
 2012284:	00000306 	br	2012294 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 2012288:	0001883a 	nop
 201228c:	00000106 	br	2012294 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 2012290:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 2012294:	e0fff517 	ldw	r3,-44(fp)
 2012298:	e0bffd17 	ldw	r2,-12(fp)
 201229c:	18801726 	beq	r3,r2,20122fc <altera_avalon_jtag_uart_read+0x1d0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 20122a0:	0005303a 	rdctl	r2,status
 20122a4:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 20122a8:	e0fffa17 	ldw	r3,-24(fp)
 20122ac:	00bfff84 	movi	r2,-2
 20122b0:	1884703a 	and	r2,r3,r2
 20122b4:	1001703a 	wrctl	status,r2
  
  return context;
 20122b8:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 20122bc:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 20122c0:	e0bffc17 	ldw	r2,-16(fp)
 20122c4:	10800817 	ldw	r2,32(r2)
 20122c8:	10c00054 	ori	r3,r2,1
 20122cc:	e0bffc17 	ldw	r2,-16(fp)
 20122d0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 20122d4:	e0bffc17 	ldw	r2,-16(fp)
 20122d8:	10800017 	ldw	r2,0(r2)
 20122dc:	10800104 	addi	r2,r2,4
 20122e0:	e0fffc17 	ldw	r3,-16(fp)
 20122e4:	18c00817 	ldw	r3,32(r3)
 20122e8:	10c00035 	stwio	r3,0(r2)
 20122ec:	e0bff917 	ldw	r2,-28(fp)
 20122f0:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 20122f4:	e0bffb17 	ldw	r2,-20(fp)
 20122f8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 20122fc:	e0fff517 	ldw	r3,-44(fp)
 2012300:	e0bffd17 	ldw	r2,-12(fp)
 2012304:	18800426 	beq	r3,r2,2012318 <altera_avalon_jtag_uart_read+0x1ec>
    return ptr - buffer;
 2012308:	e0fff517 	ldw	r3,-44(fp)
 201230c:	e0bffd17 	ldw	r2,-12(fp)
 2012310:	1885c83a 	sub	r2,r3,r2
 2012314:	00000606 	br	2012330 <altera_avalon_jtag_uart_read+0x204>
  else if (flags & O_NONBLOCK)
 2012318:	e0bfff17 	ldw	r2,-4(fp)
 201231c:	1090000c 	andi	r2,r2,16384
 2012320:	10000226 	beq	r2,zero,201232c <altera_avalon_jtag_uart_read+0x200>
    return -EWOULDBLOCK;
 2012324:	00bffd44 	movi	r2,-11
 2012328:	00000106 	br	2012330 <altera_avalon_jtag_uart_read+0x204>
  else
    return -EIO;
 201232c:	00bffec4 	movi	r2,-5
}
 2012330:	e037883a 	mov	sp,fp
 2012334:	dfc00117 	ldw	ra,4(sp)
 2012338:	df000017 	ldw	fp,0(sp)
 201233c:	dec00204 	addi	sp,sp,8
 2012340:	f800283a 	ret

02012344 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 2012344:	defff304 	addi	sp,sp,-52
 2012348:	dfc00c15 	stw	ra,48(sp)
 201234c:	df000b15 	stw	fp,44(sp)
 2012350:	df000b04 	addi	fp,sp,44
 2012354:	e13ffc15 	stw	r4,-16(fp)
 2012358:	e17ffd15 	stw	r5,-12(fp)
 201235c:	e1bffe15 	stw	r6,-8(fp)
 2012360:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 2012364:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 2012368:	e0bffd17 	ldw	r2,-12(fp)
 201236c:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 2012370:	00003706 	br	2012450 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 2012374:	e0bffc17 	ldw	r2,-16(fp)
 2012378:	10800c17 	ldw	r2,48(r2)
 201237c:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
 2012380:	e0bffc17 	ldw	r2,-16(fp)
 2012384:	10800d17 	ldw	r2,52(r2)
 2012388:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 201238c:	e0fff817 	ldw	r3,-32(fp)
 2012390:	e0bff517 	ldw	r2,-44(fp)
 2012394:	1880062e 	bgeu	r3,r2,20123b0 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 2012398:	e0fff517 	ldw	r3,-44(fp)
 201239c:	e0bff817 	ldw	r2,-32(fp)
 20123a0:	1885c83a 	sub	r2,r3,r2
 20123a4:	10bfffc4 	addi	r2,r2,-1
 20123a8:	e0bff615 	stw	r2,-40(fp)
 20123ac:	00000b06 	br	20123dc <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 20123b0:	e0bff517 	ldw	r2,-44(fp)
 20123b4:	10000526 	beq	r2,zero,20123cc <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 20123b8:	00c20004 	movi	r3,2048
 20123bc:	e0bff817 	ldw	r2,-32(fp)
 20123c0:	1885c83a 	sub	r2,r3,r2
 20123c4:	e0bff615 	stw	r2,-40(fp)
 20123c8:	00000406 	br	20123dc <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 20123cc:	00c1ffc4 	movi	r3,2047
 20123d0:	e0bff817 	ldw	r2,-32(fp)
 20123d4:	1885c83a 	sub	r2,r3,r2
 20123d8:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 20123dc:	e0bff617 	ldw	r2,-40(fp)
 20123e0:	10001e26 	beq	r2,zero,201245c <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 20123e4:	e0fffe17 	ldw	r3,-8(fp)
 20123e8:	e0bff617 	ldw	r2,-40(fp)
 20123ec:	1880022e 	bgeu	r3,r2,20123f8 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 20123f0:	e0bffe17 	ldw	r2,-8(fp)
 20123f4:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 20123f8:	e0bff817 	ldw	r2,-32(fp)
 20123fc:	10820e04 	addi	r2,r2,2104
 2012400:	e0fffc17 	ldw	r3,-16(fp)
 2012404:	1885883a 	add	r2,r3,r2
 2012408:	1009883a 	mov	r4,r2
 201240c:	e17ffd17 	ldw	r5,-12(fp)
 2012410:	e1bff617 	ldw	r6,-40(fp)
 2012414:	2009a000 	call	2009a00 <memcpy>
      ptr   += n;
 2012418:	e0fffd17 	ldw	r3,-12(fp)
 201241c:	e0bff617 	ldw	r2,-40(fp)
 2012420:	1885883a 	add	r2,r3,r2
 2012424:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 2012428:	e0fffe17 	ldw	r3,-8(fp)
 201242c:	e0bff617 	ldw	r2,-40(fp)
 2012430:	1885c83a 	sub	r2,r3,r2
 2012434:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 2012438:	e0fff817 	ldw	r3,-32(fp)
 201243c:	e0bff617 	ldw	r2,-40(fp)
 2012440:	1885883a 	add	r2,r3,r2
 2012444:	10c1ffcc 	andi	r3,r2,2047
 2012448:	e0bffc17 	ldw	r2,-16(fp)
 201244c:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 2012450:	e0bffe17 	ldw	r2,-8(fp)
 2012454:	00bfc716 	blt	zero,r2,2012374 <__alt_mem_epcs_flash_controller+0xfe009374>
 2012458:	00000106 	br	2012460 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 201245c:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2012460:	0005303a 	rdctl	r2,status
 2012464:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2012468:	e0fffa17 	ldw	r3,-24(fp)
 201246c:	00bfff84 	movi	r2,-2
 2012470:	1884703a 	and	r2,r3,r2
 2012474:	1001703a 	wrctl	status,r2
  
  return context;
 2012478:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 201247c:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 2012480:	e0bffc17 	ldw	r2,-16(fp)
 2012484:	10800817 	ldw	r2,32(r2)
 2012488:	10c00094 	ori	r3,r2,2
 201248c:	e0bffc17 	ldw	r2,-16(fp)
 2012490:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 2012494:	e0bffc17 	ldw	r2,-16(fp)
 2012498:	10800017 	ldw	r2,0(r2)
 201249c:	10800104 	addi	r2,r2,4
 20124a0:	e0fffc17 	ldw	r3,-16(fp)
 20124a4:	18c00817 	ldw	r3,32(r3)
 20124a8:	10c00035 	stwio	r3,0(r2)
 20124ac:	e0bff917 	ldw	r2,-28(fp)
 20124b0:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 20124b4:	e0bffb17 	ldw	r2,-20(fp)
 20124b8:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 20124bc:	e0bffe17 	ldw	r2,-8(fp)
 20124c0:	0080100e 	bge	zero,r2,2012504 <altera_avalon_jtag_uart_write+0x1c0>
    {
      if (flags & O_NONBLOCK)
 20124c4:	e0bfff17 	ldw	r2,-4(fp)
 20124c8:	1090000c 	andi	r2,r2,16384
 20124cc:	1000101e 	bne	r2,zero,2012510 <altera_avalon_jtag_uart_write+0x1cc>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 20124d0:	0001883a 	nop
 20124d4:	e0bffc17 	ldw	r2,-16(fp)
 20124d8:	10c00d17 	ldw	r3,52(r2)
 20124dc:	e0bff517 	ldw	r2,-44(fp)
 20124e0:	1880051e 	bne	r3,r2,20124f8 <altera_avalon_jtag_uart_write+0x1b4>
 20124e4:	e0bffc17 	ldw	r2,-16(fp)
 20124e8:	10c00917 	ldw	r3,36(r2)
 20124ec:	e0bffc17 	ldw	r2,-16(fp)
 20124f0:	10800117 	ldw	r2,4(r2)
 20124f4:	18bff736 	bltu	r3,r2,20124d4 <__alt_mem_epcs_flash_controller+0xfe0094d4>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 20124f8:	e0bffc17 	ldw	r2,-16(fp)
 20124fc:	10800917 	ldw	r2,36(r2)
 2012500:	1000051e 	bne	r2,zero,2012518 <altera_avalon_jtag_uart_write+0x1d4>
         break;
    }
  }
  while (count > 0);
 2012504:	e0bffe17 	ldw	r2,-8(fp)
 2012508:	00bfd116 	blt	zero,r2,2012450 <__alt_mem_epcs_flash_controller+0xfe009450>
 201250c:	00000306 	br	201251c <altera_avalon_jtag_uart_write+0x1d8>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 2012510:	0001883a 	nop
 2012514:	00000106 	br	201251c <altera_avalon_jtag_uart_write+0x1d8>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 2012518:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 201251c:	e0fffd17 	ldw	r3,-12(fp)
 2012520:	e0bff717 	ldw	r2,-36(fp)
 2012524:	18800426 	beq	r3,r2,2012538 <altera_avalon_jtag_uart_write+0x1f4>
    return ptr - start;
 2012528:	e0fffd17 	ldw	r3,-12(fp)
 201252c:	e0bff717 	ldw	r2,-36(fp)
 2012530:	1885c83a 	sub	r2,r3,r2
 2012534:	00000606 	br	2012550 <altera_avalon_jtag_uart_write+0x20c>
  else if (flags & O_NONBLOCK)
 2012538:	e0bfff17 	ldw	r2,-4(fp)
 201253c:	1090000c 	andi	r2,r2,16384
 2012540:	10000226 	beq	r2,zero,201254c <altera_avalon_jtag_uart_write+0x208>
    return -EWOULDBLOCK;
 2012544:	00bffd44 	movi	r2,-11
 2012548:	00000106 	br	2012550 <altera_avalon_jtag_uart_write+0x20c>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 201254c:	00bffec4 	movi	r2,-5
}
 2012550:	e037883a 	mov	sp,fp
 2012554:	dfc00117 	ldw	ra,4(sp)
 2012558:	df000017 	ldw	fp,0(sp)
 201255c:	dec00204 	addi	sp,sp,8
 2012560:	f800283a 	ret

02012564 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 2012564:	defffa04 	addi	sp,sp,-24
 2012568:	dfc00515 	stw	ra,20(sp)
 201256c:	df000415 	stw	fp,16(sp)
 2012570:	df000404 	addi	fp,sp,16
 2012574:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 2012578:	0007883a 	mov	r3,zero
 201257c:	e0bfff17 	ldw	r2,-4(fp)
 2012580:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 2012584:	e0bfff17 	ldw	r2,-4(fp)
 2012588:	10800104 	addi	r2,r2,4
 201258c:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2012590:	0005303a 	rdctl	r2,status
 2012594:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2012598:	e0fffd17 	ldw	r3,-12(fp)
 201259c:	00bfff84 	movi	r2,-2
 20125a0:	1884703a 	and	r2,r3,r2
 20125a4:	1001703a 	wrctl	status,r2
  
  return context;
 20125a8:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 20125ac:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
 20125b0:	2010e580 	call	2010e58 <alt_tick>
 20125b4:	e0bffc17 	ldw	r2,-16(fp)
 20125b8:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 20125bc:	e0bffe17 	ldw	r2,-8(fp)
 20125c0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 20125c4:	e037883a 	mov	sp,fp
 20125c8:	dfc00117 	ldw	ra,4(sp)
 20125cc:	df000017 	ldw	fp,0(sp)
 20125d0:	dec00204 	addi	sp,sp,8
 20125d4:	f800283a 	ret

020125d8 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 20125d8:	defff804 	addi	sp,sp,-32
 20125dc:	dfc00715 	stw	ra,28(sp)
 20125e0:	df000615 	stw	fp,24(sp)
 20125e4:	df000604 	addi	fp,sp,24
 20125e8:	e13ffc15 	stw	r4,-16(fp)
 20125ec:	e17ffd15 	stw	r5,-12(fp)
 20125f0:	e1bffe15 	stw	r6,-8(fp)
 20125f4:	e1ffff15 	stw	r7,-4(fp)
 20125f8:	e0bfff17 	ldw	r2,-4(fp)
 20125fc:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 2012600:	00808274 	movhi	r2,521
 2012604:	10ab0204 	addi	r2,r2,-21496
 2012608:	10800017 	ldw	r2,0(r2)
 201260c:	1000041e 	bne	r2,zero,2012620 <alt_avalon_timer_sc_init+0x48>
  {
    _alt_tick_rate = nticks;
 2012610:	00808274 	movhi	r2,521
 2012614:	10ab0204 	addi	r2,r2,-21496
 2012618:	e0fffb17 	ldw	r3,-20(fp)
 201261c:	10c00015 	stw	r3,0(r2)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 2012620:	e0bffc17 	ldw	r2,-16(fp)
 2012624:	10800104 	addi	r2,r2,4
 2012628:	00c001c4 	movi	r3,7
 201262c:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 2012630:	d8000015 	stw	zero,0(sp)
 2012634:	e13ffd17 	ldw	r4,-12(fp)
 2012638:	e17ffe17 	ldw	r5,-8(fp)
 201263c:	01808074 	movhi	r6,513
 2012640:	31895904 	addi	r6,r6,9572
 2012644:	e1fffc17 	ldw	r7,-16(fp)
 2012648:	2012f1c0 	call	2012f1c <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 201264c:	e037883a 	mov	sp,fp
 2012650:	dfc00117 	ldw	ra,4(sp)
 2012654:	df000017 	ldw	fp,0(sp)
 2012658:	dec00204 	addi	sp,sp,8
 201265c:	f800283a 	ret

02012660 <epcs_read_status_register>:
#include "alt_types.h"
#include "epcs_commands.h"
#include "altera_avalon_spi.h"

alt_u8 epcs_read_status_register(alt_u32 base)
{
 2012660:	defff904 	addi	sp,sp,-28
 2012664:	dfc00615 	stw	ra,24(sp)
 2012668:	df000515 	stw	fp,20(sp)
 201266c:	df000504 	addi	fp,sp,20
 2012670:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 rdsr = epcs_rdsr;
 2012674:	00800144 	movi	r2,5
 2012678:	e0bffe05 	stb	r2,-8(fp)
  alt_u8 status;
  alt_avalon_spi_command(
 201267c:	00800044 	movi	r2,1
 2012680:	d8800015 	stw	r2,0(sp)
 2012684:	e0bffe44 	addi	r2,fp,-7
 2012688:	d8800115 	stw	r2,4(sp)
 201268c:	d8000215 	stw	zero,8(sp)
 2012690:	e13fff17 	ldw	r4,-4(fp)
 2012694:	000b883a 	mov	r5,zero
 2012698:	01800044 	movi	r6,1
 201269c:	e1fffe04 	addi	r7,fp,-8
 20126a0:	20135f40 	call	20135f4 <alt_avalon_spi_command>
    1,
    &status,
    0
  );

  return status;
 20126a4:	e0bffe43 	ldbu	r2,-7(fp)
}
 20126a8:	e037883a 	mov	sp,fp
 20126ac:	dfc00117 	ldw	ra,4(sp)
 20126b0:	df000017 	ldw	fp,0(sp)
 20126b4:	dec00204 	addi	sp,sp,8
 20126b8:	f800283a 	ret

020126bc <epcs_test_wip>:

static ALT_INLINE int epcs_test_wip(alt_u32 base)
{
 20126bc:	defffd04 	addi	sp,sp,-12
 20126c0:	dfc00215 	stw	ra,8(sp)
 20126c4:	df000115 	stw	fp,4(sp)
 20126c8:	df000104 	addi	fp,sp,4
 20126cc:	e13fff15 	stw	r4,-4(fp)
  return epcs_read_status_register(base) & 1;
 20126d0:	e13fff17 	ldw	r4,-4(fp)
 20126d4:	20126600 	call	2012660 <epcs_read_status_register>
 20126d8:	10803fcc 	andi	r2,r2,255
 20126dc:	1080004c 	andi	r2,r2,1
}
 20126e0:	e037883a 	mov	sp,fp
 20126e4:	dfc00117 	ldw	ra,4(sp)
 20126e8:	df000017 	ldw	fp,0(sp)
 20126ec:	dec00204 	addi	sp,sp,8
 20126f0:	f800283a 	ret

020126f4 <epcs_await_wip_released>:

static ALT_INLINE void epcs_await_wip_released(alt_u32 base)
{
 20126f4:	defffd04 	addi	sp,sp,-12
 20126f8:	dfc00215 	stw	ra,8(sp)
 20126fc:	df000115 	stw	fp,4(sp)
 2012700:	df000104 	addi	fp,sp,4
 2012704:	e13fff15 	stw	r4,-4(fp)
  /* Wait until the WIP bit goes low. */
  while (epcs_test_wip(base))
 2012708:	0001883a 	nop
 201270c:	e13fff17 	ldw	r4,-4(fp)
 2012710:	20126bc0 	call	20126bc <epcs_test_wip>
 2012714:	103ffd1e 	bne	r2,zero,201270c <__alt_mem_epcs_flash_controller+0xfe00970c>
  {
  }
}
 2012718:	e037883a 	mov	sp,fp
 201271c:	dfc00117 	ldw	ra,4(sp)
 2012720:	df000017 	ldw	fp,0(sp)
 2012724:	dec00204 	addi	sp,sp,8
 2012728:	f800283a 	ret

0201272c <epcs_sector_erase>:

void epcs_sector_erase(alt_u32 base, alt_u32 offset, alt_u32 four_bytes_mode)
{
 201272c:	defff604 	addi	sp,sp,-40
 2012730:	dfc00915 	stw	ra,36(sp)
 2012734:	df000815 	stw	fp,32(sp)
 2012738:	df000804 	addi	fp,sp,32
 201273c:	e13ffd15 	stw	r4,-12(fp)
 2012740:	e17ffe15 	stw	r5,-8(fp)
 2012744:	e1bfff15 	stw	r6,-4(fp)
  alt_u8 se[5];
  alt_u8 len;
  
  if(four_bytes_mode)
 2012748:	e0bfff17 	ldw	r2,-4(fp)
 201274c:	10001226 	beq	r2,zero,2012798 <epcs_sector_erase+0x6c>
  {
      se[0] = epcs_se;  /* Note: Use epcs_se for Micron EPCS256 */
 2012750:	00bff604 	movi	r2,-40
 2012754:	e0bffb45 	stb	r2,-19(fp)
      se[1] = (offset >> 24) & 0xFF;
 2012758:	e0bffe17 	ldw	r2,-8(fp)
 201275c:	1004d63a 	srli	r2,r2,24
 2012760:	e0bffb85 	stb	r2,-18(fp)
      se[2] = (offset >> 16) & 0xFF;
 2012764:	e0bffe17 	ldw	r2,-8(fp)
 2012768:	1004d43a 	srli	r2,r2,16
 201276c:	e0bffbc5 	stb	r2,-17(fp)
      se[3] = (offset >> 8) & 0xFF;
 2012770:	e0bffe17 	ldw	r2,-8(fp)
 2012774:	1004d23a 	srli	r2,r2,8
 2012778:	e0bffc05 	stb	r2,-16(fp)
      se[4] = offset & 0xFF;
 201277c:	e0bffe17 	ldw	r2,-8(fp)
 2012780:	e0bffc45 	stb	r2,-15(fp)
      len   = 5;
 2012784:	00800144 	movi	r2,5
 2012788:	e0bffb05 	stb	r2,-20(fp)
      epcs_enter_4_bytes_mode(base);
 201278c:	e13ffd17 	ldw	r4,-12(fp)
 2012790:	2012bd40 	call	2012bd4 <epcs_enter_4_bytes_mode>
 2012794:	00000c06 	br	20127c8 <epcs_sector_erase+0x9c>
  }
  else
  {
      se[0] = epcs_se;
 2012798:	00bff604 	movi	r2,-40
 201279c:	e0bffb45 	stb	r2,-19(fp)
      se[1] = (offset >> 16) & 0xFF;
 20127a0:	e0bffe17 	ldw	r2,-8(fp)
 20127a4:	1004d43a 	srli	r2,r2,16
 20127a8:	e0bffb85 	stb	r2,-18(fp)
      se[2] = (offset >> 8) & 0xFF;
 20127ac:	e0bffe17 	ldw	r2,-8(fp)
 20127b0:	1004d23a 	srli	r2,r2,8
 20127b4:	e0bffbc5 	stb	r2,-17(fp)
      se[3] = offset & 0xFF;
 20127b8:	e0bffe17 	ldw	r2,-8(fp)
 20127bc:	e0bffc05 	stb	r2,-16(fp)
      len   = 4;
 20127c0:	00800104 	movi	r2,4
 20127c4:	e0bffb05 	stb	r2,-20(fp)
  }

  /* Execute a WREN instruction */
  epcs_write_enable(base);
 20127c8:	e13ffd17 	ldw	r4,-12(fp)
 20127cc:	20129180 	call	2012918 <epcs_write_enable>

  alt_avalon_spi_command(
 20127d0:	e0fffb03 	ldbu	r3,-20(fp)
    base,
    0,
    len,
    se,
 20127d4:	e0bffb44 	addi	r2,fp,-19
  }

  /* Execute a WREN instruction */
  epcs_write_enable(base);

  alt_avalon_spi_command(
 20127d8:	d8000015 	stw	zero,0(sp)
 20127dc:	d8000115 	stw	zero,4(sp)
 20127e0:	d8000215 	stw	zero,8(sp)
 20127e4:	e13ffd17 	ldw	r4,-12(fp)
 20127e8:	000b883a 	mov	r5,zero
 20127ec:	180d883a 	mov	r6,r3
 20127f0:	100f883a 	mov	r7,r2
 20127f4:	20135f40 	call	20135f4 <alt_avalon_spi_command>
    0,
    (alt_u8*)0,
    0
  );

  epcs_await_wip_released(base);
 20127f8:	e13ffd17 	ldw	r4,-12(fp)
 20127fc:	20126f40 	call	20126f4 <epcs_await_wip_released>

  if(four_bytes_mode)
 2012800:	e0bfff17 	ldw	r2,-4(fp)
 2012804:	10000226 	beq	r2,zero,2012810 <epcs_sector_erase+0xe4>
  {
    epcs_exit_4_bytes_mode(base);
 2012808:	e13ffd17 	ldw	r4,-12(fp)
 201280c:	2012c2c0 	call	2012c2c <epcs_exit_4_bytes_mode>
  }
}
 2012810:	e037883a 	mov	sp,fp
 2012814:	dfc00117 	ldw	ra,4(sp)
 2012818:	df000017 	ldw	fp,0(sp)
 201281c:	dec00204 	addi	sp,sp,8
 2012820:	f800283a 	ret

02012824 <epcs_read_buffer>:

alt_32 epcs_read_buffer(alt_u32 base, int offset, alt_u8 *dest_addr, int length,
                        alt_u32 four_bytes_mode)
{
 2012824:	defff404 	addi	sp,sp,-48
 2012828:	dfc00b15 	stw	ra,44(sp)
 201282c:	df000a15 	stw	fp,40(sp)
 2012830:	df000a04 	addi	fp,sp,40
 2012834:	e13ffc15 	stw	r4,-16(fp)
 2012838:	e17ffd15 	stw	r5,-12(fp)
 201283c:	e1bffe15 	stw	r6,-8(fp)
 2012840:	e1ffff15 	stw	r7,-4(fp)
  alt_u8 read_command[5];
  alt_u32 cmd_len;

  read_command[0] = epcs_read;
 2012844:	008000c4 	movi	r2,3
 2012848:	e0bffa05 	stb	r2,-24(fp)
  
  if(four_bytes_mode)
 201284c:	e0800217 	ldw	r2,8(fp)
 2012850:	10001026 	beq	r2,zero,2012894 <epcs_read_buffer+0x70>
  {
        read_command[1] = (offset >> 24) & 0xFF;
 2012854:	e0bffd17 	ldw	r2,-12(fp)
 2012858:	1004d63a 	srli	r2,r2,24
 201285c:	e0bffa45 	stb	r2,-23(fp)
        read_command[2] = (offset >> 16) & 0xFF;
 2012860:	e0bffd17 	ldw	r2,-12(fp)
 2012864:	1005d43a 	srai	r2,r2,16
 2012868:	e0bffa85 	stb	r2,-22(fp)
        read_command[3] = (offset >> 8) & 0xFF;
 201286c:	e0bffd17 	ldw	r2,-12(fp)
 2012870:	1005d23a 	srai	r2,r2,8
 2012874:	e0bffac5 	stb	r2,-21(fp)
        read_command[4] = offset & 0xFF;
 2012878:	e0bffd17 	ldw	r2,-12(fp)
 201287c:	e0bffb05 	stb	r2,-20(fp)
        cmd_len = 5;
 2012880:	00800144 	movi	r2,5
 2012884:	e0bff915 	stw	r2,-28(fp)
        epcs_enter_4_bytes_mode(base);
 2012888:	e13ffc17 	ldw	r4,-16(fp)
 201288c:	2012bd40 	call	2012bd4 <epcs_enter_4_bytes_mode>
 2012890:	00000a06 	br	20128bc <epcs_read_buffer+0x98>
  }
  else
  {
        read_command[1] = (offset >> 16) & 0xFF;
 2012894:	e0bffd17 	ldw	r2,-12(fp)
 2012898:	1005d43a 	srai	r2,r2,16
 201289c:	e0bffa45 	stb	r2,-23(fp)
        read_command[2] = (offset >> 8) & 0xFF;
 20128a0:	e0bffd17 	ldw	r2,-12(fp)
 20128a4:	1005d23a 	srai	r2,r2,8
 20128a8:	e0bffa85 	stb	r2,-22(fp)
        read_command[3] = offset & 0xFF;
 20128ac:	e0bffd17 	ldw	r2,-12(fp)
 20128b0:	e0bffac5 	stb	r2,-21(fp)
        cmd_len = 4;
 20128b4:	00800104 	movi	r2,4
 20128b8:	e0bff915 	stw	r2,-28(fp)
  }

  epcs_await_wip_released(base);
 20128bc:	e13ffc17 	ldw	r4,-16(fp)
 20128c0:	20126f40 	call	20126f4 <epcs_await_wip_released>

  alt_avalon_spi_command(
 20128c4:	e0ffff17 	ldw	r3,-4(fp)
    base,
    0,
    cmd_len,
    read_command,
 20128c8:	e0bffa04 	addi	r2,fp,-24
        cmd_len = 4;
  }

  epcs_await_wip_released(base);

  alt_avalon_spi_command(
 20128cc:	d8c00015 	stw	r3,0(sp)
 20128d0:	e0fffe17 	ldw	r3,-8(fp)
 20128d4:	d8c00115 	stw	r3,4(sp)
 20128d8:	d8000215 	stw	zero,8(sp)
 20128dc:	e13ffc17 	ldw	r4,-16(fp)
 20128e0:	000b883a 	mov	r5,zero
 20128e4:	e1bff917 	ldw	r6,-28(fp)
 20128e8:	100f883a 	mov	r7,r2
 20128ec:	20135f40 	call	20135f4 <alt_avalon_spi_command>
    length,
    (alt_u8*)dest_addr,
    0
  );

  if(four_bytes_mode)
 20128f0:	e0800217 	ldw	r2,8(fp)
 20128f4:	10000226 	beq	r2,zero,2012900 <epcs_read_buffer+0xdc>
  {
    epcs_exit_4_bytes_mode(base);
 20128f8:	e13ffc17 	ldw	r4,-16(fp)
 20128fc:	2012c2c0 	call	2012c2c <epcs_exit_4_bytes_mode>
  }

  return length;
 2012900:	e0bfff17 	ldw	r2,-4(fp)
}
 2012904:	e037883a 	mov	sp,fp
 2012908:	dfc00117 	ldw	ra,4(sp)
 201290c:	df000017 	ldw	fp,0(sp)
 2012910:	dec00204 	addi	sp,sp,8
 2012914:	f800283a 	ret

02012918 <epcs_write_enable>:

void epcs_write_enable(alt_u32 base)
{
 2012918:	defff904 	addi	sp,sp,-28
 201291c:	dfc00615 	stw	ra,24(sp)
 2012920:	df000515 	stw	fp,20(sp)
 2012924:	df000504 	addi	fp,sp,20
 2012928:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 wren = epcs_wren;
 201292c:	00800184 	movi	r2,6
 2012930:	e0bffe05 	stb	r2,-8(fp)
  alt_avalon_spi_command(
 2012934:	d8000015 	stw	zero,0(sp)
 2012938:	d8000115 	stw	zero,4(sp)
 201293c:	d8000215 	stw	zero,8(sp)
 2012940:	e13fff17 	ldw	r4,-4(fp)
 2012944:	000b883a 	mov	r5,zero
 2012948:	01800044 	movi	r6,1
 201294c:	e1fffe04 	addi	r7,fp,-8
 2012950:	20135f40 	call	20135f4 <alt_avalon_spi_command>
    &wren,
    0,
    (alt_u8*)0,
    0
  );
}
 2012954:	e037883a 	mov	sp,fp
 2012958:	dfc00117 	ldw	ra,4(sp)
 201295c:	df000017 	ldw	fp,0(sp)
 2012960:	dec00204 	addi	sp,sp,8
 2012964:	f800283a 	ret

02012968 <epcs_write_status_register>:

void epcs_write_status_register(alt_u32 base, alt_u8 value)
{
 2012968:	defff804 	addi	sp,sp,-32
 201296c:	dfc00715 	stw	ra,28(sp)
 2012970:	df000615 	stw	fp,24(sp)
 2012974:	df000604 	addi	fp,sp,24
 2012978:	e13ffe15 	stw	r4,-8(fp)
 201297c:	2805883a 	mov	r2,r5
 2012980:	e0bfff05 	stb	r2,-4(fp)
  alt_u8 wrsr[2];
  
  wrsr[0] = epcs_wrsr;
 2012984:	00800044 	movi	r2,1
 2012988:	e0bffd05 	stb	r2,-12(fp)
  wrsr[1] = value;
 201298c:	e0bfff03 	ldbu	r2,-4(fp)
 2012990:	e0bffd45 	stb	r2,-11(fp)

  alt_avalon_spi_command(
 2012994:	d8000015 	stw	zero,0(sp)
 2012998:	d8000115 	stw	zero,4(sp)
 201299c:	d8000215 	stw	zero,8(sp)
 20129a0:	e13ffe17 	ldw	r4,-8(fp)
 20129a4:	000b883a 	mov	r5,zero
 20129a8:	01800084 	movi	r6,2
 20129ac:	e1fffd04 	addi	r7,fp,-12
 20129b0:	20135f40 	call	20135f4 <alt_avalon_spi_command>
    0,
    (alt_u8*)0,
    0
  );

  epcs_await_wip_released(base);
 20129b4:	e13ffe17 	ldw	r4,-8(fp)
 20129b8:	20126f40 	call	20126f4 <epcs_await_wip_released>
}
 20129bc:	e037883a 	mov	sp,fp
 20129c0:	dfc00117 	ldw	ra,4(sp)
 20129c4:	df000017 	ldw	fp,0(sp)
 20129c8:	dec00204 	addi	sp,sp,8
 20129cc:	f800283a 	ret

020129d0 <epcs_write_buffer>:

/* Write a partial or full page, assuming that page has been erased */
alt_32 epcs_write_buffer(alt_u32 base, int offset, const alt_u8* src_addr, 
                         int length, alt_u32 four_bytes_mode)
{
 20129d0:	defff404 	addi	sp,sp,-48
 20129d4:	dfc00b15 	stw	ra,44(sp)
 20129d8:	df000a15 	stw	fp,40(sp)
 20129dc:	df000a04 	addi	fp,sp,40
 20129e0:	e13ffc15 	stw	r4,-16(fp)
 20129e4:	e17ffd15 	stw	r5,-12(fp)
 20129e8:	e1bffe15 	stw	r6,-8(fp)
 20129ec:	e1ffff15 	stw	r7,-4(fp)
  alt_u8 pp[5];
  alt_u32 cmd_len;
  
  pp[0] = epcs_pp;
 20129f0:	00800084 	movi	r2,2
 20129f4:	e0bffa05 	stb	r2,-24(fp)
  
  if(four_bytes_mode)
 20129f8:	e0800217 	ldw	r2,8(fp)
 20129fc:	10001026 	beq	r2,zero,2012a40 <epcs_write_buffer+0x70>
  {
      pp[1] = (offset >> 24) & 0xFF;
 2012a00:	e0bffd17 	ldw	r2,-12(fp)
 2012a04:	1004d63a 	srli	r2,r2,24
 2012a08:	e0bffa45 	stb	r2,-23(fp)
      pp[2] = (offset >> 16) & 0xFF;
 2012a0c:	e0bffd17 	ldw	r2,-12(fp)
 2012a10:	1005d43a 	srai	r2,r2,16
 2012a14:	e0bffa85 	stb	r2,-22(fp)
      pp[3] = (offset >> 8) & 0xFF;
 2012a18:	e0bffd17 	ldw	r2,-12(fp)
 2012a1c:	1005d23a 	srai	r2,r2,8
 2012a20:	e0bffac5 	stb	r2,-21(fp)
      pp[4] = offset & 0xFF;
 2012a24:	e0bffd17 	ldw	r2,-12(fp)
 2012a28:	e0bffb05 	stb	r2,-20(fp)
      cmd_len = 5;
 2012a2c:	00800144 	movi	r2,5
 2012a30:	e0bff915 	stw	r2,-28(fp)
      epcs_enter_4_bytes_mode(base);
 2012a34:	e13ffc17 	ldw	r4,-16(fp)
 2012a38:	2012bd40 	call	2012bd4 <epcs_enter_4_bytes_mode>
 2012a3c:	00000a06 	br	2012a68 <epcs_write_buffer+0x98>
  }
  else
  {
      pp[1] = (offset >> 16) & 0xFF;
 2012a40:	e0bffd17 	ldw	r2,-12(fp)
 2012a44:	1005d43a 	srai	r2,r2,16
 2012a48:	e0bffa45 	stb	r2,-23(fp)
      pp[2] = (offset >> 8) & 0xFF;
 2012a4c:	e0bffd17 	ldw	r2,-12(fp)
 2012a50:	1005d23a 	srai	r2,r2,8
 2012a54:	e0bffa85 	stb	r2,-22(fp)
      pp[3] = offset & 0xFF;
 2012a58:	e0bffd17 	ldw	r2,-12(fp)
 2012a5c:	e0bffac5 	stb	r2,-21(fp)
      cmd_len = 4;
 2012a60:	00800104 	movi	r2,4
 2012a64:	e0bff915 	stw	r2,-28(fp)
  }

  /* First, WREN */
  epcs_write_enable(base);
 2012a68:	e13ffc17 	ldw	r4,-16(fp)
 2012a6c:	20129180 	call	2012918 <epcs_write_enable>
  /* Send the PP command */
  alt_avalon_spi_command(
    base,
    0,
    cmd_len,
    pp,
 2012a70:	e0bffa04 	addi	r2,fp,-24

  /* First, WREN */
  epcs_write_enable(base);

  /* Send the PP command */
  alt_avalon_spi_command(
 2012a74:	d8000015 	stw	zero,0(sp)
 2012a78:	d8000115 	stw	zero,4(sp)
 2012a7c:	00c00044 	movi	r3,1
 2012a80:	d8c00215 	stw	r3,8(sp)
 2012a84:	e13ffc17 	ldw	r4,-16(fp)
 2012a88:	000b883a 	mov	r5,zero
 2012a8c:	e1bff917 	ldw	r6,-28(fp)
 2012a90:	100f883a 	mov	r7,r2
 2012a94:	20135f40 	call	20135f4 <alt_avalon_spi_command>
    (alt_u8*)0,
    ALT_AVALON_SPI_COMMAND_MERGE
  );

  /* Send the user's buffer */
  alt_avalon_spi_command(
 2012a98:	e0bfff17 	ldw	r2,-4(fp)
 2012a9c:	d8000015 	stw	zero,0(sp)
 2012aa0:	d8000115 	stw	zero,4(sp)
 2012aa4:	d8000215 	stw	zero,8(sp)
 2012aa8:	e13ffc17 	ldw	r4,-16(fp)
 2012aac:	000b883a 	mov	r5,zero
 2012ab0:	100d883a 	mov	r6,r2
 2012ab4:	e1fffe17 	ldw	r7,-8(fp)
 2012ab8:	20135f40 	call	20135f4 <alt_avalon_spi_command>
   * if the user's going to go off and ignore the flash for
   * a while, its writes could occur in parallel with user code
   * execution.  Unfortunately, I have to guard all reads/writes
   * with wip-tests, to make that happen.
   */
  epcs_await_wip_released(base);
 2012abc:	e13ffc17 	ldw	r4,-16(fp)
 2012ac0:	20126f40 	call	20126f4 <epcs_await_wip_released>

  if(four_bytes_mode)
 2012ac4:	e0800217 	ldw	r2,8(fp)
 2012ac8:	10000226 	beq	r2,zero,2012ad4 <epcs_write_buffer+0x104>
  {
    epcs_exit_4_bytes_mode(base);
 2012acc:	e13ffc17 	ldw	r4,-16(fp)
 2012ad0:	2012c2c0 	call	2012c2c <epcs_exit_4_bytes_mode>
  }

  return length;
 2012ad4:	e0bfff17 	ldw	r2,-4(fp)
}
 2012ad8:	e037883a 	mov	sp,fp
 2012adc:	dfc00117 	ldw	ra,4(sp)
 2012ae0:	df000017 	ldw	fp,0(sp)
 2012ae4:	dec00204 	addi	sp,sp,8
 2012ae8:	f800283a 	ret

02012aec <epcs_read_electronic_signature>:


alt_u8 epcs_read_electronic_signature(alt_u32 base)
{
 2012aec:	defff804 	addi	sp,sp,-32
 2012af0:	dfc00715 	stw	ra,28(sp)
 2012af4:	df000615 	stw	fp,24(sp)
 2012af8:	df000604 	addi	fp,sp,24
 2012afc:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 res_cmd[] = {epcs_res, 0, 0, 0};
 2012b00:	00bfeac4 	movi	r2,-85
 2012b04:	e0bffd05 	stb	r2,-12(fp)
 2012b08:	e03ffd45 	stb	zero,-11(fp)
 2012b0c:	e03ffd85 	stb	zero,-10(fp)
 2012b10:	e03ffdc5 	stb	zero,-9(fp)
  alt_u8 res;

  alt_avalon_spi_command(
 2012b14:	00800044 	movi	r2,1
 2012b18:	d8800015 	stw	r2,0(sp)
 2012b1c:	e0bffe04 	addi	r2,fp,-8
 2012b20:	d8800115 	stw	r2,4(sp)
 2012b24:	d8000215 	stw	zero,8(sp)
 2012b28:	e13fff17 	ldw	r4,-4(fp)
 2012b2c:	000b883a 	mov	r5,zero
 2012b30:	01800104 	movi	r6,4
 2012b34:	e1fffd04 	addi	r7,fp,-12
 2012b38:	20135f40 	call	20135f4 <alt_avalon_spi_command>
    1,
    &res,
    0
  );

  return res;
 2012b3c:	e0bffe03 	ldbu	r2,-8(fp)
}
 2012b40:	e037883a 	mov	sp,fp
 2012b44:	dfc00117 	ldw	ra,4(sp)
 2012b48:	df000017 	ldw	fp,0(sp)
 2012b4c:	dec00204 	addi	sp,sp,8
 2012b50:	f800283a 	ret

02012b54 <epcs_read_device_id>:

alt_u32 epcs_read_device_id(alt_u32 base)
{
 2012b54:	defff904 	addi	sp,sp,-28
 2012b58:	dfc00615 	stw	ra,24(sp)
 2012b5c:	df000515 	stw	fp,20(sp)
 2012b60:	df000504 	addi	fp,sp,20
 2012b64:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 rd_id_cmd[] = {epcs_rdid};
 2012b68:	00bfe7c4 	movi	r2,-97
 2012b6c:	e0bffe05 	stb	r2,-8(fp)
  alt_u8 id[3];

  alt_avalon_spi_command(
 2012b70:	008000c4 	movi	r2,3
 2012b74:	d8800015 	stw	r2,0(sp)
    base,
    0,
    sizeof(rd_id_cmd) / sizeof(*rd_id_cmd),
    rd_id_cmd,
    3,
    id,
 2012b78:	e0bffe44 	addi	r2,fp,-7
alt_u32 epcs_read_device_id(alt_u32 base)
{
  const alt_u8 rd_id_cmd[] = {epcs_rdid};
  alt_u8 id[3];

  alt_avalon_spi_command(
 2012b7c:	d8800115 	stw	r2,4(sp)
 2012b80:	d8000215 	stw	zero,8(sp)
 2012b84:	e13fff17 	ldw	r4,-4(fp)
 2012b88:	000b883a 	mov	r5,zero
 2012b8c:	01800044 	movi	r6,1
 2012b90:	e1fffe04 	addi	r7,fp,-8
 2012b94:	20135f40 	call	20135f4 <alt_avalon_spi_command>
    3,
    id,
    0
  );

  return (alt_u32) ((id[0] << 16) | (id[1] << 8) | id[2]);
 2012b98:	e0bffe43 	ldbu	r2,-7(fp)
 2012b9c:	10803fcc 	andi	r2,r2,255
 2012ba0:	1006943a 	slli	r3,r2,16
 2012ba4:	e0bffe83 	ldbu	r2,-6(fp)
 2012ba8:	10803fcc 	andi	r2,r2,255
 2012bac:	1004923a 	slli	r2,r2,8
 2012bb0:	1886b03a 	or	r3,r3,r2
 2012bb4:	e0bffec3 	ldbu	r2,-5(fp)
 2012bb8:	10803fcc 	andi	r2,r2,255
 2012bbc:	1884b03a 	or	r2,r3,r2
}
 2012bc0:	e037883a 	mov	sp,fp
 2012bc4:	dfc00117 	ldw	ra,4(sp)
 2012bc8:	df000017 	ldw	fp,0(sp)
 2012bcc:	dec00204 	addi	sp,sp,8
 2012bd0:	f800283a 	ret

02012bd4 <epcs_enter_4_bytes_mode>:

void epcs_enter_4_bytes_mode(alt_u32 base)
{
 2012bd4:	defff904 	addi	sp,sp,-28
 2012bd8:	dfc00615 	stw	ra,24(sp)
 2012bdc:	df000515 	stw	fp,20(sp)
 2012be0:	df000504 	addi	fp,sp,20
 2012be4:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 en4b_cmd = epcs_en4b;
 2012be8:	00bfedc4 	movi	r2,-73
 2012bec:	e0bffe05 	stb	r2,-8(fp)

  /* First, WREN */
  epcs_write_enable(base);
 2012bf0:	e13fff17 	ldw	r4,-4(fp)
 2012bf4:	20129180 	call	2012918 <epcs_write_enable>

  alt_avalon_spi_command(
 2012bf8:	d8000015 	stw	zero,0(sp)
 2012bfc:	d8000115 	stw	zero,4(sp)
 2012c00:	d8000215 	stw	zero,8(sp)
 2012c04:	e13fff17 	ldw	r4,-4(fp)
 2012c08:	000b883a 	mov	r5,zero
 2012c0c:	01800044 	movi	r6,1
 2012c10:	e1fffe04 	addi	r7,fp,-8
 2012c14:	20135f40 	call	20135f4 <alt_avalon_spi_command>
    (alt_u8*)0,
    0
  );

  return;
}
 2012c18:	e037883a 	mov	sp,fp
 2012c1c:	dfc00117 	ldw	ra,4(sp)
 2012c20:	df000017 	ldw	fp,0(sp)
 2012c24:	dec00204 	addi	sp,sp,8
 2012c28:	f800283a 	ret

02012c2c <epcs_exit_4_bytes_mode>:

void epcs_exit_4_bytes_mode(alt_u32 base)
{
 2012c2c:	defff904 	addi	sp,sp,-28
 2012c30:	dfc00615 	stw	ra,24(sp)
 2012c34:	df000515 	stw	fp,20(sp)
 2012c38:	df000504 	addi	fp,sp,20
 2012c3c:	e13fff15 	stw	r4,-4(fp)
  const alt_u8 exit4b_cmd = epcs_dis4b;
 2012c40:	00bffa44 	movi	r2,-23
 2012c44:	e0bffe05 	stb	r2,-8(fp)

  /* First, WREN */
  epcs_write_enable(base);
 2012c48:	e13fff17 	ldw	r4,-4(fp)
 2012c4c:	20129180 	call	2012918 <epcs_write_enable>

  alt_avalon_spi_command(
 2012c50:	d8000015 	stw	zero,0(sp)
 2012c54:	d8000115 	stw	zero,4(sp)
 2012c58:	d8000215 	stw	zero,8(sp)
 2012c5c:	e13fff17 	ldw	r4,-4(fp)
 2012c60:	000b883a 	mov	r5,zero
 2012c64:	01800044 	movi	r6,1
 2012c68:	e1fffe04 	addi	r7,fp,-8
 2012c6c:	20135f40 	call	20135f4 <alt_avalon_spi_command>
    (alt_u8*)0,
    0
  );

  return;
}
 2012c70:	e037883a 	mov	sp,fp
 2012c74:	dfc00117 	ldw	ra,4(sp)
 2012c78:	df000017 	ldw	fp,0(sp)
 2012c7c:	dec00204 	addi	sp,sp,8
 2012c80:	f800283a 	ret

02012c84 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 2012c84:	deffff04 	addi	sp,sp,-4
 2012c88:	df000015 	stw	fp,0(sp)
 2012c8c:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 2012c90:	e037883a 	mov	sp,fp
 2012c94:	df000017 	ldw	fp,0(sp)
 2012c98:	dec00104 	addi	sp,sp,4
 2012c9c:	f800283a 	ret

02012ca0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 2012ca0:	defffe04 	addi	sp,sp,-8
 2012ca4:	dfc00115 	stw	ra,4(sp)
 2012ca8:	df000015 	stw	fp,0(sp)
 2012cac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 2012cb0:	00808274 	movhi	r2,521
 2012cb4:	10a3c104 	addi	r2,r2,-28924
 2012cb8:	10800017 	ldw	r2,0(r2)
 2012cbc:	10000526 	beq	r2,zero,2012cd4 <alt_get_errno+0x34>
 2012cc0:	00808274 	movhi	r2,521
 2012cc4:	10a3c104 	addi	r2,r2,-28924
 2012cc8:	10800017 	ldw	r2,0(r2)
 2012ccc:	103ee83a 	callr	r2
 2012cd0:	00000206 	br	2012cdc <alt_get_errno+0x3c>
 2012cd4:	00808274 	movhi	r2,521
 2012cd8:	10aafb04 	addi	r2,r2,-21524
}
 2012cdc:	e037883a 	mov	sp,fp
 2012ce0:	dfc00117 	ldw	ra,4(sp)
 2012ce4:	df000017 	ldw	fp,0(sp)
 2012ce8:	dec00204 	addi	sp,sp,8
 2012cec:	f800283a 	ret

02012cf0 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 2012cf0:	defffa04 	addi	sp,sp,-24
 2012cf4:	dfc00515 	stw	ra,20(sp)
 2012cf8:	df000415 	stw	fp,16(sp)
 2012cfc:	df000404 	addi	fp,sp,16
 2012d00:	e13ffe15 	stw	r4,-8(fp)
 2012d04:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 2012d08:	e0bffe17 	ldw	r2,-8(fp)
 2012d0c:	10000326 	beq	r2,zero,2012d1c <alt_dev_llist_insert+0x2c>
 2012d10:	e0bffe17 	ldw	r2,-8(fp)
 2012d14:	10800217 	ldw	r2,8(r2)
 2012d18:	1000051e 	bne	r2,zero,2012d30 <alt_dev_llist_insert+0x40>
  {
    ALT_ERRNO = EINVAL;
 2012d1c:	2012ca00 	call	2012ca0 <alt_get_errno>
 2012d20:	00c00584 	movi	r3,22
 2012d24:	10c00015 	stw	r3,0(r2)
    return -EINVAL;
 2012d28:	00bffa84 	movi	r2,-22
 2012d2c:	00001306 	br	2012d7c <alt_dev_llist_insert+0x8c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 2012d30:	e0bffe17 	ldw	r2,-8(fp)
 2012d34:	e0ffff17 	ldw	r3,-4(fp)
 2012d38:	e0fffc15 	stw	r3,-16(fp)
 2012d3c:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 2012d40:	e0bffd17 	ldw	r2,-12(fp)
 2012d44:	e0fffc17 	ldw	r3,-16(fp)
 2012d48:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 2012d4c:	e0bffc17 	ldw	r2,-16(fp)
 2012d50:	10c00017 	ldw	r3,0(r2)
 2012d54:	e0bffd17 	ldw	r2,-12(fp)
 2012d58:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 2012d5c:	e0bffc17 	ldw	r2,-16(fp)
 2012d60:	10800017 	ldw	r2,0(r2)
 2012d64:	e0fffd17 	ldw	r3,-12(fp)
 2012d68:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 2012d6c:	e0bffc17 	ldw	r2,-16(fp)
 2012d70:	e0fffd17 	ldw	r3,-12(fp)
 2012d74:	10c00015 	stw	r3,0(r2)

  return 0;  
 2012d78:	0005883a 	mov	r2,zero
}
 2012d7c:	e037883a 	mov	sp,fp
 2012d80:	dfc00117 	ldw	ra,4(sp)
 2012d84:	df000017 	ldw	fp,0(sp)
 2012d88:	dec00204 	addi	sp,sp,8
 2012d8c:	f800283a 	ret

02012d90 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 2012d90:	defffd04 	addi	sp,sp,-12
 2012d94:	dfc00215 	stw	ra,8(sp)
 2012d98:	df000115 	stw	fp,4(sp)
 2012d9c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 2012da0:	00808074 	movhi	r2,513
 2012da4:	108f9104 	addi	r2,r2,15940
 2012da8:	e0bfff15 	stw	r2,-4(fp)
 2012dac:	00000606 	br	2012dc8 <_do_ctors+0x38>
        (*ctor) (); 
 2012db0:	e0bfff17 	ldw	r2,-4(fp)
 2012db4:	10800017 	ldw	r2,0(r2)
 2012db8:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 2012dbc:	e0bfff17 	ldw	r2,-4(fp)
 2012dc0:	10bfff04 	addi	r2,r2,-4
 2012dc4:	e0bfff15 	stw	r2,-4(fp)
 2012dc8:	e0ffff17 	ldw	r3,-4(fp)
 2012dcc:	00808074 	movhi	r2,513
 2012dd0:	108f9204 	addi	r2,r2,15944
 2012dd4:	18bff62e 	bgeu	r3,r2,2012db0 <__alt_mem_epcs_flash_controller+0xfe009db0>
        (*ctor) (); 
}
 2012dd8:	e037883a 	mov	sp,fp
 2012ddc:	dfc00117 	ldw	ra,4(sp)
 2012de0:	df000017 	ldw	fp,0(sp)
 2012de4:	dec00204 	addi	sp,sp,8
 2012de8:	f800283a 	ret

02012dec <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 2012dec:	defffd04 	addi	sp,sp,-12
 2012df0:	dfc00215 	stw	ra,8(sp)
 2012df4:	df000115 	stw	fp,4(sp)
 2012df8:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 2012dfc:	00808074 	movhi	r2,513
 2012e00:	108f9104 	addi	r2,r2,15940
 2012e04:	e0bfff15 	stw	r2,-4(fp)
 2012e08:	00000606 	br	2012e24 <_do_dtors+0x38>
        (*dtor) (); 
 2012e0c:	e0bfff17 	ldw	r2,-4(fp)
 2012e10:	10800017 	ldw	r2,0(r2)
 2012e14:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 2012e18:	e0bfff17 	ldw	r2,-4(fp)
 2012e1c:	10bfff04 	addi	r2,r2,-4
 2012e20:	e0bfff15 	stw	r2,-4(fp)
 2012e24:	e0ffff17 	ldw	r3,-4(fp)
 2012e28:	00808074 	movhi	r2,513
 2012e2c:	108f9204 	addi	r2,r2,15944
 2012e30:	18bff62e 	bgeu	r3,r2,2012e0c <__alt_mem_epcs_flash_controller+0xfe009e0c>
        (*dtor) (); 
}
 2012e34:	e037883a 	mov	sp,fp
 2012e38:	dfc00117 	ldw	ra,4(sp)
 2012e3c:	df000017 	ldw	fp,0(sp)
 2012e40:	dec00204 	addi	sp,sp,8
 2012e44:	f800283a 	ret

02012e48 <alt_flash_open_dev>:
#include "priv/alt_file.h"

ALT_LLIST_HEAD(alt_flash_dev_list);

alt_flash_fd* alt_flash_open_dev(const char* name)
{
 2012e48:	defffc04 	addi	sp,sp,-16
 2012e4c:	dfc00315 	stw	ra,12(sp)
 2012e50:	df000215 	stw	fp,8(sp)
 2012e54:	df000204 	addi	fp,sp,8
 2012e58:	e13fff15 	stw	r4,-4(fp)
  alt_flash_dev* dev = (alt_flash_dev*)alt_find_dev(name, &alt_flash_dev_list);
 2012e5c:	e13fff17 	ldw	r4,-4(fp)
 2012e60:	d1600f04 	addi	r5,gp,-32708
 2012e64:	20137fc0 	call	20137fc <alt_find_dev>
 2012e68:	e0bffe15 	stw	r2,-8(fp)

  if ((dev) && dev->open)
 2012e6c:	e0bffe17 	ldw	r2,-8(fp)
 2012e70:	10000926 	beq	r2,zero,2012e98 <alt_flash_open_dev+0x50>
 2012e74:	e0bffe17 	ldw	r2,-8(fp)
 2012e78:	10800317 	ldw	r2,12(r2)
 2012e7c:	10000626 	beq	r2,zero,2012e98 <alt_flash_open_dev+0x50>
  {
    return dev->open(dev, name);
 2012e80:	e0bffe17 	ldw	r2,-8(fp)
 2012e84:	10800317 	ldw	r2,12(r2)
 2012e88:	e13ffe17 	ldw	r4,-8(fp)
 2012e8c:	e17fff17 	ldw	r5,-4(fp)
 2012e90:	103ee83a 	callr	r2
 2012e94:	00000106 	br	2012e9c <alt_flash_open_dev+0x54>
  }

  return dev;
 2012e98:	e0bffe17 	ldw	r2,-8(fp)
}
 2012e9c:	e037883a 	mov	sp,fp
 2012ea0:	dfc00117 	ldw	ra,4(sp)
 2012ea4:	df000017 	ldw	fp,0(sp)
 2012ea8:	dec00204 	addi	sp,sp,8
 2012eac:	f800283a 	ret

02012eb0 <alt_flash_close_dev>:

void alt_flash_close_dev(alt_flash_fd* fd)
{
 2012eb0:	defffd04 	addi	sp,sp,-12
 2012eb4:	dfc00215 	stw	ra,8(sp)
 2012eb8:	df000115 	stw	fp,4(sp)
 2012ebc:	df000104 	addi	fp,sp,4
 2012ec0:	e13fff15 	stw	r4,-4(fp)
  if (fd && fd->close)
 2012ec4:	e0bfff17 	ldw	r2,-4(fp)
 2012ec8:	10000726 	beq	r2,zero,2012ee8 <alt_flash_close_dev+0x38>
 2012ecc:	e0bfff17 	ldw	r2,-4(fp)
 2012ed0:	10800417 	ldw	r2,16(r2)
 2012ed4:	10000426 	beq	r2,zero,2012ee8 <alt_flash_close_dev+0x38>
  {
    fd->close(fd);
 2012ed8:	e0bfff17 	ldw	r2,-4(fp)
 2012edc:	10800417 	ldw	r2,16(r2)
 2012ee0:	e13fff17 	ldw	r4,-4(fp)
 2012ee4:	103ee83a 	callr	r2
  }
  return;
 2012ee8:	0001883a 	nop
}
 2012eec:	e037883a 	mov	sp,fp
 2012ef0:	dfc00117 	ldw	ra,4(sp)
 2012ef4:	df000017 	ldw	fp,0(sp)
 2012ef8:	dec00204 	addi	sp,sp,8
 2012efc:	f800283a 	ret

02012f00 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 2012f00:	deffff04 	addi	sp,sp,-4
 2012f04:	df000015 	stw	fp,0(sp)
 2012f08:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 2012f0c:	e037883a 	mov	sp,fp
 2012f10:	df000017 	ldw	fp,0(sp)
 2012f14:	dec00104 	addi	sp,sp,4
 2012f18:	f800283a 	ret

02012f1c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 2012f1c:	defff904 	addi	sp,sp,-28
 2012f20:	dfc00615 	stw	ra,24(sp)
 2012f24:	df000515 	stw	fp,20(sp)
 2012f28:	df000504 	addi	fp,sp,20
 2012f2c:	e13ffc15 	stw	r4,-16(fp)
 2012f30:	e17ffd15 	stw	r5,-12(fp)
 2012f34:	e1bffe15 	stw	r6,-8(fp)
 2012f38:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 2012f3c:	e0800217 	ldw	r2,8(fp)
 2012f40:	d8800015 	stw	r2,0(sp)
 2012f44:	e13ffc17 	ldw	r4,-16(fp)
 2012f48:	e17ffd17 	ldw	r5,-12(fp)
 2012f4c:	e1bffe17 	ldw	r6,-8(fp)
 2012f50:	e1ffff17 	ldw	r7,-4(fp)
 2012f54:	20130f40 	call	20130f4 <alt_iic_isr_register>
}  
 2012f58:	e037883a 	mov	sp,fp
 2012f5c:	dfc00117 	ldw	ra,4(sp)
 2012f60:	df000017 	ldw	fp,0(sp)
 2012f64:	dec00204 	addi	sp,sp,8
 2012f68:	f800283a 	ret

02012f6c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 2012f6c:	defff904 	addi	sp,sp,-28
 2012f70:	df000615 	stw	fp,24(sp)
 2012f74:	df000604 	addi	fp,sp,24
 2012f78:	e13ffe15 	stw	r4,-8(fp)
 2012f7c:	e17fff15 	stw	r5,-4(fp)
 2012f80:	e0bfff17 	ldw	r2,-4(fp)
 2012f84:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2012f88:	0005303a 	rdctl	r2,status
 2012f8c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2012f90:	e0fffb17 	ldw	r3,-20(fp)
 2012f94:	00bfff84 	movi	r2,-2
 2012f98:	1884703a 	and	r2,r3,r2
 2012f9c:	1001703a 	wrctl	status,r2
  
  return context;
 2012fa0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 2012fa4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 2012fa8:	e0bffa17 	ldw	r2,-24(fp)
 2012fac:	00c00044 	movi	r3,1
 2012fb0:	1884983a 	sll	r2,r3,r2
 2012fb4:	1007883a 	mov	r3,r2
 2012fb8:	00808274 	movhi	r2,521
 2012fbc:	10ab0404 	addi	r2,r2,-21488
 2012fc0:	10800017 	ldw	r2,0(r2)
 2012fc4:	1886b03a 	or	r3,r3,r2
 2012fc8:	00808274 	movhi	r2,521
 2012fcc:	10ab0404 	addi	r2,r2,-21488
 2012fd0:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 2012fd4:	00808274 	movhi	r2,521
 2012fd8:	10ab0404 	addi	r2,r2,-21488
 2012fdc:	10800017 	ldw	r2,0(r2)
 2012fe0:	100170fa 	wrctl	ienable,r2
 2012fe4:	e0bffc17 	ldw	r2,-16(fp)
 2012fe8:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 2012fec:	e0bffd17 	ldw	r2,-12(fp)
 2012ff0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 2012ff4:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
 2012ff8:	e037883a 	mov	sp,fp
 2012ffc:	df000017 	ldw	fp,0(sp)
 2013000:	dec00104 	addi	sp,sp,4
 2013004:	f800283a 	ret

02013008 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 2013008:	defff904 	addi	sp,sp,-28
 201300c:	df000615 	stw	fp,24(sp)
 2013010:	df000604 	addi	fp,sp,24
 2013014:	e13ffe15 	stw	r4,-8(fp)
 2013018:	e17fff15 	stw	r5,-4(fp)
 201301c:	e0bfff17 	ldw	r2,-4(fp)
 2013020:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2013024:	0005303a 	rdctl	r2,status
 2013028:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 201302c:	e0fffb17 	ldw	r3,-20(fp)
 2013030:	00bfff84 	movi	r2,-2
 2013034:	1884703a 	and	r2,r3,r2
 2013038:	1001703a 	wrctl	status,r2
  
  return context;
 201303c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 2013040:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 2013044:	e0bffa17 	ldw	r2,-24(fp)
 2013048:	00c00044 	movi	r3,1
 201304c:	1884983a 	sll	r2,r3,r2
 2013050:	0084303a 	nor	r2,zero,r2
 2013054:	1007883a 	mov	r3,r2
 2013058:	00808274 	movhi	r2,521
 201305c:	10ab0404 	addi	r2,r2,-21488
 2013060:	10800017 	ldw	r2,0(r2)
 2013064:	1886703a 	and	r3,r3,r2
 2013068:	00808274 	movhi	r2,521
 201306c:	10ab0404 	addi	r2,r2,-21488
 2013070:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 2013074:	00808274 	movhi	r2,521
 2013078:	10ab0404 	addi	r2,r2,-21488
 201307c:	10800017 	ldw	r2,0(r2)
 2013080:	100170fa 	wrctl	ienable,r2
 2013084:	e0bffc17 	ldw	r2,-16(fp)
 2013088:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 201308c:	e0bffd17 	ldw	r2,-12(fp)
 2013090:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 2013094:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
 2013098:	e037883a 	mov	sp,fp
 201309c:	df000017 	ldw	fp,0(sp)
 20130a0:	dec00104 	addi	sp,sp,4
 20130a4:	f800283a 	ret

020130a8 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 20130a8:	defffc04 	addi	sp,sp,-16
 20130ac:	df000315 	stw	fp,12(sp)
 20130b0:	df000304 	addi	fp,sp,12
 20130b4:	e13ffe15 	stw	r4,-8(fp)
 20130b8:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 20130bc:	000530fa 	rdctl	r2,ienable
 20130c0:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 20130c4:	e0bfff17 	ldw	r2,-4(fp)
 20130c8:	00c00044 	movi	r3,1
 20130cc:	1884983a 	sll	r2,r3,r2
 20130d0:	1007883a 	mov	r3,r2
 20130d4:	e0bffd17 	ldw	r2,-12(fp)
 20130d8:	1884703a 	and	r2,r3,r2
 20130dc:	1004c03a 	cmpne	r2,r2,zero
 20130e0:	10803fcc 	andi	r2,r2,255
}
 20130e4:	e037883a 	mov	sp,fp
 20130e8:	df000017 	ldw	fp,0(sp)
 20130ec:	dec00104 	addi	sp,sp,4
 20130f0:	f800283a 	ret

020130f4 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 20130f4:	defff504 	addi	sp,sp,-44
 20130f8:	dfc00a15 	stw	ra,40(sp)
 20130fc:	df000915 	stw	fp,36(sp)
 2013100:	df000904 	addi	fp,sp,36
 2013104:	e13ffc15 	stw	r4,-16(fp)
 2013108:	e17ffd15 	stw	r5,-12(fp)
 201310c:	e1bffe15 	stw	r6,-8(fp)
 2013110:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 2013114:	00bffa84 	movi	r2,-22
 2013118:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 201311c:	e0bffd17 	ldw	r2,-12(fp)
 2013120:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 2013124:	e0bff817 	ldw	r2,-32(fp)
 2013128:	10800808 	cmpgei	r2,r2,32
 201312c:	1000271e 	bne	r2,zero,20131cc <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 2013130:	0005303a 	rdctl	r2,status
 2013134:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 2013138:	e0fffa17 	ldw	r3,-24(fp)
 201313c:	00bfff84 	movi	r2,-2
 2013140:	1884703a 	and	r2,r3,r2
 2013144:	1001703a 	wrctl	status,r2
  
  return context;
 2013148:	e0bffa17 	ldw	r2,-24(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 201314c:	e0bff915 	stw	r2,-28(fp)

    alt_irq[id].handler = isr;
 2013150:	00c08274 	movhi	r3,521
 2013154:	18eb5704 	addi	r3,r3,-21156
 2013158:	e0bff817 	ldw	r2,-32(fp)
 201315c:	100490fa 	slli	r2,r2,3
 2013160:	1885883a 	add	r2,r3,r2
 2013164:	e0fffe17 	ldw	r3,-8(fp)
 2013168:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 201316c:	00c08274 	movhi	r3,521
 2013170:	18eb5704 	addi	r3,r3,-21156
 2013174:	e0bff817 	ldw	r2,-32(fp)
 2013178:	100490fa 	slli	r2,r2,3
 201317c:	1885883a 	add	r2,r3,r2
 2013180:	10800104 	addi	r2,r2,4
 2013184:	e0ffff17 	ldw	r3,-4(fp)
 2013188:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 201318c:	e0bffe17 	ldw	r2,-8(fp)
 2013190:	10000526 	beq	r2,zero,20131a8 <alt_iic_isr_register+0xb4>
 2013194:	e0bff817 	ldw	r2,-32(fp)
 2013198:	e13ffc17 	ldw	r4,-16(fp)
 201319c:	100b883a 	mov	r5,r2
 20131a0:	2012f6c0 	call	2012f6c <alt_ic_irq_enable>
 20131a4:	00000406 	br	20131b8 <alt_iic_isr_register+0xc4>
 20131a8:	e0bff817 	ldw	r2,-32(fp)
 20131ac:	e13ffc17 	ldw	r4,-16(fp)
 20131b0:	100b883a 	mov	r5,r2
 20131b4:	20130080 	call	2013008 <alt_ic_irq_disable>
 20131b8:	e0bff715 	stw	r2,-36(fp)
 20131bc:	e0bff917 	ldw	r2,-28(fp)
 20131c0:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 20131c4:	e0bffb17 	ldw	r2,-20(fp)
 20131c8:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 20131cc:	e0bff717 	ldw	r2,-36(fp)
}
 20131d0:	e037883a 	mov	sp,fp
 20131d4:	dfc00117 	ldw	ra,4(sp)
 20131d8:	df000017 	ldw	fp,0(sp)
 20131dc:	dec00204 	addi	sp,sp,8
 20131e0:	f800283a 	ret

020131e4 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 20131e4:	defff804 	addi	sp,sp,-32
 20131e8:	dfc00715 	stw	ra,28(sp)
 20131ec:	df000615 	stw	fp,24(sp)
 20131f0:	dc000515 	stw	r16,20(sp)
 20131f4:	df000504 	addi	fp,sp,20
 20131f8:	e13ffc15 	stw	r4,-16(fp)
 20131fc:	e17ffd15 	stw	r5,-12(fp)
 2013200:	e1bffe15 	stw	r6,-8(fp)
 2013204:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 2013208:	e13ffd17 	ldw	r4,-12(fp)
 201320c:	e17ffe17 	ldw	r5,-8(fp)
 2013210:	e1bfff17 	ldw	r6,-4(fp)
 2013214:	201347c0 	call	201347c <open>
 2013218:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 201321c:	e0bffb17 	ldw	r2,-20(fp)
 2013220:	10002216 	blt	r2,zero,20132ac <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
 2013224:	04008234 	movhi	r16,520
 2013228:	841f0c04 	addi	r16,r16,31792
 201322c:	e0bffb17 	ldw	r2,-20(fp)
 2013230:	1009883a 	mov	r4,r2
 2013234:	01400304 	movi	r5,12
 2013238:	2001f500 	call	2001f50 <__mulsi3>
 201323c:	8085883a 	add	r2,r16,r2
 2013240:	10c00017 	ldw	r3,0(r2)
 2013244:	e0bffc17 	ldw	r2,-16(fp)
 2013248:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 201324c:	04008234 	movhi	r16,520
 2013250:	841f0c04 	addi	r16,r16,31792
 2013254:	e0bffb17 	ldw	r2,-20(fp)
 2013258:	1009883a 	mov	r4,r2
 201325c:	01400304 	movi	r5,12
 2013260:	2001f500 	call	2001f50 <__mulsi3>
 2013264:	8085883a 	add	r2,r16,r2
 2013268:	10800104 	addi	r2,r2,4
 201326c:	10c00017 	ldw	r3,0(r2)
 2013270:	e0bffc17 	ldw	r2,-16(fp)
 2013274:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 2013278:	04008234 	movhi	r16,520
 201327c:	841f0c04 	addi	r16,r16,31792
 2013280:	e0bffb17 	ldw	r2,-20(fp)
 2013284:	1009883a 	mov	r4,r2
 2013288:	01400304 	movi	r5,12
 201328c:	2001f500 	call	2001f50 <__mulsi3>
 2013290:	8085883a 	add	r2,r16,r2
 2013294:	10800204 	addi	r2,r2,8
 2013298:	10c00017 	ldw	r3,0(r2)
 201329c:	e0bffc17 	ldw	r2,-16(fp)
 20132a0:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 20132a4:	e13ffb17 	ldw	r4,-20(fp)
 20132a8:	2010c900 	call	2010c90 <alt_release_fd>
  }
} 
 20132ac:	e037883a 	mov	sp,fp
 20132b0:	dfc00217 	ldw	ra,8(sp)
 20132b4:	df000117 	ldw	fp,4(sp)
 20132b8:	dc000017 	ldw	r16,0(sp)
 20132bc:	dec00304 	addi	sp,sp,12
 20132c0:	f800283a 	ret

020132c4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 20132c4:	defffb04 	addi	sp,sp,-20
 20132c8:	dfc00415 	stw	ra,16(sp)
 20132cc:	df000315 	stw	fp,12(sp)
 20132d0:	df000304 	addi	fp,sp,12
 20132d4:	e13ffd15 	stw	r4,-12(fp)
 20132d8:	e17ffe15 	stw	r5,-8(fp)
 20132dc:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 20132e0:	01008234 	movhi	r4,520
 20132e4:	211f0f04 	addi	r4,r4,31804
 20132e8:	e17ffd17 	ldw	r5,-12(fp)
 20132ec:	01800044 	movi	r6,1
 20132f0:	01c07fc4 	movi	r7,511
 20132f4:	20131e40 	call	20131e4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 20132f8:	01008234 	movhi	r4,520
 20132fc:	211f0c04 	addi	r4,r4,31792
 2013300:	e17ffe17 	ldw	r5,-8(fp)
 2013304:	000d883a 	mov	r6,zero
 2013308:	01c07fc4 	movi	r7,511
 201330c:	20131e40 	call	20131e4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 2013310:	01008234 	movhi	r4,520
 2013314:	211f1204 	addi	r4,r4,31816
 2013318:	e17fff17 	ldw	r5,-4(fp)
 201331c:	01800044 	movi	r6,1
 2013320:	01c07fc4 	movi	r7,511
 2013324:	20131e40 	call	20131e4 <alt_open_fd>
}  
 2013328:	e037883a 	mov	sp,fp
 201332c:	dfc00117 	ldw	ra,4(sp)
 2013330:	df000017 	ldw	fp,0(sp)
 2013334:	dec00204 	addi	sp,sp,8
 2013338:	f800283a 	ret

0201333c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 201333c:	defffe04 	addi	sp,sp,-8
 2013340:	dfc00115 	stw	ra,4(sp)
 2013344:	df000015 	stw	fp,0(sp)
 2013348:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 201334c:	00808274 	movhi	r2,521
 2013350:	10a3c104 	addi	r2,r2,-28924
 2013354:	10800017 	ldw	r2,0(r2)
 2013358:	10000526 	beq	r2,zero,2013370 <alt_get_errno+0x34>
 201335c:	00808274 	movhi	r2,521
 2013360:	10a3c104 	addi	r2,r2,-28924
 2013364:	10800017 	ldw	r2,0(r2)
 2013368:	103ee83a 	callr	r2
 201336c:	00000206 	br	2013378 <alt_get_errno+0x3c>
 2013370:	00808274 	movhi	r2,521
 2013374:	10aafb04 	addi	r2,r2,-21524
}
 2013378:	e037883a 	mov	sp,fp
 201337c:	dfc00117 	ldw	ra,4(sp)
 2013380:	df000017 	ldw	fp,0(sp)
 2013384:	dec00204 	addi	sp,sp,8
 2013388:	f800283a 	ret

0201338c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 201338c:	defffb04 	addi	sp,sp,-20
 2013390:	dfc00415 	stw	ra,16(sp)
 2013394:	df000315 	stw	fp,12(sp)
 2013398:	dc000215 	stw	r16,8(sp)
 201339c:	df000204 	addi	fp,sp,8
 20133a0:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 20133a4:	e0bfff17 	ldw	r2,-4(fp)
 20133a8:	10800217 	ldw	r2,8(r2)
 20133ac:	10d00034 	orhi	r3,r2,16384
 20133b0:	e0bfff17 	ldw	r2,-4(fp)
 20133b4:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 20133b8:	e03ffe15 	stw	zero,-8(fp)
 20133bc:	00002206 	br	2013448 <alt_file_locked+0xbc>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 20133c0:	04008234 	movhi	r16,520
 20133c4:	841f0c04 	addi	r16,r16,31792
 20133c8:	e0bffe17 	ldw	r2,-8(fp)
 20133cc:	1009883a 	mov	r4,r2
 20133d0:	01400304 	movi	r5,12
 20133d4:	2001f500 	call	2001f50 <__mulsi3>
 20133d8:	8085883a 	add	r2,r16,r2
 20133dc:	10c00017 	ldw	r3,0(r2)
 20133e0:	e0bfff17 	ldw	r2,-4(fp)
 20133e4:	10800017 	ldw	r2,0(r2)
 20133e8:	1880141e 	bne	r3,r2,201343c <alt_file_locked+0xb0>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 20133ec:	04008234 	movhi	r16,520
 20133f0:	841f0c04 	addi	r16,r16,31792
 20133f4:	e0bffe17 	ldw	r2,-8(fp)
 20133f8:	1009883a 	mov	r4,r2
 20133fc:	01400304 	movi	r5,12
 2013400:	2001f500 	call	2001f50 <__mulsi3>
 2013404:	8085883a 	add	r2,r16,r2
 2013408:	10800204 	addi	r2,r2,8
 201340c:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 2013410:	10000a0e 	bge	r2,zero,201343c <alt_file_locked+0xb0>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 2013414:	e13ffe17 	ldw	r4,-8(fp)
 2013418:	01400304 	movi	r5,12
 201341c:	2001f500 	call	2001f50 <__mulsi3>
 2013420:	00c08234 	movhi	r3,520
 2013424:	18df0c04 	addi	r3,r3,31792
 2013428:	10c7883a 	add	r3,r2,r3
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 201342c:	e0bfff17 	ldw	r2,-4(fp)
 2013430:	18800226 	beq	r3,r2,201343c <alt_file_locked+0xb0>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 2013434:	00bffcc4 	movi	r2,-13
 2013438:	00000a06 	br	2013464 <alt_file_locked+0xd8>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 201343c:	e0bffe17 	ldw	r2,-8(fp)
 2013440:	10800044 	addi	r2,r2,1
 2013444:	e0bffe15 	stw	r2,-8(fp)
 2013448:	00808274 	movhi	r2,521
 201344c:	10a3c004 	addi	r2,r2,-28928
 2013450:	10800017 	ldw	r2,0(r2)
 2013454:	1007883a 	mov	r3,r2
 2013458:	e0bffe17 	ldw	r2,-8(fp)
 201345c:	18bfd82e 	bgeu	r3,r2,20133c0 <__alt_mem_epcs_flash_controller+0xfe00a3c0>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 2013460:	0005883a 	mov	r2,zero
}
 2013464:	e037883a 	mov	sp,fp
 2013468:	dfc00217 	ldw	ra,8(sp)
 201346c:	df000117 	ldw	fp,4(sp)
 2013470:	dc000017 	ldw	r16,0(sp)
 2013474:	dec00304 	addi	sp,sp,12
 2013478:	f800283a 	ret

0201347c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 201347c:	defff604 	addi	sp,sp,-40
 2013480:	dfc00915 	stw	ra,36(sp)
 2013484:	df000815 	stw	fp,32(sp)
 2013488:	df000804 	addi	fp,sp,32
 201348c:	e13ffd15 	stw	r4,-12(fp)
 2013490:	e17ffe15 	stw	r5,-8(fp)
 2013494:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 2013498:	00bfffc4 	movi	r2,-1
 201349c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 20134a0:	00bffb44 	movi	r2,-19
 20134a4:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 20134a8:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 20134ac:	e13ffd17 	ldw	r4,-12(fp)
 20134b0:	01408274 	movhi	r5,521
 20134b4:	2963be04 	addi	r5,r5,-28936
 20134b8:	20137fc0 	call	20137fc <alt_find_dev>
 20134bc:	e0bff815 	stw	r2,-32(fp)
 20134c0:	e0bff817 	ldw	r2,-32(fp)
 20134c4:	1000051e 	bne	r2,zero,20134dc <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 20134c8:	e13ffd17 	ldw	r4,-12(fp)
 20134cc:	201388c0 	call	201388c <alt_find_file>
 20134d0:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 20134d4:	00800044 	movi	r2,1
 20134d8:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 20134dc:	e0bff817 	ldw	r2,-32(fp)
 20134e0:	10002a26 	beq	r2,zero,201358c <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
 20134e4:	e13ff817 	ldw	r4,-32(fp)
 20134e8:	20139a00 	call	20139a0 <alt_get_fd>
 20134ec:	e0bff915 	stw	r2,-28(fp)
 20134f0:	e0bff917 	ldw	r2,-28(fp)
 20134f4:	1000030e 	bge	r2,zero,2013504 <open+0x88>
    {
      status = index;
 20134f8:	e0bff917 	ldw	r2,-28(fp)
 20134fc:	e0bffa15 	stw	r2,-24(fp)
 2013500:	00002406 	br	2013594 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
 2013504:	e13ff917 	ldw	r4,-28(fp)
 2013508:	01400304 	movi	r5,12
 201350c:	2001f500 	call	2001f50 <__mulsi3>
 2013510:	00c08234 	movhi	r3,520
 2013514:	18df0c04 	addi	r3,r3,31792
 2013518:	10c5883a 	add	r2,r2,r3
 201351c:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 2013520:	e0fffe17 	ldw	r3,-8(fp)
 2013524:	00900034 	movhi	r2,16384
 2013528:	10bfffc4 	addi	r2,r2,-1
 201352c:	1886703a 	and	r3,r3,r2
 2013530:	e0bffc17 	ldw	r2,-16(fp)
 2013534:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 2013538:	e0bffb17 	ldw	r2,-20(fp)
 201353c:	1000051e 	bne	r2,zero,2013554 <open+0xd8>
 2013540:	e13ffc17 	ldw	r4,-16(fp)
 2013544:	201338c0 	call	201338c <alt_file_locked>
 2013548:	e0bffa15 	stw	r2,-24(fp)
 201354c:	e0bffa17 	ldw	r2,-24(fp)
 2013550:	10001016 	blt	r2,zero,2013594 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 2013554:	e0bff817 	ldw	r2,-32(fp)
 2013558:	10800317 	ldw	r2,12(r2)
 201355c:	10000826 	beq	r2,zero,2013580 <open+0x104>
 2013560:	e0bff817 	ldw	r2,-32(fp)
 2013564:	10800317 	ldw	r2,12(r2)
 2013568:	e13ffc17 	ldw	r4,-16(fp)
 201356c:	e17ffd17 	ldw	r5,-12(fp)
 2013570:	e1bffe17 	ldw	r6,-8(fp)
 2013574:	e1ffff17 	ldw	r7,-4(fp)
 2013578:	103ee83a 	callr	r2
 201357c:	00000106 	br	2013584 <open+0x108>
 2013580:	0005883a 	mov	r2,zero
 2013584:	e0bffa15 	stw	r2,-24(fp)
 2013588:	00000206 	br	2013594 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
 201358c:	00bffb44 	movi	r2,-19
 2013590:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 2013594:	e0bffa17 	ldw	r2,-24(fp)
 2013598:	1000080e 	bge	r2,zero,20135bc <open+0x140>
  {
    alt_release_fd (index);  
 201359c:	e13ff917 	ldw	r4,-28(fp)
 20135a0:	2010c900 	call	2010c90 <alt_release_fd>
    ALT_ERRNO = -status;
 20135a4:	201333c0 	call	201333c <alt_get_errno>
 20135a8:	e0fffa17 	ldw	r3,-24(fp)
 20135ac:	00c7c83a 	sub	r3,zero,r3
 20135b0:	10c00015 	stw	r3,0(r2)
    return -1;
 20135b4:	00bfffc4 	movi	r2,-1
 20135b8:	00000106 	br	20135c0 <open+0x144>
  }
  
  /* return the reference upon success */

  return index;
 20135bc:	e0bff917 	ldw	r2,-28(fp)
}
 20135c0:	e037883a 	mov	sp,fp
 20135c4:	dfc00117 	ldw	ra,4(sp)
 20135c8:	df000017 	ldw	fp,0(sp)
 20135cc:	dec00204 	addi	sp,sp,8
 20135d0:	f800283a 	ret

020135d4 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
 20135d4:	deffff04 	addi	sp,sp,-4
 20135d8:	df000015 	stw	fp,0(sp)
 20135dc:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 20135e0:	000170fa 	wrctl	ienable,zero
}
 20135e4:	e037883a 	mov	sp,fp
 20135e8:	df000017 	ldw	fp,0(sp)
 20135ec:	dec00104 	addi	sp,sp,4
 20135f0:	f800283a 	ret

020135f4 <alt_avalon_spi_command>:

int alt_avalon_spi_command(alt_u32 base, alt_u32 slave,
                           alt_u32 write_length, const alt_u8 * write_data,
                           alt_u32 read_length, alt_u8 * read_data,
                           alt_u32 flags)
{
 20135f4:	defff404 	addi	sp,sp,-48
 20135f8:	df000b15 	stw	fp,44(sp)
 20135fc:	df000b04 	addi	fp,sp,44
 2013600:	e13ffc15 	stw	r4,-16(fp)
 2013604:	e17ffd15 	stw	r5,-12(fp)
 2013608:	e1bffe15 	stw	r6,-8(fp)
 201360c:	e1ffff15 	stw	r7,-4(fp)
  const alt_u8 * write_end = write_data + write_length;
 2013610:	e0ffff17 	ldw	r3,-4(fp)
 2013614:	e0bffe17 	ldw	r2,-8(fp)
 2013618:	1885883a 	add	r2,r3,r2
 201361c:	e0bff815 	stw	r2,-32(fp)
  alt_u8 * read_end = read_data + read_length;
 2013620:	e0c00217 	ldw	r3,8(fp)
 2013624:	e0800117 	ldw	r2,4(fp)
 2013628:	1885883a 	add	r2,r3,r2
 201362c:	e0bff915 	stw	r2,-28(fp)

  alt_u32 write_zeros = read_length;
 2013630:	e0800117 	ldw	r2,4(fp)
 2013634:	e0bff515 	stw	r2,-44(fp)
  alt_u32 read_ignore = write_length;
 2013638:	e0bffe17 	ldw	r2,-8(fp)
 201363c:	e0bff615 	stw	r2,-40(fp)

  /* We must not send more than two bytes to the target before it has
   * returned any as otherwise it will overflow. */
  /* Unfortunately the hardware does not seem to work with credits > 1,
   * leave it at 1 for now. */
  alt_32 credits = 1;
 2013640:	00800044 	movi	r2,1
 2013644:	e0bff715 	stw	r2,-36(fp)
  /* Warning: this function is not currently safe if called in a multi-threaded
   * environment, something above must perform locking to make it safe if more
   * than one thread intends to use it.
   */

  IOWR_ALTERA_AVALON_SPI_SLAVE_SEL(base, 1 << slave);
 2013648:	e0bffc17 	ldw	r2,-16(fp)
 201364c:	10800504 	addi	r2,r2,20
 2013650:	e0fffd17 	ldw	r3,-12(fp)
 2013654:	01000044 	movi	r4,1
 2013658:	20c6983a 	sll	r3,r4,r3
 201365c:	10c00035 	stwio	r3,0(r2)
  
  /* Set the SSO bit (force chipselect) only if the toggle flag is not set */
  if ((flags & ALT_AVALON_SPI_COMMAND_TOGGLE_SS_N) == 0) {
 2013660:	e0800317 	ldw	r2,12(fp)
 2013664:	1080008c 	andi	r2,r2,2
 2013668:	1000041e 	bne	r2,zero,201367c <alt_avalon_spi_command+0x88>
    IOWR_ALTERA_AVALON_SPI_CONTROL(base, ALTERA_AVALON_SPI_CONTROL_SSO_MSK);
 201366c:	e0bffc17 	ldw	r2,-16(fp)
 2013670:	10800304 	addi	r2,r2,12
 2013674:	00c10004 	movi	r3,1024
 2013678:	10c00035 	stwio	r3,0(r2)
  /*
   * Discard any stale data present in the RXDATA register, in case
   * previous communication was interrupted and stale data was left
   * behind.
   */
  IORD_ALTERA_AVALON_SPI_RXDATA(base);
 201367c:	e0bffc17 	ldw	r2,-16(fp)
 2013680:	10800037 	ldwio	r2,0(r2)
 2013684:	00000106 	br	201368c <alt_avalon_spi_command+0x98>

      if (read_ignore == 0 && read_data == read_end)
        break;
    }
    
  }
 2013688:	0001883a 	nop
  for ( ; ; )
  {
    
    do
    {
      status = IORD_ALTERA_AVALON_SPI_STATUS(base);
 201368c:	e0bffc17 	ldw	r2,-16(fp)
 2013690:	10800204 	addi	r2,r2,8
 2013694:	10800037 	ldwio	r2,0(r2)
 2013698:	e0bffa15 	stw	r2,-24(fp)
    }
    while (((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) == 0 || credits == 0) &&
 201369c:	e0bffa17 	ldw	r2,-24(fp)
 20136a0:	1080100c 	andi	r2,r2,64
            (status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) == 0);
 20136a4:	10000226 	beq	r2,zero,20136b0 <alt_avalon_spi_command+0xbc>
    
    do
    {
      status = IORD_ALTERA_AVALON_SPI_STATUS(base);
    }
    while (((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) == 0 || credits == 0) &&
 20136a8:	e0bff717 	ldw	r2,-36(fp)
 20136ac:	1000031e 	bne	r2,zero,20136bc <alt_avalon_spi_command+0xc8>
            (status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) == 0);
 20136b0:	e0bffa17 	ldw	r2,-24(fp)
 20136b4:	1080200c 	andi	r2,r2,128
    
    do
    {
      status = IORD_ALTERA_AVALON_SPI_STATUS(base);
    }
    while (((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) == 0 || credits == 0) &&
 20136b8:	103ff426 	beq	r2,zero,201368c <__alt_mem_epcs_flash_controller+0xfe00a68c>
            (status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) == 0);

    if ((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) != 0 && credits > 0)
 20136bc:	e0bffa17 	ldw	r2,-24(fp)
 20136c0:	1080100c 	andi	r2,r2,64
 20136c4:	10001e26 	beq	r2,zero,2013740 <alt_avalon_spi_command+0x14c>
 20136c8:	e0bff717 	ldw	r2,-36(fp)
 20136cc:	00801c0e 	bge	zero,r2,2013740 <alt_avalon_spi_command+0x14c>
    {
      credits--;
 20136d0:	e0bff717 	ldw	r2,-36(fp)
 20136d4:	10bfffc4 	addi	r2,r2,-1
 20136d8:	e0bff715 	stw	r2,-36(fp)

      if (write_data < write_end)
 20136dc:	e0ffff17 	ldw	r3,-4(fp)
 20136e0:	e0bff817 	ldw	r2,-32(fp)
 20136e4:	18800a2e 	bgeu	r3,r2,2013710 <alt_avalon_spi_command+0x11c>
        IOWR_ALTERA_AVALON_SPI_TXDATA(base, *write_data++);
 20136e8:	e0bffc17 	ldw	r2,-16(fp)
 20136ec:	10800104 	addi	r2,r2,4
 20136f0:	e0ffff17 	ldw	r3,-4(fp)
 20136f4:	18c00003 	ldbu	r3,0(r3)
 20136f8:	18c03fcc 	andi	r3,r3,255
 20136fc:	e13fff17 	ldw	r4,-4(fp)
 2013700:	21000044 	addi	r4,r4,1
 2013704:	e13fff15 	stw	r4,-4(fp)
 2013708:	10c00035 	stwio	r3,0(r2)
 201370c:	00000c06 	br	2013740 <alt_avalon_spi_command+0x14c>
      else if (write_zeros > 0)
 2013710:	e0bff517 	ldw	r2,-44(fp)
 2013714:	10000826 	beq	r2,zero,2013738 <alt_avalon_spi_command+0x144>
      {
        write_zeros--;
 2013718:	e0bff517 	ldw	r2,-44(fp)
 201371c:	10bfffc4 	addi	r2,r2,-1
 2013720:	e0bff515 	stw	r2,-44(fp)
        IOWR_ALTERA_AVALON_SPI_TXDATA(base, 0);
 2013724:	e0bffc17 	ldw	r2,-16(fp)
 2013728:	10800104 	addi	r2,r2,4
 201372c:	0007883a 	mov	r3,zero
 2013730:	10c00035 	stwio	r3,0(r2)
 2013734:	00000206 	br	2013740 <alt_avalon_spi_command+0x14c>
      }
      else
        credits = -1024;
 2013738:	00bf0004 	movi	r2,-1024
 201373c:	e0bff715 	stw	r2,-36(fp)
    };

    if ((status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) != 0)
 2013740:	e0bffa17 	ldw	r2,-24(fp)
 2013744:	1080200c 	andi	r2,r2,128
 2013748:	103fcf26 	beq	r2,zero,2013688 <__alt_mem_epcs_flash_controller+0xfe00a688>
    {
      alt_u32 rxdata = IORD_ALTERA_AVALON_SPI_RXDATA(base);
 201374c:	e0bffc17 	ldw	r2,-16(fp)
 2013750:	10800037 	ldwio	r2,0(r2)
 2013754:	e0bffb15 	stw	r2,-20(fp)

      if (read_ignore > 0)
 2013758:	e0bff617 	ldw	r2,-40(fp)
 201375c:	10000426 	beq	r2,zero,2013770 <alt_avalon_spi_command+0x17c>
        read_ignore--;
 2013760:	e0bff617 	ldw	r2,-40(fp)
 2013764:	10bfffc4 	addi	r2,r2,-1
 2013768:	e0bff615 	stw	r2,-40(fp)
 201376c:	00000706 	br	201378c <alt_avalon_spi_command+0x198>
      else
        *read_data++ = (alt_u8)rxdata;
 2013770:	e0bffb17 	ldw	r2,-20(fp)
 2013774:	1007883a 	mov	r3,r2
 2013778:	e0800217 	ldw	r2,8(fp)
 201377c:	10c00005 	stb	r3,0(r2)
 2013780:	e0800217 	ldw	r2,8(fp)
 2013784:	10800044 	addi	r2,r2,1
 2013788:	e0800215 	stw	r2,8(fp)
      credits++;
 201378c:	e0bff717 	ldw	r2,-36(fp)
 2013790:	10800044 	addi	r2,r2,1
 2013794:	e0bff715 	stw	r2,-36(fp)

      if (read_ignore == 0 && read_data == read_end)
 2013798:	e0bff617 	ldw	r2,-40(fp)
 201379c:	103fba1e 	bne	r2,zero,2013688 <__alt_mem_epcs_flash_controller+0xfe00a688>
 20137a0:	e0c00217 	ldw	r3,8(fp)
 20137a4:	e0bff917 	ldw	r2,-28(fp)
 20137a8:	18bfb71e 	bne	r3,r2,2013688 <__alt_mem_epcs_flash_controller+0xfe00a688>
        break;
 20137ac:	0001883a 	nop
  }

  /* Wait until the interface has finished transmitting */
  do
  {
    status = IORD_ALTERA_AVALON_SPI_STATUS(base);
 20137b0:	e0bffc17 	ldw	r2,-16(fp)
 20137b4:	10800204 	addi	r2,r2,8
 20137b8:	10800037 	ldwio	r2,0(r2)
 20137bc:	e0bffa15 	stw	r2,-24(fp)
  }
  while ((status & ALTERA_AVALON_SPI_STATUS_TMT_MSK) == 0);
 20137c0:	e0bffa17 	ldw	r2,-24(fp)
 20137c4:	1080080c 	andi	r2,r2,32
 20137c8:	103ff926 	beq	r2,zero,20137b0 <__alt_mem_epcs_flash_controller+0xfe00a7b0>

  /* Clear SSO (release chipselect) unless the caller is going to
   * keep using this chip
   */
  if ((flags & ALT_AVALON_SPI_COMMAND_MERGE) == 0)
 20137cc:	e0800317 	ldw	r2,12(fp)
 20137d0:	1080004c 	andi	r2,r2,1
 20137d4:	1000041e 	bne	r2,zero,20137e8 <alt_avalon_spi_command+0x1f4>
    IOWR_ALTERA_AVALON_SPI_CONTROL(base, 0);
 20137d8:	e0bffc17 	ldw	r2,-16(fp)
 20137dc:	10800304 	addi	r2,r2,12
 20137e0:	0007883a 	mov	r3,zero
 20137e4:	10c00035 	stwio	r3,0(r2)

  return read_length;
 20137e8:	e0800117 	ldw	r2,4(fp)
}
 20137ec:	e037883a 	mov	sp,fp
 20137f0:	df000017 	ldw	fp,0(sp)
 20137f4:	dec00104 	addi	sp,sp,4
 20137f8:	f800283a 	ret

020137fc <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 20137fc:	defffa04 	addi	sp,sp,-24
 2013800:	dfc00515 	stw	ra,20(sp)
 2013804:	df000415 	stw	fp,16(sp)
 2013808:	df000404 	addi	fp,sp,16
 201380c:	e13ffe15 	stw	r4,-8(fp)
 2013810:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 2013814:	e0bfff17 	ldw	r2,-4(fp)
 2013818:	10800017 	ldw	r2,0(r2)
 201381c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 2013820:	e13ffe17 	ldw	r4,-8(fp)
 2013824:	20036b80 	call	20036b8 <strlen>
 2013828:	10800044 	addi	r2,r2,1
 201382c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 2013830:	00000d06 	br	2013868 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 2013834:	e0bffc17 	ldw	r2,-16(fp)
 2013838:	10c00217 	ldw	r3,8(r2)
 201383c:	e0bffd17 	ldw	r2,-12(fp)
 2013840:	1809883a 	mov	r4,r3
 2013844:	e17ffe17 	ldw	r5,-8(fp)
 2013848:	100d883a 	mov	r6,r2
 201384c:	2013ac00 	call	2013ac0 <memcmp>
 2013850:	1000021e 	bne	r2,zero,201385c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 2013854:	e0bffc17 	ldw	r2,-16(fp)
 2013858:	00000706 	br	2013878 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 201385c:	e0bffc17 	ldw	r2,-16(fp)
 2013860:	10800017 	ldw	r2,0(r2)
 2013864:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 2013868:	e0fffc17 	ldw	r3,-16(fp)
 201386c:	e0bfff17 	ldw	r2,-4(fp)
 2013870:	18bff01e 	bne	r3,r2,2013834 <__alt_mem_epcs_flash_controller+0xfe00a834>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 2013874:	0005883a 	mov	r2,zero
}
 2013878:	e037883a 	mov	sp,fp
 201387c:	dfc00117 	ldw	ra,4(sp)
 2013880:	df000017 	ldw	fp,0(sp)
 2013884:	dec00204 	addi	sp,sp,8
 2013888:	f800283a 	ret

0201388c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 201388c:	defffb04 	addi	sp,sp,-20
 2013890:	dfc00415 	stw	ra,16(sp)
 2013894:	df000315 	stw	fp,12(sp)
 2013898:	df000304 	addi	fp,sp,12
 201389c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 20138a0:	00808274 	movhi	r2,521
 20138a4:	10a3bc04 	addi	r2,r2,-28944
 20138a8:	10800017 	ldw	r2,0(r2)
 20138ac:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 20138b0:	00003106 	br	2013978 <alt_find_file+0xec>
  {
    len = strlen(next->name);
 20138b4:	e0bffd17 	ldw	r2,-12(fp)
 20138b8:	10800217 	ldw	r2,8(r2)
 20138bc:	1009883a 	mov	r4,r2
 20138c0:	20036b80 	call	20036b8 <strlen>
 20138c4:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 20138c8:	e0bffd17 	ldw	r2,-12(fp)
 20138cc:	10c00217 	ldw	r3,8(r2)
 20138d0:	e0bffe17 	ldw	r2,-8(fp)
 20138d4:	10bfffc4 	addi	r2,r2,-1
 20138d8:	1885883a 	add	r2,r3,r2
 20138dc:	10800003 	ldbu	r2,0(r2)
 20138e0:	10803fcc 	andi	r2,r2,255
 20138e4:	1080201c 	xori	r2,r2,128
 20138e8:	10bfe004 	addi	r2,r2,-128
 20138ec:	10800bd8 	cmpnei	r2,r2,47
 20138f0:	1000031e 	bne	r2,zero,2013900 <alt_find_file+0x74>
    {
      len -= 1;
 20138f4:	e0bffe17 	ldw	r2,-8(fp)
 20138f8:	10bfffc4 	addi	r2,r2,-1
 20138fc:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 2013900:	e0bffe17 	ldw	r2,-8(fp)
 2013904:	e0ffff17 	ldw	r3,-4(fp)
 2013908:	1885883a 	add	r2,r3,r2
 201390c:	10800003 	ldbu	r2,0(r2)
 2013910:	10803fcc 	andi	r2,r2,255
 2013914:	1080201c 	xori	r2,r2,128
 2013918:	10bfe004 	addi	r2,r2,-128
 201391c:	10800be0 	cmpeqi	r2,r2,47
 2013920:	1000081e 	bne	r2,zero,2013944 <alt_find_file+0xb8>
 2013924:	e0bffe17 	ldw	r2,-8(fp)
 2013928:	e0ffff17 	ldw	r3,-4(fp)
 201392c:	1885883a 	add	r2,r3,r2
 2013930:	10800003 	ldbu	r2,0(r2)
 2013934:	10803fcc 	andi	r2,r2,255
 2013938:	1080201c 	xori	r2,r2,128
 201393c:	10bfe004 	addi	r2,r2,-128
 2013940:	10000a1e 	bne	r2,zero,201396c <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
 2013944:	e0bffd17 	ldw	r2,-12(fp)
 2013948:	10c00217 	ldw	r3,8(r2)
 201394c:	e0bffe17 	ldw	r2,-8(fp)
 2013950:	1809883a 	mov	r4,r3
 2013954:	e17fff17 	ldw	r5,-4(fp)
 2013958:	100d883a 	mov	r6,r2
 201395c:	2013ac00 	call	2013ac0 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 2013960:	1000021e 	bne	r2,zero,201396c <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 2013964:	e0bffd17 	ldw	r2,-12(fp)
 2013968:	00000806 	br	201398c <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
 201396c:	e0bffd17 	ldw	r2,-12(fp)
 2013970:	10800017 	ldw	r2,0(r2)
 2013974:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 2013978:	e0fffd17 	ldw	r3,-12(fp)
 201397c:	00808274 	movhi	r2,521
 2013980:	10a3bc04 	addi	r2,r2,-28944
 2013984:	18bfcb1e 	bne	r3,r2,20138b4 <__alt_mem_epcs_flash_controller+0xfe00a8b4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 2013988:	0005883a 	mov	r2,zero
}
 201398c:	e037883a 	mov	sp,fp
 2013990:	dfc00117 	ldw	ra,4(sp)
 2013994:	df000017 	ldw	fp,0(sp)
 2013998:	dec00204 	addi	sp,sp,8
 201399c:	f800283a 	ret

020139a0 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 20139a0:	defffa04 	addi	sp,sp,-24
 20139a4:	dfc00515 	stw	ra,20(sp)
 20139a8:	df000415 	stw	fp,16(sp)
 20139ac:	dc000315 	stw	r16,12(sp)
 20139b0:	df000304 	addi	fp,sp,12
 20139b4:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 20139b8:	00bffa04 	movi	r2,-24
 20139bc:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 20139c0:	e03ffd15 	stw	zero,-12(fp)
 20139c4:	00002106 	br	2013a4c <alt_get_fd+0xac>
  {
    if (!alt_fd_list[i].dev)
 20139c8:	04008234 	movhi	r16,520
 20139cc:	841f0c04 	addi	r16,r16,31792
 20139d0:	e0bffd17 	ldw	r2,-12(fp)
 20139d4:	1009883a 	mov	r4,r2
 20139d8:	01400304 	movi	r5,12
 20139dc:	2001f500 	call	2001f50 <__mulsi3>
 20139e0:	8085883a 	add	r2,r16,r2
 20139e4:	10800017 	ldw	r2,0(r2)
 20139e8:	1000151e 	bne	r2,zero,2013a40 <alt_get_fd+0xa0>
    {
      alt_fd_list[i].dev = dev;
 20139ec:	04008234 	movhi	r16,520
 20139f0:	841f0c04 	addi	r16,r16,31792
 20139f4:	e0bffd17 	ldw	r2,-12(fp)
 20139f8:	1009883a 	mov	r4,r2
 20139fc:	01400304 	movi	r5,12
 2013a00:	2001f500 	call	2001f50 <__mulsi3>
 2013a04:	8085883a 	add	r2,r16,r2
 2013a08:	e0ffff17 	ldw	r3,-4(fp)
 2013a0c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 2013a10:	00808274 	movhi	r2,521
 2013a14:	10a3c004 	addi	r2,r2,-28928
 2013a18:	10c00017 	ldw	r3,0(r2)
 2013a1c:	e0bffd17 	ldw	r2,-12(fp)
 2013a20:	1880040e 	bge	r3,r2,2013a34 <alt_get_fd+0x94>
      {
        alt_max_fd = i;
 2013a24:	00808274 	movhi	r2,521
 2013a28:	10a3c004 	addi	r2,r2,-28928
 2013a2c:	e0fffd17 	ldw	r3,-12(fp)
 2013a30:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
 2013a34:	e0bffd17 	ldw	r2,-12(fp)
 2013a38:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
 2013a3c:	00000606 	br	2013a58 <alt_get_fd+0xb8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 2013a40:	e0bffd17 	ldw	r2,-12(fp)
 2013a44:	10800044 	addi	r2,r2,1
 2013a48:	e0bffd15 	stw	r2,-12(fp)
 2013a4c:	e0bffd17 	ldw	r2,-12(fp)
 2013a50:	10800810 	cmplti	r2,r2,32
 2013a54:	103fdc1e 	bne	r2,zero,20139c8 <__alt_mem_epcs_flash_controller+0xfe00a9c8>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 2013a58:	e0bffe17 	ldw	r2,-8(fp)
}
 2013a5c:	e037883a 	mov	sp,fp
 2013a60:	dfc00217 	ldw	ra,8(sp)
 2013a64:	df000117 	ldw	fp,4(sp)
 2013a68:	dc000017 	ldw	r16,0(sp)
 2013a6c:	dec00304 	addi	sp,sp,12
 2013a70:	f800283a 	ret

02013a74 <atexit>:
 2013a74:	200b883a 	mov	r5,r4
 2013a78:	000d883a 	mov	r6,zero
 2013a7c:	0009883a 	mov	r4,zero
 2013a80:	000f883a 	mov	r7,zero
 2013a84:	2013b3c1 	jmpi	2013b3c <__register_exitproc>

02013a88 <exit>:
 2013a88:	defffe04 	addi	sp,sp,-8
 2013a8c:	000b883a 	mov	r5,zero
 2013a90:	dc000015 	stw	r16,0(sp)
 2013a94:	dfc00115 	stw	ra,4(sp)
 2013a98:	2021883a 	mov	r16,r4
 2013a9c:	2013c6c0 	call	2013c6c <__call_exitprocs>
 2013aa0:	00808274 	movhi	r2,521
 2013aa4:	10a3b604 	addi	r2,r2,-28968
 2013aa8:	11000017 	ldw	r4,0(r2)
 2013aac:	20800f17 	ldw	r2,60(r4)
 2013ab0:	10000126 	beq	r2,zero,2013ab8 <exit+0x30>
 2013ab4:	103ee83a 	callr	r2
 2013ab8:	8009883a 	mov	r4,r16
 2013abc:	2013e0c0 	call	2013e0c <_exit>

02013ac0 <memcmp>:
 2013ac0:	01c000c4 	movi	r7,3
 2013ac4:	3980192e 	bgeu	r7,r6,2013b2c <memcmp+0x6c>
 2013ac8:	2904b03a 	or	r2,r5,r4
 2013acc:	11c4703a 	and	r2,r2,r7
 2013ad0:	10000f26 	beq	r2,zero,2013b10 <memcmp+0x50>
 2013ad4:	20c00003 	ldbu	r3,0(r4)
 2013ad8:	28800003 	ldbu	r2,0(r5)
 2013adc:	1880151e 	bne	r3,r2,2013b34 <memcmp+0x74>
 2013ae0:	31bfff84 	addi	r6,r6,-2
 2013ae4:	01ffffc4 	movi	r7,-1
 2013ae8:	00000406 	br	2013afc <memcmp+0x3c>
 2013aec:	20c00003 	ldbu	r3,0(r4)
 2013af0:	28800003 	ldbu	r2,0(r5)
 2013af4:	31bfffc4 	addi	r6,r6,-1
 2013af8:	18800e1e 	bne	r3,r2,2013b34 <memcmp+0x74>
 2013afc:	21000044 	addi	r4,r4,1
 2013b00:	29400044 	addi	r5,r5,1
 2013b04:	31fff91e 	bne	r6,r7,2013aec <__alt_mem_epcs_flash_controller+0xfe00aaec>
 2013b08:	0005883a 	mov	r2,zero
 2013b0c:	f800283a 	ret
 2013b10:	20c00017 	ldw	r3,0(r4)
 2013b14:	28800017 	ldw	r2,0(r5)
 2013b18:	1880041e 	bne	r3,r2,2013b2c <memcmp+0x6c>
 2013b1c:	31bfff04 	addi	r6,r6,-4
 2013b20:	21000104 	addi	r4,r4,4
 2013b24:	29400104 	addi	r5,r5,4
 2013b28:	39bff936 	bltu	r7,r6,2013b10 <__alt_mem_epcs_flash_controller+0xfe00ab10>
 2013b2c:	303fe91e 	bne	r6,zero,2013ad4 <__alt_mem_epcs_flash_controller+0xfe00aad4>
 2013b30:	003ff506 	br	2013b08 <__alt_mem_epcs_flash_controller+0xfe00ab08>
 2013b34:	1885c83a 	sub	r2,r3,r2
 2013b38:	f800283a 	ret

02013b3c <__register_exitproc>:
 2013b3c:	defffa04 	addi	sp,sp,-24
 2013b40:	00808274 	movhi	r2,521
 2013b44:	10a3b604 	addi	r2,r2,-28968
 2013b48:	dc000315 	stw	r16,12(sp)
 2013b4c:	14000017 	ldw	r16,0(r2)
 2013b50:	dc400415 	stw	r17,16(sp)
 2013b54:	dfc00515 	stw	ra,20(sp)
 2013b58:	80805217 	ldw	r2,328(r16)
 2013b5c:	2023883a 	mov	r17,r4
 2013b60:	10003e26 	beq	r2,zero,2013c5c <__register_exitproc+0x120>
 2013b64:	10c00117 	ldw	r3,4(r2)
 2013b68:	020007c4 	movi	r8,31
 2013b6c:	40c0180e 	bge	r8,r3,2013bd0 <__register_exitproc+0x94>
 2013b70:	00800034 	movhi	r2,0
 2013b74:	10800004 	addi	r2,r2,0
 2013b78:	1000061e 	bne	r2,zero,2013b94 <__register_exitproc+0x58>
 2013b7c:	00bfffc4 	movi	r2,-1
 2013b80:	dfc00517 	ldw	ra,20(sp)
 2013b84:	dc400417 	ldw	r17,16(sp)
 2013b88:	dc000317 	ldw	r16,12(sp)
 2013b8c:	dec00604 	addi	sp,sp,24
 2013b90:	f800283a 	ret
 2013b94:	01006404 	movi	r4,400
 2013b98:	d9400015 	stw	r5,0(sp)
 2013b9c:	d9800115 	stw	r6,4(sp)
 2013ba0:	d9c00215 	stw	r7,8(sp)
 2013ba4:	00000000 	call	0 <__alt_mem_sdram_controller-0x2000000>
 2013ba8:	d9400017 	ldw	r5,0(sp)
 2013bac:	d9800117 	ldw	r6,4(sp)
 2013bb0:	d9c00217 	ldw	r7,8(sp)
 2013bb4:	103ff126 	beq	r2,zero,2013b7c <__alt_mem_epcs_flash_controller+0xfe00ab7c>
 2013bb8:	80c05217 	ldw	r3,328(r16)
 2013bbc:	10000115 	stw	zero,4(r2)
 2013bc0:	10c00015 	stw	r3,0(r2)
 2013bc4:	80805215 	stw	r2,328(r16)
 2013bc8:	10006215 	stw	zero,392(r2)
 2013bcc:	10006315 	stw	zero,396(r2)
 2013bd0:	10c00117 	ldw	r3,4(r2)
 2013bd4:	88000d1e 	bne	r17,zero,2013c0c <__register_exitproc+0xd0>
 2013bd8:	19000084 	addi	r4,r3,2
 2013bdc:	2109883a 	add	r4,r4,r4
 2013be0:	18c00044 	addi	r3,r3,1
 2013be4:	2109883a 	add	r4,r4,r4
 2013be8:	1109883a 	add	r4,r2,r4
 2013bec:	10c00115 	stw	r3,4(r2)
 2013bf0:	0005883a 	mov	r2,zero
 2013bf4:	21400015 	stw	r5,0(r4)
 2013bf8:	dfc00517 	ldw	ra,20(sp)
 2013bfc:	dc400417 	ldw	r17,16(sp)
 2013c00:	dc000317 	ldw	r16,12(sp)
 2013c04:	dec00604 	addi	sp,sp,24
 2013c08:	f800283a 	ret
 2013c0c:	02400044 	movi	r9,1
 2013c10:	12806217 	ldw	r10,392(r2)
 2013c14:	48d2983a 	sll	r9,r9,r3
 2013c18:	19000804 	addi	r4,r3,32
 2013c1c:	18d1883a 	add	r8,r3,r3
 2013c20:	2109883a 	add	r4,r4,r4
 2013c24:	4211883a 	add	r8,r8,r8
 2013c28:	2109883a 	add	r4,r4,r4
 2013c2c:	1109883a 	add	r4,r2,r4
 2013c30:	1211883a 	add	r8,r2,r8
 2013c34:	5254b03a 	or	r10,r10,r9
 2013c38:	21c02215 	stw	r7,136(r4)
 2013c3c:	41802215 	stw	r6,136(r8)
 2013c40:	12806215 	stw	r10,392(r2)
 2013c44:	01000084 	movi	r4,2
 2013c48:	893fe31e 	bne	r17,r4,2013bd8 <__alt_mem_epcs_flash_controller+0xfe00abd8>
 2013c4c:	11006317 	ldw	r4,396(r2)
 2013c50:	2252b03a 	or	r9,r4,r9
 2013c54:	12406315 	stw	r9,396(r2)
 2013c58:	003fdf06 	br	2013bd8 <__alt_mem_epcs_flash_controller+0xfe00abd8>
 2013c5c:	00808274 	movhi	r2,521
 2013c60:	10ab9704 	addi	r2,r2,-20900
 2013c64:	80805215 	stw	r2,328(r16)
 2013c68:	003fbe06 	br	2013b64 <__alt_mem_epcs_flash_controller+0xfe00ab64>

02013c6c <__call_exitprocs>:
 2013c6c:	00808274 	movhi	r2,521
 2013c70:	10a3b604 	addi	r2,r2,-28968
 2013c74:	10800017 	ldw	r2,0(r2)
 2013c78:	defff304 	addi	sp,sp,-52
 2013c7c:	df000b15 	stw	fp,44(sp)
 2013c80:	d8800015 	stw	r2,0(sp)
 2013c84:	10805204 	addi	r2,r2,328
 2013c88:	dd400815 	stw	r21,32(sp)
 2013c8c:	dfc00c15 	stw	ra,48(sp)
 2013c90:	ddc00a15 	stw	r23,40(sp)
 2013c94:	dd800915 	stw	r22,36(sp)
 2013c98:	dd000715 	stw	r20,28(sp)
 2013c9c:	dcc00615 	stw	r19,24(sp)
 2013ca0:	dc800515 	stw	r18,20(sp)
 2013ca4:	dc400415 	stw	r17,16(sp)
 2013ca8:	dc000315 	stw	r16,12(sp)
 2013cac:	d9000115 	stw	r4,4(sp)
 2013cb0:	2839883a 	mov	fp,r5
 2013cb4:	d8800215 	stw	r2,8(sp)
 2013cb8:	057fffc4 	movi	r21,-1
 2013cbc:	d8800017 	ldw	r2,0(sp)
 2013cc0:	ddc00217 	ldw	r23,8(sp)
 2013cc4:	14805217 	ldw	r18,328(r2)
 2013cc8:	90001726 	beq	r18,zero,2013d28 <__call_exitprocs+0xbc>
 2013ccc:	94400117 	ldw	r17,4(r18)
 2013cd0:	8c3fffc4 	addi	r16,r17,-1
 2013cd4:	80001116 	blt	r16,zero,2013d1c <__call_exitprocs+0xb0>
 2013cd8:	8c400044 	addi	r17,r17,1
 2013cdc:	8427883a 	add	r19,r16,r16
 2013ce0:	8c63883a 	add	r17,r17,r17
 2013ce4:	95802204 	addi	r22,r18,136
 2013ce8:	9ce7883a 	add	r19,r19,r19
 2013cec:	8c63883a 	add	r17,r17,r17
 2013cf0:	b4e7883a 	add	r19,r22,r19
 2013cf4:	9463883a 	add	r17,r18,r17
 2013cf8:	e0001726 	beq	fp,zero,2013d58 <__call_exitprocs+0xec>
 2013cfc:	8c87c83a 	sub	r3,r17,r18
 2013d00:	b0c7883a 	add	r3,r22,r3
 2013d04:	18c01e17 	ldw	r3,120(r3)
 2013d08:	1f001326 	beq	r3,fp,2013d58 <__call_exitprocs+0xec>
 2013d0c:	843fffc4 	addi	r16,r16,-1
 2013d10:	9cffff04 	addi	r19,r19,-4
 2013d14:	8c7fff04 	addi	r17,r17,-4
 2013d18:	857ff71e 	bne	r16,r21,2013cf8 <__alt_mem_epcs_flash_controller+0xfe00acf8>
 2013d1c:	00800034 	movhi	r2,0
 2013d20:	10800004 	addi	r2,r2,0
 2013d24:	10002a1e 	bne	r2,zero,2013dd0 <__call_exitprocs+0x164>
 2013d28:	dfc00c17 	ldw	ra,48(sp)
 2013d2c:	df000b17 	ldw	fp,44(sp)
 2013d30:	ddc00a17 	ldw	r23,40(sp)
 2013d34:	dd800917 	ldw	r22,36(sp)
 2013d38:	dd400817 	ldw	r21,32(sp)
 2013d3c:	dd000717 	ldw	r20,28(sp)
 2013d40:	dcc00617 	ldw	r19,24(sp)
 2013d44:	dc800517 	ldw	r18,20(sp)
 2013d48:	dc400417 	ldw	r17,16(sp)
 2013d4c:	dc000317 	ldw	r16,12(sp)
 2013d50:	dec00d04 	addi	sp,sp,52
 2013d54:	f800283a 	ret
 2013d58:	91000117 	ldw	r4,4(r18)
 2013d5c:	88c00017 	ldw	r3,0(r17)
 2013d60:	213fffc4 	addi	r4,r4,-1
 2013d64:	24001526 	beq	r4,r16,2013dbc <__call_exitprocs+0x150>
 2013d68:	88000015 	stw	zero,0(r17)
 2013d6c:	183fe726 	beq	r3,zero,2013d0c <__alt_mem_epcs_flash_controller+0xfe00ad0c>
 2013d70:	00800044 	movi	r2,1
 2013d74:	1408983a 	sll	r4,r2,r16
 2013d78:	91406217 	ldw	r5,392(r18)
 2013d7c:	95000117 	ldw	r20,4(r18)
 2013d80:	214a703a 	and	r5,r4,r5
 2013d84:	28000b26 	beq	r5,zero,2013db4 <__call_exitprocs+0x148>
 2013d88:	91406317 	ldw	r5,396(r18)
 2013d8c:	2148703a 	and	r4,r4,r5
 2013d90:	20000c1e 	bne	r4,zero,2013dc4 <__call_exitprocs+0x158>
 2013d94:	99400017 	ldw	r5,0(r19)
 2013d98:	d9000117 	ldw	r4,4(sp)
 2013d9c:	183ee83a 	callr	r3
 2013da0:	90c00117 	ldw	r3,4(r18)
 2013da4:	1d3fc51e 	bne	r3,r20,2013cbc <__alt_mem_epcs_flash_controller+0xfe00acbc>
 2013da8:	b8c00017 	ldw	r3,0(r23)
 2013dac:	1cbfd726 	beq	r3,r18,2013d0c <__alt_mem_epcs_flash_controller+0xfe00ad0c>
 2013db0:	003fc206 	br	2013cbc <__alt_mem_epcs_flash_controller+0xfe00acbc>
 2013db4:	183ee83a 	callr	r3
 2013db8:	003ff906 	br	2013da0 <__alt_mem_epcs_flash_controller+0xfe00ada0>
 2013dbc:	94000115 	stw	r16,4(r18)
 2013dc0:	003fea06 	br	2013d6c <__alt_mem_epcs_flash_controller+0xfe00ad6c>
 2013dc4:	99000017 	ldw	r4,0(r19)
 2013dc8:	183ee83a 	callr	r3
 2013dcc:	003ff406 	br	2013da0 <__alt_mem_epcs_flash_controller+0xfe00ada0>
 2013dd0:	90c00117 	ldw	r3,4(r18)
 2013dd4:	1800071e 	bne	r3,zero,2013df4 <__call_exitprocs+0x188>
 2013dd8:	90c00017 	ldw	r3,0(r18)
 2013ddc:	18000926 	beq	r3,zero,2013e04 <__call_exitprocs+0x198>
 2013de0:	9009883a 	mov	r4,r18
 2013de4:	b8c00015 	stw	r3,0(r23)
 2013de8:	00000000 	call	0 <__alt_mem_sdram_controller-0x2000000>
 2013dec:	bc800017 	ldw	r18,0(r23)
 2013df0:	003fb506 	br	2013cc8 <__alt_mem_epcs_flash_controller+0xfe00acc8>
 2013df4:	90c00017 	ldw	r3,0(r18)
 2013df8:	902f883a 	mov	r23,r18
 2013dfc:	1825883a 	mov	r18,r3
 2013e00:	003fb106 	br	2013cc8 <__alt_mem_epcs_flash_controller+0xfe00acc8>
 2013e04:	0007883a 	mov	r3,zero
 2013e08:	003ffb06 	br	2013df8 <__alt_mem_epcs_flash_controller+0xfe00adf8>

02013e0c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 2013e0c:	defffc04 	addi	sp,sp,-16
 2013e10:	df000315 	stw	fp,12(sp)
 2013e14:	df000304 	addi	fp,sp,12
 2013e18:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 2013e1c:	0001883a 	nop
 2013e20:	e0bfff17 	ldw	r2,-4(fp)
 2013e24:	e0bffd15 	stw	r2,-12(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  int r2 = exit_code;
 2013e28:	e0bffd17 	ldw	r2,-12(fp)
 2013e2c:	e0bffe15 	stw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 2013e30:	e0bffe17 	ldw	r2,-8(fp)
 2013e34:	10000226 	beq	r2,zero,2013e40 <_exit+0x34>
    ALT_SIM_FAIL();
 2013e38:	002af070 	cmpltui	zero,zero,43969
 2013e3c:	00000106 	br	2013e44 <_exit+0x38>
  } else {
    ALT_SIM_PASS();
 2013e40:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 2013e44:	003fff06 	br	2013e44 <__alt_mem_epcs_flash_controller+0xfe00ae44>
